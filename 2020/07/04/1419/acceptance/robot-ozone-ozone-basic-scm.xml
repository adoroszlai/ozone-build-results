<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200704 18:19:31.541" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200704 18:19:31.601" endtime="20200704 18:19:31.602"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:19:31.606" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:19:31.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:19:31.711" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sat, 04 Jul 2020 18:19:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 04 Jul 2020 17:47:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200704 18:19:31.603" endtime="20200704 18:19:31.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:19:31.713" level="INFO">HTTP/1.1 200 OK
Date: Sat, 04 Jul 2020 18:19:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 04 Jul 2020 17:47:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200704 18:19:31.712" endtime="20200704 18:19:31.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:19:31.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:19:31.713" endtime="20200704 18:19:31.714"></status>
</kw>
<msg timestamp="20200704 18:19:31.714" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sat, 04 Jul 2020 18:19:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 04 Jul 2020 17:47:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200704 18:19:31.602" endtime="20200704 18:19:31.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200704 18:19:31.714" endtime="20200704 18:19:31.715"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200704 18:19:31.600" endtime="20200704 18:19:31.715" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:19:31.716" endtime="20200704 18:19:31.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:19:31.719" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:20:57.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:20:57.770" level="INFO">${output} = 2020-07-04 18:19:33,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:19:33,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:19:31.717" endtime="20200704 18:20:57.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:20:57.771" level="INFO">2020-07-04 18:19:33,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:19:33,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-04 18:19:33,590 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-04 18:19:35,518 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-04 18:19:35,519 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-04 18:19:35,519 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-04 18:19:35,520 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-04 18:19:35,520 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-04 18:19:35,520 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-04 18:19:35,520 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-04 18:19:35,525 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-04 18:19:35,530 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-04 18:19:35,541 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-04 18:19:35,580 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-27393, with hadoop as owner.
2020-07-04 18:19:35,899 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-84114, with hadoop as owner.
2020-07-04 18:19:35,908 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-85172, with hadoop as owner.
2020-07-04 18:19:35,915 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-39198, with hadoop as owner.
2020-07-04 18:19:35,922 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-99863, with hadoop as owner.
2020-07-04 18:19:35,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27393/bucket-0-40298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,048 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84114/bucket-0-68858, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,064 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85172/bucket-0-13331, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,076 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39198/bucket-0-79636, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,086 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99863/bucket-0-84905, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,092 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27393/bucket-1-59212, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,102 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84114/bucket-1-96628, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,113 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85172/bucket-1-18575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,120 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39198/bucket-1-79986, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,133 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99863/bucket-1-59531, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,141 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27393/bucket-2-85220, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,146 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84114/bucket-2-53458, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,151 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85172/bucket-2-43687, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,157 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39198/bucket-2-09251, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,162 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99863/bucket-2-27018, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,171 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27393/bucket-3-61047, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,177 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84114/bucket-3-24783, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,181 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85172/bucket-3-16519, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,190 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39198/bucket-3-78057, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,196 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99863/bucket-3-30445, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,199 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27393/bucket-4-18526, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,203 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84114/bucket-4-62257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,208 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85172/bucket-4-20723, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,213 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-39198/bucket-4-09606, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,216 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99863/bucket-4-04211, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:19:36,545 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-04 18:19:37,171 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-04 18:19:37,545 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-04 18:19:38,546 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-04 18:19:39,546 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-04 18:19:40,547 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-07-04 18:19:41,547 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-07-04 18:19:42,548 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-04 18:19:43,548 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-04 18:19:44,549 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-04 18:19:45,550 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-07-04 18:19:46,550 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-07-04 18:19:47,551 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-07-04 18:19:48,551 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-04 18:19:49,552 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-04 18:19:50,555 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-04 18:19:51,555 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-04 18:19:52,556 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-04 18:19:53,556 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-07-04 18:19:54,557 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-04 18:19:55,557 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-04 18:19:56,558 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-04 18:19:57,558 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-04 18:19:58,559 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-04 18:19:59,559 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-04 18:20:00,560 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-04 18:20:01,560 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-04 18:20:02,560 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-04 18:20:03,561 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-04 18:20:04,561 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-04 18:20:05,562 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-04 18:20:06,562 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-04 18:20:07,568 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-04 18:20:08,568 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-04 18:20:09,569 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-04 18:20:10,569 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-04 18:20:11,570 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-04 18:20:12,571 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-04 18:20:13,571 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-04 18:20:14,572 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-04 18:20:15,572 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-04 18:20:16,573 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-04 18:20:17,573 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-04 18:20:18,582 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-04 18:20:19,583 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-04 18:20:20,583 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-04 18:20:21,584 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-07-04 18:20:22,584 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-07-04 18:20:23,585 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-07-04 18:20:24,585 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-04 18:20:25,586 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-04 18:20:26,586 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-04 18:20:27,592 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-04 18:20:28,593 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-04 18:20:29,593 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-04 18:20:30,593 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-04 18:20:31,594 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-04 18:20:32,594 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-04 18:20:33,595 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-04 18:20:34,595 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-04 18:20:35,596 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-04 18:20:36,596 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-07-04 18:20:37,597 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-07-04 18:20:38,597 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-04 18:20:39,598 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-07-04 18:20:40,598 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-07-04 18:20:41,599 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-04 18:20:42,599 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-04 18:20:43,600 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-04 18:20:44,600 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-04 18:20:45,601 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-04 18:20:46,601 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-04 18:20:47,602 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-07-04 18:20:48,602 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-07-04 18:20:49,602 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-07-04 18:20:50,603 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-07-04 18:20:51,603 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-07-04 18:20:52,604 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,365
Average Time spent in bucket creation: 00:00:00,207
Average Time spent in key creation: 00:00:01,938
Average Time spent in key write: 00:00:00,875
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:23,631
***************************************************</msg>
<status status="PASS" starttime="20200704 18:20:57.770" endtime="20200704 18:20:57.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:20:57.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:20:57.771" endtime="20200704 18:20:57.772"></status>
</kw>
<msg timestamp="20200704 18:20:57.772" level="INFO">${result} = 2020-07-04 18:19:33,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:19:33,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:19:31.716" endtime="20200704 18:20:57.772"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200704 18:20:57.773" endtime="20200704 18:20:57.774"></status>
</kw>
<status status="PASS" starttime="20200704 18:20:57.773" endtime="20200704 18:20:57.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200704 18:20:57.774" endtime="20200704 18:20:57.775"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200704 18:19:31.715" endtime="20200704 18:20:57.775" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200704 18:19:31.573" endtime="20200704 18:20:57.776"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200704 18:20:57.785" level="INFO">${random} = 12182</msg>
<status status="PASS" starttime="20200704 18:20:57.785" endtime="20200704 18:20:57.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200704 18:20:57.786" level="INFO">${prefix} = 12182</msg>
<status status="PASS" starttime="20200704 18:20:57.786" endtime="20200704 18:20:57.786"></status>
</kw>
<status status="PASS" starttime="20200704 18:20:57.785" endtime="20200704 18:20:57.786"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:20:57.787" endtime="20200704 18:20:57.787"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:20:57.792" level="INFO">Running command 'ozone sh volume info o3://om:9862/12182-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:00.394" level="INFO">${rc} = 255</msg>
<msg timestamp="20200704 18:21:00.394" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12182-rpcwoport is not found</msg>
<status status="PASS" starttime="20200704 18:20:57.789" endtime="20200704 18:21:00.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:00.395" level="INFO">VOLUME_NOT_FOUND Volume 12182-rpcwoport is not found</msg>
<status status="PASS" starttime="20200704 18:21:00.394" endtime="20200704 18:21:00.395"></status>
</kw>
<msg timestamp="20200704 18:21:00.395" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12182-rpcwoport is not found</msg>
<status status="PASS" starttime="20200704 18:20:57.788" endtime="20200704 18:21:00.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:00.396" endtime="20200704 18:21:00.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:00.399" level="INFO">Running command 'ozone sh volume create o3://om:9862/12182-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:02.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:02.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:00.397" endtime="20200704 18:21:02.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:02.774" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:02.773" endtime="20200704 18:21:02.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:02.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:02.774" endtime="20200704 18:21:02.775"></status>
</kw>
<msg timestamp="20200704 18:21:02.775" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200704 18:21:00.396" endtime="20200704 18:21:02.775"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:02.775" endtime="20200704 18:21:02.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:02.779" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="12182-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:05.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:05.530" level="INFO">${output} = {
  "metadata": {},
  "name": "12182-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:21:02.706Z",
  "modificationTime": "2020-07-04T18:21:02.706Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200704 18:21:02.777" endtime="20200704 18:21:05.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:05.532" level="INFO">{
  "metadata": {},
  "name": "12182-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:21:02.706Z",
  "modificationTime": "2020-07-04T18:21:02.706Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200704 18:21:05.531" endtime="20200704 18:21:05.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:05.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:05.532" endtime="20200704 18:21:05.532"></status>
</kw>
<msg timestamp="20200704 18:21:05.533" level="INFO">${result} = {
  "metadata": {},
  "name": "12182-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:21:02.706Z",
  "modificationTime": "2020-07-04T18:21:02.706Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200704 18:21:02.776" endtime="20200704 18:21:05.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:05.533" endtime="20200704 18:21:05.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:05.535" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12182-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:08.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:08.203" level="INFO">${output} = {
  "metadata": {},
  "name": "12182-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:21:02.706Z",
  "modificationTime": "2020-07-04T18:21:02.706Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200704 18:21:05.534" endtime="20200704 18:21:08.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:08.204" level="INFO">{
  "metadata": {},
  "name": "12182-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:21:02.706Z",
  "modificationTime": "2020-07-04T18:21:02.706Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200704 18:21:08.203" endtime="20200704 18:21:08.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:08.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:08.204" endtime="20200704 18:21:08.205"></status>
</kw>
<msg timestamp="20200704 18:21:08.205" level="INFO">${result} = {
  "metadata": {},
  "name": "12182-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:21:02.706Z",
  "modificationTime": "2020-07-04T18:21:02.706Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200704 18:21:05.533" endtime="20200704 18:21:08.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:08.205" endtime="20200704 18:21:08.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:08.208" level="INFO">Running command 'ozone sh volume update o3://om:9862/12182-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:11.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:11.032" level="INFO">${output} = {
  "metadata" : { },
  "name" : "12182-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-04T18:21:02.706Z",
  "modificationTime" : "2020-07-04T18:21:10.566Z",
  "acl...</msg>
<status status="PASS" starttime="20200704 18:21:08.206" endtime="20200704 18:21:11.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:11.033" level="INFO">{
  "metadata" : { },
  "name" : "12182-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-04T18:21:02.706Z",
  "modificationTime" : "2020-07-04T18:21:10.566Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200704 18:21:11.033" endtime="20200704 18:21:11.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:11.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:11.034" endtime="20200704 18:21:11.034"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:08.206" endtime="20200704 18:21:11.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:11.038" level="INFO">Running command 'ozone sh volume info o3://om:9862/12182-rpcwoport | jq -r '. | select(.name=="12182-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:14.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:14.231" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200704 18:21:11.035" endtime="20200704 18:21:14.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:14.232" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200704 18:21:14.232" endtime="20200704 18:21:14.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:14.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:14.233" endtime="20200704 18:21:14.233"></status>
</kw>
<msg timestamp="20200704 18:21:14.233" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200704 18:21:11.035" endtime="20200704 18:21:14.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:14.234" endtime="20200704 18:21:14.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:14.237" level="INFO">Running command 'ozone sh bucket create o3://om:9862/12182-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:16.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:16.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:14.235" endtime="20200704 18:21:16.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:16.775" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:16.774" endtime="20200704 18:21:16.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:16.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:16.775" endtime="20200704 18:21:16.775"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:14.234" endtime="20200704 18:21:16.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:16.778" level="INFO">Running command 'ozone sh bucket info o3://om:9862/12182-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:19.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:19.531" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200704 18:21:16.776" endtime="20200704 18:21:19.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:19.532" level="INFO">DISK</msg>
<status status="PASS" starttime="20200704 18:21:19.531" endtime="20200704 18:21:19.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:19.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:19.532" endtime="20200704 18:21:19.533"></status>
</kw>
<msg timestamp="20200704 18:21:19.533" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200704 18:21:16.776" endtime="20200704 18:21:19.533"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:19.533" endtime="20200704 18:21:19.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:19.536" level="INFO">Running command 'ozone sh bucket list o3://om:9862/12182-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:22.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:22.135" level="INFO">${output} = 12182-rpcwoport</msg>
<status status="PASS" starttime="20200704 18:21:19.534" endtime="20200704 18:21:22.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:22.136" level="INFO">12182-rpcwoport</msg>
<status status="PASS" starttime="20200704 18:21:22.135" endtime="20200704 18:21:22.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:22.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:22.136" endtime="20200704 18:21:22.137"></status>
</kw>
<msg timestamp="20200704 18:21:22.137" level="INFO">${result} = 12182-rpcwoport</msg>
<status status="PASS" starttime="20200704 18:21:19.534" endtime="20200704 18:21:22.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:22.138" endtime="20200704 18:21:22.138"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:22.143" level="INFO">Running command 'ozone sh key put o3://om:9862/12182-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:26.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:26.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:22.141" endtime="20200704 18:21:26.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:26.739" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:26.739" endtime="20200704 18:21:26.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:26.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:26.740" endtime="20200704 18:21:26.740"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:22.140" endtime="20200704 18:21:26.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:26.743" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:26.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:26.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:26.741" endtime="20200704 18:21:26.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:26.749" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:26.748" endtime="20200704 18:21:26.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:26.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:26.749" endtime="20200704 18:21:26.750"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:26.740" endtime="20200704 18:21:26.750"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:26.753" level="INFO">Running command 'ozone sh key get o3://om:9862/12182-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:31.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:31.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:26.751" endtime="20200704 18:21:31.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:31.166" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:31.166" endtime="20200704 18:21:31.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:31.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:31.166" endtime="20200704 18:21:31.167"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:26.750" endtime="20200704 18:21:31.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:31.169" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:31.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:31.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:31.168" endtime="20200704 18:21:31.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:31.174" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:31.173" endtime="20200704 18:21:31.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:31.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:31.174" endtime="20200704 18:21:31.174"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:31.167" endtime="20200704 18:21:31.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:31.177" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/12182-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:35.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:35.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:31.175" endtime="20200704 18:21:35.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:35.438" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:35.437" endtime="20200704 18:21:35.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:35.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:35.438" endtime="20200704 18:21:35.439"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:31.175" endtime="20200704 18:21:35.439"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:35.441" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:35.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:35.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:35.439" endtime="20200704 18:21:35.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:35.444" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:35.443" endtime="20200704 18:21:35.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:35.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:35.444" endtime="20200704 18:21:35.445"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:35.439" endtime="20200704 18:21:35.445"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:35.447" level="INFO">Running command 'ozone sh key get o3://om:9862/12182-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:39.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:39.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:35.446" endtime="20200704 18:21:39.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:39.863" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:39.862" endtime="20200704 18:21:39.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:39.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:39.863" endtime="20200704 18:21:39.863"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:35.445" endtime="20200704 18:21:39.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:39.866" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:39.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:39.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:39.864" endtime="20200704 18:21:39.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:39.869" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:39.869" endtime="20200704 18:21:39.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:39.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:39.870" endtime="20200704 18:21:39.870"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:39.864" endtime="20200704 18:21:39.870"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:39.873" level="INFO">Running command 'ozone sh key info o3://om:9862/12182-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:42.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:42.716" level="INFO">${output} = {
  "volumeName": "12182-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:21:33.450Z",
  "modificationTime": "2020-07-04T18:21:35.058Z",...</msg>
<status status="PASS" starttime="20200704 18:21:39.871" endtime="20200704 18:21:42.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:42.717" level="INFO">{
  "volumeName": "12182-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:21:33.450Z",
  "modificationTime": "2020-07-04T18:21:35.058Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104456971449008260,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200704 18:21:42.717" endtime="20200704 18:21:42.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:42.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:42.717" endtime="20200704 18:21:42.718"></status>
</kw>
<msg timestamp="20200704 18:21:42.718" level="INFO">${result} = {
  "volumeName": "12182-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:21:33.450Z",
  "modificationTime": "2020-07-04T18:21:35.058Z",...</msg>
<status status="PASS" starttime="20200704 18:21:39.870" endtime="20200704 18:21:42.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:42.718" endtime="20200704 18:21:42.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:42.722" level="INFO">Running command 'ozone sh key delete o3://om:9862/12182-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:45.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:45.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:42.719" endtime="20200704 18:21:45.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:45.246" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:45.245" endtime="20200704 18:21:45.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:45.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:45.246" endtime="20200704 18:21:45.247"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:42.719" endtime="20200704 18:21:45.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:45.249" level="INFO">Running command 'ozone sh key cp o3://om:9862/12182-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:50.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:50.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:45.248" endtime="20200704 18:21:50.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:50.040" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:50.039" endtime="20200704 18:21:50.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:50.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:50.040" endtime="20200704 18:21:50.041"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:45.247" endtime="20200704 18:21:50.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:50.044" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:50.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:50.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:50.041" endtime="20200704 18:21:50.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:50.046" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:50.046" endtime="20200704 18:21:50.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:50.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:50.047" endtime="20200704 18:21:50.047"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:50.041" endtime="20200704 18:21:50.047"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:50.050" level="INFO">Running command 'ozone sh key get o3://om:9862/12182-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:54.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:54.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:50.048" endtime="20200704 18:21:54.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:54.273" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:54.272" endtime="20200704 18:21:54.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:54.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:54.273" endtime="20200704 18:21:54.274"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:50.047" endtime="20200704 18:21:54.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:54.276" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:54.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:54.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:54.274" endtime="20200704 18:21:54.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:54.279" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:54.279" endtime="20200704 18:21:54.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:54.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:54.279" endtime="20200704 18:21:54.280"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:54.274" endtime="20200704 18:21:54.280"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:54.284" level="INFO">Running command 'ozone sh key delete o3://om:9862/12182-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:56.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:21:56.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:54.281" endtime="20200704 18:21:56.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:56.669" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:21:56.668" endtime="20200704 18:21:56.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:21:56.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:21:56.669" endtime="20200704 18:21:56.669"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:54.280" endtime="20200704 18:21:56.670"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:56.672" level="INFO">Running command 'ozone sh key get o3://om:9862/12182-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:21:59.032" level="INFO">${rc} = 255</msg>
<msg timestamp="20200704 18:21:59.032" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:21:56.670" endtime="20200704 18:21:59.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:21:59.034" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:21:59.033" endtime="20200704 18:21:59.034"></status>
</kw>
<msg timestamp="20200704 18:21:59.034" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:21:56.670" endtime="20200704 18:21:59.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200704 18:21:59.035" endtime="20200704 18:21:59.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:21:59.039" level="INFO">Running command 'ozone sh key get --force o3://om:9862/12182-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:03.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:03.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:21:59.036" endtime="20200704 18:22:03.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:03.280" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:22:03.279" endtime="20200704 18:22:03.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:03.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:03.281" endtime="20200704 18:22:03.281"></status>
</kw>
<msg timestamp="20200704 18:22:03.282" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200704 18:21:59.035" endtime="20200704 18:22:03.282"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:03.282" endtime="20200704 18:22:03.282"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:03.285" level="INFO">Running command 'ozone sh key info o3://om:9862/12182-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:06.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:06.156" level="INFO">${output} = {
  "volumeName": "12182-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:21:24.550Z",
  "modificationTime": "2020-07-04T18:21:26.286Z",
  "re...</msg>
<status status="PASS" starttime="20200704 18:22:03.283" endtime="20200704 18:22:06.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:06.157" level="INFO">{
  "volumeName": "12182-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:21:24.550Z",
  "modificationTime": "2020-07-04T18:21:26.286Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104456970865803400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200704 18:22:06.157" endtime="20200704 18:22:06.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:06.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:06.157" endtime="20200704 18:22:06.158"></status>
</kw>
<msg timestamp="20200704 18:22:06.158" level="INFO">${result} = {
  "volumeName": "12182-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:21:24.550Z",
  "modificationTime": "2020-07-04T18:21:26.286Z",
  "re...</msg>
<status status="PASS" starttime="20200704 18:22:03.283" endtime="20200704 18:22:06.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:06.158" endtime="20200704 18:22:06.159"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:06.162" level="INFO">Running command 'ozone sh key list o3://om:9862/12182-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:08.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:08.863" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200704 18:22:06.160" endtime="20200704 18:22:08.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:08.864" level="INFO">key1</msg>
<status status="PASS" starttime="20200704 18:22:08.863" endtime="20200704 18:22:08.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:08.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:08.864" endtime="20200704 18:22:08.864"></status>
</kw>
<msg timestamp="20200704 18:22:08.865" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200704 18:22:06.159" endtime="20200704 18:22:08.865"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:08.865" endtime="20200704 18:22:08.865"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:08.868" level="INFO">Running command 'ozone sh key rename o3://om:9862/12182-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:11.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:11.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:22:08.866" endtime="20200704 18:22:11.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:11.535" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:22:11.534" endtime="20200704 18:22:11.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:11.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:11.535" endtime="20200704 18:22:11.536"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:08.865" endtime="20200704 18:22:11.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:11.538" level="INFO">Running command 'ozone sh key list o3://om:9862/12182-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:14.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:14.227" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200704 18:22:11.536" endtime="20200704 18:22:14.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:14.229" level="INFO">key2</msg>
<status status="PASS" starttime="20200704 18:22:14.228" endtime="20200704 18:22:14.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:14.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:14.229" endtime="20200704 18:22:14.229"></status>
</kw>
<msg timestamp="20200704 18:22:14.230" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200704 18:22:11.536" endtime="20200704 18:22:14.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:14.230" endtime="20200704 18:22:14.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:14.233" level="INFO">Running command 'ozone sh key delete o3://om:9862/12182-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:16.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:16.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:22:14.231" endtime="20200704 18:22:16.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:16.731" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:22:16.730" endtime="20200704 18:22:16.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:16.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:16.731" endtime="20200704 18:22:16.732"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:14.230" endtime="20200704 18:22:16.732"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:22.139" endtime="20200704 18:22:16.732"></status>
</kw>
<status status="PASS" starttime="20200704 18:21:22.138" endtime="20200704 18:22:16.733"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:16.736" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/12182-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:19.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:19.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:22:16.733" endtime="20200704 18:22:19.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:19.124" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:22:19.124" endtime="20200704 18:22:19.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:19.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:19.125" endtime="20200704 18:22:19.125"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:16.733" endtime="20200704 18:22:19.125"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:19.128" level="INFO">Running command 'ozone sh volume delete o3://om:9862/12182-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:21.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:21.469" level="INFO">${output} = Volume 12182-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200704 18:22:19.126" endtime="20200704 18:22:21.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:21.470" level="INFO">Volume 12182-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200704 18:22:21.469" endtime="20200704 18:22:21.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:21.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:21.470" endtime="20200704 18:22:21.471"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:19.125" endtime="20200704 18:22:21.471"></status>
</kw>
<status status="PASS" starttime="20200704 18:20:57.787" endtime="20200704 18:22:21.471"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200704 18:20:57.786" endtime="20200704 18:22:21.471" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:21.473" endtime="20200704 18:22:21.473"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:21.476" level="INFO">Running command 'ozone sh volume create o3://om:9862/12182-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:24.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:24.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:22:21.474" endtime="20200704 18:22:24.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:24.143" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:22:24.142" endtime="20200704 18:22:24.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:24.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:24.143" endtime="20200704 18:22:24.143"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:21.474" endtime="20200704 18:22:24.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:24.146" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12182-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:27.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:27.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:24.144" endtime="20200704 18:22:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:27.091" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:27.091" endtime="20200704 18:22:27.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:27.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:27.091" endtime="20200704 18:22:27.092"></status>
</kw>
<msg timestamp="20200704 18:22:27.092" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:24.144" endtime="20200704 18:22:27.092"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:27.092" endtime="20200704 18:22:27.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:27.097" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/12182-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:29.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:29.519" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200704 18:22:27.094" endtime="20200704 18:22:29.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:29.520" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200704 18:22:29.519" endtime="20200704 18:22:29.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:29.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:29.520" endtime="20200704 18:22:29.521"></status>
</kw>
<msg timestamp="20200704 18:22:29.521" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200704 18:22:27.093" endtime="20200704 18:22:29.521"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:29.524" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12182-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:32.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:32.314" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:29.522" endtime="20200704 18:22:32.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:32.315" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:32.315" endtime="20200704 18:22:32.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:32.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:32.316" endtime="20200704 18:22:32.316"></status>
</kw>
<msg timestamp="20200704 18:22:32.316" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:29.521" endtime="20200704 18:22:32.316"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:32.316" endtime="20200704 18:22:32.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:32.320" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/12182-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:34.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:34.763" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200704 18:22:32.318" endtime="20200704 18:22:34.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:34.763" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200704 18:22:34.763" endtime="20200704 18:22:34.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:34.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:34.764" endtime="20200704 18:22:34.764"></status>
</kw>
<msg timestamp="20200704 18:22:34.765" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200704 18:22:32.317" endtime="20200704 18:22:34.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:34.767" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12182-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:37.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:37.290" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:34.765" endtime="20200704 18:22:37.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:37.291" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:37.291" endtime="20200704 18:22:37.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:37.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:37.291" endtime="20200704 18:22:37.292"></status>
</kw>
<msg timestamp="20200704 18:22:37.292" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:34.765" endtime="20200704 18:22:37.292"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:37.292" endtime="20200704 18:22:37.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:37.297" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/12182-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:39.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:39.744" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:22:37.295" endtime="20200704 18:22:39.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:39.745" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:22:39.744" endtime="20200704 18:22:39.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:39.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:39.745" endtime="20200704 18:22:39.746"></status>
</kw>
<msg timestamp="20200704 18:22:39.746" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:22:37.294" endtime="20200704 18:22:39.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:39.749" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/12182-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:42.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:42.385" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200704 18:22:39.747" endtime="20200704 18:22:42.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:42.386" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:42.385" endtime="20200704 18:22:42.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:42.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:42.386" endtime="20200704 18:22:42.386"></status>
</kw>
<msg timestamp="20200704 18:22:42.387" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200704 18:22:39.746" endtime="20200704 18:22:42.387"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:42.387" endtime="20200704 18:22:42.387"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:42.387" endtime="20200704 18:22:42.388"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:21.473" endtime="20200704 18:22:42.388"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200704 18:22:21.472" endtime="20200704 18:22:42.389" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:42.390" endtime="20200704 18:22:42.390"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:42.394" level="INFO">Running command 'ozone sh bucket create o3://om:9862/12182-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:44.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:44.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:22:42.392" endtime="20200704 18:22:44.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:44.955" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:22:44.954" endtime="20200704 18:22:44.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:44.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:44.955" endtime="20200704 18:22:44.956"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:42.392" endtime="20200704 18:22:44.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:44.959" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12182-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:47.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:47.579" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:44.957" endtime="20200704 18:22:47.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:47.580" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:47.579" endtime="20200704 18:22:47.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:47.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:47.580" endtime="20200704 18:22:47.581"></status>
</kw>
<msg timestamp="20200704 18:22:47.581" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:44.956" endtime="20200704 18:22:47.581"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:47.581" endtime="20200704 18:22:47.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:47.585" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/12182-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:49.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:49.831" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200704 18:22:47.582" endtime="20200704 18:22:49.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:49.833" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200704 18:22:49.832" endtime="20200704 18:22:49.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:49.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:49.833" endtime="20200704 18:22:49.833"></status>
</kw>
<msg timestamp="20200704 18:22:49.833" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200704 18:22:47.582" endtime="20200704 18:22:49.833"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:49.836" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12182-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:52.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:52.542" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:49.834" endtime="20200704 18:22:52.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:52.543" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:52.543" endtime="20200704 18:22:52.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:52.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:52.544" endtime="20200704 18:22:52.544"></status>
</kw>
<msg timestamp="20200704 18:22:52.545" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:49.834" endtime="20200704 18:22:52.545"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:52.545" endtime="20200704 18:22:52.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:52.550" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/12182-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:55.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:55.050" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200704 18:22:52.548" endtime="20200704 18:22:55.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:55.051" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200704 18:22:55.050" endtime="20200704 18:22:55.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:55.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:55.051" endtime="20200704 18:22:55.051"></status>
</kw>
<msg timestamp="20200704 18:22:55.052" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200704 18:22:52.547" endtime="20200704 18:22:55.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:55.056" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12182-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:22:57.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:22:57.904" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:55.053" endtime="20200704 18:22:57.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:22:57.905" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:22:57.904" endtime="20200704 18:22:57.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:22:57.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:22:57.905" endtime="20200704 18:22:57.906"></status>
</kw>
<msg timestamp="20200704 18:22:57.906" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:22:55.052" endtime="20200704 18:22:57.906"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200704 18:22:57.906" endtime="20200704 18:22:57.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:22:57.911" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/12182-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:00.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:00.339" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:22:57.908" endtime="20200704 18:23:00.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:00.340" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:23:00.339" endtime="20200704 18:23:00.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:00.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:00.340" endtime="20200704 18:23:00.341"></status>
</kw>
<msg timestamp="20200704 18:23:00.341" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:22:57.907" endtime="20200704 18:23:00.341"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:00.344" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/12182-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:02.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:02.981" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200704 18:23:00.342" endtime="20200704 18:23:02.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:02.982" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:23:02.981" endtime="20200704 18:23:02.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:02.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:02.982" endtime="20200704 18:23:02.983"></status>
</kw>
<msg timestamp="20200704 18:23:02.983" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200704 18:23:00.341" endtime="20200704 18:23:02.983"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:02.983" endtime="20200704 18:23:02.984"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:02.984" endtime="20200704 18:23:02.985"></status>
</kw>
<status status="PASS" starttime="20200704 18:22:42.390" endtime="20200704 18:23:02.985"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200704 18:22:42.389" endtime="20200704 18:23:02.985" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:02.986" endtime="20200704 18:23:02.987"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:02.991" level="INFO">Running command 'ozone sh key put o3://om:9862/12182-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:07.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:07.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:02.988" endtime="20200704 18:23:07.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:07.450" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:07.449" endtime="20200704 18:23:07.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:07.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:07.450" endtime="20200704 18:23:07.451"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:02.987" endtime="20200704 18:23:07.451"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:07.455" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12182-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:10.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:10.171" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:23:07.452" endtime="20200704 18:23:10.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:10.172" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:23:10.172" endtime="20200704 18:23:10.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:10.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:10.173" endtime="20200704 18:23:10.173"></status>
</kw>
<msg timestamp="20200704 18:23:10.173" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:23:07.451" endtime="20200704 18:23:10.173"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:10.173" endtime="20200704 18:23:10.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:10.178" level="INFO">Running command 'ozone sh key addacl o3://om:9862/12182-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:12.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:12.524" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200704 18:23:10.175" endtime="20200704 18:23:12.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:12.525" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200704 18:23:12.524" endtime="20200704 18:23:12.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:12.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:12.525" endtime="20200704 18:23:12.526"></status>
</kw>
<msg timestamp="20200704 18:23:12.526" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200704 18:23:10.174" endtime="20200704 18:23:12.526"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:12.528" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12182-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:15.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:15.210" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:23:12.527" endtime="20200704 18:23:15.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:15.211" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:23:15.211" endtime="20200704 18:23:15.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:15.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:15.212" endtime="20200704 18:23:15.212"></status>
</kw>
<msg timestamp="20200704 18:23:15.212" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:23:12.526" endtime="20200704 18:23:15.212"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:15.213" endtime="20200704 18:23:15.213"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:15.216" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/12182-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:17.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:17.831" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200704 18:23:15.214" endtime="20200704 18:23:17.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:17.832" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200704 18:23:17.831" endtime="20200704 18:23:17.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:17.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:17.832" endtime="20200704 18:23:17.833"></status>
</kw>
<msg timestamp="20200704 18:23:17.833" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200704 18:23:15.214" endtime="20200704 18:23:17.833"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:17.836" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12182-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:20.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:20.842" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:23:17.834" endtime="20200704 18:23:20.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:20.843" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:23:20.842" endtime="20200704 18:23:20.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:20.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:20.843" endtime="20200704 18:23:20.843"></status>
</kw>
<msg timestamp="20200704 18:23:20.844" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200704 18:23:17.834" endtime="20200704 18:23:20.844"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:20.844" endtime="20200704 18:23:20.844"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:20.847" level="INFO">Running command 'ozone sh key setacl o3://om:9862/12182-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:23.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:23.220" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:23:20.845" endtime="20200704 18:23:23.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:23.222" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:23:23.221" endtime="20200704 18:23:23.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:23.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:23.222" endtime="20200704 18:23:23.223"></status>
</kw>
<msg timestamp="20200704 18:23:23.223" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200704 18:23:20.844" endtime="20200704 18:23:23.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:23.226" level="INFO">Running command 'ozone sh key getacl o3://om:9862/12182-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:25.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:25.958" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200704 18:23:23.224" endtime="20200704 18:23:25.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:25.959" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200704 18:23:25.959" endtime="20200704 18:23:25.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:25.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:25.959" endtime="20200704 18:23:25.960"></status>
</kw>
<msg timestamp="20200704 18:23:25.960" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200704 18:23:23.223" endtime="20200704 18:23:25.961"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:25.961" endtime="20200704 18:23:25.961"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:25.961" endtime="20200704 18:23:25.962"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:02.987" endtime="20200704 18:23:25.962"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200704 18:23:02.986" endtime="20200704 18:23:25.963" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:25.964" endtime="20200704 18:23:25.964"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:25.967" level="INFO">Running command 'ozone sh volume info o3:///12182-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:28.655" level="INFO">${rc} = 255</msg>
<msg timestamp="20200704 18:23:28.655" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12182-rpcwport is not found</msg>
<status status="PASS" starttime="20200704 18:23:25.966" endtime="20200704 18:23:28.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:28.656" level="INFO">VOLUME_NOT_FOUND Volume 12182-rpcwport is not found</msg>
<status status="PASS" starttime="20200704 18:23:28.656" endtime="20200704 18:23:28.656"></status>
</kw>
<msg timestamp="20200704 18:23:28.657" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12182-rpcwport is not found</msg>
<status status="PASS" starttime="20200704 18:23:25.965" endtime="20200704 18:23:28.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:28.657" endtime="20200704 18:23:28.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:28.660" level="INFO">Running command 'ozone sh volume create o3:///12182-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:31.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:31.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:28.658" endtime="20200704 18:23:31.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:31.042" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:31.041" endtime="20200704 18:23:31.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:31.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:31.042" endtime="20200704 18:23:31.042"></status>
</kw>
<msg timestamp="20200704 18:23:31.043" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200704 18:23:28.657" endtime="20200704 18:23:31.043"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:31.043" endtime="20200704 18:23:31.043"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:31.047" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="12182-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:34.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:34.172" level="INFO">${output} = {
  "metadata": {},
  "name": "12182-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:23:30.963Z",
  "modificationTime": "2020-07-04T18:23:30.963Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200704 18:23:31.044" endtime="20200704 18:23:34.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:34.173" level="INFO">{
  "metadata": {},
  "name": "12182-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:23:30.963Z",
  "modificationTime": "2020-07-04T18:23:30.963Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200704 18:23:34.173" endtime="20200704 18:23:34.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:34.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:34.174" endtime="20200704 18:23:34.174"></status>
</kw>
<msg timestamp="20200704 18:23:34.174" level="INFO">${result} = {
  "metadata": {},
  "name": "12182-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:23:30.963Z",
  "modificationTime": "2020-07-04T18:23:30.963Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200704 18:23:31.044" endtime="20200704 18:23:34.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:34.174" endtime="20200704 18:23:34.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:34.178" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12182-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:36.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:36.778" level="INFO">${output} = {
  "metadata": {},
  "name": "12182-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:23:30.963Z",
  "modificationTime": "2020-07-04T18:23:30.963Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200704 18:23:34.175" endtime="20200704 18:23:36.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:36.779" level="INFO">{
  "metadata": {},
  "name": "12182-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:23:30.963Z",
  "modificationTime": "2020-07-04T18:23:30.963Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200704 18:23:36.778" endtime="20200704 18:23:36.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:36.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:36.779" endtime="20200704 18:23:36.780"></status>
</kw>
<msg timestamp="20200704 18:23:36.780" level="INFO">${result} = {
  "metadata": {},
  "name": "12182-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:23:30.963Z",
  "modificationTime": "2020-07-04T18:23:30.963Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200704 18:23:34.175" endtime="20200704 18:23:36.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:36.781" endtime="20200704 18:23:36.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:36.783" level="INFO">Running command 'ozone sh volume update o3:///12182-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:39.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:39.456" level="INFO">${output} = {
  "metadata" : { },
  "name" : "12182-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-04T18:23:30.963Z",
  "modificationTime" : "2020-07-04T18:23:39.135Z",
  "acls...</msg>
<status status="PASS" starttime="20200704 18:23:36.782" endtime="20200704 18:23:39.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:39.457" level="INFO">{
  "metadata" : { },
  "name" : "12182-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-04T18:23:30.963Z",
  "modificationTime" : "2020-07-04T18:23:39.135Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200704 18:23:39.456" endtime="20200704 18:23:39.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:39.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:39.457" endtime="20200704 18:23:39.458"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:36.781" endtime="20200704 18:23:39.458"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:39.461" level="INFO">Running command 'ozone sh volume info o3:///12182-rpcwport | jq -r '. | select(.name=="12182-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:42.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:42.007" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200704 18:23:39.459" endtime="20200704 18:23:42.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:42.008" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200704 18:23:42.007" endtime="20200704 18:23:42.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:42.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:42.008" endtime="20200704 18:23:42.009"></status>
</kw>
<msg timestamp="20200704 18:23:42.009" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200704 18:23:39.458" endtime="20200704 18:23:42.009"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:42.009" endtime="20200704 18:23:42.009"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:42.013" level="INFO">Running command 'ozone sh bucket create o3:///12182-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:44.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:44.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:42.010" endtime="20200704 18:23:44.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:44.442" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:44.442" endtime="20200704 18:23:44.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:44.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:44.443" endtime="20200704 18:23:44.443"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:42.010" endtime="20200704 18:23:44.443"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:44.447" level="INFO">Running command 'ozone sh bucket info o3:///12182-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:47.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:47.299" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200704 18:23:44.444" endtime="20200704 18:23:47.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:47.300" level="INFO">DISK</msg>
<status status="PASS" starttime="20200704 18:23:47.300" endtime="20200704 18:23:47.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:47.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:47.300" endtime="20200704 18:23:47.301"></status>
</kw>
<msg timestamp="20200704 18:23:47.301" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200704 18:23:44.443" endtime="20200704 18:23:47.301"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:47.301" endtime="20200704 18:23:47.302"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:47.305" level="INFO">Running command 'ozone sh bucket list o3:///12182-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:50.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:50.004" level="INFO">${output} = 12182-rpcwport</msg>
<status status="PASS" starttime="20200704 18:23:47.303" endtime="20200704 18:23:50.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:50.006" level="INFO">12182-rpcwport</msg>
<status status="PASS" starttime="20200704 18:23:50.005" endtime="20200704 18:23:50.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:50.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:50.006" endtime="20200704 18:23:50.007"></status>
</kw>
<msg timestamp="20200704 18:23:50.007" level="INFO">${result} = 12182-rpcwport</msg>
<status status="PASS" starttime="20200704 18:23:47.302" endtime="20200704 18:23:50.007"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200704 18:23:50.007" endtime="20200704 18:23:50.008"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:50.012" level="INFO">Running command 'ozone sh key put o3:///12182-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:54.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:54.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:50.009" endtime="20200704 18:23:54.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:54.466" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:54.466" endtime="20200704 18:23:54.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:54.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:54.467" endtime="20200704 18:23:54.467"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:50.009" endtime="20200704 18:23:54.467"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:54.470" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:54.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:54.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:54.468" endtime="20200704 18:23:54.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:54.473" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:54.473" endtime="20200704 18:23:54.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:54.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:54.474" endtime="20200704 18:23:54.474"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:54.467" endtime="20200704 18:23:54.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:54.477" level="INFO">Running command 'ozone sh key get o3:///12182-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:58.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:58.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:54.475" endtime="20200704 18:23:58.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:58.669" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:58.668" endtime="20200704 18:23:58.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:58.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:58.669" endtime="20200704 18:23:58.669"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:54.475" endtime="20200704 18:23:58.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:58.673" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:23:58.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:23:58.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:58.670" endtime="20200704 18:23:58.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:23:58.676" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:23:58.675" endtime="20200704 18:23:58.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:23:58.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:23:58.676" endtime="20200704 18:23:58.676"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:58.670" endtime="20200704 18:23:58.677"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:23:58.680" level="INFO">Running command 'ozone sh key put -t RATIS o3:///12182-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:03.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:03.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:23:58.677" endtime="20200704 18:24:03.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:03.216" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:03.216" endtime="20200704 18:24:03.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:03.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:03.217" endtime="20200704 18:24:03.217"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:58.677" endtime="20200704 18:24:03.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:03.220" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:03.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:03.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:03.218" endtime="20200704 18:24:03.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:03.222" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:03.222" endtime="20200704 18:24:03.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:03.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:03.222" endtime="20200704 18:24:03.223"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:03.217" endtime="20200704 18:24:03.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:03.225" level="INFO">Running command 'ozone sh key get o3:///12182-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:07.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:07.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:03.224" endtime="20200704 18:24:07.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:07.641" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:07.640" endtime="20200704 18:24:07.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:07.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:07.641" endtime="20200704 18:24:07.642"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:03.223" endtime="20200704 18:24:07.642"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:07.644" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:07.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:07.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:07.642" endtime="20200704 18:24:07.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:07.648" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:07.647" endtime="20200704 18:24:07.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:07.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:07.648" endtime="20200704 18:24:07.649"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:07.642" endtime="20200704 18:24:07.649"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:07.652" level="INFO">Running command 'ozone sh key info o3:///12182-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:10.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:10.604" level="INFO">${output} = {
  "volumeName": "12182-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:24:01.126Z",
  "modificationTime": "2020-07-04T18:24:02.716Z",
...</msg>
<status status="PASS" starttime="20200704 18:24:07.650" endtime="20200704 18:24:10.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:10.606" level="INFO">{
  "volumeName": "12182-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:24:01.126Z",
  "modificationTime": "2020-07-04T18:24:02.716Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104456981127102600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200704 18:24:10.605" endtime="20200704 18:24:10.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:10.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:10.606" endtime="20200704 18:24:10.606"></status>
</kw>
<msg timestamp="20200704 18:24:10.607" level="INFO">${result} = {
  "volumeName": "12182-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:24:01.126Z",
  "modificationTime": "2020-07-04T18:24:02.716Z",
...</msg>
<status status="PASS" starttime="20200704 18:24:07.649" endtime="20200704 18:24:10.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:10.607" endtime="20200704 18:24:10.607"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:10.609" level="INFO">Running command 'ozone sh key delete o3:///12182-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:13.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:13.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:10.608" endtime="20200704 18:24:13.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:13.273" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:13.272" endtime="20200704 18:24:13.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:13.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:13.273" endtime="20200704 18:24:13.274"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:10.607" endtime="20200704 18:24:13.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:13.276" level="INFO">Running command 'ozone sh key cp o3:///12182-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:17.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:17.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:13.275" endtime="20200704 18:24:17.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:17.937" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:17.937" endtime="20200704 18:24:17.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:17.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:17.938" endtime="20200704 18:24:17.938"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:13.274" endtime="20200704 18:24:17.938"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:17.941" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:17.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:17.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:17.939" endtime="20200704 18:24:17.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:17.944" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:17.943" endtime="20200704 18:24:17.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:17.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:17.944" endtime="20200704 18:24:17.945"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:17.938" endtime="20200704 18:24:17.945"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:17.947" level="INFO">Running command 'ozone sh key get o3:///12182-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:22.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:22.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:17.945" endtime="20200704 18:24:22.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:22.153" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:22.153" endtime="20200704 18:24:22.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:22.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:22.153" endtime="20200704 18:24:22.154"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:17.945" endtime="20200704 18:24:22.154"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:22.157" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:22.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:22.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:22.155" endtime="20200704 18:24:22.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:22.160" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:22.159" endtime="20200704 18:24:22.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:22.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:22.160" endtime="20200704 18:24:22.161"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:22.154" endtime="20200704 18:24:22.161"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:22.163" level="INFO">Running command 'ozone sh key delete o3:///12182-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:24.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:24.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:22.162" endtime="20200704 18:24:24.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:24.657" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:24.656" endtime="20200704 18:24:24.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:24.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:24.657" endtime="20200704 18:24:24.658"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:22.161" endtime="20200704 18:24:24.658"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:24.662" level="INFO">Running command 'ozone sh key get o3:///12182-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:27.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20200704 18:24:27.109" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:24:24.659" endtime="20200704 18:24:27.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:27.110" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:24:27.110" endtime="20200704 18:24:27.110"></status>
</kw>
<msg timestamp="20200704 18:24:27.111" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:24:24.658" endtime="20200704 18:24:27.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:27.111" endtime="20200704 18:24:27.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:27.114" level="INFO">Running command 'ozone sh key get --force o3:///12182-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:31.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:31.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:27.112" endtime="20200704 18:24:31.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:31.556" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:31.555" endtime="20200704 18:24:31.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:31.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:31.556" endtime="20200704 18:24:31.557"></status>
</kw>
<msg timestamp="20200704 18:24:31.557" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200704 18:24:27.111" endtime="20200704 18:24:31.557"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:31.557" endtime="20200704 18:24:31.557"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:31.560" level="INFO">Running command 'ozone sh key info o3:///12182-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:34.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:34.303" level="INFO">${output} = {
  "volumeName": "12182-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:23:52.449Z",
  "modificationTime": "2020-07-04T18:23:53.964Z",
  "rep...</msg>
<status status="PASS" starttime="20200704 18:24:31.558" endtime="20200704 18:24:34.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:34.304" level="INFO">{
  "volumeName": "12182-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:23:52.449Z",
  "modificationTime": "2020-07-04T18:23:53.964Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104456980558577800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200704 18:24:34.303" endtime="20200704 18:24:34.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:34.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:34.304" endtime="20200704 18:24:34.305"></status>
</kw>
<msg timestamp="20200704 18:24:34.305" level="INFO">${result} = {
  "volumeName": "12182-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:23:52.449Z",
  "modificationTime": "2020-07-04T18:23:53.964Z",
  "rep...</msg>
<status status="PASS" starttime="20200704 18:24:31.557" endtime="20200704 18:24:34.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:34.305" endtime="20200704 18:24:34.305"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:34.308" level="INFO">Running command 'ozone sh key list o3:///12182-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:36.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:36.999" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200704 18:24:34.306" endtime="20200704 18:24:36.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:37.000" level="INFO">key1</msg>
<status status="PASS" starttime="20200704 18:24:36.999" endtime="20200704 18:24:37.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:37.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:37.000" endtime="20200704 18:24:37.001"></status>
</kw>
<msg timestamp="20200704 18:24:37.001" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200704 18:24:34.305" endtime="20200704 18:24:37.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:37.001" endtime="20200704 18:24:37.002"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:37.004" level="INFO">Running command 'ozone sh key rename o3:///12182-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:39.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:39.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:37.002" endtime="20200704 18:24:39.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:39.637" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:39.637" endtime="20200704 18:24:39.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:39.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:39.637" endtime="20200704 18:24:39.638"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:37.002" endtime="20200704 18:24:39.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:39.640" level="INFO">Running command 'ozone sh key list o3:///12182-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:42.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:42.463" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200704 18:24:39.639" endtime="20200704 18:24:42.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:42.464" level="INFO">key2</msg>
<status status="PASS" starttime="20200704 18:24:42.463" endtime="20200704 18:24:42.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:42.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:42.464" endtime="20200704 18:24:42.465"></status>
</kw>
<msg timestamp="20200704 18:24:42.465" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200704 18:24:39.638" endtime="20200704 18:24:42.465"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:42.465" endtime="20200704 18:24:42.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:42.469" level="INFO">Running command 'ozone sh key delete o3:///12182-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:45.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:45.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:42.466" endtime="20200704 18:24:45.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:45.042" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:45.041" endtime="20200704 18:24:45.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:45.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:45.043" endtime="20200704 18:24:45.043"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:42.466" endtime="20200704 18:24:45.043"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:50.008" endtime="20200704 18:24:45.044"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:50.008" endtime="20200704 18:24:45.044"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:45.046" level="INFO">Running command 'ozone sh bucket delete o3:///12182-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:47.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:47.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:45.044" endtime="20200704 18:24:47.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:47.452" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:47.451" endtime="20200704 18:24:47.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:47.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:47.452" endtime="20200704 18:24:47.453"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:45.044" endtime="20200704 18:24:47.453"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:47.455" level="INFO">Running command 'ozone sh volume delete o3:///12182-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:49.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:49.799" level="INFO">${output} = Volume 12182-rpcwport is deleted</msg>
<status status="PASS" starttime="20200704 18:24:47.454" endtime="20200704 18:24:49.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:49.800" level="INFO">Volume 12182-rpcwport is deleted</msg>
<status status="PASS" starttime="20200704 18:24:49.800" endtime="20200704 18:24:49.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:49.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:49.801" endtime="20200704 18:24:49.801"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:47.453" endtime="20200704 18:24:49.801"></status>
</kw>
<status status="PASS" starttime="20200704 18:23:25.964" endtime="20200704 18:24:49.802"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200704 18:23:25.963" endtime="20200704 18:24:49.802" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:49.803" endtime="20200704 18:24:49.804"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:49.808" level="INFO">Running command 'ozone sh volume info /12182-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:52.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20200704 18:24:52.227" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12182-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200704 18:24:49.805" endtime="20200704 18:24:52.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:52.228" level="INFO">VOLUME_NOT_FOUND Volume 12182-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200704 18:24:52.227" endtime="20200704 18:24:52.228"></status>
</kw>
<msg timestamp="20200704 18:24:52.229" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12182-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200704 18:24:49.805" endtime="20200704 18:24:52.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:52.229" endtime="20200704 18:24:52.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:52.232" level="INFO">Running command 'ozone sh volume create /12182-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:54.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:54.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:24:52.230" endtime="20200704 18:24:54.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:54.748" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:24:54.747" endtime="20200704 18:24:54.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:54.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:54.748" endtime="20200704 18:24:54.749"></status>
</kw>
<msg timestamp="20200704 18:24:54.749" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200704 18:24:52.229" endtime="20200704 18:24:54.749"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:54.749" endtime="20200704 18:24:54.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:54.752" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="12182-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:24:57.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:24:57.384" level="INFO">${output} = {
  "metadata": {},
  "name": "12182-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:24:54.656Z",
  "modificationTime": "2020-07-04T18:24:54.656Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200704 18:24:54.750" endtime="20200704 18:24:57.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:24:57.385" level="INFO">{
  "metadata": {},
  "name": "12182-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:24:54.656Z",
  "modificationTime": "2020-07-04T18:24:54.656Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200704 18:24:57.384" endtime="20200704 18:24:57.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:24:57.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:24:57.386" endtime="20200704 18:24:57.386"></status>
</kw>
<msg timestamp="20200704 18:24:57.386" level="INFO">${result} = {
  "metadata": {},
  "name": "12182-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:24:54.656Z",
  "modificationTime": "2020-07-04T18:24:54.656Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200704 18:24:54.749" endtime="20200704 18:24:57.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:24:57.387" endtime="20200704 18:24:57.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:24:57.390" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12182-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:00.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:00.209" level="INFO">${output} = {
  "metadata": {},
  "name": "12182-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:24:54.656Z",
  "modificationTime": "2020-07-04T18:24:54.656Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200704 18:24:57.387" endtime="20200704 18:25:00.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:00.209" level="INFO">{
  "metadata": {},
  "name": "12182-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:24:54.656Z",
  "modificationTime": "2020-07-04T18:24:54.656Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200704 18:25:00.209" endtime="20200704 18:25:00.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:00.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:00.210" endtime="20200704 18:25:00.210"></status>
</kw>
<msg timestamp="20200704 18:25:00.211" level="INFO">${result} = {
  "metadata": {},
  "name": "12182-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-04T18:24:54.656Z",
  "modificationTime": "2020-07-04T18:24:54.656Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200704 18:24:57.387" endtime="20200704 18:25:00.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:00.211" endtime="20200704 18:25:00.212"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:00.216" level="INFO">Running command 'ozone sh volume update /12182-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:02.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:02.996" level="INFO">${output} = {
  "metadata" : { },
  "name" : "12182-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-04T18:24:54.656Z",
  "modificationTime" : "2020-07-04T18:25:02.685Z",
  "a...</msg>
<status status="PASS" starttime="20200704 18:25:00.212" endtime="20200704 18:25:02.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:02.997" level="INFO">{
  "metadata" : { },
  "name" : "12182-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-04T18:24:54.656Z",
  "modificationTime" : "2020-07-04T18:25:02.685Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200704 18:25:02.996" endtime="20200704 18:25:02.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:02.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:02.997" endtime="20200704 18:25:02.997"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:00.212" endtime="20200704 18:25:02.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:03.000" level="INFO">Running command 'ozone sh volume info /12182-rpcwoscheme | jq -r '. | select(.name=="12182-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:05.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:05.850" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200704 18:25:02.998" endtime="20200704 18:25:05.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:05.852" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200704 18:25:05.851" endtime="20200704 18:25:05.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:05.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:05.852" endtime="20200704 18:25:05.853"></status>
</kw>
<msg timestamp="20200704 18:25:05.853" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200704 18:25:02.998" endtime="20200704 18:25:05.853"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:05.853" endtime="20200704 18:25:05.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:05.857" level="INFO">Running command 'ozone sh bucket create /12182-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:08.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:08.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:05.855" endtime="20200704 18:25:08.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:08.412" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:08.411" endtime="20200704 18:25:08.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:08.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:08.412" endtime="20200704 18:25:08.413"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:05.854" endtime="20200704 18:25:08.413"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:08.416" level="INFO">Running command 'ozone sh bucket info /12182-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:11.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:11.446" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200704 18:25:08.414" endtime="20200704 18:25:11.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:11.447" level="INFO">DISK</msg>
<status status="PASS" starttime="20200704 18:25:11.446" endtime="20200704 18:25:11.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:11.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:11.447" endtime="20200704 18:25:11.448"></status>
</kw>
<msg timestamp="20200704 18:25:11.448" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200704 18:25:08.413" endtime="20200704 18:25:11.448"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:11.448" endtime="20200704 18:25:11.449"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:11.452" level="INFO">Running command 'ozone sh bucket list /12182-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:14.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:14.246" level="INFO">${output} = 12182-rpcwoscheme</msg>
<status status="PASS" starttime="20200704 18:25:11.449" endtime="20200704 18:25:14.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:14.247" level="INFO">12182-rpcwoscheme</msg>
<status status="PASS" starttime="20200704 18:25:14.247" endtime="20200704 18:25:14.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:14.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:14.248" endtime="20200704 18:25:14.248"></status>
</kw>
<msg timestamp="20200704 18:25:14.248" level="INFO">${result} = 12182-rpcwoscheme</msg>
<status status="PASS" starttime="20200704 18:25:11.449" endtime="20200704 18:25:14.248"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:14.249" endtime="20200704 18:25:14.249"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:14.253" level="INFO">Running command 'ozone sh key put /12182-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:18.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:18.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:14.250" endtime="20200704 18:25:18.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:18.510" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:18.509" endtime="20200704 18:25:18.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:18.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:18.510" endtime="20200704 18:25:18.511"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:14.250" endtime="20200704 18:25:18.511"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:18.514" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:18.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:18.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:18.511" endtime="20200704 18:25:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:18.517" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:18.517" endtime="20200704 18:25:18.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:18.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:18.517" endtime="20200704 18:25:18.518"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:18.511" endtime="20200704 18:25:18.518"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:18.521" level="INFO">Running command 'ozone sh key get /12182-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:22.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:22.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:18.519" endtime="20200704 18:25:22.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:22.760" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:22.759" endtime="20200704 18:25:22.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:22.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:22.760" endtime="20200704 18:25:22.760"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:18.518" endtime="20200704 18:25:22.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:22.763" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:22.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:22.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:22.761" endtime="20200704 18:25:22.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:22.766" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:22.766" endtime="20200704 18:25:22.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:22.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:22.766" endtime="20200704 18:25:22.767"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:22.761" endtime="20200704 18:25:22.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:22.769" level="INFO">Running command 'ozone sh key put -t RATIS /12182-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:27.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:27.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:22.768" endtime="20200704 18:25:27.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:27.359" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:27.358" endtime="20200704 18:25:27.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:27.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:27.359" endtime="20200704 18:25:27.360"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:22.767" endtime="20200704 18:25:27.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:27.363" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:27.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:27.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:27.361" endtime="20200704 18:25:27.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:27.366" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:27.365" endtime="20200704 18:25:27.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:27.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:27.366" endtime="20200704 18:25:27.367"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:27.360" endtime="20200704 18:25:27.367"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:27.369" level="INFO">Running command 'ozone sh key get /12182-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:31.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:31.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:27.368" endtime="20200704 18:25:31.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:31.709" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:31.708" endtime="20200704 18:25:31.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:31.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:31.709" endtime="20200704 18:25:31.710"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:27.367" endtime="20200704 18:25:31.710"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:31.713" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:31.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:31.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:31.711" endtime="20200704 18:25:31.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:31.715" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:31.715" endtime="20200704 18:25:31.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:31.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:31.715" endtime="20200704 18:25:31.716"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:31.710" endtime="20200704 18:25:31.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:31.722" level="INFO">Running command 'ozone sh key info /12182-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:34.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:34.445" level="INFO">${output} = {
  "volumeName": "12182-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:25:25.203Z",
  "modificationTime": "2020-07-04T18:25:26.874Z...</msg>
<status status="PASS" starttime="20200704 18:25:31.717" endtime="20200704 18:25:34.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:34.447" level="INFO">{
  "volumeName": "12182-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:25:25.203Z",
  "modificationTime": "2020-07-04T18:25:26.874Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104456986637238400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200704 18:25:34.446" endtime="20200704 18:25:34.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:34.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:34.447" endtime="20200704 18:25:34.447"></status>
</kw>
<msg timestamp="20200704 18:25:34.448" level="INFO">${result} = {
  "volumeName": "12182-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:25:25.203Z",
  "modificationTime": "2020-07-04T18:25:26.874Z...</msg>
<status status="PASS" starttime="20200704 18:25:31.716" endtime="20200704 18:25:34.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:34.448" endtime="20200704 18:25:34.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:34.452" level="INFO">Running command 'ozone sh key delete /12182-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:36.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:36.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:34.449" endtime="20200704 18:25:36.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:36.878" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:36.877" endtime="20200704 18:25:36.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:36.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:36.878" endtime="20200704 18:25:36.879"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:34.448" endtime="20200704 18:25:36.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:36.883" level="INFO">Running command 'ozone sh key cp /12182-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:41.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:41.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:36.880" endtime="20200704 18:25:41.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:41.799" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:41.798" endtime="20200704 18:25:41.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:41.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:41.799" endtime="20200704 18:25:41.799"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:36.879" endtime="20200704 18:25:41.800"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:41.802" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:41.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:41.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:41.800" endtime="20200704 18:25:41.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:41.806" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:41.805" endtime="20200704 18:25:41.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:41.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:41.806" endtime="20200704 18:25:41.807"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:41.800" endtime="20200704 18:25:41.808"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:41.811" level="INFO">Running command 'ozone sh key get /12182-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:46.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:46.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:41.808" endtime="20200704 18:25:46.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:46.040" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:46.039" endtime="20200704 18:25:46.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:46.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:46.040" endtime="20200704 18:25:46.041"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:41.808" endtime="20200704 18:25:46.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:46.044" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:46.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:46.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:46.042" endtime="20200704 18:25:46.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:46.047" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:46.047" endtime="20200704 18:25:46.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:46.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:46.048" endtime="20200704 18:25:46.048"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:46.041" endtime="20200704 18:25:46.048"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:46.052" level="INFO">Running command 'ozone sh key delete /12182-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:48.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:48.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:46.049" endtime="20200704 18:25:48.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:48.525" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:48.525" endtime="20200704 18:25:48.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:48.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:48.526" endtime="20200704 18:25:48.526"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:46.049" endtime="20200704 18:25:48.526"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:48.529" level="INFO">Running command 'ozone sh key get /12182-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:50.850" level="INFO">${rc} = 255</msg>
<msg timestamp="20200704 18:25:50.850" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:25:48.527" endtime="20200704 18:25:50.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:50.851" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:25:50.850" endtime="20200704 18:25:50.851"></status>
</kw>
<msg timestamp="20200704 18:25:50.852" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200704 18:25:48.526" endtime="20200704 18:25:50.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:50.852" endtime="20200704 18:25:50.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:50.855" level="INFO">Running command 'ozone sh key get --force /12182-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:54.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:54.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:25:50.853" endtime="20200704 18:25:54.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:54.973" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:25:54.972" endtime="20200704 18:25:54.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:54.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:54.973" endtime="20200704 18:25:54.974"></status>
</kw>
<msg timestamp="20200704 18:25:54.974" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200704 18:25:50.852" endtime="20200704 18:25:54.974"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:54.974" endtime="20200704 18:25:54.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:54.979" level="INFO">Running command 'ozone sh key info /12182-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:25:57.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:25:57.621" level="INFO">${output} = {
  "volumeName": "12182-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:25:16.565Z",
  "modificationTime": "2020-07-04T18:25:18.124Z",
  "...</msg>
<status status="PASS" starttime="20200704 18:25:54.975" endtime="20200704 18:25:57.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:25:57.622" level="INFO">{
  "volumeName": "12182-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:25:16.565Z",
  "modificationTime": "2020-07-04T18:25:18.124Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104456986071072900,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200704 18:25:57.621" endtime="20200704 18:25:57.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:25:57.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:25:57.622" endtime="20200704 18:25:57.623"></status>
</kw>
<msg timestamp="20200704 18:25:57.623" level="INFO">${result} = {
  "volumeName": "12182-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-04T18:25:16.565Z",
  "modificationTime": "2020-07-04T18:25:18.124Z",
  "...</msg>
<status status="PASS" starttime="20200704 18:25:54.975" endtime="20200704 18:25:57.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200704 18:25:57.624" endtime="20200704 18:25:57.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:25:57.628" level="INFO">Running command 'ozone sh key list /12182-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:26:00.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:26:00.377" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200704 18:25:57.625" endtime="20200704 18:26:00.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:26:00.378" level="INFO">key1</msg>
<status status="PASS" starttime="20200704 18:26:00.378" endtime="20200704 18:26:00.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:26:00.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:26:00.379" endtime="20200704 18:26:00.379"></status>
</kw>
<msg timestamp="20200704 18:26:00.379" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200704 18:25:57.624" endtime="20200704 18:26:00.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:26:00.380" endtime="20200704 18:26:00.381"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:26:00.385" level="INFO">Running command 'ozone sh key rename /12182-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:26:02.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:26:02.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:26:00.382" endtime="20200704 18:26:02.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:26:02.840" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:26:02.839" endtime="20200704 18:26:02.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:26:02.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:26:02.840" endtime="20200704 18:26:02.841"></status>
</kw>
<status status="PASS" starttime="20200704 18:26:00.381" endtime="20200704 18:26:02.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:26:02.843" level="INFO">Running command 'ozone sh key list /12182-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:26:05.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:26:05.615" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200704 18:26:02.841" endtime="20200704 18:26:05.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:26:05.616" level="INFO">key2</msg>
<status status="PASS" starttime="20200704 18:26:05.615" endtime="20200704 18:26:05.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:26:05.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:26:05.616" endtime="20200704 18:26:05.617"></status>
</kw>
<msg timestamp="20200704 18:26:05.617" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200704 18:26:02.841" endtime="20200704 18:26:05.617"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200704 18:26:05.617" endtime="20200704 18:26:05.618"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:26:05.622" level="INFO">Running command 'ozone sh key delete /12182-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:26:08.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:26:08.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:26:05.619" endtime="20200704 18:26:08.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:26:08.041" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:26:08.040" endtime="20200704 18:26:08.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:26:08.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:26:08.041" endtime="20200704 18:26:08.042"></status>
</kw>
<status status="PASS" starttime="20200704 18:26:05.618" endtime="20200704 18:26:08.042"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:14.249" endtime="20200704 18:26:08.042"></status>
</kw>
<status status="PASS" starttime="20200704 18:25:14.249" endtime="20200704 18:26:08.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:26:08.046" level="INFO">Running command 'ozone sh bucket delete /12182-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:26:10.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:26:10.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200704 18:26:08.043" endtime="20200704 18:26:10.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:26:10.523" level="INFO"></msg>
<status status="PASS" starttime="20200704 18:26:10.522" endtime="20200704 18:26:10.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:26:10.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:26:10.523" endtime="20200704 18:26:10.523"></status>
</kw>
<status status="PASS" starttime="20200704 18:26:08.043" endtime="20200704 18:26:10.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:26:10.527" level="INFO">Running command 'ozone sh volume delete /12182-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:26:12.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:26:12.809" level="INFO">${output} = Volume 12182-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200704 18:26:10.524" endtime="20200704 18:26:12.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:26:12.810" level="INFO">Volume 12182-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200704 18:26:12.809" endtime="20200704 18:26:12.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:26:12.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:26:12.810" endtime="20200704 18:26:12.811"></status>
</kw>
<status status="PASS" starttime="20200704 18:26:10.524" endtime="20200704 18:26:12.811"></status>
</kw>
<status status="PASS" starttime="20200704 18:24:49.804" endtime="20200704 18:26:12.811"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200704 18:24:49.802" endtime="20200704 18:26:12.811" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200704 18:20:57.778" endtime="20200704 18:26:12.812"></status>
</suite>
<status status="PASS" starttime="20200704 18:19:31.542" endtime="20200704 18:26:12.816"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
