<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200704 18:36:29.762" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:36:29.827" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:36:38.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:36:38.344" level="INFO">${output} = 2020-07-04 18:36:31,255 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:31,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:29.819" endtime="20200704 18:36:38.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:36:38.345" level="INFO">2020-07-04 18:36:31,255 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:31,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-04 18:36:31,445 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-04 18:36:32,712 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-04 18:36:32,713 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-04 18:36:32,713 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-04 18:36:32,713 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-04 18:36:32,713 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-04 18:36:32,713 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-04 18:36:32,713 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-04 18:36:32,716 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-04 18:36:32,724 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:32,773 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-71229, with hadoop as owner.
2020-07-04 18:36:32,836 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-71229/bucket-0-78424, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:36:33,342 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-04 18:36:33,730 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,075
Average Time spent in bucket creation: 00:00:00,027
Average Time spent in key creation: 00:00:00,088
Average Time spent in key write: 00:00:00,596
Total bytes written: 10240
Total Execution time: 00:00:06,187
***************************************************</msg>
<status status="PASS" starttime="20200704 18:36:38.344" endtime="20200704 18:36:38.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:36:38.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:36:38.345" endtime="20200704 18:36:38.346"></status>
</kw>
<msg timestamp="20200704 18:36:38.346" level="INFO">${result} = 2020-07-04 18:36:31,255 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:31,445 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:29.818" endtime="20200704 18:36:38.346"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:36:38.346" endtime="20200704 18:36:38.347"></status>
</kw>
<status status="PASS" starttime="20200704 18:36:38.346" endtime="20200704 18:36:38.347"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200704 18:36:29.818" endtime="20200704 18:36:38.347" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:36:38.352" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:36:43.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:36:43.900" level="INFO">${output} = 2020-07-04 18:36:39,875 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:40,061 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:38.349" endtime="20200704 18:36:43.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:36:43.901" level="INFO">2020-07-04 18:36:39,875 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:40,061 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-04 18:36:40,061 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-04 18:36:40,219 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6jmxjb8d4c
2020-07-04 18:36:40,234 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:41,240 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:41,292 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-04 18:36:41,336 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-04 18:36:41,921 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-04 18:36:42,240 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:43,241 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-04 18:36:43,496 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1384.213897, max=1384.213897, mean=1384.213897, stddev=0.0, median=1384.213897, p75=1384.213897, p95=1384.213897, p98=1384.213897, p99=1384.213897, p999=1384.213897, mean_rate=0.46929260167891085, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-04 18:36:43,498 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-04 18:36:43,516 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-04 18:36:43,516 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200704 18:36:43.901" endtime="20200704 18:36:43.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:36:43.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:36:43.902" endtime="20200704 18:36:43.902"></status>
</kw>
<msg timestamp="20200704 18:36:43.902" level="INFO">${result} = 2020-07-04 18:36:39,875 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:40,061 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:38.348" endtime="20200704 18:36:43.902"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:36:43.903" endtime="20200704 18:36:43.903"></status>
</kw>
<status status="PASS" starttime="20200704 18:36:43.903" endtime="20200704 18:36:43.903"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200704 18:36:38.348" endtime="20200704 18:36:43.904" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:36:43.908" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:36:48.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:36:48.027" level="INFO">${output} = 2020-07-04 18:36:45,417 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:45,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:43.906" endtime="20200704 18:36:48.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:36:48.029" level="INFO">2020-07-04 18:36:45,417 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:45,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-04 18:36:45,636 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-04 18:36:45,812 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kxlqrxcpzo
2020-07-04 18:36:45,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:46,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:47,839 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-04 18:36:47,996 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=64.130496, max=64.130496, mean=64.130496, stddev=0.0, median=64.130496, p75=64.130496, p95=64.130496, p98=64.130496, p99=64.130496, p999=64.130496, mean_rate=0.8835306649448516, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-04 18:36:48,000 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-04 18:36:48,000 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-04 18:36:48,001 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200704 18:36:48.028" endtime="20200704 18:36:48.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:36:48.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:36:48.029" endtime="20200704 18:36:48.030"></status>
</kw>
<msg timestamp="20200704 18:36:48.030" level="INFO">${result} = 2020-07-04 18:36:45,417 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:45,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:43.905" endtime="20200704 18:36:48.030"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:36:48.031" endtime="20200704 18:36:48.031"></status>
</kw>
<status status="PASS" starttime="20200704 18:36:48.030" endtime="20200704 18:36:48.031"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200704 18:36:43.904" endtime="20200704 18:36:48.031" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200704 18:36:48.036" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200704 18:36:52.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200704 18:36:52.047" level="INFO">${output} = 2020-07-04 18:36:49,456 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:49,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:48.033" endtime="20200704 18:36:52.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200704 18:36:52.048" level="INFO">2020-07-04 18:36:49,456 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:49,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-04 18:36:49,628 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-04 18:36:49,821 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pc8dvgkya2
2020-07-04 18:36:49,857 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:50,865 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-04 18:36:51,867 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-04 18:36:51,988 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.029574, max=16.029574, mean=16.029574, stddev=0.0, median=16.029574, p75=16.029574, p95=16.029574, p98=16.029574, p99=16.029574, p999=16.029574, mean_rate=0.8888649511631774, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-04 18:36:51,988 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-04 18:36:52,005 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-04 18:36:52,006 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200704 18:36:52.048" endtime="20200704 18:36:52.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200704 18:36:52.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200704 18:36:52.049" endtime="20200704 18:36:52.049"></status>
</kw>
<msg timestamp="20200704 18:36:52.050" level="INFO">${result} = 2020-07-04 18:36:49,456 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-04 18:36:49,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200704 18:36:48.033" endtime="20200704 18:36:52.050"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200704 18:36:52.050" endtime="20200704 18:36:52.051"></status>
</kw>
<status status="PASS" starttime="20200704 18:36:52.050" endtime="20200704 18:36:52.051"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200704 18:36:48.032" endtime="20200704 18:36:52.051" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200704 18:36:29.791" endtime="20200704 18:36:52.053"></status>
</suite>
<status status="PASS" starttime="20200704 18:36:29.762" endtime="20200704 18:36:52.056"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
