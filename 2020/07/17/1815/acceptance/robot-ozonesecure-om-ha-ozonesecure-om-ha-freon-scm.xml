<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:55:46.150" rpa="false">
<suite id="s1" name="ozonesecure-om-ha-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:55:46.205" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:55:55.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:55:55.570" level="INFO">${output} = 2020-07-17 21:55:47,543 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:55:47,785 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:55:46.202" endtime="20200717 21:55:55.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:55:55.571" level="INFO">2020-07-17 21:55:47,543 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:55:47,785 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:55:47,785 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-17 21:55:50,002 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-17 21:55:50,003 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-17 21:55:50,003 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-17 21:55:50,003 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-17 21:55:50,003 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-17 21:55:50,003 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 21:55:50,003 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-17 21:55:50,006 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 21:55:50,014 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:55:50,075 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-64337, with testuser/scm@EXAMPLE.COM as owner.
2020-07-17 21:55:50,724 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-64337/bucket-0-57896, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:55:51,017 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:55:52,018 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:55:53,024 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:55:53,210 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:55:54,024 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,620
Average Time spent in bucket creation: 00:00:00,207
Average Time spent in key creation: 00:00:01,176
Average Time spent in key write: 00:00:01,504
Total bytes written: 10240
Total Execution time: 00:00:07,178
***************************************************</msg>
<status status="PASS" starttime="20200717 21:55:55.571" endtime="20200717 21:55:55.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:55:55.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:55:55.571" endtime="20200717 21:55:55.572"></status>
</kw>
<status status="PASS" starttime="20200717 21:55:46.201" endtime="20200717 21:55:55.572"></status>
</kw>
<msg timestamp="20200717 21:55:55.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:55:46.201" endtime="20200717 21:55:55.572"></status>
</kw>
<msg timestamp="20200717 21:55:55.572" level="INFO">${result} = 2020-07-17 21:55:47,543 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:55:47,785 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:55:46.200" endtime="20200717 21:55:55.573"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:55:55.573" endtime="20200717 21:55:55.574"></status>
</kw>
<status status="PASS" starttime="20200717 21:55:55.573" endtime="20200717 21:55:55.574"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:55:46.199" endtime="20200717 21:55:55.574" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:55:55.580" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:56:03.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:56:03.602" level="INFO">${output} = 2020-07-17 21:55:56,989 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:55:57,171 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:55:55.578" endtime="20200717 21:56:03.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:56:03.604" level="INFO">2020-07-17 21:55:56,989 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:55:57,171 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:55:57,171 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:55:57,307 [main] INFO freon.BaseFreonGenerator: Executing test with prefix imwt7zzniq
2020-07-17 21:55:57,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-17 21:55:58,335 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:55:58,938 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-07-17 21:55:58,996 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:55:59,335 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:55:59,686 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:56:00,336 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:56:01,337 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:56:02,338 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:56:03,236 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=2999.626686, max=2999.626686, mean=2999.626686, stddev=0.0, median=2999.626686, p75=2999.626686, p95=2999.626686, p98=2999.626686, p99=2999.626686, p999=2999.626686, mean_rate=0.24162173282874252, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:56:03,236 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-07-17 21:56:03,239 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:56:03,239 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:56:03.602" endtime="20200717 21:56:03.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:56:03.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:56:03.604" endtime="20200717 21:56:03.605"></status>
</kw>
<status status="PASS" starttime="20200717 21:55:55.577" endtime="20200717 21:56:03.605"></status>
</kw>
<msg timestamp="20200717 21:56:03.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:55:55.577" endtime="20200717 21:56:03.605"></status>
</kw>
<msg timestamp="20200717 21:56:03.606" level="INFO">${result} = 2020-07-17 21:55:56,989 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:55:57,171 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:55:55.576" endtime="20200717 21:56:03.606"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:56:03.606" endtime="20200717 21:56:03.607"></status>
</kw>
<status status="PASS" starttime="20200717 21:56:03.606" endtime="20200717 21:56:03.607"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:55:55.575" endtime="20200717 21:56:03.607" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:56:03.612" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:56:08.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:56:08.008" level="INFO">${output} = 2020-07-17 21:56:04,992 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:56:05,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:56:03.610" endtime="20200717 21:56:08.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:56:08.009" level="INFO">2020-07-17 21:56:04,992 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:56:05,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:56:05,208 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:56:05,414 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 51iii8dhfe
2020-07-17 21:56:05,437 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-17 21:56:06,440 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:56:07,441 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:56:07,957 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=134.994617, max=134.994617, mean=134.994617, stddev=0.0, median=134.994617, p75=134.994617, p95=134.994617, p98=134.994617, p99=134.994617, p999=134.994617, mean_rate=0.8960468552506233, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:56:07,957 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-17 21:56:07,958 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:56:07,958 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:56:08.009" endtime="20200717 21:56:08.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:56:08.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:56:08.010" endtime="20200717 21:56:08.010"></status>
</kw>
<status status="PASS" starttime="20200717 21:56:03.609" endtime="20200717 21:56:08.010"></status>
</kw>
<msg timestamp="20200717 21:56:08.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:56:03.609" endtime="20200717 21:56:08.011"></status>
</kw>
<msg timestamp="20200717 21:56:08.011" level="INFO">${result} = 2020-07-17 21:56:04,992 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:56:05,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:56:03.608" endtime="20200717 21:56:08.011"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:56:08.012" endtime="20200717 21:56:08.012"></status>
</kw>
<status status="PASS" starttime="20200717 21:56:08.011" endtime="20200717 21:56:08.012"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:56:03.608" endtime="20200717 21:56:08.012" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:56:08.018" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:56:12.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:56:12.190" level="INFO">${output} = 2020-07-17 21:56:09,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:56:09,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:56:08.015" endtime="20200717 21:56:12.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:56:12.192" level="INFO">2020-07-17 21:56:09,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:56:09,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:56:09,437 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:56:09,613 [main] INFO freon.BaseFreonGenerator: Executing test with prefix o0kf8okcvo
2020-07-17 21:56:09,627 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-17 21:56:10,639 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:56:11,639 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:56:12,152 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=46.109226, max=46.109226, mean=46.109226, stddev=0.0, median=46.109226, p75=46.109226, p95=46.109226, p98=46.109226, p99=46.109226, p999=46.109226, mean_rate=0.8876442837822494, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:56:12,152 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-17 21:56:12,161 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:56:12,161 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:56:12.191" endtime="20200717 21:56:12.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:56:12.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:56:12.192" endtime="20200717 21:56:12.192"></status>
</kw>
<status status="PASS" starttime="20200717 21:56:08.015" endtime="20200717 21:56:12.192"></status>
</kw>
<msg timestamp="20200717 21:56:12.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:56:08.014" endtime="20200717 21:56:12.193"></status>
</kw>
<msg timestamp="20200717 21:56:12.193" level="INFO">${result} = 2020-07-17 21:56:09,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:56:09,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:56:08.014" endtime="20200717 21:56:12.193"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:56:12.194" endtime="20200717 21:56:12.194"></status>
</kw>
<status status="PASS" starttime="20200717 21:56:12.193" endtime="20200717 21:56:12.194"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:56:08.013" endtime="20200717 21:56:12.194" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200717 21:55:46.175" endtime="20200717 21:56:12.196"></status>
</suite>
<status status="PASS" starttime="20200717 21:55:46.151" endtime="20200717 21:56:12.198"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-om-ha-freon">ozonesecure-om-ha-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozonesecure-om-ha-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
