<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 22:29:10.792" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:10.851" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:10.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:10.852" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:29:10.846" endtime="20200717 22:29:10.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:10.853" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:29:10.853" endtime="20200717 22:29:10.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:10.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:10.854" endtime="20200717 22:29:10.854"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.845" endtime="20200717 22:29:10.854"></status>
</kw>
<msg timestamp="20200717 22:29:10.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:10.845" endtime="20200717 22:29:10.854"></status>
</kw>
<msg timestamp="20200717 22:29:10.855" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:29:10.845" endtime="20200717 22:29:10.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:29:10.856" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:29:10.855" endtime="20200717 22:29:10.856"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:10.861" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:10.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:10.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:10.858" endtime="20200717 22:29:10.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:10.872" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:10.871" endtime="20200717 22:29:10.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:10.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:10.872" endtime="20200717 22:29:10.873"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.858" endtime="20200717 22:29:10.873"></status>
</kw>
<msg timestamp="20200717 22:29:10.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:10.857" endtime="20200717 22:29:10.873"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.857" endtime="20200717 22:29:10.873"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.856" endtime="20200717 22:29:10.873"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.844" endtime="20200717 22:29:10.874"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.844" endtime="20200717 22:29:10.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:10.877" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:19.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:19.287" level="INFO">${output} = 2020-07-17 22:29:12,230 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 22:29:12,432 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 22:29:10.875" endtime="20200717 22:29:19.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.289" level="INFO">2020-07-17 22:29:12,230 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 22:29:12,432 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 22:29:12,432 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-17 22:29:13,781 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-17 22:29:13,782 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-17 22:29:13,782 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-17 22:29:13,782 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-17 22:29:13,782 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-17 22:29:13,782 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 22:29:13,782 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-17 22:29:13,790 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 22:29:13,808 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-17 22:29:13,837 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-92307, with testuser/scm@EXAMPLE.COM as owner.
2020-07-17 22:29:13,862 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-92307/bucket-0-94822, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 22:29:14,391 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 22:29:14,813 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,143
Average Time spent in key write: 00:00:00,468
Total bytes written: 10250
Total Execution time: 00:00:06,362
***************************************************</msg>
<status status="PASS" starttime="20200717 22:29:19.288" endtime="20200717 22:29:19.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:19.289" endtime="20200717 22:29:19.290"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.875" endtime="20200717 22:29:19.290"></status>
</kw>
<msg timestamp="20200717 22:29:19.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:10.874" endtime="20200717 22:29:19.290"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:10.874" endtime="20200717 22:29:19.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:29:10.843" endtime="20200717 22:29:19.291" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:19.298" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:19.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:19.300" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:29:19.295" endtime="20200717 22:29:19.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.301" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:29:19.301" endtime="20200717 22:29:19.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:19.301" endtime="20200717 22:29:19.302"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.295" endtime="20200717 22:29:19.302"></status>
</kw>
<msg timestamp="20200717 22:29:19.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:19.295" endtime="20200717 22:29:19.302"></status>
</kw>
<msg timestamp="20200717 22:29:19.302" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:29:19.294" endtime="20200717 22:29:19.302"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:19.308" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:19.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:19.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:19.305" endtime="20200717 22:29:19.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.332" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:19.331" endtime="20200717 22:29:19.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:19.332" endtime="20200717 22:29:19.333"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.304" endtime="20200717 22:29:19.333"></status>
</kw>
<msg timestamp="20200717 22:29:19.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:19.304" endtime="20200717 22:29:19.333"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.303" endtime="20200717 22:29:19.333"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.303" endtime="20200717 22:29:19.333"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.294" endtime="20200717 22:29:19.333"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.293" endtime="20200717 22:29:19.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:19.337" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:19.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:19.503" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":169}]}}</msg>
<status status="PASS" starttime="20200717 22:29:19.335" endtime="20200717 22:29:19.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.504" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":169}]}}</msg>
<status status="PASS" starttime="20200717 22:29:19.503" endtime="20200717 22:29:19.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:19.504" endtime="20200717 22:29:19.505"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.335" endtime="20200717 22:29:19.505"></status>
</kw>
<msg timestamp="20200717 22:29:19.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:19.334" endtime="20200717 22:29:19.506"></status>
</kw>
<msg timestamp="20200717 22:29:19.506" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":169}]}}</msg>
<status status="PASS" starttime="20200717 22:29:19.334" endtime="20200717 22:29:19.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:19.506" endtime="20200717 22:29:19.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:19.511" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:19.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:19.548" level="INFO">${output} = [{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-...</msg>
<status status="PASS" starttime="20200717 22:29:19.508" endtime="20200717 22:29:19.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.549" level="INFO">[{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-81139","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-0-50137","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-1-53152","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-2-38859","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-4-64056","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-1-01416","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-3-54005","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-4-60256","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-0-51875","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-4-28195","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-1-04632","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-0-84935","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-3-67663","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-2-36075","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-3-40938","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-4-13175","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-3-36785","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-1-02566","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-0-68923","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-4-47364","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-3-29136","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-2-35245","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-0-93165","fileSize":16384,"count":5},{"volume":"09553-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"09553-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"51835-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"51835-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"51835-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest390","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09766","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-46286","fileSize":1024,"count":2},{"volume":"s3v","bucket":"destbucket-67793","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-61626","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200717 22:29:19.549" endtime="20200717 22:29:19.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:19.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:19.549" endtime="20200717 22:29:19.550"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.508" endtime="20200717 22:29:19.550"></status>
</kw>
<msg timestamp="20200717 22:29:19.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:19.507" endtime="20200717 22:29:19.550"></status>
</kw>
<msg timestamp="20200717 22:29:19.551" level="INFO">${result} = [{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-...</msg>
<status status="PASS" starttime="20200717 22:29:19.507" endtime="20200717 22:29:19.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200717 22:29:19.552" level="FAIL">'[{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-81139","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-0-50137","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-1-53152","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-2-38859","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-4-64056","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-1-01416","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-3-54005","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-4-60256","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-0-51875","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-4-28195","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-1-04632","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-0-84935","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-3-67663","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-2-36075","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-3-40938","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-4-13175","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-3-36785","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-1-02566","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-0-68923","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-4-47364","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-3-29136","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-2-35245","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-0-93165","fileSize":16384,"count":5},{"volume":"09553-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"09553-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"51835-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"51835-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"51835-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest390","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09766","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-46286","fileSize":1024,"count":2},{"volume":"s3v","bucket":"destbucket-67793","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-61626","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200717 22:29:19.551" endtime="20200717 22:29:19.552"></status>
</kw>
<status status="FAIL" starttime="20200717 22:29:19.293" endtime="20200717 22:29:19.552"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:29.559" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:29.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:29.560" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:29:29.555" endtime="20200717 22:29:29.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.561" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:29:29.561" endtime="20200717 22:29:29.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:29.562" endtime="20200717 22:29:29.562"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.555" endtime="20200717 22:29:29.562"></status>
</kw>
<msg timestamp="20200717 22:29:29.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:29.555" endtime="20200717 22:29:29.563"></status>
</kw>
<msg timestamp="20200717 22:29:29.563" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:29:29.554" endtime="20200717 22:29:29.563"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:29.567" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:29.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:29.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:29.565" endtime="20200717 22:29:29.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.579" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:29.578" endtime="20200717 22:29:29.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:29.579" endtime="20200717 22:29:29.579"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.564" endtime="20200717 22:29:29.580"></status>
</kw>
<msg timestamp="20200717 22:29:29.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:29.564" endtime="20200717 22:29:29.580"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.563" endtime="20200717 22:29:29.580"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.563" endtime="20200717 22:29:29.580"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.554" endtime="20200717 22:29:29.580"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.553" endtime="20200717 22:29:29.580"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:29.585" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:29.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:29.602" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":169}]}}</msg>
<status status="PASS" starttime="20200717 22:29:29.582" endtime="20200717 22:29:29.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.603" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":169}]}}</msg>
<status status="PASS" starttime="20200717 22:29:29.603" endtime="20200717 22:29:29.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:29.603" endtime="20200717 22:29:29.604"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.581" endtime="20200717 22:29:29.604"></status>
</kw>
<msg timestamp="20200717 22:29:29.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:29.581" endtime="20200717 22:29:29.604"></status>
</kw>
<msg timestamp="20200717 22:29:29.604" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":169}]}}</msg>
<status status="PASS" starttime="20200717 22:29:29.580" endtime="20200717 22:29:29.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:29.605" endtime="20200717 22:29:29.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:29.609" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:29.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:29.642" level="INFO">${output} = [{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-...</msg>
<status status="PASS" starttime="20200717 22:29:29.606" endtime="20200717 22:29:29.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.643" level="INFO">[{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-81139","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-0-50137","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-1-53152","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-2-38859","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-4-64056","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-1-01416","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-3-54005","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-4-60256","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-0-51875","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-4-28195","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-1-04632","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-0-84935","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-3-67663","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-2-36075","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-3-40938","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-4-13175","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-3-36785","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-1-02566","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-0-68923","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-4-47364","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-3-29136","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-2-35245","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-0-93165","fileSize":16384,"count":5},{"volume":"09553-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"09553-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"51835-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"51835-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"51835-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest390","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09766","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-46286","fileSize":1024,"count":2},{"volume":"s3v","bucket":"destbucket-67793","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-61626","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200717 22:29:29.642" endtime="20200717 22:29:29.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:29.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:29.643" endtime="20200717 22:29:29.644"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:29.606" endtime="20200717 22:29:29.644"></status>
</kw>
<msg timestamp="20200717 22:29:29.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:29.606" endtime="20200717 22:29:29.644"></status>
</kw>
<msg timestamp="20200717 22:29:29.645" level="INFO">${result} = [{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-...</msg>
<status status="PASS" starttime="20200717 22:29:29.605" endtime="20200717 22:29:29.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200717 22:29:29.646" level="FAIL">'[{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-81139","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-0-50137","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-1-53152","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-2-38859","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-4-64056","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-1-01416","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-3-54005","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-4-60256","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-0-51875","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-4-28195","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-1-04632","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-0-84935","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-3-67663","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-2-36075","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-3-40938","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-4-13175","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-3-36785","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-1-02566","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-0-68923","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-4-47364","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-3-29136","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-2-35245","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-0-93165","fileSize":16384,"count":5},{"volume":"09553-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"09553-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"51835-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"51835-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"51835-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest390","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09766","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-46286","fileSize":1024,"count":2},{"volume":"s3v","bucket":"destbucket-67793","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-61626","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200717 22:29:29.645" endtime="20200717 22:29:29.646"></status>
</kw>
<status status="FAIL" starttime="20200717 22:29:29.552" endtime="20200717 22:29:29.646"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.652" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.655" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:29:39.650" endtime="20200717 22:29:39.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.656" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:29:39.656" endtime="20200717 22:29:39.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.657" endtime="20200717 22:29:39.657"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.649" endtime="20200717 22:29:39.657"></status>
</kw>
<msg timestamp="20200717 22:29:39.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.649" endtime="20200717 22:29:39.658"></status>
</kw>
<msg timestamp="20200717 22:29:39.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:29:39.648" endtime="20200717 22:29:39.658"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.662" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:39.660" endtime="20200717 22:29:39.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.675" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:39.675" endtime="20200717 22:29:39.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.675" endtime="20200717 22:29:39.676"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.659" endtime="20200717 22:29:39.676"></status>
</kw>
<msg timestamp="20200717 22:29:39.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.659" endtime="20200717 22:29:39.677"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.658" endtime="20200717 22:29:39.677"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.658" endtime="20200717 22:29:39.677"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.648" endtime="20200717 22:29:39.677"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.647" endtime="20200717 22:29:39.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.682" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.698" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":171},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":6},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200717 22:29:39.679" endtime="20200717 22:29:39.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.699" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":171},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":6},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200717 22:29:39.699" endtime="20200717 22:29:39.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.700" endtime="20200717 22:29:39.700"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.678" endtime="20200717 22:29:39.701"></status>
</kw>
<msg timestamp="20200717 22:29:39.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.678" endtime="20200717 22:29:39.701"></status>
</kw>
<msg timestamp="20200717 22:29:39.701" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":171},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":6},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200717 22:29:39.677" endtime="20200717 22:29:39.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.701" endtime="20200717 22:29:39.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.707" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.722" level="INFO">${output} = [{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-...</msg>
<status status="PASS" starttime="20200717 22:29:39.703" endtime="20200717 22:29:39.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.723" level="INFO">[{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-81139","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-0-50137","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-1-53152","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-2-38859","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-4-64056","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-1-01416","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-3-54005","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-4-60256","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-0-51875","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-4-28195","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-1-04632","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-0-84935","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-3-67663","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-2-36075","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-3-40938","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-4-13175","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-3-36785","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-1-02566","fileSize":16384,"count":5},{"volume":"vol-0-40320","bucket":"bucket-0-68923","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-4-47364","fileSize":16384,"count":5},{"volume":"vol-3-70820","bucket":"bucket-3-29136","fileSize":16384,"count":5},{"volume":"vol-4-45137","bucket":"bucket-2-35245","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-0-93165","fileSize":16384,"count":5},{"volume":"09553-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"09553-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"51835-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"51835-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"51835-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest390","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09766","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-46286","fileSize":1024,"count":2},{"volume":"s3v","bucket":"destbucket-67793","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-61626","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-17515","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44434","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32202","fileSize":1024,"count":2},{"volume":"vol-0-92307","bucket":"bucket-0-94822","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200717 22:29:39.723" endtime="20200717 22:29:39.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.724" endtime="20200717 22:29:39.724"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.703" endtime="20200717 22:29:39.725"></status>
</kw>
<msg timestamp="20200717 22:29:39.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.703" endtime="20200717 22:29:39.725"></status>
</kw>
<msg timestamp="20200717 22:29:39.727" level="INFO">${result} = [{"volume":"vol-4-45137","bucket":"bucket-1-69061","fileSize":16384,"count":5},{"volume":"vol-1-83246","bucket":"bucket-2-39677","fileSize":16384,"count":5},{"volume":"vol-2-72864","bucket":"bucket-2-...</msg>
<status status="PASS" starttime="20200717 22:29:39.702" endtime="20200717 22:29:39.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.728" endtime="20200717 22:29:39.728"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.647" endtime="20200717 22:29:39.728"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:19.293" endtime="20200717 22:29:39.728"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:29:19.292" endtime="20200717 22:29:39.729" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.735" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.786" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"d1a0a6af-5de4-43be-ab36-d2e68fcb2eff","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595024955370,"storageReport":{"ca...</msg>
<status status="PASS" starttime="20200717 22:29:39.732" endtime="20200717 22:29:39.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.787" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"d1a0a6af-5de4-43be-ab36-d2e68fcb2eff","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595024955370,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24764203008},"pipelines":[{"pipelineID":"6210e8fa-6a0f-4dcc-ab08-c7a8ab574c9e","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"ad583d32-3181-4b8b-85ab-751288374762","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595023011547},{"uuid":"41cd55f0-f11e-41df-8441-c3be076e4c3f","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595024955306,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24764203008},"pipelines":[{"pipelineID":"ad583d32-3181-4b8b-85ab-751288374762","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"c32cd956-0fa1-49b7-9496-d25a11d069df","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595023006826},{"uuid":"bd386ad0-baf6-4d63-b383-dfeaad5d55db","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595024955322,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24764198912},"pipelines":[{"pipelineID":"f0d72a41-93a9-45f5-a931-e6fd69a3a227","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"ad583d32-3181-4b8b-85ab-751288374762","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1595023007132}]}</msg>
<status status="PASS" starttime="20200717 22:29:39.786" endtime="20200717 22:29:39.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.787" endtime="20200717 22:29:39.788"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.731" endtime="20200717 22:29:39.788"></status>
</kw>
<msg timestamp="20200717 22:29:39.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.731" endtime="20200717 22:29:39.788"></status>
</kw>
<msg timestamp="20200717 22:29:39.788" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"d1a0a6af-5de4-43be-ab36-d2e68fcb2eff","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595024955370,"storageReport":{"ca...</msg>
<status status="PASS" starttime="20200717 22:29:39.730" endtime="20200717 22:29:39.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.789" endtime="20200717 22:29:39.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.789" endtime="20200717 22:29:39.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.790" endtime="20200717 22:29:39.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.790" endtime="20200717 22:29:39.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.795" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.827" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"6210e8fa-6a0f-4dcc-ab08-c7a8ab574c9e","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonese...</msg>
<status status="PASS" starttime="20200717 22:29:39.792" endtime="20200717 22:29:39.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.828" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"6210e8fa-6a0f-4dcc-ab08-c7a8ab574c9e","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1935426,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f0d72a41-93a9-45f5-a931-e6fd69a3a227","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1937270,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"ad583d32-3181-4b8b-85ab-751288374762","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1935349,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"c32cd956-0fa1-49b7-9496-d25a11d069df","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1935530,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200717 22:29:39.827" endtime="20200717 22:29:39.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.828" endtime="20200717 22:29:39.829"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.792" endtime="20200717 22:29:39.829"></status>
</kw>
<msg timestamp="20200717 22:29:39.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.791" endtime="20200717 22:29:39.829"></status>
</kw>
<msg timestamp="20200717 22:29:39.829" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"6210e8fa-6a0f-4dcc-ab08-c7a8ab574c9e","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonese...</msg>
<status status="PASS" starttime="20200717 22:29:39.791" endtime="20200717 22:29:39.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.830" endtime="20200717 22:29:39.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.830" endtime="20200717 22:29:39.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.831" endtime="20200717 22:29:39.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.831" endtime="20200717 22:29:39.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.832" endtime="20200717 22:29:39.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.832" endtime="20200717 22:29:39.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.840" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.867" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74292604928},"containers":4,"volumes":32,"buckets":92,"keys":205}</msg>
<status status="PASS" starttime="20200717 22:29:39.837" endtime="20200717 22:29:39.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.868" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74292604928},"containers":4,"volumes":32,"buckets":92,"keys":205}</msg>
<status status="PASS" starttime="20200717 22:29:39.867" endtime="20200717 22:29:39.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.868" endtime="20200717 22:29:39.869"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.836" endtime="20200717 22:29:39.869"></status>
</kw>
<msg timestamp="20200717 22:29:39.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.836" endtime="20200717 22:29:39.869"></status>
</kw>
<msg timestamp="20200717 22:29:39.870" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74292604928},"containers":4,"volumes":32,"buckets":92,"keys":205}</msg>
<status status="PASS" starttime="20200717 22:29:39.832" endtime="20200717 22:29:39.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.870" endtime="20200717 22:29:39.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.870" endtime="20200717 22:29:39.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.871" endtime="20200717 22:29:39.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.875" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.897" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595023070660,"lastReportTimestamp":1595024955322},{"containerId":1,"datanodeHost":"ozonesecure_dat...</msg>
<status status="PASS" starttime="20200717 22:29:39.873" endtime="20200717 22:29:39.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.898" level="INFO">[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595023070660,"lastReportTimestamp":1595024955322},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1595023071079,"lastReportTimestamp":1595024940513},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1595023071171,"lastReportTimestamp":1595024955306}]</msg>
<status status="PASS" starttime="20200717 22:29:39.897" endtime="20200717 22:29:39.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.898" endtime="20200717 22:29:39.899"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.872" endtime="20200717 22:29:39.899"></status>
</kw>
<msg timestamp="20200717 22:29:39.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.872" endtime="20200717 22:29:39.900"></status>
</kw>
<msg timestamp="20200717 22:29:39.901" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595023070660,"lastReportTimestamp":1595024955322},{"containerId":1,"datanodeHost":"ozonesecure_dat...</msg>
<status status="PASS" starttime="20200717 22:29:39.871" endtime="20200717 22:29:39.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.901" endtime="20200717 22:29:39.903"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:29:39.730" endtime="20200717 22:29:39.903" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.911" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.913" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:29:39.907" endtime="20200717 22:29:39.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.914" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:29:39.914" endtime="20200717 22:29:39.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.915" endtime="20200717 22:29:39.915"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.907" endtime="20200717 22:29:39.915"></status>
</kw>
<msg timestamp="20200717 22:29:39.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.906" endtime="20200717 22:29:39.916"></status>
</kw>
<msg timestamp="20200717 22:29:39.916" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:29:39.906" endtime="20200717 22:29:39.916"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.920" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:39.918" endtime="20200717 22:29:39.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.937" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:39.936" endtime="20200717 22:29:39.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.937" endtime="20200717 22:29:39.938"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.918" endtime="20200717 22:29:39.938"></status>
</kw>
<msg timestamp="20200717 22:29:39.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.917" endtime="20200717 22:29:39.938"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.917" endtime="20200717 22:29:39.939"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.916" endtime="20200717 22:29:39.939"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.905" endtime="20200717 22:29:39.939"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.905" endtime="20200717 22:29:39.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:39.942" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:39.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:39.993" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200717 22:29:39.940" endtime="20200717 22:29:39.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.995" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.eeb92191.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2f7524a2.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.c0debea0.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.994" endtime="20200717 22:29:39.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:39.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:39.995" endtime="20200717 22:29:39.996"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:39.940" endtime="20200717 22:29:39.996"></status>
</kw>
<msg timestamp="20200717 22:29:39.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:39.940" endtime="20200717 22:29:39.996"></status>
</kw>
<msg timestamp="20200717 22:29:39.997" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200717 22:29:39.939" endtime="20200717 22:29:39.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:39.997" endtime="20200717 22:29:39.997"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:29:39.904" endtime="20200717 22:29:39.998" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200717 22:29:10.818" endtime="20200717 22:29:40.000"></status>
</suite>
<status status="PASS" starttime="20200717 22:29:10.793" endtime="20200717 22:29:40.003"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
