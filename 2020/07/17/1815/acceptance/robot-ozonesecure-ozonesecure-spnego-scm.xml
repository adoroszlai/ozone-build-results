<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 22:30:02.462" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:02.519" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:02.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:02.520" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:30:02.514" endtime="20200717 22:30:02.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:02.521" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:30:02.520" endtime="20200717 22:30:02.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:02.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:02.521" endtime="20200717 22:30:02.522"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.514" endtime="20200717 22:30:02.523"></status>
</kw>
<msg timestamp="20200717 22:30:02.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:02.514" endtime="20200717 22:30:02.523"></status>
</kw>
<msg timestamp="20200717 22:30:02.523" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:30:02.513" endtime="20200717 22:30:02.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:30:02.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:30:02.523" endtime="20200717 22:30:02.524"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:02.529" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:02.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:02.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:02.526" endtime="20200717 22:30:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:02.540" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:02.539" endtime="20200717 22:30:02.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:02.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:02.540" endtime="20200717 22:30:02.540"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.526" endtime="20200717 22:30:02.540"></status>
</kw>
<msg timestamp="20200717 22:30:02.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:02.525" endtime="20200717 22:30:02.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.525" endtime="20200717 22:30:02.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.525" endtime="20200717 22:30:02.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.513" endtime="20200717 22:30:02.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.512" endtime="20200717 22:30:02.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:02.545" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.864" level="INFO">${output} = 2020-07-17 22:30:03,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 22:30:03,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 22:30:02.542" endtime="20200717 22:30:10.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.865" level="INFO">2020-07-17 22:30:03,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 22:30:03,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 22:30:03,840 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-17 22:30:05,352 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-17 22:30:05,353 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-17 22:30:05,353 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-17 22:30:05,353 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-17 22:30:05,353 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-17 22:30:05,353 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 22:30:05,353 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-17 22:30:05,357 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 22:30:05,376 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-17 22:30:05,417 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-05093, with testuser/scm@EXAMPLE.COM as owner.
2020-07-17 22:30:05,452 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-05093/bucket-0-20111, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 22:30:05,975 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 22:30:06,384 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,025
Average Time spent in key write: 00:00:00,099
Total bytes written: 2050
Total Execution time: 00:00:06,453
***************************************************</msg>
<status status="PASS" starttime="20200717 22:30:10.864" endtime="20200717 22:30:10.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.865" endtime="20200717 22:30:10.866"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.542" endtime="20200717 22:30:10.866"></status>
</kw>
<msg timestamp="20200717 22:30:10.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:02.542" endtime="20200717 22:30:10.866"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:02.541" endtime="20200717 22:30:10.867"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:30:02.511" endtime="20200717 22:30:10.867" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:10.873" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:10.871" endtime="20200717 22:30:10.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.878" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:10.877" endtime="20200717 22:30:10.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.878" endtime="20200717 22:30:10.879"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.870" endtime="20200717 22:30:10.880"></status>
</kw>
<msg timestamp="20200717 22:30:10.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.870" endtime="20200717 22:30:10.880"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.870" endtime="20200717 22:30:10.881"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.869" endtime="20200717 22:30:10.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:10.885" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.905" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200717 22:30:10.882" endtime="20200717 22:30:10.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.906" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200717 22:30:10.905" endtime="20200717 22:30:10.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.906" endtime="20200717 22:30:10.907"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.882" endtime="20200717 22:30:10.908"></status>
</kw>
<msg timestamp="20200717 22:30:10.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.881" endtime="20200717 22:30:10.908"></status>
</kw>
<msg timestamp="20200717 22:30:10.908" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200717 22:30:10.881" endtime="20200717 22:30:10.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:10.908" endtime="20200717 22:30:10.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:10.913" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.921" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:30:10.911" endtime="20200717 22:30:10.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.922" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:30:10.921" endtime="20200717 22:30:10.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.922" endtime="20200717 22:30:10.922"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.911" endtime="20200717 22:30:10.922"></status>
</kw>
<msg timestamp="20200717 22:30:10.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.910" endtime="20200717 22:30:10.923"></status>
</kw>
<msg timestamp="20200717 22:30:10.923" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:30:10.910" endtime="20200717 22:30:10.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:30:10.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:30:10.923" endtime="20200717 22:30:10.924"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:10.929" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:10.926" endtime="20200717 22:30:10.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.946" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:10.945" endtime="20200717 22:30:10.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.946" endtime="20200717 22:30:10.947"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.925" endtime="20200717 22:30:10.947"></status>
</kw>
<msg timestamp="20200717 22:30:10.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.925" endtime="20200717 22:30:10.947"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.924" endtime="20200717 22:30:10.947"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.924" endtime="20200717 22:30:10.947"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.909" endtime="20200717 22:30:10.948"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.909" endtime="20200717 22:30:10.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:10.952" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.979" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200717 22:30:10.950" endtime="20200717 22:30:10.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.980" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0xac0f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb4F1VTndZ4H4ZCjtXvm66MMoseOl0R5F2bTKzMZe53OWcq+EH3YWWjqRH6zrmswImgmrbgKqpK29PV9xCQN0fJgiKy/dF1jd7uVvLtgq/Us+XVxarqnauEwjaLlf/iOGIOMp60GpNWuR2WczdF5n9CDDmQrSqkS5hDoo/0BYIEja9zM0I6o7cupiJ/uemD/52/6i9dsXUImUd0eFZsP1+8kA9V5rtKdzU47o5e8TiU9CO/lWlR5jUcEuO8ejvdyrcs4k7aFtXnBenlO9OqpQTceCsDq68PVoUrpgPccpt90zqnGnxeR+SiOU8MQFT2nyewBCOPbxJhdLBlEzp0TkTrzKe7yt4hpIHWMIHToAMCARKigcsEgchq0E7LgK1+G2hPSWBCG7uwkJoAFUXaJm2G6Gy+jV+DfcH8otg/IKd7RsYogzjqBwpypQU/c+HoHEEiHvMWTpdVontGArl9oDeU+juILtisAVLd+GqnVx1g+QUXUbPCddiTZKf7jx2rcg0kuM8E1y7simEhfXAHV3hdIez3e+YPG4NR4SpjbUH00J7p+k2nZG7mH6ld3NVFe0OAVuHu8HqYF7HvUkj8lM18umaWGLWVOSEmUb/4InoNShlWCq2eALzF+AiBz0G6Ag==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 17 Jul 2020 22:30:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 17 Jul 2020 22:30:10 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 17 Jul 2020 22:30:10 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:10 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLahVsCvqmbmlBPGowP8ae+NsoyOFRbLT6VvbGLNfl1ldMRfaB3T4QRBXZXfWI+DK7fwgMC86qMyHJsFjbbUtAQGP
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061010974&amp;s=dsCCvsfRvPMp6ky6pNEOPdRsQYi1F9BaO8mMsKLIYAc="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 17 Jul 2020 20:56:50 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 22:30:10 GMT
Cache-Control: no-cache
Expires: Fri, 17 Jul 2020 22:30:10 GMT
Date: Fri, 17 Jul 2020 22:30:10 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 17 Jul 2020 22:30:10 GMT
Date: Fri, 17 Jul 2020 22:30:10 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLahVsCvqmbmlBPGowP8ae+NsoyOFRbLT6VvbGLNfl1ldMRfaB3T4QRBXZXfWI+DK7fwgMC86qMyHJsFjbbUtAQGP
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061010974&amp;s=dsCCvsfRvPMp6ky6pNEOPdRsQYi1F9BaO8mMsKLIYAc="; Path=/; HttpOnly
Last-Modified: Fri, 17 Jul 2020 20:56:50 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200717 22:30:10.979" endtime="20200717 22:30:10.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.980" endtime="20200717 22:30:10.981"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.949" endtime="20200717 22:30:10.981"></status>
</kw>
<msg timestamp="20200717 22:30:10.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.949" endtime="20200717 22:30:10.981"></status>
</kw>
<msg timestamp="20200717 22:30:10.982" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200717 22:30:10.948" endtime="20200717 22:30:10.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:10.982" endtime="20200717 22:30:10.983"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.869" endtime="20200717 22:30:10.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:30:10.868" endtime="20200717 22:30:10.983" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:10.989" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:10.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:10.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:10.987" endtime="20200717 22:30:10.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.993" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:10.993" endtime="20200717 22:30:10.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:10.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:10.993" endtime="20200717 22:30:10.994"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.986" endtime="20200717 22:30:10.994"></status>
</kw>
<msg timestamp="20200717 22:30:10.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.986" endtime="20200717 22:30:10.994"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.986" endtime="20200717 22:30:10.995"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.985" endtime="20200717 22:30:10.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.001" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.014" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200717 22:30:10.996" endtime="20200717 22:30:11.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.015" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200717 22:30:11.015" endtime="20200717 22:30:11.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.015" endtime="20200717 22:30:11.016"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.996" endtime="20200717 22:30:11.016"></status>
</kw>
<msg timestamp="20200717 22:30:11.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:10.995" endtime="20200717 22:30:11.016"></status>
</kw>
<msg timestamp="20200717 22:30:11.017" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200717 22:30:10.995" endtime="20200717 22:30:11.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.017" endtime="20200717 22:30:11.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.026" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.029" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.020" endtime="20200717 22:30:11.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.030" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:30:11.029" endtime="20200717 22:30:11.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.030" endtime="20200717 22:30:11.030"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.020" endtime="20200717 22:30:11.031"></status>
</kw>
<msg timestamp="20200717 22:30:11.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.019" endtime="20200717 22:30:11.031"></status>
</kw>
<msg timestamp="20200717 22:30:11.031" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.019" endtime="20200717 22:30:11.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:30:11.032" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:30:11.031" endtime="20200717 22:30:11.032"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.036" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.034" endtime="20200717 22:30:11.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.047" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.046" endtime="20200717 22:30:11.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.047" endtime="20200717 22:30:11.047"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.033" endtime="20200717 22:30:11.048"></status>
</kw>
<msg timestamp="20200717 22:30:11.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.033" endtime="20200717 22:30:11.048"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.032" endtime="20200717 22:30:11.048"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.032" endtime="20200717 22:30:11.048"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.018" endtime="20200717 22:30:11.048"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.018" endtime="20200717 22:30:11.048"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.053" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.117" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200717 22:30:11.050" endtime="20200717 22:30:11.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.118" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x18daf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYuFf8g86Y/EOIemtf8RYxZm7pQItmbjj9W378T7R+b6ILdKyldyihDamENKXRJKMVoltXtYl+BP+1AGJ7xX5BPci2KfZRWqP/J02ie8iB+EiPncWa+35UYfGJK/sZwkjY76oOk/OhaxyHScA7B8XN8gBbEcfq50u3R6vlebytD2caGZr9DkIjEjMhuEXLGg6HKbh945zmoTmlmjSOU6oGMq+GYr9XJBqLm5doD5q5RwfRKk+hxnaKI0dASwaDtd0TGtlx0SdKLa6gtsekAKwnFQi8YTIe1q9cyW44f+0wcVhxwnWGdvktwJUcgWPHtYT9ITJ98vVZ6riOwrIl+Vxhv9Fhfbs4upIHWMIHToAMCARKigcsEgchSVGNbvlQ4VV+T+cZvPmoXeNA3+6guEiIsZ+8TUU0OkpV0r9F38CkNf4Bo865JV+1hI5y1VLI3067o330i7mjPN3Ihx/EK6kw5iIL2msDvAGMAMIarLV0sGndN/s1UAEMo5iacF2xgmTCSfANRseLx8qxag2xR5+rnpx+R0l3PpR+8NhaD9LkEkx+Q/EpAXEXmixZLJ2RaC+Z1NHjahfISU4DzAhGUiqYyiiiqypyEya6gEeWLOGqzkZaq56ysh+yGZYfovY0qig==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCMimp/JDjRLeYBjvji+qv0TQORk+JhOoCpPJliAbY7mKhBSbiSOMyTLi0Dn4HI52MTsmUduoMZV9mhOwEukvhKG1H
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011075&amp;s=XuvVXUIX8jqsZECc5bpAOyqKknN11qaDqVzN0CahhoE="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1595025011075.tgz"
&lt; Content-Length: 91648
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 22:30:11 GMT
Cache-Control: no-cache
Expires: Fri, 17 Jul 2020 22:30:11 GMT
Date: Fri, 17 Jul 2020 22:30:11 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCMimp/JDjRLeYBjvji+qv0TQORk+JhOoCpPJliAbY7mKhBSbiSOMyTLi0Dn4HI52MTsmUduoMZV9mhOwEukvhKG1H
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011075&amp;s=XuvVXUIX8jqsZECc5bpAOyqKknN11qaDqVzN0CahhoE="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1595025011075.tgz"
Content-Length: 91648
</msg>
<status status="PASS" starttime="20200717 22:30:11.118" endtime="20200717 22:30:11.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.119" endtime="20200717 22:30:11.119"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.049" endtime="20200717 22:30:11.119"></status>
</kw>
<msg timestamp="20200717 22:30:11.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.049" endtime="20200717 22:30:11.120"></status>
</kw>
<msg timestamp="20200717 22:30:11.120" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200717 22:30:11.049" endtime="20200717 22:30:11.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.120" endtime="20200717 22:30:11.121"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:10.984" endtime="20200717 22:30:11.121"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:30:10.984" endtime="20200717 22:30:11.121" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.129" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.125" endtime="20200717 22:30:11.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.132" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.131" endtime="20200717 22:30:11.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.132" endtime="20200717 22:30:11.133"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.125" endtime="20200717 22:30:11.133"></status>
</kw>
<msg timestamp="20200717 22:30:11.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.125" endtime="20200717 22:30:11.133"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.124" endtime="20200717 22:30:11.133"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.124" endtime="20200717 22:30:11.133"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.137" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.150" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200717 22:30:11.135" endtime="20200717 22:30:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.151" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200717 22:30:11.150" endtime="20200717 22:30:11.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.151" endtime="20200717 22:30:11.152"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.134" endtime="20200717 22:30:11.152"></status>
</kw>
<msg timestamp="20200717 22:30:11.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.134" endtime="20200717 22:30:11.152"></status>
</kw>
<msg timestamp="20200717 22:30:11.152" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200717 22:30:11.134" endtime="20200717 22:30:11.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.153" endtime="20200717 22:30:11.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.159" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.161" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.156" endtime="20200717 22:30:11.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.161" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:30:11.161" endtime="20200717 22:30:11.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.162" endtime="20200717 22:30:11.162"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.155" endtime="20200717 22:30:11.163"></status>
</kw>
<msg timestamp="20200717 22:30:11.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.155" endtime="20200717 22:30:11.163"></status>
</kw>
<msg timestamp="20200717 22:30:11.163" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.154" endtime="20200717 22:30:11.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:30:11.164" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:30:11.163" endtime="20200717 22:30:11.164"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.167" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.165" endtime="20200717 22:30:11.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.179" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.179" endtime="20200717 22:30:11.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.180" endtime="20200717 22:30:11.180"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.165" endtime="20200717 22:30:11.180"></status>
</kw>
<msg timestamp="20200717 22:30:11.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.165" endtime="20200717 22:30:11.181"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.164" endtime="20200717 22:30:11.181"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.164" endtime="20200717 22:30:11.181"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.154" endtime="20200717 22:30:11.181"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.153" endtime="20200717 22:30:11.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.185" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.218" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200717 22:30:11.183" endtime="20200717 22:30:11.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.219" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0xffbf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYZWdk7MealSNrG9Ia84SIMhgZyLqy2m7tQ6RvEf6TzMHfsLOGN4ZAm6wOKgrZNScuZJNJSCqs5QhCv79Ls79byxrHqkKCwIu9rGi2Y2gE8sSjv7cLFEY/xHCzUbDmhJVLZGFYRodjdpUD2WanMj+CDJbl2XBs2hC5lV0jIMwWuvByXlhw0jkl5SEnPE3UTAFlFJ1Stp4rmQ6LoDTDkxDAwO/Em3x28lYGKQZHcGvCHavfkalmE3Xs/BPB9rQQdeqUwrMz1hMiaTyWhWG3x9cYUtAxscaPYJWMIcE9chvvwaOvh57JJrtio71gbhs4ChL/A0XRQsVqRKgMPAaCCMicrZ7xjAIs0pIHWMIHToAMCARKigcsEgcgzz58JZryouAIVBNRccpeCRkD7wt0QEBCVZBVNB514ZH3CvCri16E2jCpXXSvmqtBp7Da/3hZrEyhu9E+T7h789RoUm66QpS/Wmu8mKCQLBomKVw3dCC+MF2Y62XxiMa/GjlTEf5+0AfgoDd662t3PH7iLf39YUZGF0IEk5zo4WbdKujgM0VZ1aM/a7/tcL/OMHrLWN88vhM3kSGpSOIiw9oM9undebFuFr0tCRAxTCvmRMkrVtBJjBb0z1tkez2L/1FOaHwNh5Q==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCbUTCokA3pIm5xSNxzyUWPi81RpRFxuSDW+icDZuK6ipqoUXbZL4rGWb5m7YHhDMie8e78pmVBzLfMyZnb/Odl5ia
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011203&amp;s=LOOUW7rY+cbn8ioSICm0U1/0XGXIhhsUKWZRQpFlJ/g="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 22:30:11 GMT
Cache-Control: no-cache
Expires: Fri, 17 Jul 2020 22:30:11 GMT
Date: Fri, 17 Jul 2020 22:30:11 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCbUTCokA3pIm5xSNxzyUWPi81RpRFxuSDW+icDZuK6ipqoUXbZL4rGWb5m7YHhDMie8e78pmVBzLfMyZnb/Odl5ia
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011203&amp;s=LOOUW7rY+cbn8ioSICm0U1/0XGXIhhsUKWZRQpFlJ/g="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200717 22:30:11.218" endtime="20200717 22:30:11.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.219" endtime="20200717 22:30:11.220"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.182" endtime="20200717 22:30:11.220"></status>
</kw>
<msg timestamp="20200717 22:30:11.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.182" endtime="20200717 22:30:11.220"></status>
</kw>
<msg timestamp="20200717 22:30:11.221" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200717 22:30:11.181" endtime="20200717 22:30:11.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.221" endtime="20200717 22:30:11.224"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.123" endtime="20200717 22:30:11.225"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:30:11.122" endtime="20200717 22:30:11.225" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.232" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.229" endtime="20200717 22:30:11.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.237" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.237" endtime="20200717 22:30:11.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.238" endtime="20200717 22:30:11.238"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.228" endtime="20200717 22:30:11.238"></status>
</kw>
<msg timestamp="20200717 22:30:11.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.228" endtime="20200717 22:30:11.239"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.228" endtime="20200717 22:30:11.239"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.227" endtime="20200717 22:30:11.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.248" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.265" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200717 22:30:11.247" endtime="20200717 22:30:11.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.266" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200717 22:30:11.265" endtime="20200717 22:30:11.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.266" endtime="20200717 22:30:11.267"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.246" endtime="20200717 22:30:11.267"></status>
</kw>
<msg timestamp="20200717 22:30:11.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.246" endtime="20200717 22:30:11.267"></status>
</kw>
<msg timestamp="20200717 22:30:11.267" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200717 22:30:11.239" endtime="20200717 22:30:11.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.268" endtime="20200717 22:30:11.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.273" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.275" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.270" endtime="20200717 22:30:11.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.275" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:30:11.275" endtime="20200717 22:30:11.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.276" endtime="20200717 22:30:11.276"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.270" endtime="20200717 22:30:11.276"></status>
</kw>
<msg timestamp="20200717 22:30:11.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.269" endtime="20200717 22:30:11.277"></status>
</kw>
<msg timestamp="20200717 22:30:11.277" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.269" endtime="20200717 22:30:11.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:30:11.278" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:30:11.277" endtime="20200717 22:30:11.278"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.286" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.280" endtime="20200717 22:30:11.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.305" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.305" endtime="20200717 22:30:11.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.306" endtime="20200717 22:30:11.306"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.279" endtime="20200717 22:30:11.306"></status>
</kw>
<msg timestamp="20200717 22:30:11.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.279" endtime="20200717 22:30:11.307"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.278" endtime="20200717 22:30:11.307"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.278" endtime="20200717 22:30:11.307"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.268" endtime="20200717 22:30:11.307"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.268" endtime="20200717 22:30:11.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.311" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.337" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200717 22:30:11.309" endtime="20200717 22:30:11.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.339" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x9a0f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.4) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGj4zE5KkhSx4tZrmadSkD9yNyhUbjyGpTp3+2vPh4m7ZGZBR0I9ZTw2v7ucOHA97rGWQ/8GzRz4MXCiPavTcil7PJKZ9BVGVz5yfqejcR1H3WqbO8OVUGgzvOpDp8jYhcpLS8XCBSkThpc+0tHzO72I8JjAwTZz2TL2dMrIAVsKLxJ5KTegMK9lhwnk3zCsBJp61pZ5eXQalkPi6jh5T1BsXFjurZyH5JzUqO2ub21Ms8YULE58HpiHj/K4gRbM6qyY0Sxf8olPZPcJjU40kDpayzvxc2vz/Q1uAraTFIBFrji7HzAbj32OZwa4SbqEgUTZ9i0G4Ubz9S7HoPzYBW43f25NcCwqSB1jCB06ADAgESooHLBIHIQH/M+d3k+6z/KvlL6rDJhy9g93lWLwFg5KFUYiCCqFVg2ZZBy8KuMhec5q0O0+7Irw+63s/BtHsb29Z6NCyreumiKAu5epouIjt5NJ66iD67nXyRFBjQ5Pfa27uL6rom46V14Yb9c1okf9PQgiUpcgfs5P5sEry6Pz/p80FRaaIUwlUcQ32G8aH0HbnXuyzjpYabr3TYyO5mG8188WQhnUowqERAtFQR/6+1b0POxfNJ4HoD04E43vgGSjOfIMrmlOkIj+L0Cs4=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCG6ZSFaSMUmr/2x/3uDzaahfy1tscO2C4kfobT7vU1Zan3ny6kBVaIfS2T5bGKUNh+qtDIYuo2dhDuzSI7gdXIRdn
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011333&amp;s=PXbqB1YzPT1TSFTytMRZO4mfahS+LHQSGMgIPRW6ffE="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 17 Jul 2020 20:56:28 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 22:30:11 GMT
Cache-Control: no-cache
Expires: Fri, 17 Jul 2020 22:30:11 GMT
Date: Fri, 17 Jul 2020 22:30:11 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 17 Jul 2020 22:30:11 GMT
Date: Fri, 17 Jul 2020 22:30:11 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCG6ZSFaSMUmr/2x/3uDzaahfy1tscO2C4kfobT7vU1Zan3ny6kBVaIfS2T5bGKUNh+qtDIYuo2dhDuzSI7gdXIRdn
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011333&amp;s=PXbqB1YzPT1TSFTytMRZO4mfahS+LHQSGMgIPRW6ffE="; Path=/; HttpOnly
Last-Modified: Fri, 17 Jul 2020 20:56:28 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200717 22:30:11.338" endtime="20200717 22:30:11.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.339" endtime="20200717 22:30:11.340"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.308" endtime="20200717 22:30:11.340"></status>
</kw>
<msg timestamp="20200717 22:30:11.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.308" endtime="20200717 22:30:11.340"></status>
</kw>
<msg timestamp="20200717 22:30:11.340" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200717 22:30:11.307" endtime="20200717 22:30:11.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.341" endtime="20200717 22:30:11.341"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.227" endtime="20200717 22:30:11.341"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:30:11.226" endtime="20200717 22:30:11.341" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.348" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.345" endtime="20200717 22:30:11.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.352" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.351" endtime="20200717 22:30:11.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.352" endtime="20200717 22:30:11.353"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.345" endtime="20200717 22:30:11.353"></status>
</kw>
<msg timestamp="20200717 22:30:11.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.344" endtime="20200717 22:30:11.353"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.344" endtime="20200717 22:30:11.353"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.343" endtime="20200717 22:30:11.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.357" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.373" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200717 22:30:11.355" endtime="20200717 22:30:11.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.374" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200717 22:30:11.373" endtime="20200717 22:30:11.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.374" endtime="20200717 22:30:11.375"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.354" endtime="20200717 22:30:11.375"></status>
</kw>
<msg timestamp="20200717 22:30:11.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.354" endtime="20200717 22:30:11.375"></status>
</kw>
<msg timestamp="20200717 22:30:11.376" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200717 22:30:11.353" endtime="20200717 22:30:11.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.376" endtime="20200717 22:30:11.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.381" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.383" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.379" endtime="20200717 22:30:11.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.384" level="INFO">scm</msg>
<status status="PASS" starttime="20200717 22:30:11.383" endtime="20200717 22:30:11.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.384" endtime="20200717 22:30:11.385"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.378" endtime="20200717 22:30:11.385"></status>
</kw>
<msg timestamp="20200717 22:30:11.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.378" endtime="20200717 22:30:11.385"></status>
</kw>
<msg timestamp="20200717 22:30:11.385" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200717 22:30:11.377" endtime="20200717 22:30:11.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:30:11.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:30:11.385" endtime="20200717 22:30:11.386"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.390" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:30:11.388" endtime="20200717 22:30:11.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.401" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:30:11.400" endtime="20200717 22:30:11.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.401" endtime="20200717 22:30:11.402"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.388" endtime="20200717 22:30:11.402"></status>
</kw>
<msg timestamp="20200717 22:30:11.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.387" endtime="20200717 22:30:11.402"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.387" endtime="20200717 22:30:11.402"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.386" endtime="20200717 22:30:11.403"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.377" endtime="20200717 22:30:11.403"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.376" endtime="20200717 22:30:11.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:30:11.407" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:30:11.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:30:11.435" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200717 22:30:11.404" endtime="20200717 22:30:11.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.436" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x17a0f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQY/uXF/X6/rkhBkF0sCgAcnNuItSk7Y20MAw7Z/8/sFTJwDlhwQSQiW36kIYICdsldMjk96FBbEtmKIUXmDihaPbxKWH0MWJU1wtHfUfYmPO8JfEespijBSpyXEVMh6Ou5Cj3GlAMVAGqMRo/zyei/tty9oz1NlxxEB4urgnrgDHNLFpV7SPD2pp6PKHRNWA90t68fFL3Ziuyv/HQEzCbxkZhJAfZFQpFo6GERnDadyYO+Pp/jaASGg8nVpHvPbk2fV5zY7asq8wSCbAb1MCrRHFI3Hb4e9qdSv+8MOI3pjFcg+XZdvOJRrbf/tOW5l5uNL+J8+Eb5Aw6SaxuSOrDMUubTWTKHupIHWMIHToAMCARKigcsEgcir/RbHNU4Rz7O7lbJ4qqtIgNwphBgNW5+sdRAsn9rGv/6bBja3dyyRhwm5rsgBzgJpHyLM+BFtAKG+Udj1QiGOTwkozK98UOYKcPiub99ktk7h+VhDKZpJSBOhEHmfKbW8gFAJzRcOWuV6hKDQLcTpm781N5UrtR/1/k10i8VtLo1uK6TUh3NiMQAmxuxGYBzkWqPIC/eSe3SvDhQ1jYW6whkWbTGG6hSJCEiaoPzkkoVsrDJcsHBwQTxFWWj8dR0foBvHnkG+MQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Date: Fri, 17 Jul 2020 22:30:11 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCAk5ReOhZ6rO4a2SwSjBZGFg9mGjuy3TBudJLh+1GBmhFqoeF9o/ujVF76FOTUqwUJE8P863vFeR4IF858IMz79tQ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011429&amp;s=eD/read3UL6ehxAdWSr6+Wk6CekQ1hKY5LPz5c2Eor4="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 17 Jul 2020 21:01:10 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 22:30:11 GMT
Cache-Control: no-cache
Expires: Fri, 17 Jul 2020 22:30:11 GMT
Date: Fri, 17 Jul 2020 22:30:11 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 17 Jul 2020 22:30:11 GMT
Date: Fri, 17 Jul 2020 22:30:11 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCAk5ReOhZ6rO4a2SwSjBZGFg9mGjuy3TBudJLh+1GBmhFqoeF9o/ujVF76FOTUqwUJE8P863vFeR4IF858IMz79tQ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595061011429&amp;s=eD/read3UL6ehxAdWSr6+Wk6CekQ1hKY5LPz5c2Eor4="; Path=/; HttpOnly
Last-Modified: Fri, 17 Jul 2020 21:01:10 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200717 22:30:11.435" endtime="20200717 22:30:11.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:30:11.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:30:11.437" endtime="20200717 22:30:11.437"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.404" endtime="20200717 22:30:11.438"></status>
</kw>
<msg timestamp="20200717 22:30:11.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:30:11.403" endtime="20200717 22:30:11.438"></status>
</kw>
<msg timestamp="20200717 22:30:11.438" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200717 22:30:11.403" endtime="20200717 22:30:11.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200717 22:30:11.438" endtime="20200717 22:30:11.439"></status>
</kw>
<status status="PASS" starttime="20200717 22:30:11.343" endtime="20200717 22:30:11.439"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:30:11.342" endtime="20200717 22:30:11.439" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200717 22:30:02.488" endtime="20200717 22:30:11.440"></status>
</suite>
<status status="PASS" starttime="20200717 22:30:02.463" endtime="20200717 22:30:11.443"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
