<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:07:14.091" rpa="false">
<suite id="s1" name="hadoop27-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:14.149" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:15.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:07:15.994" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200717 21:07:14.145" endtime="20200717 21:07:15.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:15.995" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200717 21:07:15.994" endtime="20200717 21:07:15.995"></status>
</kw>
<msg timestamp="20200717 21:07:15.995" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200717 21:07:14.144" endtime="20200717 21:07:15.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:16.000" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:17.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:07:17.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:07:15.997" endtime="20200717 21:07:17.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:17.742" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:07:17.741" endtime="20200717 21:07:17.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:07:17.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:07:17.742" endtime="20200717 21:07:17.742"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:15.997" endtime="20200717 21:07:17.743"></status>
</kw>
<msg timestamp="20200717 21:07:17.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:07:15.996" endtime="20200717 21:07:17.743"></status>
</kw>
<msg timestamp="20200717 21:07:17.743" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:07:15.996" endtime="20200717 21:07:17.743"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 21:07:17.743" endtime="20200717 21:07:17.743"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:15.996" endtime="20200717 21:07:17.744"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:15.995" endtime="20200717 21:07:17.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:17.749" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:19.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:07:19.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:07:17.747" endtime="20200717 21:07:19.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:19.614" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:07:19.613" endtime="20200717 21:07:19.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:07:19.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:07:19.614" endtime="20200717 21:07:19.615"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:17.746" endtime="20200717 21:07:19.615"></status>
</kw>
<msg timestamp="20200717 21:07:19.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:07:17.745" endtime="20200717 21:07:19.615"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:17.744" endtime="20200717 21:07:19.615"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:17.744" endtime="20200717 21:07:19.616"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:17.744" endtime="20200717 21:07:19.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200717 21:07:19.616" endtime="20200717 21:07:19.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:19.620" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:21.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:07:21.489" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:07:19.475Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200717 21:07:19.618" endtime="20200717 21:07:21.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:21.491" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:07:19.475Z",
  "modificationTime" : "2020-07-17T21:07:19.475Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200717 21:07:21.490" endtime="20200717 21:07:21.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:07:21.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:07:21.491" endtime="20200717 21:07:21.492"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:19.617" endtime="20200717 21:07:21.492"></status>
</kw>
<msg timestamp="20200717 21:07:21.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:07:19.617" endtime="20200717 21:07:21.492"></status>
</kw>
<msg timestamp="20200717 21:07:21.492" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:07:19.475Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200717 21:07:19.616" endtime="20200717 21:07:21.492"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200717 21:07:21.492" endtime="20200717 21:07:21.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:21.496" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:26.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:07:26.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:07:21.494" endtime="20200717 21:07:26.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:26.235" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:07:26.235" endtime="20200717 21:07:26.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:07:26.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:07:26.235" endtime="20200717 21:07:26.236"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:21.494" endtime="20200717 21:07:26.236"></status>
</kw>
<msg timestamp="20200717 21:07:26.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:07:21.493" endtime="20200717 21:07:26.236"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:21.493" endtime="20200717 21:07:26.236"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:07:14.143" endtime="20200717 21:07:26.237" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:26.242" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:28.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:07:28.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:07:26.239" endtime="20200717 21:07:28.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:28.722" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:07:28.722" endtime="20200717 21:07:28.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:07:28.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:07:28.722" endtime="20200717 21:07:28.723"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:26.239" endtime="20200717 21:07:28.723"></status>
</kw>
<msg timestamp="20200717 21:07:28.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:07:26.239" endtime="20200717 21:07:28.724"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:26.238" endtime="20200717 21:07:28.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:07:28.727" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:07:31.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:07:31.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:07:28.725" endtime="20200717 21:07:31.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:07:31.030" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:07:31.029" endtime="20200717 21:07:31.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:07:31.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:07:31.030" endtime="20200717 21:07:31.030"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:28.725" endtime="20200717 21:07:31.031"></status>
</kw>
<msg timestamp="20200717 21:07:31.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:07:28.724" endtime="20200717 21:07:31.031"></status>
</kw>
<status status="PASS" starttime="20200717 21:07:28.724" endtime="20200717 21:07:31.031"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:07:26.237" endtime="20200717 21:07:31.031" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200717 21:07:14.092" endtime="20200717 21:07:31.032"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop27-createmrenv">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
