<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:22:13.046" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200717 21:22:13.096" endtime="20200717 21:22:13.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:22:13.101" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:22:13.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:22:13.184" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 21:22:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Jul 2020 20:56:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200717 21:22:13.098" endtime="20200717 21:22:13.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:22:13.185" level="INFO">HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 21:22:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Jul 2020 20:56:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200717 21:22:13.184" endtime="20200717 21:22:13.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:22:13.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:22:13.186" endtime="20200717 21:22:13.186"></status>
</kw>
<status status="PASS" starttime="20200717 21:22:13.098" endtime="20200717 21:22:13.187"></status>
</kw>
<msg timestamp="20200717 21:22:13.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:22:13.097" endtime="20200717 21:22:13.187"></status>
</kw>
<msg timestamp="20200717 21:22:13.187" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 17 Jul 2020 21:22:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 17 Jul 2020 20:56:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200717 21:22:13.097" endtime="20200717 21:22:13.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200717 21:22:13.187" endtime="20200717 21:22:13.187"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:22:13.095" endtime="20200717 21:22:13.188" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:22:13.189" endtime="20200717 21:22:13.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:22:13.198" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:06.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:06.262" level="INFO">${output} = 2020-07-17 21:22:14,547 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:22:14,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:22:13.190" endtime="20200717 21:23:06.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:06.263" level="INFO">2020-07-17 21:22:14,547 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:22:14,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:22:14,738 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:22:15,795 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-17 21:22:15,796 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-17 21:22:15,796 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-17 21:22:15,796 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-17 21:22:15,796 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-17 21:22:15,796 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 21:22:15,796 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-17 21:22:15,799 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-17 21:22:15,800 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 21:22:15,808 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-17 21:22:15,843 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-84110, with hadoop as owner.
2020-07-17 21:22:15,889 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-79240, with hadoop as owner.
2020-07-17 21:22:15,895 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-12468, with hadoop as owner.
2020-07-17 21:22:15,900 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-33139, with hadoop as owner.
2020-07-17 21:22:15,908 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-67226, with hadoop as owner.
2020-07-17 21:22:15,917 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84110/bucket-0-81389, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:15,955 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79240/bucket-0-01716, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:15,970 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12468/bucket-0-37239, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:15,985 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-33139/bucket-0-37226, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:15,991 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67226/bucket-0-68058, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:15,997 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84110/bucket-1-70921, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,007 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79240/bucket-1-35968, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,012 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12468/bucket-1-58543, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,023 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-33139/bucket-1-41270, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,040 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67226/bucket-1-80662, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,048 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84110/bucket-2-80040, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,053 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79240/bucket-2-18405, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,063 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12468/bucket-2-21079, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,069 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-33139/bucket-2-62587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,077 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67226/bucket-2-91590, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,082 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84110/bucket-3-39506, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,088 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79240/bucket-3-86693, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,096 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12468/bucket-3-16237, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,109 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-33139/bucket-3-50273, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,113 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67226/bucket-3-62105, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,117 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84110/bucket-4-90619, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,123 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-79240/bucket-4-65905, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,128 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-12468/bucket-4-65460, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,132 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-33139/bucket-4-80960, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,137 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67226/bucket-4-72037, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:22:16,671 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:22:16,817 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-17 21:22:17,817 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-17 21:22:18,818 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-07-17 21:22:19,818 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-07-17 21:22:20,819 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-07-17 21:22:21,820 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-07-17 21:22:22,820 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-17 21:22:23,821 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-17 21:22:24,821 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-17 21:22:25,822 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-17 21:22:26,822 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-17 21:22:27,823 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-17 21:22:28,823 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-17 21:22:29,829 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-17 21:22:30,830 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-17 21:22:31,830 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-17 21:22:32,831 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-17 21:22:33,831 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-17 21:22:34,831 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-17 21:22:35,832 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-17 21:22:36,832 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-17 21:22:37,833 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-17 21:22:38,833 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-17 21:22:39,834 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-17 21:22:40,834 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-17 21:22:41,834 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-17 21:22:42,835 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-17 21:22:43,835 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-17 21:22:44,836 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-17 21:22:45,836 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-17 21:22:46,837 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-17 21:22:47,837 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-17 21:22:48,838 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-17 21:22:49,838 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-17 21:22:50,839 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-17 21:22:51,839 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-17 21:22:52,839 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-17 21:22:53,840 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-17 21:22:54,840 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-17 21:22:55,841 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-17 21:22:56,841 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-17 21:22:57,842 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-17 21:22:58,842 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-17 21:22:59,843 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-17 21:23:00,843 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,087
Average Time spent in bucket creation: 00:00:00,128
Average Time spent in key creation: 00:00:01,638
Average Time spent in key write: 00:00:00,749
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:50,873
***************************************************</msg>
<status status="PASS" starttime="20200717 21:23:06.262" endtime="20200717 21:23:06.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:06.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:06.263" endtime="20200717 21:23:06.264"></status>
</kw>
<status status="PASS" starttime="20200717 21:22:13.190" endtime="20200717 21:23:06.264"></status>
</kw>
<msg timestamp="20200717 21:23:06.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:22:13.190" endtime="20200717 21:23:06.264"></status>
</kw>
<msg timestamp="20200717 21:23:06.265" level="INFO">${result} = 2020-07-17 21:22:14,547 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:22:14,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:22:13.189" endtime="20200717 21:23:06.265"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:06.265" endtime="20200717 21:23:06.266"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:06.265" endtime="20200717 21:23:06.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:06.266" endtime="20200717 21:23:06.267"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:22:13.188" endtime="20200717 21:23:06.267" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200717 21:22:13.072" endtime="20200717 21:23:06.268"></status>
</suite>
<suite id="s1-s2" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200717 21:23:06.280" level="INFO">${random} = 34794</msg>
<status status="PASS" starttime="20200717 21:23:06.279" endtime="20200717 21:23:06.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200717 21:23:06.281" level="INFO">${source} = 34794-source</msg>
<status status="PASS" starttime="20200717 21:23:06.280" endtime="20200717 21:23:06.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200717 21:23:06.282" level="INFO">${target} = 34794-target</msg>
<status status="PASS" starttime="20200717 21:23:06.281" endtime="20200717 21:23:06.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:06.285" level="INFO">Running command 'ozone sh volume create 34794-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:08.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:08.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:06.283" endtime="20200717 21:23:08.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:08.598" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:08.597" endtime="20200717 21:23:08.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:08.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:08.598" endtime="20200717 21:23:08.598"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:06.283" endtime="20200717 21:23:08.599"></status>
</kw>
<msg timestamp="20200717 21:23:08.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:06.283" endtime="20200717 21:23:08.599"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:06.282" endtime="20200717 21:23:08.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:08.602" level="INFO">Running command 'ozone sh volume create 34794-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:10.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:10.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:08.600" endtime="20200717 21:23:10.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:10.938" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:10.937" endtime="20200717 21:23:10.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:10.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:10.938" endtime="20200717 21:23:10.940"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:08.600" endtime="20200717 21:23:10.940"></status>
</kw>
<msg timestamp="20200717 21:23:10.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:08.600" endtime="20200717 21:23:10.940"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:08.599" endtime="20200717 21:23:10.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:10.941" endtime="20200717 21:23:10.941"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:06.279" endtime="20200717 21:23:10.941"></status>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:10.943" endtime="20200717 21:23:10.943"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:10.946" level="INFO">Running command 'ozone sh bucket link 34794-source/no-such-bucket 34794-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:13.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:13.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:10.944" endtime="20200717 21:23:13.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:13.273" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:13.272" endtime="20200717 21:23:13.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:13.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:13.273" endtime="20200717 21:23:13.274"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:10.944" endtime="20200717 21:23:13.274"></status>
</kw>
<msg timestamp="20200717 21:23:13.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:10.944" endtime="20200717 21:23:13.274"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:10.943" endtime="20200717 21:23:13.274"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:13.277" level="INFO">Running command 'ozone sh key list 34794-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:15.576" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:23:15.576" level="INFO">${output} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200717 21:23:13.275" endtime="20200717 21:23:15.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:15.577" level="INFO">BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200717 21:23:15.576" endtime="20200717 21:23:15.577"></status>
</kw>
<msg timestamp="20200717 21:23:15.577" level="INFO">${result} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200717 21:23:13.274" endtime="20200717 21:23:15.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:15.578" endtime="20200717 21:23:15.578"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:10.942" endtime="20200717 21:23:15.578" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:15.580" endtime="20200717 21:23:15.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:15.585" level="INFO">Running command 'ozone sh bucket link 34794-source/bucket1 34794-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:17.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:17.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:15.582" endtime="20200717 21:23:17.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:17.850" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:17.850" endtime="20200717 21:23:17.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:17.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:17.851" endtime="20200717 21:23:17.851"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:15.582" endtime="20200717 21:23:17.851"></status>
</kw>
<msg timestamp="20200717 21:23:17.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:15.582" endtime="20200717 21:23:17.851"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:15.581" endtime="20200717 21:23:17.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:17.855" level="INFO">Running command 'ozone sh bucket create 34794-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:20.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:20.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:17.853" endtime="20200717 21:23:20.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:20.090" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:20.090" endtime="20200717 21:23:20.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:20.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:20.091" endtime="20200717 21:23:20.091"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:17.852" endtime="20200717 21:23:20.091"></status>
</kw>
<msg timestamp="20200717 21:23:20.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:17.852" endtime="20200717 21:23:20.092"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:17.852" endtime="20200717 21:23:20.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:20.096" level="INFO">Running command 'ozone sh key put 34794-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:24.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:24.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:20.093" endtime="20200717 21:23:24.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:24.239" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:24.239" endtime="20200717 21:23:24.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:24.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:24.239" endtime="20200717 21:23:24.240"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:20.093" endtime="20200717 21:23:24.240"></status>
</kw>
<msg timestamp="20200717 21:23:24.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:20.092" endtime="20200717 21:23:24.240"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:20.092" endtime="20200717 21:23:24.240"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 21:23:24.242" level="INFO">${postfix} = 29143</msg>
<status status="PASS" starttime="20200717 21:23:24.242" endtime="20200717 21:23:24.242"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200717 21:23:24.243" level="INFO">${tmpfile} = /tmp/tempkey-29143</msg>
<status status="PASS" starttime="20200717 21:23:24.242" endtime="20200717 21:23:24.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:24.246" level="INFO">Running command 'ozone sh key get -f 34794-target/link1/key1 /tmp/tempkey-29143 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:28.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:28.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:24.244" endtime="20200717 21:23:28.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:28.232" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:28.231" endtime="20200717 21:23:28.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:28.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:28.232" endtime="20200717 21:23:28.232"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:24.244" endtime="20200717 21:23:28.232"></status>
</kw>
<msg timestamp="20200717 21:23:28.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:24.244" endtime="20200717 21:23:28.233"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:24.243" endtime="20200717 21:23:28.233"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200717 21:23:28.235" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-29143 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:28.237" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200717 21:23:28.233" endtime="20200717 21:23:28.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:28.241" level="INFO">Running command 'rm -f /tmp/tempkey-29143 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:28.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:28.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:28.239" endtime="20200717 21:23:28.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:28.245" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:28.244" endtime="20200717 21:23:28.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:28.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:28.245" endtime="20200717 21:23:28.245"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:28.239" endtime="20200717 21:23:28.246"></status>
</kw>
<msg timestamp="20200717 21:23:28.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:28.238" endtime="20200717 21:23:28.246"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:28.238" endtime="20200717 21:23:28.246"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200717 21:23:28.246" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200717 21:23:28.246" endtime="20200717 21:23:28.246"></status>
</kw>
<msg timestamp="20200717 21:23:28.247" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200717 21:23:24.241" endtime="20200717 21:23:28.247"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:28.247" endtime="20200717 21:23:28.247"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:24.241" endtime="20200717 21:23:28.247"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:15.579" endtime="20200717 21:23:28.248" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:28.249" endtime="20200717 21:23:28.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:28.253" level="INFO">Running command 'ozone sh key put 34794-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:32.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:32.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:28.250" endtime="20200717 21:23:32.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:32.255" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:32.254" endtime="20200717 21:23:32.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:32.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:32.255" endtime="20200717 21:23:32.256"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:28.250" endtime="20200717 21:23:32.256"></status>
</kw>
<msg timestamp="20200717 21:23:32.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:28.250" endtime="20200717 21:23:32.256"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:28.249" endtime="20200717 21:23:32.256"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 21:23:32.258" level="INFO">${postfix} = 71164</msg>
<status status="PASS" starttime="20200717 21:23:32.257" endtime="20200717 21:23:32.258"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200717 21:23:32.258" level="INFO">${tmpfile} = /tmp/tempkey-71164</msg>
<status status="PASS" starttime="20200717 21:23:32.258" endtime="20200717 21:23:32.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:32.262" level="INFO">Running command 'ozone sh key get -f 34794-source/bucket1/key2 /tmp/tempkey-71164 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:36.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:36.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:32.260" endtime="20200717 21:23:36.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:36.393" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:36.392" endtime="20200717 21:23:36.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:36.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:36.393" endtime="20200717 21:23:36.394"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:32.259" endtime="20200717 21:23:36.394"></status>
</kw>
<msg timestamp="20200717 21:23:36.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:32.259" endtime="20200717 21:23:36.394"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:32.258" endtime="20200717 21:23:36.394"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200717 21:23:36.398" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-71164 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:36.399" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200717 21:23:36.395" endtime="20200717 21:23:36.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:36.403" level="INFO">Running command 'rm -f /tmp/tempkey-71164 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:36.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:36.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:36.400" endtime="20200717 21:23:36.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:36.405" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:36.405" endtime="20200717 21:23:36.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:36.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:36.405" endtime="20200717 21:23:36.406"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:36.400" endtime="20200717 21:23:36.406"></status>
</kw>
<msg timestamp="20200717 21:23:36.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:36.400" endtime="20200717 21:23:36.406"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:36.399" endtime="20200717 21:23:36.406"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200717 21:23:36.407" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200717 21:23:36.406" endtime="20200717 21:23:36.407"></status>
</kw>
<msg timestamp="20200717 21:23:36.407" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200717 21:23:32.257" endtime="20200717 21:23:36.407"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:36.407" endtime="20200717 21:23:36.408"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:32.256" endtime="20200717 21:23:36.408"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:28.248" endtime="20200717 21:23:36.408" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:36.410" endtime="20200717 21:23:36.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:36.413" level="INFO">Running command 'ozone sh key list 34794-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:39.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:39.063" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200717 21:23:36.411" endtime="20200717 21:23:39.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:39.064" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200717 21:23:39.064" endtime="20200717 21:23:39.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:39.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:39.065" endtime="20200717 21:23:39.065"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:36.411" endtime="20200717 21:23:39.066"></status>
</kw>
<msg timestamp="20200717 21:23:39.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:36.411" endtime="20200717 21:23:39.066"></status>
</kw>
<msg timestamp="20200717 21:23:39.066" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20200717 21:23:36.410" endtime="20200717 21:23:39.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:39.070" level="INFO">Running command 'ozone sh key list 34794-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:41.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:41.530" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200717 21:23:39.068" endtime="20200717 21:23:41.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:41.531" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200717 21:23:41.531" endtime="20200717 21:23:41.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:41.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:41.532" endtime="20200717 21:23:41.532"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:39.067" endtime="20200717 21:23:41.532"></status>
</kw>
<msg timestamp="20200717 21:23:41.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:39.067" endtime="20200717 21:23:41.533"></status>
</kw>
<msg timestamp="20200717 21:23:41.533" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20200717 21:23:39.066" endtime="20200717 21:23:41.533"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:41.533" endtime="20200717 21:23:41.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:41.533" endtime="20200717 21:23:41.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:41.534" endtime="20200717 21:23:41.534"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:36.409" endtime="20200717 21:23:41.535" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:41.536" endtime="20200717 21:23:41.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:41.541" level="INFO">Running command 'ozone sh key delete 34794-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:43.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:43.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:41.538" endtime="20200717 21:23:43.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:43.875" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:43.874" endtime="20200717 21:23:43.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:43.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:43.875" endtime="20200717 21:23:43.876"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:41.537" endtime="20200717 21:23:43.876"></status>
</kw>
<msg timestamp="20200717 21:23:43.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:41.537" endtime="20200717 21:23:43.876"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:41.537" endtime="20200717 21:23:43.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:43.882" level="INFO">Running command 'ozone sh key list 34794-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:46.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:46.428" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200717 21:23:43.878" endtime="20200717 21:23:46.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:46.430" level="INFO">key1</msg>
<status status="PASS" starttime="20200717 21:23:46.429" endtime="20200717 21:23:46.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:46.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:46.430" endtime="20200717 21:23:46.430"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:43.877" endtime="20200717 21:23:46.431"></status>
</kw>
<msg timestamp="20200717 21:23:46.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:43.877" endtime="20200717 21:23:46.431"></status>
</kw>
<msg timestamp="20200717 21:23:46.431" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20200717 21:23:43.876" endtime="20200717 21:23:46.431"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:46.431" endtime="20200717 21:23:46.432"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:41.535" endtime="20200717 21:23:46.432" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:46.434" endtime="20200717 21:23:46.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:46.438" level="INFO">Running command 'ozone sh bucket list 34794-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:49.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:49.080" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:23:13.146Z",
  "modificationTime"...</msg>
<status status="PASS" starttime="20200717 21:23:46.436" endtime="20200717 21:23:49.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:49.081" level="INFO">{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:23:13.146Z",
  "modificationTime" : "2020-07-17T21:23:13.146Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:23:17.699Z",
  "modificationTime" : "2020-07-17T21:23:17.699Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-source",
  "sourceBucket" : "bucket1"
}</msg>
<status status="PASS" starttime="20200717 21:23:49.080" endtime="20200717 21:23:49.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:49.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:49.081" endtime="20200717 21:23:49.082"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:46.435" endtime="20200717 21:23:49.082"></status>
</kw>
<msg timestamp="20200717 21:23:49.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:46.435" endtime="20200717 21:23:49.082"></status>
</kw>
<msg timestamp="20200717 21:23:49.082" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:23:13.146Z",
  "modificationTime"...</msg>
<status status="PASS" starttime="20200717 21:23:46.435" endtime="20200717 21:23:49.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:49.082" endtime="20200717 21:23:49.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:49.083" endtime="20200717 21:23:49.083"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:46.432" endtime="20200717 21:23:49.083" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:49.085" endtime="20200717 21:23:49.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:49.090" level="INFO">Running command 'ozone sh bucket info 34794-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:51.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:51.707" level="INFO">${output} = 34794-source bucket1</msg>
<status status="PASS" starttime="20200717 21:23:49.086" endtime="20200717 21:23:51.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:51.708" level="INFO">34794-source bucket1</msg>
<status status="PASS" starttime="20200717 21:23:51.707" endtime="20200717 21:23:51.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:51.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:51.708" endtime="20200717 21:23:51.708"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:49.086" endtime="20200717 21:23:51.709"></status>
</kw>
<msg timestamp="20200717 21:23:51.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:49.086" endtime="20200717 21:23:51.709"></status>
</kw>
<msg timestamp="20200717 21:23:51.709" level="INFO">${result} = 34794-source bucket1</msg>
<status status="PASS" starttime="20200717 21:23:49.085" endtime="20200717 21:23:51.709"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:51.709" endtime="20200717 21:23:51.710"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:49.084" endtime="20200717 21:23:51.710" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:51.711" endtime="20200717 21:23:51.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:51.716" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 34794-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:54.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:54.105" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:23:51.713" endtime="20200717 21:23:54.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:54.106" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:23:54.105" endtime="20200717 21:23:54.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:54.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:54.106" endtime="20200717 21:23:54.107"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:51.713" endtime="20200717 21:23:54.107"></status>
</kw>
<msg timestamp="20200717 21:23:54.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:51.713" endtime="20200717 21:23:54.107"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:51.712" endtime="20200717 21:23:54.107"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:54.115" level="INFO">Running command 'ozone sh bucket getacl 34794-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:56.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:56.620" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200717 21:23:54.110" endtime="20200717 21:23:56.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:56.621" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200717 21:23:56.620" endtime="20200717 21:23:56.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:56.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:56.621" endtime="20200717 21:23:56.622"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:54.109" endtime="20200717 21:23:56.622"></status>
</kw>
<msg timestamp="20200717 21:23:56.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:54.109" endtime="20200717 21:23:56.622"></status>
</kw>
<msg timestamp="20200717 21:23:56.623" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200717 21:23:54.108" endtime="20200717 21:23:56.623"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:56.623" endtime="20200717 21:23:56.623"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:54.107" endtime="20200717 21:23:56.623"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:56.628" level="INFO">Running command 'ozone sh bucket getacl 34794-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:23:59.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:23:59.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:23:56.626" endtime="20200717 21:23:59.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:23:59.273" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:23:59.273" endtime="20200717 21:23:59.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:23:59.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:23:59.274" endtime="20200717 21:23:59.274"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:56.625" endtime="20200717 21:23:59.274"></status>
</kw>
<msg timestamp="20200717 21:23:59.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:56.625" endtime="20200717 21:23:59.274"></status>
</kw>
<msg timestamp="20200717 21:23:59.275" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200717 21:23:56.624" endtime="20200717 21:23:59.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:23:59.275" endtime="20200717 21:23:59.275"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:56.623" endtime="20200717 21:23:59.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:23:59.280" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 34794-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:01.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:01.623" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:23:59.277" endtime="20200717 21:24:01.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:01.624" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:24:01.623" endtime="20200717 21:24:01.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:01.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:01.624" endtime="20200717 21:24:01.624"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:59.276" endtime="20200717 21:24:01.625"></status>
</kw>
<msg timestamp="20200717 21:24:01.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:23:59.276" endtime="20200717 21:24:01.625"></status>
</kw>
<status status="PASS" starttime="20200717 21:23:59.276" endtime="20200717 21:24:01.625"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:01.631" level="INFO">Running command 'ozone sh bucket getacl 34794-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:04.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:04.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:01.628" endtime="20200717 21:24:04.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:04.351" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:04.350" endtime="20200717 21:24:04.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:04.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:04.352" endtime="20200717 21:24:04.352"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:01.627" endtime="20200717 21:24:04.352"></status>
</kw>
<msg timestamp="20200717 21:24:04.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:01.627" endtime="20200717 21:24:04.353"></status>
</kw>
<msg timestamp="20200717 21:24:04.353" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200717 21:24:01.626" endtime="20200717 21:24:04.353"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:04.353" endtime="20200717 21:24:04.353"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:01.625" endtime="20200717 21:24:04.354"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:04.358" level="INFO">Running command 'ozone sh bucket getacl 34794-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:06.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:06.979" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20200717 21:24:04.356" endtime="20200717 21:24:06.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:06.980" level="INFO">READ</msg>
<status status="PASS" starttime="20200717 21:24:06.979" endtime="20200717 21:24:06.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:06.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:06.980" endtime="20200717 21:24:06.981"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:04.355" endtime="20200717 21:24:06.981"></status>
</kw>
<msg timestamp="20200717 21:24:06.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:04.355" endtime="20200717 21:24:06.981"></status>
</kw>
<msg timestamp="20200717 21:24:06.982" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20200717 21:24:04.354" endtime="20200717 21:24:06.982"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:06.982" endtime="20200717 21:24:06.982"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:04.354" endtime="20200717 21:24:06.982"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:23:51.711" endtime="20200717 21:24:06.983" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:06.984" endtime="20200717 21:24:06.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:06.988" level="INFO">Running command 'ozone sh bucket link 34794-source/bucket2 34794-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:09.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:09.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:06.986" endtime="20200717 21:24:09.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:09.635" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:09.634" endtime="20200717 21:24:09.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:09.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:09.635" endtime="20200717 21:24:09.635"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:06.985" endtime="20200717 21:24:09.636"></status>
</kw>
<msg timestamp="20200717 21:24:09.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:06.985" endtime="20200717 21:24:09.636"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:06.985" endtime="20200717 21:24:09.636"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:09.640" level="INFO">Running command 'ozone sh bucket create 34794-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:11.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:24:11.982" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200717 21:24:09.637" endtime="20200717 21:24:11.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:11.983" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200717 21:24:11.982" endtime="20200717 21:24:11.983"></status>
</kw>
<msg timestamp="20200717 21:24:11.983" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200717 21:24:09.636" endtime="20200717 21:24:11.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:11.983" endtime="20200717 21:24:11.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:11.988" level="INFO">Running command 'ozone sh bucket create 34794-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:14.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:14.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:11.985" endtime="20200717 21:24:14.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:14.447" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:14.447" endtime="20200717 21:24:14.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:14.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:14.448" endtime="20200717 21:24:14.448"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:11.985" endtime="20200717 21:24:14.448"></status>
</kw>
<msg timestamp="20200717 21:24:14.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:11.984" endtime="20200717 21:24:14.448"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:11.984" endtime="20200717 21:24:14.449"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:14.451" level="INFO">Running command 'ozone sh bucket link 34794-source/bucket1 34794-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:16.936" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:24:16.936" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200717 21:24:14.449" endtime="20200717 21:24:16.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:16.937" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200717 21:24:16.937" endtime="20200717 21:24:16.937"></status>
</kw>
<msg timestamp="20200717 21:24:16.938" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200717 21:24:14.449" endtime="20200717 21:24:16.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.938" endtime="20200717 21:24:16.938"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:06.983" endtime="20200717 21:24:16.939" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.943" endtime="20200717 21:24:16.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.943" endtime="20200717 21:24:16.944"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:16.941" endtime="20200717 21:24:16.944" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.945" endtime="20200717 21:24:16.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.946" endtime="20200717 21:24:16.946"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:16.944" endtime="20200717 21:24:16.946" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.947" endtime="20200717 21:24:16.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.948" endtime="20200717 21:24:16.948"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:16.946" endtime="20200717 21:24:16.948" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:16.949" endtime="20200717 21:24:16.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:16.953" level="INFO">Running command 'ozone sh bucket link 34794-target/loop1 34794-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:19.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:19.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:16.951" endtime="20200717 21:24:19.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:19.279" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:19.278" endtime="20200717 21:24:19.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:19.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:19.279" endtime="20200717 21:24:19.280"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:16.951" endtime="20200717 21:24:19.280"></status>
</kw>
<msg timestamp="20200717 21:24:19.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:16.950" endtime="20200717 21:24:19.280"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:16.950" endtime="20200717 21:24:19.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:19.285" level="INFO">Running command 'ozone sh bucket link 34794-target/loop2 34794-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:21.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:21.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:19.282" endtime="20200717 21:24:21.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:21.621" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:21.620" endtime="20200717 21:24:21.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:21.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:21.621" endtime="20200717 21:24:21.622"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:19.281" endtime="20200717 21:24:21.622"></status>
</kw>
<msg timestamp="20200717 21:24:21.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:19.281" endtime="20200717 21:24:21.622"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:19.281" endtime="20200717 21:24:21.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:21.626" level="INFO">Running command 'ozone sh bucket link 34794-target/loop3 34794-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:24.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:24.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:21.624" endtime="20200717 21:24:24.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:24.011" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:24.010" endtime="20200717 21:24:24.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:24.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:24.011" endtime="20200717 21:24:24.012"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:21.623" endtime="20200717 21:24:24.012"></status>
</kw>
<msg timestamp="20200717 21:24:24.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:21.623" endtime="20200717 21:24:24.012"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:21.622" endtime="20200717 21:24:24.012"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:24.016" level="INFO">Running command 'ozone sh key list 34794-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:26.284" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:24:26.284" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200717 21:24:24.013" endtime="20200717 21:24:26.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:26.285" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200717 21:24:26.285" endtime="20200717 21:24:26.285"></status>
</kw>
<msg timestamp="20200717 21:24:26.286" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200717 21:24:24.012" endtime="20200717 21:24:26.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:26.286" endtime="20200717 21:24:26.286"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:16.948" endtime="20200717 21:24:26.287" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:26.288" endtime="20200717 21:24:26.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:26.293" level="INFO">Running command 'ozone sh bucket link 34794-source/bucket1 34794-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:28.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:28.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:26.290" endtime="20200717 21:24:28.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:28.645" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:28.645" endtime="20200717 21:24:28.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:28.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:28.646" endtime="20200717 21:24:28.646"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:26.289" endtime="20200717 21:24:28.646"></status>
</kw>
<msg timestamp="20200717 21:24:28.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:26.289" endtime="20200717 21:24:28.647"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:26.289" endtime="20200717 21:24:28.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:28.651" level="INFO">Running command 'ozone sh key put 34794-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:32.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:32.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:28.648" endtime="20200717 21:24:32.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:32.898" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:32.897" endtime="20200717 21:24:32.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:32.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:32.898" endtime="20200717 21:24:32.899"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:28.648" endtime="20200717 21:24:32.899"></status>
</kw>
<msg timestamp="20200717 21:24:32.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:28.647" endtime="20200717 21:24:32.899"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:28.647" endtime="20200717 21:24:32.899"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 21:24:32.901" level="INFO">${postfix} = 68613</msg>
<status status="PASS" starttime="20200717 21:24:32.900" endtime="20200717 21:24:32.901"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200717 21:24:32.901" level="INFO">${tmpfile} = /tmp/tempkey-68613</msg>
<status status="PASS" starttime="20200717 21:24:32.901" endtime="20200717 21:24:32.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:32.906" level="INFO">Running command 'ozone sh key get -f 34794-target/link1/key3 /tmp/tempkey-68613 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:36.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:36.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:32.903" endtime="20200717 21:24:36.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:36.764" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:36.763" endtime="20200717 21:24:36.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:36.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:36.764" endtime="20200717 21:24:36.765"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:32.902" endtime="20200717 21:24:36.765"></status>
</kw>
<msg timestamp="20200717 21:24:36.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:32.902" endtime="20200717 21:24:36.765"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:32.901" endtime="20200717 21:24:36.765"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200717 21:24:36.769" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-68613 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:36.770" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200717 21:24:36.765" endtime="20200717 21:24:36.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:36.775" level="INFO">Running command 'rm -f /tmp/tempkey-68613 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:36.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:36.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:36.772" endtime="20200717 21:24:36.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:36.777" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:36.776" endtime="20200717 21:24:36.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:36.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:36.777" endtime="20200717 21:24:36.778"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:36.771" endtime="20200717 21:24:36.778"></status>
</kw>
<msg timestamp="20200717 21:24:36.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:36.771" endtime="20200717 21:24:36.778"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:36.770" endtime="20200717 21:24:36.778"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200717 21:24:36.779" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200717 21:24:36.778" endtime="20200717 21:24:36.779"></status>
</kw>
<msg timestamp="20200717 21:24:36.779" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200717 21:24:32.900" endtime="20200717 21:24:36.779"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:36.779" endtime="20200717 21:24:36.780"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:32.899" endtime="20200717 21:24:36.780"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:26.287" endtime="20200717 21:24:36.780" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:36.782" endtime="20200717 21:24:36.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:36.786" level="INFO">Running command 'ozone sh bucket delete 34794-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:38.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:38.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:36.783" endtime="20200717 21:24:38.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:38.982" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:38.982" endtime="20200717 21:24:38.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:38.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:38.982" endtime="20200717 21:24:38.983"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:36.783" endtime="20200717 21:24:38.983"></status>
</kw>
<msg timestamp="20200717 21:24:38.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:36.783" endtime="20200717 21:24:38.983"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:36.782" endtime="20200717 21:24:38.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:38.988" level="INFO">Running command 'ozone sh bucket list 34794-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:41.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:41.484" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:14.338Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20200717 21:24:38.985" endtime="20200717 21:24:41.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:41.485" level="INFO">{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:14.338Z",
  "modificationTime" : "2020-07-17T21:24:14.338Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:23:13.146Z",
  "modificationTime" : "2020-07-17T21:23:13.146Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:09.460Z",
  "modificationTime" : "2020-07-17T21:24:09.460Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:28.509Z",
  "modificationTime" : "2020-07-17T21:24:28.509Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:23.947Z",
  "modificationTime" : "2020-07-17T21:24:23.947Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:19.206Z",
  "modificationTime" : "2020-07-17T21:24:19.206Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:21.571Z",
  "modificationTime" : "2020-07-17T21:24:21.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "34794-target",
  "sourceBucket" : "loop2"
}</msg>
<status status="PASS" starttime="20200717 21:24:41.484" endtime="20200717 21:24:41.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:41.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:41.485" endtime="20200717 21:24:41.486"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:38.984" endtime="20200717 21:24:41.486"></status>
</kw>
<msg timestamp="20200717 21:24:41.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:38.984" endtime="20200717 21:24:41.486"></status>
</kw>
<msg timestamp="20200717 21:24:41.487" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "34794-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:24:14.338Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20200717 21:24:38.984" endtime="20200717 21:24:41.487"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:41.487" endtime="20200717 21:24:41.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:41.492" level="INFO">Running command 'ozone sh key list 34794-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:43.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:43.982" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20200717 21:24:41.489" endtime="20200717 21:24:43.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:43.983" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20200717 21:24:43.983" endtime="20200717 21:24:43.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:43.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:43.983" endtime="20200717 21:24:43.984"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:41.488" endtime="20200717 21:24:43.984"></status>
</kw>
<msg timestamp="20200717 21:24:43.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:41.488" endtime="20200717 21:24:43.984"></status>
</kw>
<msg timestamp="20200717 21:24:43.985" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20200717 21:24:41.487" endtime="20200717 21:24:43.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:43.985" endtime="20200717 21:24:43.985"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:36.781" endtime="20200717 21:24:43.985" critical="yes"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20200717 21:23:06.269" endtime="20200717 21:24:43.988"></status>
</suite>
<suite id="s1-s3" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200717 21:24:44.000" level="INFO">${random} = 30263</msg>
<status status="PASS" starttime="20200717 21:24:43.999" endtime="20200717 21:24:44.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200717 21:24:44.000" level="INFO">${prefix} = 30263</msg>
<status status="PASS" starttime="20200717 21:24:44.000" endtime="20200717 21:24:44.000"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:43.999" endtime="20200717 21:24:44.000"></status>
</kw>
<test id="s1-s3-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:44.001" endtime="20200717 21:24:44.001"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:44.004" level="INFO">Running command 'ozone sh volume info o3://om:9862/30263-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:46.402" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:24:46.402" level="INFO">${output} = VOLUME_NOT_FOUND Volume 30263-rpcwoport is not found</msg>
<status status="PASS" starttime="20200717 21:24:44.002" endtime="20200717 21:24:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:46.403" level="INFO">VOLUME_NOT_FOUND Volume 30263-rpcwoport is not found</msg>
<status status="PASS" starttime="20200717 21:24:46.403" endtime="20200717 21:24:46.403"></status>
</kw>
<msg timestamp="20200717 21:24:46.404" level="INFO">${result} = VOLUME_NOT_FOUND Volume 30263-rpcwoport is not found</msg>
<status status="PASS" starttime="20200717 21:24:44.002" endtime="20200717 21:24:46.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:46.404" endtime="20200717 21:24:46.404"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:46.408" level="INFO">Running command 'ozone sh volume create o3://om:9862/30263-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:48.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:48.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:46.406" endtime="20200717 21:24:48.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:48.826" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:24:48.825" endtime="20200717 21:24:48.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:48.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:48.826" endtime="20200717 21:24:48.827"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:46.405" endtime="20200717 21:24:48.827"></status>
</kw>
<msg timestamp="20200717 21:24:48.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:46.405" endtime="20200717 21:24:48.827"></status>
</kw>
<msg timestamp="20200717 21:24:48.827" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:24:46.404" endtime="20200717 21:24:48.827"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:48.827" endtime="20200717 21:24:48.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:48.831" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="30263-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:51.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:51.487" level="INFO">${output} = {
  "metadata": {},
  "name": "30263-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:24:48.670Z",
  "modificationTime": "2020-07-17T21:24:48.670Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200717 21:24:48.829" endtime="20200717 21:24:51.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:51.488" level="INFO">{
  "metadata": {},
  "name": "30263-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:24:48.670Z",
  "modificationTime": "2020-07-17T21:24:48.670Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200717 21:24:51.488" endtime="20200717 21:24:51.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:51.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:51.489" endtime="20200717 21:24:51.489"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:48.829" endtime="20200717 21:24:51.489"></status>
</kw>
<msg timestamp="20200717 21:24:51.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:48.828" endtime="20200717 21:24:51.490"></status>
</kw>
<msg timestamp="20200717 21:24:51.490" level="INFO">${result} = {
  "metadata": {},
  "name": "30263-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:24:48.670Z",
  "modificationTime": "2020-07-17T21:24:48.670Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200717 21:24:48.828" endtime="20200717 21:24:51.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:51.490" endtime="20200717 21:24:51.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:51.494" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="30263-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:54.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:54.085" level="INFO">${output} = {
  "metadata": {},
  "name": "30263-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:24:48.670Z",
  "modificationTime": "2020-07-17T21:24:48.670Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200717 21:24:51.493" endtime="20200717 21:24:54.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:54.086" level="INFO">{
  "metadata": {},
  "name": "30263-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:24:48.670Z",
  "modificationTime": "2020-07-17T21:24:48.670Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200717 21:24:54.085" endtime="20200717 21:24:54.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:54.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:54.087" endtime="20200717 21:24:54.087"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:51.492" endtime="20200717 21:24:54.087"></status>
</kw>
<msg timestamp="20200717 21:24:54.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:51.492" endtime="20200717 21:24:54.088"></status>
</kw>
<msg timestamp="20200717 21:24:54.088" level="INFO">${result} = {
  "metadata": {},
  "name": "30263-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:24:48.670Z",
  "modificationTime": "2020-07-17T21:24:48.670Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200717 21:24:51.491" endtime="20200717 21:24:54.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:54.088" endtime="20200717 21:24:54.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:54.103" level="INFO">Running command 'ozone sh volume update o3://om:9862/30263-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:56.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:56.532" level="INFO">${output} = {
  "metadata" : { },
  "name" : "30263-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-17T21:24:48.670Z",
  "modificationTime" : "2020-07-17T21:24:56.182Z",
  "acl...</msg>
<status status="PASS" starttime="20200717 21:24:54.090" endtime="20200717 21:24:56.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:56.533" level="INFO">{
  "metadata" : { },
  "name" : "30263-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-17T21:24:48.670Z",
  "modificationTime" : "2020-07-17T21:24:56.182Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200717 21:24:56.532" endtime="20200717 21:24:56.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:56.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:56.533" endtime="20200717 21:24:56.534"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:54.090" endtime="20200717 21:24:56.534"></status>
</kw>
<msg timestamp="20200717 21:24:56.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:54.089" endtime="20200717 21:24:56.534"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:54.089" endtime="20200717 21:24:56.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:56.539" level="INFO">Running command 'ozone sh volume info o3://om:9862/30263-rpcwoport | jq -r '. | select(.name=="30263-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:24:59.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:24:59.187" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200717 21:24:56.536" endtime="20200717 21:24:59.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:24:59.188" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200717 21:24:59.187" endtime="20200717 21:24:59.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:24:59.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:24:59.188" endtime="20200717 21:24:59.189"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:56.535" endtime="20200717 21:24:59.189"></status>
</kw>
<msg timestamp="20200717 21:24:59.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:56.535" endtime="20200717 21:24:59.189"></status>
</kw>
<msg timestamp="20200717 21:24:59.189" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200717 21:24:56.534" endtime="20200717 21:24:59.189"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200717 21:24:59.190" endtime="20200717 21:24:59.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:24:59.194" level="INFO">Running command 'ozone sh bucket create o3://om:9862/30263-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:01.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:01.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:24:59.191" endtime="20200717 21:25:01.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:01.536" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:01.535" endtime="20200717 21:25:01.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:01.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:01.537" endtime="20200717 21:25:01.537"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:59.191" endtime="20200717 21:25:01.537"></status>
</kw>
<msg timestamp="20200717 21:25:01.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:24:59.191" endtime="20200717 21:25:01.538"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:59.190" endtime="20200717 21:25:01.538"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:01.543" level="INFO">Running command 'ozone sh bucket info o3://om:9862/30263-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:04.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:04.123" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200717 21:25:01.540" endtime="20200717 21:25:04.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:04.124" level="INFO">DISK</msg>
<status status="PASS" starttime="20200717 21:25:04.123" endtime="20200717 21:25:04.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:04.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:04.124" endtime="20200717 21:25:04.125"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:01.539" endtime="20200717 21:25:04.125"></status>
</kw>
<msg timestamp="20200717 21:25:04.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:01.539" endtime="20200717 21:25:04.125"></status>
</kw>
<msg timestamp="20200717 21:25:04.125" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200717 21:25:01.538" endtime="20200717 21:25:04.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:04.125" endtime="20200717 21:25:04.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:04.131" level="INFO">Running command 'ozone sh bucket list o3://om:9862/30263-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:06.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:06.625" level="INFO">${output} = 30263-rpcwoport</msg>
<status status="PASS" starttime="20200717 21:25:04.127" endtime="20200717 21:25:06.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:06.627" level="INFO">30263-rpcwoport</msg>
<status status="PASS" starttime="20200717 21:25:06.626" endtime="20200717 21:25:06.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:06.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:06.627" endtime="20200717 21:25:06.627"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:04.127" endtime="20200717 21:25:06.628"></status>
</kw>
<msg timestamp="20200717 21:25:06.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:04.127" endtime="20200717 21:25:06.628"></status>
</kw>
<msg timestamp="20200717 21:25:06.628" level="INFO">${result} = 30263-rpcwoport</msg>
<status status="PASS" starttime="20200717 21:25:04.126" endtime="20200717 21:25:06.628"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:06.628" endtime="20200717 21:25:06.629"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:06.633" level="INFO">Running command 'ozone sh key put o3://om:9862/30263-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:10.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:10.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:06.631" endtime="20200717 21:25:10.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:10.707" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:10.706" endtime="20200717 21:25:10.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:10.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:10.707" endtime="20200717 21:25:10.708"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:06.631" endtime="20200717 21:25:10.708"></status>
</kw>
<msg timestamp="20200717 21:25:10.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:06.630" endtime="20200717 21:25:10.708"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:06.630" endtime="20200717 21:25:10.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:10.713" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:10.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:10.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:10.710" endtime="20200717 21:25:10.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:10.715" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:10.715" endtime="20200717 21:25:10.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:10.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:10.715" endtime="20200717 21:25:10.716"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:10.709" endtime="20200717 21:25:10.716"></status>
</kw>
<msg timestamp="20200717 21:25:10.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:10.709" endtime="20200717 21:25:10.716"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:10.709" endtime="20200717 21:25:10.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:10.721" level="INFO">Running command 'ozone sh key get o3://om:9862/30263-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:14.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:14.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:10.718" endtime="20200717 21:25:14.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:14.737" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:14.737" endtime="20200717 21:25:14.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:14.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:14.737" endtime="20200717 21:25:14.738"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:10.717" endtime="20200717 21:25:14.738"></status>
</kw>
<msg timestamp="20200717 21:25:14.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:10.717" endtime="20200717 21:25:14.738"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:10.717" endtime="20200717 21:25:14.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:14.742" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:14.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:14.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:14.740" endtime="20200717 21:25:14.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:14.745" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:14.745" endtime="20200717 21:25:14.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:14.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:14.746" endtime="20200717 21:25:14.746"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:14.739" endtime="20200717 21:25:14.746"></status>
</kw>
<msg timestamp="20200717 21:25:14.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:14.739" endtime="20200717 21:25:14.747"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:14.739" endtime="20200717 21:25:14.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:14.750" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/30263-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:18.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:18.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:14.748" endtime="20200717 21:25:18.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:18.960" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:18.959" endtime="20200717 21:25:18.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:18.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:18.960" endtime="20200717 21:25:18.961"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:14.748" endtime="20200717 21:25:18.961"></status>
</kw>
<msg timestamp="20200717 21:25:18.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:14.748" endtime="20200717 21:25:18.962"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:14.747" endtime="20200717 21:25:18.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:18.965" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:18.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:18.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:18.963" endtime="20200717 21:25:18.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:18.968" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:18.968" endtime="20200717 21:25:18.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:18.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:18.969" endtime="20200717 21:25:18.969"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:18.963" endtime="20200717 21:25:18.969"></status>
</kw>
<msg timestamp="20200717 21:25:18.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:18.962" endtime="20200717 21:25:18.970"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:18.962" endtime="20200717 21:25:18.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:18.973" level="INFO">Running command 'ozone sh key get o3://om:9862/30263-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:23.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:23.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:18.971" endtime="20200717 21:25:23.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:23.025" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:23.024" endtime="20200717 21:25:23.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:23.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:23.026" endtime="20200717 21:25:23.026"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:18.971" endtime="20200717 21:25:23.026"></status>
</kw>
<msg timestamp="20200717 21:25:23.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:18.970" endtime="20200717 21:25:23.027"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:18.970" endtime="20200717 21:25:23.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:23.032" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:23.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:23.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:23.028" endtime="20200717 21:25:23.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:23.034" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:23.034" endtime="20200717 21:25:23.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:23.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:23.034" endtime="20200717 21:25:23.035"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:23.028" endtime="20200717 21:25:23.035"></status>
</kw>
<msg timestamp="20200717 21:25:23.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:23.027" endtime="20200717 21:25:23.035"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:23.027" endtime="20200717 21:25:23.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:23.040" level="INFO">Running command 'ozone sh key info o3://om:9862/30263-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:25.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:25.634" level="INFO">${output} = {
  "volumeName": "30263-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:25:16.986Z",
  "modificationTime": "2020-07-17T21:25:18.586Z",...</msg>
<status status="PASS" starttime="20200717 21:25:23.037" endtime="20200717 21:25:25.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:25.636" level="INFO">{
  "volumeName": "30263-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:25:16.986Z",
  "modificationTime": "2020-07-17T21:25:18.586Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104531303922532480,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200717 21:25:25.635" endtime="20200717 21:25:25.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:25.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:25.636" endtime="20200717 21:25:25.637"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:23.036" endtime="20200717 21:25:25.637"></status>
</kw>
<msg timestamp="20200717 21:25:25.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:23.036" endtime="20200717 21:25:25.637"></status>
</kw>
<msg timestamp="20200717 21:25:25.637" level="INFO">${result} = {
  "volumeName": "30263-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:25:16.986Z",
  "modificationTime": "2020-07-17T21:25:18.586Z",...</msg>
<status status="PASS" starttime="20200717 21:25:23.035" endtime="20200717 21:25:25.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:25.638" endtime="20200717 21:25:25.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:25.642" level="INFO">Running command 'ozone sh key delete o3://om:9862/30263-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:28.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:28.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:25.639" endtime="20200717 21:25:28.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:28.140" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:28.140" endtime="20200717 21:25:28.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:28.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:28.140" endtime="20200717 21:25:28.141"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:25.639" endtime="20200717 21:25:28.141"></status>
</kw>
<msg timestamp="20200717 21:25:28.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:25.639" endtime="20200717 21:25:28.141"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:25.638" endtime="20200717 21:25:28.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:28.146" level="INFO">Running command 'ozone sh key cp o3://om:9862/30263-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:32.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:32.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:28.143" endtime="20200717 21:25:32.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:32.804" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:32.803" endtime="20200717 21:25:32.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:32.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:32.804" endtime="20200717 21:25:32.805"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:28.143" endtime="20200717 21:25:32.805"></status>
</kw>
<msg timestamp="20200717 21:25:32.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:28.142" endtime="20200717 21:25:32.805"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:28.142" endtime="20200717 21:25:32.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:32.809" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:32.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:32.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:32.807" endtime="20200717 21:25:32.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:32.812" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:32.812" endtime="20200717 21:25:32.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:32.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:32.813" endtime="20200717 21:25:32.813"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:32.806" endtime="20200717 21:25:32.813"></status>
</kw>
<msg timestamp="20200717 21:25:32.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:32.806" endtime="20200717 21:25:32.813"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:32.806" endtime="20200717 21:25:32.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:32.818" level="INFO">Running command 'ozone sh key get o3://om:9862/30263-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:36.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:36.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:32.815" endtime="20200717 21:25:36.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:36.631" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:36.630" endtime="20200717 21:25:36.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:36.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:36.631" endtime="20200717 21:25:36.631"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:32.814" endtime="20200717 21:25:36.632"></status>
</kw>
<msg timestamp="20200717 21:25:36.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:32.814" endtime="20200717 21:25:36.632"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:32.814" endtime="20200717 21:25:36.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:36.636" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:36.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:36.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:36.633" endtime="20200717 21:25:36.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:36.639" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:36.638" endtime="20200717 21:25:36.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:36.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:36.639" endtime="20200717 21:25:36.639"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:36.633" endtime="20200717 21:25:36.640"></status>
</kw>
<msg timestamp="20200717 21:25:36.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:36.633" endtime="20200717 21:25:36.640"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:36.632" endtime="20200717 21:25:36.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:36.644" level="INFO">Running command 'ozone sh key delete o3://om:9862/30263-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:38.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:38.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:36.642" endtime="20200717 21:25:38.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:38.902" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:38.901" endtime="20200717 21:25:38.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:38.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:38.902" endtime="20200717 21:25:38.902"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:36.641" endtime="20200717 21:25:38.903"></status>
</kw>
<msg timestamp="20200717 21:25:38.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:36.641" endtime="20200717 21:25:38.903"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:36.640" endtime="20200717 21:25:38.903"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:38.906" level="INFO">Running command 'ozone sh key get o3://om:9862/30263-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:41.204" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:25:41.204" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:25:38.904" endtime="20200717 21:25:41.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:41.205" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:25:41.205" endtime="20200717 21:25:41.205"></status>
</kw>
<msg timestamp="20200717 21:25:41.206" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:25:38.903" endtime="20200717 21:25:41.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:41.206" endtime="20200717 21:25:41.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:41.210" level="INFO">Running command 'ozone sh key get --force o3://om:9862/30263-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:44.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:44.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:41.208" endtime="20200717 21:25:44.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:44.969" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:44.968" endtime="20200717 21:25:44.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:44.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:44.969" endtime="20200717 21:25:44.970"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:41.207" endtime="20200717 21:25:44.970"></status>
</kw>
<msg timestamp="20200717 21:25:44.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:41.207" endtime="20200717 21:25:44.970"></status>
</kw>
<msg timestamp="20200717 21:25:44.971" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:25:41.206" endtime="20200717 21:25:44.971"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:44.971" endtime="20200717 21:25:44.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:44.975" level="INFO">Running command 'ozone sh key info o3://om:9862/30263-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:47.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:47.544" level="INFO">${output} = {
  "volumeName": "30263-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:25:08.821Z",
  "modificationTime": "2020-07-17T21:25:10.264Z",
  "re...</msg>
<status status="PASS" starttime="20200717 21:25:44.973" endtime="20200717 21:25:47.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:47.545" level="INFO">{
  "volumeName": "30263-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:25:08.821Z",
  "modificationTime": "2020-07-17T21:25:10.264Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104531303387627650,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200717 21:25:47.545" endtime="20200717 21:25:47.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:47.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:47.546" endtime="20200717 21:25:47.546"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:44.973" endtime="20200717 21:25:47.547"></status>
</kw>
<msg timestamp="20200717 21:25:47.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:44.972" endtime="20200717 21:25:47.547"></status>
</kw>
<msg timestamp="20200717 21:25:47.547" level="INFO">${result} = {
  "volumeName": "30263-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:25:08.821Z",
  "modificationTime": "2020-07-17T21:25:10.264Z",
  "re...</msg>
<status status="PASS" starttime="20200717 21:25:44.971" endtime="20200717 21:25:47.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:47.547" endtime="20200717 21:25:47.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:47.552" level="INFO">Running command 'ozone sh key list o3://om:9862/30263-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:50.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:50.123" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200717 21:25:47.549" endtime="20200717 21:25:50.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:50.124" level="INFO">key1</msg>
<status status="PASS" starttime="20200717 21:25:50.123" endtime="20200717 21:25:50.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:50.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:50.124" endtime="20200717 21:25:50.124"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:47.549" endtime="20200717 21:25:50.125"></status>
</kw>
<msg timestamp="20200717 21:25:50.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:47.548" endtime="20200717 21:25:50.125"></status>
</kw>
<msg timestamp="20200717 21:25:50.125" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200717 21:25:47.548" endtime="20200717 21:25:50.125"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:50.125" endtime="20200717 21:25:50.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:50.130" level="INFO">Running command 'ozone sh key rename o3://om:9862/30263-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:52.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:52.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:50.127" endtime="20200717 21:25:52.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:52.609" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:52.608" endtime="20200717 21:25:52.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:52.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:52.609" endtime="20200717 21:25:52.609"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:50.127" endtime="20200717 21:25:52.610"></status>
</kw>
<msg timestamp="20200717 21:25:52.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:50.126" endtime="20200717 21:25:52.610"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:50.126" endtime="20200717 21:25:52.610"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:52.613" level="INFO">Running command 'ozone sh key list o3://om:9862/30263-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:55.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:55.180" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200717 21:25:52.611" endtime="20200717 21:25:55.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:55.182" level="INFO">key2</msg>
<status status="PASS" starttime="20200717 21:25:55.181" endtime="20200717 21:25:55.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:55.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:55.182" endtime="20200717 21:25:55.182"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:52.611" endtime="20200717 21:25:55.183"></status>
</kw>
<msg timestamp="20200717 21:25:55.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:52.611" endtime="20200717 21:25:55.183"></status>
</kw>
<msg timestamp="20200717 21:25:55.183" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200717 21:25:52.610" endtime="20200717 21:25:55.183"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:25:55.183" endtime="20200717 21:25:55.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:55.187" level="INFO">Running command 'ozone sh key delete o3://om:9862/30263-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:57.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:57.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:55.185" endtime="20200717 21:25:57.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:57.593" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:57.592" endtime="20200717 21:25:57.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:57.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:57.593" endtime="20200717 21:25:57.594"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:55.185" endtime="20200717 21:25:57.594"></status>
</kw>
<msg timestamp="20200717 21:25:57.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:55.184" endtime="20200717 21:25:57.594"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:55.184" endtime="20200717 21:25:57.595"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:06.629" endtime="20200717 21:25:57.595"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:06.629" endtime="20200717 21:25:57.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:57.600" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/30263-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:25:59.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:25:59.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:25:57.598" endtime="20200717 21:25:59.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:25:59.800" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:25:59.799" endtime="20200717 21:25:59.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:25:59.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:25:59.800" endtime="20200717 21:25:59.801"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:57.597" endtime="20200717 21:25:59.801"></status>
</kw>
<msg timestamp="20200717 21:25:59.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:57.596" endtime="20200717 21:25:59.801"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:57.595" endtime="20200717 21:25:59.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:25:59.806" level="INFO">Running command 'ozone sh volume delete o3://om:9862/30263-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:02.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:02.143" level="INFO">${output} = Volume 30263-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200717 21:25:59.803" endtime="20200717 21:26:02.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:02.144" level="INFO">Volume 30263-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200717 21:26:02.143" endtime="20200717 21:26:02.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:02.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:02.144" endtime="20200717 21:26:02.145"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:59.802" endtime="20200717 21:26:02.145"></status>
</kw>
<msg timestamp="20200717 21:26:02.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:25:59.802" endtime="20200717 21:26:02.146"></status>
</kw>
<status status="PASS" starttime="20200717 21:25:59.801" endtime="20200717 21:26:02.146"></status>
</kw>
<status status="PASS" starttime="20200717 21:24:44.002" endtime="20200717 21:26:02.146"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:24:44.001" endtime="20200717 21:26:02.146" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:02.148" endtime="20200717 21:26:02.148"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:02.159" level="INFO">Running command 'ozone sh volume create o3://om:9862/30263-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:04.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:04.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:26:02.154" endtime="20200717 21:26:04.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:04.389" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:26:04.388" endtime="20200717 21:26:04.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:04.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:04.389" endtime="20200717 21:26:04.390"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:02.154" endtime="20200717 21:26:04.391"></status>
</kw>
<msg timestamp="20200717 21:26:04.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:02.152" endtime="20200717 21:26:04.391"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:02.151" endtime="20200717 21:26:04.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:04.394" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30263-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:06.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:06.618" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:04.392" endtime="20200717 21:26:06.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:06.619" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:06.618" endtime="20200717 21:26:06.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:06.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:06.619" endtime="20200717 21:26:06.620"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:04.392" endtime="20200717 21:26:06.620"></status>
</kw>
<msg timestamp="20200717 21:26:06.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:04.392" endtime="20200717 21:26:06.620"></status>
</kw>
<msg timestamp="20200717 21:26:06.620" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:04.391" endtime="20200717 21:26:06.620"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:06.620" endtime="20200717 21:26:06.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:06.626" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/30263-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:09.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:09.038" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200717 21:26:06.623" endtime="20200717 21:26:09.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:09.040" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200717 21:26:09.039" endtime="20200717 21:26:09.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:09.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:09.040" endtime="20200717 21:26:09.040"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:06.622" endtime="20200717 21:26:09.041"></status>
</kw>
<msg timestamp="20200717 21:26:09.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:06.622" endtime="20200717 21:26:09.041"></status>
</kw>
<msg timestamp="20200717 21:26:09.041" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200717 21:26:06.621" endtime="20200717 21:26:09.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:09.045" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30263-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:11.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:11.505" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:09.043" endtime="20200717 21:26:11.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:11.506" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:11.505" endtime="20200717 21:26:11.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:11.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:11.506" endtime="20200717 21:26:11.507"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:09.042" endtime="20200717 21:26:11.507"></status>
</kw>
<msg timestamp="20200717 21:26:11.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:09.042" endtime="20200717 21:26:11.507"></status>
</kw>
<msg timestamp="20200717 21:26:11.508" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:09.041" endtime="20200717 21:26:11.508"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:11.508" endtime="20200717 21:26:11.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:11.512" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/30263-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:14.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:14.131" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200717 21:26:11.510" endtime="20200717 21:26:14.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:14.133" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200717 21:26:14.132" endtime="20200717 21:26:14.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:14.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:14.133" endtime="20200717 21:26:14.134"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:11.510" endtime="20200717 21:26:14.134"></status>
</kw>
<msg timestamp="20200717 21:26:14.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:11.509" endtime="20200717 21:26:14.135"></status>
</kw>
<msg timestamp="20200717 21:26:14.135" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200717 21:26:11.509" endtime="20200717 21:26:14.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:14.140" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30263-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:16.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:16.802" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:14.137" endtime="20200717 21:26:16.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:16.803" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:16.802" endtime="20200717 21:26:16.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:16.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:16.803" endtime="20200717 21:26:16.803"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:14.136" endtime="20200717 21:26:16.804"></status>
</kw>
<msg timestamp="20200717 21:26:16.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:14.136" endtime="20200717 21:26:16.804"></status>
</kw>
<msg timestamp="20200717 21:26:16.804" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:14.135" endtime="20200717 21:26:16.804"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:16.804" endtime="20200717 21:26:16.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:16.809" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/30263-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:19.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:19.343" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:16.807" endtime="20200717 21:26:19.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:19.344" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:19.343" endtime="20200717 21:26:19.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:19.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:19.345" endtime="20200717 21:26:19.345"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:16.806" endtime="20200717 21:26:19.346"></status>
</kw>
<msg timestamp="20200717 21:26:19.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:16.806" endtime="20200717 21:26:19.346"></status>
</kw>
<msg timestamp="20200717 21:26:19.346" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:16.805" endtime="20200717 21:26:19.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:19.351" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30263-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:21.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:21.781" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200717 21:26:19.348" endtime="20200717 21:26:21.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:21.782" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:21.782" endtime="20200717 21:26:21.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:21.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:21.783" endtime="20200717 21:26:21.783"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:19.347" endtime="20200717 21:26:21.783"></status>
</kw>
<msg timestamp="20200717 21:26:21.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:19.347" endtime="20200717 21:26:21.784"></status>
</kw>
<msg timestamp="20200717 21:26:21.784" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200717 21:26:19.346" endtime="20200717 21:26:21.784"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:21.784" endtime="20200717 21:26:21.785"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:21.785" endtime="20200717 21:26:21.785"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:02.148" endtime="20200717 21:26:21.786"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:26:02.147" endtime="20200717 21:26:21.786" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:21.788" endtime="20200717 21:26:21.789"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:21.793" level="INFO">Running command 'ozone sh bucket create o3://om:9862/30263-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:24.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:24.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:26:21.791" endtime="20200717 21:26:24.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:24.305" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:26:24.304" endtime="20200717 21:26:24.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:24.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:24.305" endtime="20200717 21:26:24.306"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:21.790" endtime="20200717 21:26:24.306"></status>
</kw>
<msg timestamp="20200717 21:26:24.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:21.790" endtime="20200717 21:26:24.306"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:21.790" endtime="20200717 21:26:24.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:24.311" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30263-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:26.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:26.803" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:24.308" endtime="20200717 21:26:26.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:26.804" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:26.803" endtime="20200717 21:26:26.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:26.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:26.804" endtime="20200717 21:26:26.805"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:24.307" endtime="20200717 21:26:26.805"></status>
</kw>
<msg timestamp="20200717 21:26:26.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:24.307" endtime="20200717 21:26:26.805"></status>
</kw>
<msg timestamp="20200717 21:26:26.805" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:24.307" endtime="20200717 21:26:26.805"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:26.806" endtime="20200717 21:26:26.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:26.810" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/30263-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:29.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:29.103" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200717 21:26:26.807" endtime="20200717 21:26:29.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:29.105" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200717 21:26:29.104" endtime="20200717 21:26:29.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:29.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:29.105" endtime="20200717 21:26:29.105"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:26.807" endtime="20200717 21:26:29.106"></status>
</kw>
<msg timestamp="20200717 21:26:29.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:26.807" endtime="20200717 21:26:29.106"></status>
</kw>
<msg timestamp="20200717 21:26:29.106" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200717 21:26:26.806" endtime="20200717 21:26:29.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:29.112" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30263-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:31.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:31.656" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:29.108" endtime="20200717 21:26:31.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:31.658" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:31.657" endtime="20200717 21:26:31.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:31.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:31.658" endtime="20200717 21:26:31.658"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:29.107" endtime="20200717 21:26:31.659"></status>
</kw>
<msg timestamp="20200717 21:26:31.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:29.107" endtime="20200717 21:26:31.659"></status>
</kw>
<msg timestamp="20200717 21:26:31.659" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:29.106" endtime="20200717 21:26:31.659"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:31.659" endtime="20200717 21:26:31.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:31.664" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/30263-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:33.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:33.876" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200717 21:26:31.662" endtime="20200717 21:26:33.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:33.877" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200717 21:26:33.876" endtime="20200717 21:26:33.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:33.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:33.877" endtime="20200717 21:26:33.877"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:31.661" endtime="20200717 21:26:33.878"></status>
</kw>
<msg timestamp="20200717 21:26:33.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:31.661" endtime="20200717 21:26:33.878"></status>
</kw>
<msg timestamp="20200717 21:26:33.878" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200717 21:26:31.660" endtime="20200717 21:26:33.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:33.883" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30263-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:36.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:36.808" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:33.880" endtime="20200717 21:26:36.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:36.809" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:36.808" endtime="20200717 21:26:36.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:36.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:36.809" endtime="20200717 21:26:36.810"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:33.879" endtime="20200717 21:26:36.810"></status>
</kw>
<msg timestamp="20200717 21:26:36.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:33.879" endtime="20200717 21:26:36.810"></status>
</kw>
<msg timestamp="20200717 21:26:36.811" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:33.878" endtime="20200717 21:26:36.811"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:36.811" endtime="20200717 21:26:36.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:36.815" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/30263-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:39.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:39.189" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:36.813" endtime="20200717 21:26:39.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:39.190" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:39.189" endtime="20200717 21:26:39.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:39.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:39.190" endtime="20200717 21:26:39.191"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:36.813" endtime="20200717 21:26:39.191"></status>
</kw>
<msg timestamp="20200717 21:26:39.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:36.812" endtime="20200717 21:26:39.191"></status>
</kw>
<msg timestamp="20200717 21:26:39.191" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:36.812" endtime="20200717 21:26:39.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:39.195" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30263-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:41.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:41.659" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200717 21:26:39.193" endtime="20200717 21:26:41.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:41.660" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:41.659" endtime="20200717 21:26:41.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:41.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:41.661" endtime="20200717 21:26:41.661"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:39.192" endtime="20200717 21:26:41.662"></status>
</kw>
<msg timestamp="20200717 21:26:41.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:39.192" endtime="20200717 21:26:41.662"></status>
</kw>
<msg timestamp="20200717 21:26:41.662" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200717 21:26:39.191" endtime="20200717 21:26:41.662"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:41.662" endtime="20200717 21:26:41.663"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:41.663" endtime="20200717 21:26:41.664"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:21.789" endtime="20200717 21:26:41.664"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:26:21.787" endtime="20200717 21:26:41.664" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:41.666" endtime="20200717 21:26:41.666"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:41.671" level="INFO">Running command 'ozone sh key put o3://om:9862/30263-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:45.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:45.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:26:41.669" endtime="20200717 21:26:45.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:45.755" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:26:45.754" endtime="20200717 21:26:45.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:45.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:45.755" endtime="20200717 21:26:45.755"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:41.668" endtime="20200717 21:26:45.756"></status>
</kw>
<msg timestamp="20200717 21:26:45.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:41.668" endtime="20200717 21:26:45.756"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:41.667" endtime="20200717 21:26:45.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:45.759" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30263-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:48.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:48.459" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:45.757" endtime="20200717 21:26:48.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:48.460" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:48.460" endtime="20200717 21:26:48.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:48.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:48.460" endtime="20200717 21:26:48.461"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:45.757" endtime="20200717 21:26:48.461"></status>
</kw>
<msg timestamp="20200717 21:26:48.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:45.757" endtime="20200717 21:26:48.461"></status>
</kw>
<msg timestamp="20200717 21:26:48.461" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:45.756" endtime="20200717 21:26:48.461"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:48.461" endtime="20200717 21:26:48.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:48.465" level="INFO">Running command 'ozone sh key addacl o3://om:9862/30263-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:50.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:50.672" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:26:48.463" endtime="20200717 21:26:50.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:50.674" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:26:50.673" endtime="20200717 21:26:50.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:50.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:50.674" endtime="20200717 21:26:50.675"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:48.463" endtime="20200717 21:26:50.675"></status>
</kw>
<msg timestamp="20200717 21:26:50.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:48.463" endtime="20200717 21:26:50.675"></status>
</kw>
<msg timestamp="20200717 21:26:50.675" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200717 21:26:48.462" endtime="20200717 21:26:50.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:50.679" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30263-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:53.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:53.200" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:50.677" endtime="20200717 21:26:53.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:53.201" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:53.200" endtime="20200717 21:26:53.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:53.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:53.201" endtime="20200717 21:26:53.202"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:50.676" endtime="20200717 21:26:53.202"></status>
</kw>
<msg timestamp="20200717 21:26:53.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:50.676" endtime="20200717 21:26:53.202"></status>
</kw>
<msg timestamp="20200717 21:26:53.203" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:50.675" endtime="20200717 21:26:53.203"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:53.203" endtime="20200717 21:26:53.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:53.207" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/30263-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:55.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:55.414" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200717 21:26:53.205" endtime="20200717 21:26:55.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:55.415" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200717 21:26:55.414" endtime="20200717 21:26:55.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:55.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:55.415" endtime="20200717 21:26:55.415"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:53.205" endtime="20200717 21:26:55.416"></status>
</kw>
<msg timestamp="20200717 21:26:55.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:53.204" endtime="20200717 21:26:55.416"></status>
</kw>
<msg timestamp="20200717 21:26:55.416" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200717 21:26:53.204" endtime="20200717 21:26:55.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:55.420" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30263-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:26:58.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:26:58.024" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:55.418" endtime="20200717 21:26:58.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:26:58.026" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:26:58.025" endtime="20200717 21:26:58.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:26:58.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:26:58.026" endtime="20200717 21:26:58.026"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:55.417" endtime="20200717 21:26:58.027"></status>
</kw>
<msg timestamp="20200717 21:26:58.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:55.417" endtime="20200717 21:26:58.027"></status>
</kw>
<msg timestamp="20200717 21:26:58.027" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200717 21:26:55.416" endtime="20200717 21:26:58.027"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200717 21:26:58.027" endtime="20200717 21:26:58.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:26:58.032" level="INFO">Running command 'ozone sh key setacl o3://om:9862/30263-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:00.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:00.287" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:58.030" endtime="20200717 21:27:00.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:00.288" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:27:00.287" endtime="20200717 21:27:00.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:00.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:00.288" endtime="20200717 21:27:00.289"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:58.029" endtime="20200717 21:27:00.289"></status>
</kw>
<msg timestamp="20200717 21:27:00.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:26:58.029" endtime="20200717 21:27:00.289"></status>
</kw>
<msg timestamp="20200717 21:27:00.289" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200717 21:26:58.028" endtime="20200717 21:27:00.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:00.293" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30263-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:02.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:02.796" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200717 21:27:00.291" endtime="20200717 21:27:02.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:02.797" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200717 21:27:02.796" endtime="20200717 21:27:02.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:02.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:02.797" endtime="20200717 21:27:02.798"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:00.290" endtime="20200717 21:27:02.798"></status>
</kw>
<msg timestamp="20200717 21:27:02.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:00.290" endtime="20200717 21:27:02.798"></status>
</kw>
<msg timestamp="20200717 21:27:02.799" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200717 21:27:00.289" endtime="20200717 21:27:02.799"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:02.799" endtime="20200717 21:27:02.799"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:02.799" endtime="20200717 21:27:02.800"></status>
</kw>
<status status="PASS" starttime="20200717 21:26:41.666" endtime="20200717 21:27:02.800"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:26:41.665" endtime="20200717 21:27:02.800" critical="yes"></status>
</test>
<test id="s1-s3-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:02.802" endtime="20200717 21:27:02.802"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:02.805" level="INFO">Running command 'ozone sh volume info o3:///30263-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:05.470" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:27:05.470" level="INFO">${output} = VOLUME_NOT_FOUND Volume 30263-rpcwport is not found</msg>
<status status="PASS" starttime="20200717 21:27:02.803" endtime="20200717 21:27:05.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:05.471" level="INFO">VOLUME_NOT_FOUND Volume 30263-rpcwport is not found</msg>
<status status="PASS" starttime="20200717 21:27:05.470" endtime="20200717 21:27:05.471"></status>
</kw>
<msg timestamp="20200717 21:27:05.472" level="INFO">${result} = VOLUME_NOT_FOUND Volume 30263-rpcwport is not found</msg>
<status status="PASS" starttime="20200717 21:27:02.803" endtime="20200717 21:27:05.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:05.472" endtime="20200717 21:27:05.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:05.476" level="INFO">Running command 'ozone sh volume create o3:///30263-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:07.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:07.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:05.474" endtime="20200717 21:27:07.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:07.702" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:07.701" endtime="20200717 21:27:07.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:07.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:07.702" endtime="20200717 21:27:07.703"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:05.473" endtime="20200717 21:27:07.703"></status>
</kw>
<msg timestamp="20200717 21:27:07.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:05.473" endtime="20200717 21:27:07.703"></status>
</kw>
<msg timestamp="20200717 21:27:07.703" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:27:05.472" endtime="20200717 21:27:07.703"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:07.703" endtime="20200717 21:27:07.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:07.708" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="30263-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:10.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:10.229" level="INFO">${output} = {
  "metadata": {},
  "name": "30263-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:27:07.642Z",
  "modificationTime": "2020-07-17T21:27:07.642Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200717 21:27:07.706" endtime="20200717 21:27:10.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:10.230" level="INFO">{
  "metadata": {},
  "name": "30263-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:27:07.642Z",
  "modificationTime": "2020-07-17T21:27:07.642Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200717 21:27:10.230" endtime="20200717 21:27:10.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:10.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:10.231" endtime="20200717 21:27:10.231"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:07.705" endtime="20200717 21:27:10.231"></status>
</kw>
<msg timestamp="20200717 21:27:10.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:07.705" endtime="20200717 21:27:10.232"></status>
</kw>
<msg timestamp="20200717 21:27:10.232" level="INFO">${result} = {
  "metadata": {},
  "name": "30263-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:27:07.642Z",
  "modificationTime": "2020-07-17T21:27:07.642Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200717 21:27:07.704" endtime="20200717 21:27:10.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:10.232" endtime="20200717 21:27:10.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:10.236" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="30263-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:12.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:12.737" level="INFO">${output} = {
  "metadata": {},
  "name": "30263-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:27:07.642Z",
  "modificationTime": "2020-07-17T21:27:07.642Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200717 21:27:10.234" endtime="20200717 21:27:12.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:12.738" level="INFO">{
  "metadata": {},
  "name": "30263-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:27:07.642Z",
  "modificationTime": "2020-07-17T21:27:07.642Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200717 21:27:12.737" endtime="20200717 21:27:12.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:12.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:12.738" endtime="20200717 21:27:12.739"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:10.234" endtime="20200717 21:27:12.739"></status>
</kw>
<msg timestamp="20200717 21:27:12.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:10.233" endtime="20200717 21:27:12.739"></status>
</kw>
<msg timestamp="20200717 21:27:12.740" level="INFO">${result} = {
  "metadata": {},
  "name": "30263-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:27:07.642Z",
  "modificationTime": "2020-07-17T21:27:07.642Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200717 21:27:10.233" endtime="20200717 21:27:12.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:12.740" endtime="20200717 21:27:12.740"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:12.744" level="INFO">Running command 'ozone sh volume update o3:///30263-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:15.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:15.352" level="INFO">${output} = {
  "metadata" : { },
  "name" : "30263-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-17T21:27:07.642Z",
  "modificationTime" : "2020-07-17T21:27:15.036Z",
  "acls...</msg>
<status status="PASS" starttime="20200717 21:27:12.741" endtime="20200717 21:27:15.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:15.353" level="INFO">{
  "metadata" : { },
  "name" : "30263-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-17T21:27:07.642Z",
  "modificationTime" : "2020-07-17T21:27:15.036Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200717 21:27:15.352" endtime="20200717 21:27:15.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:15.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:15.353" endtime="20200717 21:27:15.354"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:12.741" endtime="20200717 21:27:15.354"></status>
</kw>
<msg timestamp="20200717 21:27:15.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:12.741" endtime="20200717 21:27:15.354"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:12.740" endtime="20200717 21:27:15.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:15.359" level="INFO">Running command 'ozone sh volume info o3:///30263-rpcwport | jq -r '. | select(.name=="30263-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:17.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:17.776" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200717 21:27:15.356" endtime="20200717 21:27:17.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:17.777" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200717 21:27:17.776" endtime="20200717 21:27:17.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:17.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:17.777" endtime="20200717 21:27:17.778"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:15.356" endtime="20200717 21:27:17.778"></status>
</kw>
<msg timestamp="20200717 21:27:17.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:15.356" endtime="20200717 21:27:17.778"></status>
</kw>
<msg timestamp="20200717 21:27:17.778" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200717 21:27:15.355" endtime="20200717 21:27:17.778"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:17.779" endtime="20200717 21:27:17.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:17.785" level="INFO">Running command 'ozone sh bucket create o3:///30263-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:20.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:20.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:17.781" endtime="20200717 21:27:20.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:20.146" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:20.146" endtime="20200717 21:27:20.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:20.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:20.147" endtime="20200717 21:27:20.147"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:17.780" endtime="20200717 21:27:20.147"></status>
</kw>
<msg timestamp="20200717 21:27:20.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:17.780" endtime="20200717 21:27:20.148"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:17.779" endtime="20200717 21:27:20.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:20.153" level="INFO">Running command 'ozone sh bucket info o3:///30263-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:22.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:22.695" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200717 21:27:20.149" endtime="20200717 21:27:22.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:22.696" level="INFO">DISK</msg>
<status status="PASS" starttime="20200717 21:27:22.695" endtime="20200717 21:27:22.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:22.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:22.696" endtime="20200717 21:27:22.697"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:20.149" endtime="20200717 21:27:22.697"></status>
</kw>
<msg timestamp="20200717 21:27:22.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:20.149" endtime="20200717 21:27:22.697"></status>
</kw>
<msg timestamp="20200717 21:27:22.697" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200717 21:27:20.148" endtime="20200717 21:27:22.697"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:22.698" endtime="20200717 21:27:22.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:22.702" level="INFO">Running command 'ozone sh bucket list o3:///30263-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:25.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:25.187" level="INFO">${output} = 30263-rpcwport</msg>
<status status="PASS" starttime="20200717 21:27:22.700" endtime="20200717 21:27:25.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:25.188" level="INFO">30263-rpcwport</msg>
<status status="PASS" starttime="20200717 21:27:25.188" endtime="20200717 21:27:25.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:25.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:25.188" endtime="20200717 21:27:25.189"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:22.699" endtime="20200717 21:27:25.189"></status>
</kw>
<msg timestamp="20200717 21:27:25.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:22.699" endtime="20200717 21:27:25.190"></status>
</kw>
<msg timestamp="20200717 21:27:25.190" level="INFO">${result} = 30263-rpcwport</msg>
<status status="PASS" starttime="20200717 21:27:22.698" endtime="20200717 21:27:25.190"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:25.190" endtime="20200717 21:27:25.190"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:25.197" level="INFO">Running command 'ozone sh key put o3:///30263-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:31.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:31.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:25.193" endtime="20200717 21:27:31.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:31.874" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:31.873" endtime="20200717 21:27:31.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:31.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:31.874" endtime="20200717 21:27:31.875"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:25.192" endtime="20200717 21:27:31.875"></status>
</kw>
<msg timestamp="20200717 21:27:31.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:25.192" endtime="20200717 21:27:31.875"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:25.191" endtime="20200717 21:27:31.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:31.879" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:31.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:31.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:31.877" endtime="20200717 21:27:31.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:31.882" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:31.881" endtime="20200717 21:27:31.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:31.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:31.882" endtime="20200717 21:27:31.882"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:31.876" endtime="20200717 21:27:31.883"></status>
</kw>
<msg timestamp="20200717 21:27:31.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:31.876" endtime="20200717 21:27:31.883"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:31.876" endtime="20200717 21:27:31.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:31.886" level="INFO">Running command 'ozone sh key get o3:///30263-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:35.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:35.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:31.884" endtime="20200717 21:27:35.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:35.777" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:35.776" endtime="20200717 21:27:35.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:35.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:35.777" endtime="20200717 21:27:35.778"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:31.884" endtime="20200717 21:27:35.778"></status>
</kw>
<msg timestamp="20200717 21:27:35.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:31.884" endtime="20200717 21:27:35.778"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:31.883" endtime="20200717 21:27:35.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:35.782" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:35.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:35.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:35.780" endtime="20200717 21:27:35.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:35.785" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:35.785" endtime="20200717 21:27:35.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:35.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:35.786" endtime="20200717 21:27:35.786"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:35.780" endtime="20200717 21:27:35.786"></status>
</kw>
<msg timestamp="20200717 21:27:35.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:35.779" endtime="20200717 21:27:35.787"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:35.779" endtime="20200717 21:27:35.787"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:35.790" level="INFO">Running command 'ozone sh key put -t RATIS o3:///30263-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:39.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:39.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:35.788" endtime="20200717 21:27:39.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:39.908" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:39.906" endtime="20200717 21:27:39.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:39.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:39.908" endtime="20200717 21:27:39.908"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:35.787" endtime="20200717 21:27:39.909"></status>
</kw>
<msg timestamp="20200717 21:27:39.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:35.787" endtime="20200717 21:27:39.909"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:35.787" endtime="20200717 21:27:39.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:39.912" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:39.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:39.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:39.910" endtime="20200717 21:27:39.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:39.916" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:39.915" endtime="20200717 21:27:39.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:39.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:39.916" endtime="20200717 21:27:39.916"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:39.910" endtime="20200717 21:27:39.917"></status>
</kw>
<msg timestamp="20200717 21:27:39.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:39.910" endtime="20200717 21:27:39.917"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:39.909" endtime="20200717 21:27:39.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:39.921" level="INFO">Running command 'ozone sh key get o3:///30263-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:43.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:43.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:39.919" endtime="20200717 21:27:43.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:43.902" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:43.901" endtime="20200717 21:27:43.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:43.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:43.902" endtime="20200717 21:27:43.903"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:39.918" endtime="20200717 21:27:43.903"></status>
</kw>
<msg timestamp="20200717 21:27:43.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:39.918" endtime="20200717 21:27:43.903"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:39.917" endtime="20200717 21:27:43.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:43.907" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:43.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:43.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:43.905" endtime="20200717 21:27:43.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:43.911" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:43.910" endtime="20200717 21:27:43.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:43.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:43.911" endtime="20200717 21:27:43.911"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:43.904" endtime="20200717 21:27:43.911"></status>
</kw>
<msg timestamp="20200717 21:27:43.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:43.904" endtime="20200717 21:27:43.912"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:43.904" endtime="20200717 21:27:43.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:43.916" level="INFO">Running command 'ozone sh key info o3:///30263-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:46.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:46.618" level="INFO">${output} = {
  "volumeName": "30263-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:27:38.065Z",
  "modificationTime": "2020-07-17T21:27:39.541Z",
...</msg>
<status status="PASS" starttime="20200717 21:27:43.914" endtime="20200717 21:27:46.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:46.619" level="INFO">{
  "volumeName": "30263-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:27:38.065Z",
  "modificationTime": "2020-07-17T21:27:39.541Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104531313168482430,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200717 21:27:46.618" endtime="20200717 21:27:46.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:46.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:46.620" endtime="20200717 21:27:46.620"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:43.913" endtime="20200717 21:27:46.620"></status>
</kw>
<msg timestamp="20200717 21:27:46.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:43.913" endtime="20200717 21:27:46.621"></status>
</kw>
<msg timestamp="20200717 21:27:46.621" level="INFO">${result} = {
  "volumeName": "30263-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:27:38.065Z",
  "modificationTime": "2020-07-17T21:27:39.541Z",
...</msg>
<status status="PASS" starttime="20200717 21:27:43.912" endtime="20200717 21:27:46.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200717 21:27:46.621" endtime="20200717 21:27:46.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:46.625" level="INFO">Running command 'ozone sh key delete o3:///30263-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:48.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:48.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:46.623" endtime="20200717 21:27:48.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:48.946" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:48.946" endtime="20200717 21:27:48.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:48.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:48.946" endtime="20200717 21:27:48.947"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:46.622" endtime="20200717 21:27:48.947"></status>
</kw>
<msg timestamp="20200717 21:27:48.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:46.622" endtime="20200717 21:27:48.947"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:46.621" endtime="20200717 21:27:48.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:48.952" level="INFO">Running command 'ozone sh key cp o3:///30263-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:53.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:53.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:48.950" endtime="20200717 21:27:53.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:53.397" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:53.396" endtime="20200717 21:27:53.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:53.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:53.397" endtime="20200717 21:27:53.397"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:48.949" endtime="20200717 21:27:53.398"></status>
</kw>
<msg timestamp="20200717 21:27:53.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:48.949" endtime="20200717 21:27:53.398"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:48.948" endtime="20200717 21:27:53.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:53.401" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:53.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:53.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:53.399" endtime="20200717 21:27:53.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:53.404" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:53.404" endtime="20200717 21:27:53.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:53.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:53.405" endtime="20200717 21:27:53.405"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:53.399" endtime="20200717 21:27:53.405"></status>
</kw>
<msg timestamp="20200717 21:27:53.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:53.399" endtime="20200717 21:27:53.405"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:53.398" endtime="20200717 21:27:53.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:53.410" level="INFO">Running command 'ozone sh key get o3:///30263-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:57.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:57.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:53.407" endtime="20200717 21:27:57.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:57.382" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:57.381" endtime="20200717 21:27:57.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:57.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:57.382" endtime="20200717 21:27:57.382"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:53.407" endtime="20200717 21:27:57.383"></status>
</kw>
<msg timestamp="20200717 21:27:57.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:53.407" endtime="20200717 21:27:57.383"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:53.406" endtime="20200717 21:27:57.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:57.386" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:57.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:57.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:57.384" endtime="20200717 21:27:57.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:57.389" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:57.389" endtime="20200717 21:27:57.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:57.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:57.389" endtime="20200717 21:27:57.390"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:57.384" endtime="20200717 21:27:57.390"></status>
</kw>
<msg timestamp="20200717 21:27:57.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:57.384" endtime="20200717 21:27:57.390"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:57.383" endtime="20200717 21:27:57.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:57.398" level="INFO">Running command 'ozone sh key delete o3:///30263-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:27:59.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:27:59.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:27:57.397" endtime="20200717 21:27:59.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:27:59.726" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:27:59.726" endtime="20200717 21:27:59.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:27:59.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:27:59.727" endtime="20200717 21:27:59.727"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:57.396" endtime="20200717 21:27:59.727"></status>
</kw>
<msg timestamp="20200717 21:27:59.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:27:57.396" endtime="20200717 21:27:59.728"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:57.391" endtime="20200717 21:27:59.728"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:27:59.732" level="INFO">Running command 'ozone sh key get o3:///30263-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:02.137" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:28:02.137" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:27:59.729" endtime="20200717 21:28:02.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:02.138" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:28:02.138" endtime="20200717 21:28:02.138"></status>
</kw>
<msg timestamp="20200717 21:28:02.139" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:27:59.728" endtime="20200717 21:28:02.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:02.139" endtime="20200717 21:28:02.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:02.144" level="INFO">Running command 'ozone sh key get --force o3:///30263-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:06.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:06.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:02.141" endtime="20200717 21:28:06.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:06.043" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:06.042" endtime="20200717 21:28:06.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:06.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:06.043" endtime="20200717 21:28:06.043"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:02.140" endtime="20200717 21:28:06.044"></status>
</kw>
<msg timestamp="20200717 21:28:06.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:02.140" endtime="20200717 21:28:06.044"></status>
</kw>
<msg timestamp="20200717 21:28:06.044" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:28:02.139" endtime="20200717 21:28:06.044"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:06.044" endtime="20200717 21:28:06.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:06.049" level="INFO">Running command 'ozone sh key info o3:///30263-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:08.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:08.992" level="INFO">${output} = {
  "volumeName": "30263-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:27:27.466Z",
  "modificationTime": "2020-07-17T21:27:31.396Z",
  "rep...</msg>
<status status="PASS" starttime="20200717 21:28:06.047" endtime="20200717 21:28:08.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:08.993" level="INFO">{
  "volumeName": "30263-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:27:27.466Z",
  "modificationTime": "2020-07-17T21:27:31.396Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104531312473866370,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200717 21:28:08.993" endtime="20200717 21:28:08.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:08.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:08.994" endtime="20200717 21:28:08.994"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:06.046" endtime="20200717 21:28:08.994"></status>
</kw>
<msg timestamp="20200717 21:28:08.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:06.046" endtime="20200717 21:28:08.995"></status>
</kw>
<msg timestamp="20200717 21:28:08.995" level="INFO">${result} = {
  "volumeName": "30263-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:27:27.466Z",
  "modificationTime": "2020-07-17T21:27:31.396Z",
  "rep...</msg>
<status status="PASS" starttime="20200717 21:28:06.045" endtime="20200717 21:28:08.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:08.995" endtime="20200717 21:28:08.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:08.999" level="INFO">Running command 'ozone sh key list o3:///30263-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:11.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:11.527" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200717 21:28:08.997" endtime="20200717 21:28:11.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:11.528" level="INFO">key1</msg>
<status status="PASS" starttime="20200717 21:28:11.527" endtime="20200717 21:28:11.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:11.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:11.528" endtime="20200717 21:28:11.529"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:08.996" endtime="20200717 21:28:11.529"></status>
</kw>
<msg timestamp="20200717 21:28:11.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:08.996" endtime="20200717 21:28:11.529"></status>
</kw>
<msg timestamp="20200717 21:28:11.530" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200717 21:28:08.995" endtime="20200717 21:28:11.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:11.530" endtime="20200717 21:28:11.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:11.534" level="INFO">Running command 'ozone sh key rename o3:///30263-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:13.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:13.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:11.532" endtime="20200717 21:28:13.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:13.860" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:13.859" endtime="20200717 21:28:13.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:13.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:13.860" endtime="20200717 21:28:13.861"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:11.531" endtime="20200717 21:28:13.862"></status>
</kw>
<msg timestamp="20200717 21:28:13.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:11.531" endtime="20200717 21:28:13.862"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:11.530" endtime="20200717 21:28:13.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:13.866" level="INFO">Running command 'ozone sh key list o3:///30263-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:16.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:16.544" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200717 21:28:13.864" endtime="20200717 21:28:16.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:16.545" level="INFO">key2</msg>
<status status="PASS" starttime="20200717 21:28:16.544" endtime="20200717 21:28:16.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:16.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:16.545" endtime="20200717 21:28:16.546"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:13.863" endtime="20200717 21:28:16.546"></status>
</kw>
<msg timestamp="20200717 21:28:16.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:13.863" endtime="20200717 21:28:16.546"></status>
</kw>
<msg timestamp="20200717 21:28:16.546" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200717 21:28:13.862" endtime="20200717 21:28:16.546"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:16.547" endtime="20200717 21:28:16.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:16.552" level="INFO">Running command 'ozone sh key delete o3:///30263-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:19.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:19.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:16.549" endtime="20200717 21:28:19.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:19.048" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:19.048" endtime="20200717 21:28:19.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:19.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:19.048" endtime="20200717 21:28:19.049"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:16.548" endtime="20200717 21:28:19.049"></status>
</kw>
<msg timestamp="20200717 21:28:19.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:16.548" endtime="20200717 21:28:19.049"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:16.547" endtime="20200717 21:28:19.050"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:25.191" endtime="20200717 21:28:19.050"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:25.191" endtime="20200717 21:28:19.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:19.054" level="INFO">Running command 'ozone sh bucket delete o3:///30263-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:21.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:21.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:19.052" endtime="20200717 21:28:21.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:21.614" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:21.613" endtime="20200717 21:28:21.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:21.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:21.614" endtime="20200717 21:28:21.615"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:19.052" endtime="20200717 21:28:21.615"></status>
</kw>
<msg timestamp="20200717 21:28:21.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:19.051" endtime="20200717 21:28:21.615"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:19.050" endtime="20200717 21:28:21.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:21.620" level="INFO">Running command 'ozone sh volume delete o3:///30263-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:24.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:24.055" level="INFO">${output} = Volume 30263-rpcwport is deleted</msg>
<status status="PASS" starttime="20200717 21:28:21.617" endtime="20200717 21:28:24.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:24.056" level="INFO">Volume 30263-rpcwport is deleted</msg>
<status status="PASS" starttime="20200717 21:28:24.056" endtime="20200717 21:28:24.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:24.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:24.056" endtime="20200717 21:28:24.057"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:21.616" endtime="20200717 21:28:24.057"></status>
</kw>
<msg timestamp="20200717 21:28:24.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:21.616" endtime="20200717 21:28:24.058"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:21.615" endtime="20200717 21:28:24.058"></status>
</kw>
<status status="PASS" starttime="20200717 21:27:02.802" endtime="20200717 21:28:24.058"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:27:02.801" endtime="20200717 21:28:24.058" critical="yes"></status>
</test>
<test id="s1-s3-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:24.060" endtime="20200717 21:28:24.060"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:24.063" level="INFO">Running command 'ozone sh volume info /30263-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:26.566" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:28:26.567" level="INFO">${output} = VOLUME_NOT_FOUND Volume 30263-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200717 21:28:24.061" endtime="20200717 21:28:26.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:26.568" level="INFO">VOLUME_NOT_FOUND Volume 30263-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200717 21:28:26.567" endtime="20200717 21:28:26.568"></status>
</kw>
<msg timestamp="20200717 21:28:26.568" level="INFO">${result} = VOLUME_NOT_FOUND Volume 30263-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200717 21:28:24.061" endtime="20200717 21:28:26.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:26.568" endtime="20200717 21:28:26.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:26.573" level="INFO">Running command 'ozone sh volume create /30263-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:28.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:28.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:26.571" endtime="20200717 21:28:28.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:28.822" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:28.822" endtime="20200717 21:28:28.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:28.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:28.822" endtime="20200717 21:28:28.823"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:26.570" endtime="20200717 21:28:28.823"></status>
</kw>
<msg timestamp="20200717 21:28:28.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:26.570" endtime="20200717 21:28:28.823"></status>
</kw>
<msg timestamp="20200717 21:28:28.824" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:28:26.569" endtime="20200717 21:28:28.824"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:28.824" endtime="20200717 21:28:28.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:28.827" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="30263-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:31.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:31.298" level="INFO">${output} = {
  "metadata": {},
  "name": "30263-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:28:28.777Z",
  "modificationTime": "2020-07-17T21:28:28.777Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200717 21:28:28.825" endtime="20200717 21:28:31.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:31.300" level="INFO">{
  "metadata": {},
  "name": "30263-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:28:28.777Z",
  "modificationTime": "2020-07-17T21:28:28.777Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200717 21:28:31.299" endtime="20200717 21:28:31.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:31.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:31.300" endtime="20200717 21:28:31.300"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:28.825" endtime="20200717 21:28:31.301"></status>
</kw>
<msg timestamp="20200717 21:28:31.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:28.825" endtime="20200717 21:28:31.301"></status>
</kw>
<msg timestamp="20200717 21:28:31.301" level="INFO">${result} = {
  "metadata": {},
  "name": "30263-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:28:28.777Z",
  "modificationTime": "2020-07-17T21:28:28.777Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200717 21:28:28.824" endtime="20200717 21:28:31.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:31.301" endtime="20200717 21:28:31.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:31.305" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="30263-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:33.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:33.861" level="INFO">${output} = {
  "metadata": {},
  "name": "30263-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:28:28.777Z",
  "modificationTime": "2020-07-17T21:28:28.777Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200717 21:28:31.303" endtime="20200717 21:28:33.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:33.862" level="INFO">{
  "metadata": {},
  "name": "30263-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:28:28.777Z",
  "modificationTime": "2020-07-17T21:28:28.777Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200717 21:28:33.861" endtime="20200717 21:28:33.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:33.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:33.862" endtime="20200717 21:28:33.863"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:31.303" endtime="20200717 21:28:33.863"></status>
</kw>
<msg timestamp="20200717 21:28:33.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:31.302" endtime="20200717 21:28:33.863"></status>
</kw>
<msg timestamp="20200717 21:28:33.863" level="INFO">${result} = {
  "metadata": {},
  "name": "30263-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-17T21:28:28.777Z",
  "modificationTime": "2020-07-17T21:28:28.777Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200717 21:28:31.302" endtime="20200717 21:28:33.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:33.863" endtime="20200717 21:28:33.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:33.867" level="INFO">Running command 'ozone sh volume update /30263-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:36.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:36.345" level="INFO">${output} = {
  "metadata" : { },
  "name" : "30263-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-17T21:28:28.777Z",
  "modificationTime" : "2020-07-17T21:28:36.037Z",
  "a...</msg>
<status status="PASS" starttime="20200717 21:28:33.865" endtime="20200717 21:28:36.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:36.346" level="INFO">{
  "metadata" : { },
  "name" : "30263-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-17T21:28:28.777Z",
  "modificationTime" : "2020-07-17T21:28:36.037Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200717 21:28:36.345" endtime="20200717 21:28:36.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:36.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:36.346" endtime="20200717 21:28:36.347"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:33.865" endtime="20200717 21:28:36.347"></status>
</kw>
<msg timestamp="20200717 21:28:36.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:33.864" endtime="20200717 21:28:36.347"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:33.864" endtime="20200717 21:28:36.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:36.352" level="INFO">Running command 'ozone sh volume info /30263-rpcwoscheme | jq -r '. | select(.name=="30263-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:39.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:39.003" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200717 21:28:36.350" endtime="20200717 21:28:39.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:39.005" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200717 21:28:39.004" endtime="20200717 21:28:39.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:39.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:39.005" endtime="20200717 21:28:39.006"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:36.349" endtime="20200717 21:28:39.006"></status>
</kw>
<msg timestamp="20200717 21:28:39.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:36.349" endtime="20200717 21:28:39.006"></status>
</kw>
<msg timestamp="20200717 21:28:39.007" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200717 21:28:36.348" endtime="20200717 21:28:39.007"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:39.007" endtime="20200717 21:28:39.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:39.013" level="INFO">Running command 'ozone sh bucket create /30263-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:41.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:41.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:39.010" endtime="20200717 21:28:41.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:41.466" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:41.465" endtime="20200717 21:28:41.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:41.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:41.466" endtime="20200717 21:28:41.467"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:39.010" endtime="20200717 21:28:41.467"></status>
</kw>
<msg timestamp="20200717 21:28:41.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:39.010" endtime="20200717 21:28:41.467"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:39.009" endtime="20200717 21:28:41.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:41.471" level="INFO">Running command 'ozone sh bucket info /30263-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:43.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:43.880" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200717 21:28:41.469" endtime="20200717 21:28:43.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:43.882" level="INFO">DISK</msg>
<status status="PASS" starttime="20200717 21:28:43.881" endtime="20200717 21:28:43.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:43.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:43.882" endtime="20200717 21:28:43.883"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:41.468" endtime="20200717 21:28:43.883"></status>
</kw>
<msg timestamp="20200717 21:28:43.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:41.468" endtime="20200717 21:28:43.883"></status>
</kw>
<msg timestamp="20200717 21:28:43.884" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200717 21:28:41.467" endtime="20200717 21:28:43.884"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:43.884" endtime="20200717 21:28:43.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:43.888" level="INFO">Running command 'ozone sh bucket list /30263-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:46.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:46.231" level="INFO">${output} = 30263-rpcwoscheme</msg>
<status status="PASS" starttime="20200717 21:28:43.886" endtime="20200717 21:28:46.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:46.232" level="INFO">30263-rpcwoscheme</msg>
<status status="PASS" starttime="20200717 21:28:46.231" endtime="20200717 21:28:46.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:46.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:46.232" endtime="20200717 21:28:46.233"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:43.886" endtime="20200717 21:28:46.233"></status>
</kw>
<msg timestamp="20200717 21:28:46.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:43.885" endtime="20200717 21:28:46.233"></status>
</kw>
<msg timestamp="20200717 21:28:46.233" level="INFO">${result} = 30263-rpcwoscheme</msg>
<status status="PASS" starttime="20200717 21:28:43.884" endtime="20200717 21:28:46.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200717 21:28:46.233" endtime="20200717 21:28:46.234"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:46.239" level="INFO">Running command 'ozone sh key put /30263-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:50.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:50.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:46.237" endtime="20200717 21:28:50.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:50.526" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:50.525" endtime="20200717 21:28:50.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:50.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:50.526" endtime="20200717 21:28:50.527"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:46.236" endtime="20200717 21:28:50.527"></status>
</kw>
<msg timestamp="20200717 21:28:50.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:46.236" endtime="20200717 21:28:50.527"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:46.235" endtime="20200717 21:28:50.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:50.530" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:50.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:50.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:50.528" endtime="20200717 21:28:50.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:50.534" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:50.533" endtime="20200717 21:28:50.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:50.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:50.534" endtime="20200717 21:28:50.535"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:50.528" endtime="20200717 21:28:50.535"></status>
</kw>
<msg timestamp="20200717 21:28:50.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:50.528" endtime="20200717 21:28:50.535"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:50.527" endtime="20200717 21:28:50.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:50.540" level="INFO">Running command 'ozone sh key get /30263-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:54.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:54.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:50.538" endtime="20200717 21:28:54.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:54.283" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:54.283" endtime="20200717 21:28:54.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:54.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:54.284" endtime="20200717 21:28:54.284"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:50.537" endtime="20200717 21:28:54.285"></status>
</kw>
<msg timestamp="20200717 21:28:54.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:50.536" endtime="20200717 21:28:54.285"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:50.536" endtime="20200717 21:28:54.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:54.289" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:54.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:54.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:54.287" endtime="20200717 21:28:54.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:54.292" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:54.291" endtime="20200717 21:28:54.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:54.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:54.292" endtime="20200717 21:28:54.292"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:54.286" endtime="20200717 21:28:54.293"></status>
</kw>
<msg timestamp="20200717 21:28:54.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:54.286" endtime="20200717 21:28:54.293"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:54.285" endtime="20200717 21:28:54.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:54.296" level="INFO">Running command 'ozone sh key put -t RATIS /30263-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:58.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:58.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:54.294" endtime="20200717 21:28:58.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:58.346" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:58.345" endtime="20200717 21:28:58.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:58.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:58.346" endtime="20200717 21:28:58.347"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:54.294" endtime="20200717 21:28:58.347"></status>
</kw>
<msg timestamp="20200717 21:28:58.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:54.294" endtime="20200717 21:28:58.347"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:54.293" endtime="20200717 21:28:58.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:58.353" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:28:58.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:28:58.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:58.349" endtime="20200717 21:28:58.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:28:58.357" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:28:58.356" endtime="20200717 21:28:58.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:28:58.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:28:58.357" endtime="20200717 21:28:58.357"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:58.349" endtime="20200717 21:28:58.358"></status>
</kw>
<msg timestamp="20200717 21:28:58.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:58.348" endtime="20200717 21:28:58.358"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:58.348" endtime="20200717 21:28:58.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:28:58.362" level="INFO">Running command 'ozone sh key get /30263-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:02.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:02.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:28:58.359" endtime="20200717 21:29:02.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:02.250" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:02.249" endtime="20200717 21:29:02.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:02.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:02.250" endtime="20200717 21:29:02.251"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:58.359" endtime="20200717 21:29:02.251"></status>
</kw>
<msg timestamp="20200717 21:29:02.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:28:58.359" endtime="20200717 21:29:02.251"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:58.358" endtime="20200717 21:29:02.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:02.256" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:02.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:02.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:02.253" endtime="20200717 21:29:02.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:02.260" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:02.259" endtime="20200717 21:29:02.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:02.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:02.260" endtime="20200717 21:29:02.261"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:02.252" endtime="20200717 21:29:02.261"></status>
</kw>
<msg timestamp="20200717 21:29:02.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:02.252" endtime="20200717 21:29:02.261"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:02.251" endtime="20200717 21:29:02.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:02.265" level="INFO">Running command 'ozone sh key info /30263-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:04.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:04.780" level="INFO">${output} = {
  "volumeName": "30263-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:28:56.476Z",
  "modificationTime": "2020-07-17T21:28:57.875Z...</msg>
<status status="PASS" starttime="20200717 21:29:02.263" endtime="20200717 21:29:04.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:04.781" level="INFO">{
  "volumeName": "30263-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:28:56.476Z",
  "modificationTime": "2020-07-17T21:28:57.875Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104531318307160210,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200717 21:29:04.781" endtime="20200717 21:29:04.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:04.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:04.782" endtime="20200717 21:29:04.782"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:02.263" endtime="20200717 21:29:04.783"></status>
</kw>
<msg timestamp="20200717 21:29:04.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:02.262" endtime="20200717 21:29:04.783"></status>
</kw>
<msg timestamp="20200717 21:29:04.783" level="INFO">${result} = {
  "volumeName": "30263-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:28:56.476Z",
  "modificationTime": "2020-07-17T21:28:57.875Z...</msg>
<status status="PASS" starttime="20200717 21:29:02.262" endtime="20200717 21:29:04.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200717 21:29:04.783" endtime="20200717 21:29:04.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:04.787" level="INFO">Running command 'ozone sh key delete /30263-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:07.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:07.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:04.785" endtime="20200717 21:29:07.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:07.156" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:07.155" endtime="20200717 21:29:07.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:07.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:07.156" endtime="20200717 21:29:07.156"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:04.784" endtime="20200717 21:29:07.157"></status>
</kw>
<msg timestamp="20200717 21:29:07.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:04.784" endtime="20200717 21:29:07.157"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:04.784" endtime="20200717 21:29:07.157"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:07.161" level="INFO">Running command 'ozone sh key cp /30263-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:11.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:11.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:07.159" endtime="20200717 21:29:11.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:11.690" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:11.689" endtime="20200717 21:29:11.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:11.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:11.690" endtime="20200717 21:29:11.691"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:07.158" endtime="20200717 21:29:11.691"></status>
</kw>
<msg timestamp="20200717 21:29:11.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:07.158" endtime="20200717 21:29:11.691"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:07.157" endtime="20200717 21:29:11.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:11.695" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:11.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:11.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:11.693" endtime="20200717 21:29:11.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:11.699" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:11.699" endtime="20200717 21:29:11.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:11.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:11.700" endtime="20200717 21:29:11.700"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:11.692" endtime="20200717 21:29:11.701"></status>
</kw>
<msg timestamp="20200717 21:29:11.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:11.692" endtime="20200717 21:29:11.701"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:11.691" endtime="20200717 21:29:11.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:11.705" level="INFO">Running command 'ozone sh key get /30263-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:15.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:15.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:11.703" endtime="20200717 21:29:15.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:15.940" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:15.939" endtime="20200717 21:29:15.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:15.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:15.940" endtime="20200717 21:29:15.941"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:11.702" endtime="20200717 21:29:15.941"></status>
</kw>
<msg timestamp="20200717 21:29:15.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:11.702" endtime="20200717 21:29:15.941"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:11.701" endtime="20200717 21:29:15.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:15.945" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:15.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:15.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:15.943" endtime="20200717 21:29:15.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:15.949" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:15.948" endtime="20200717 21:29:15.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:15.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:15.949" endtime="20200717 21:29:15.950"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:15.943" endtime="20200717 21:29:15.950"></status>
</kw>
<msg timestamp="20200717 21:29:15.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:15.942" endtime="20200717 21:29:15.950"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:15.942" endtime="20200717 21:29:15.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:15.953" level="INFO">Running command 'ozone sh key delete /30263-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:18.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:18.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:15.952" endtime="20200717 21:29:18.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:18.269" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:18.268" endtime="20200717 21:29:18.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:18.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:18.269" endtime="20200717 21:29:18.269"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:15.951" endtime="20200717 21:29:18.270"></status>
</kw>
<msg timestamp="20200717 21:29:18.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:15.951" endtime="20200717 21:29:18.270"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:15.950" endtime="20200717 21:29:18.270"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:18.274" level="INFO">Running command 'ozone sh key get /30263-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:20.621" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:29:20.621" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:29:18.271" endtime="20200717 21:29:20.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:20.622" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:29:20.622" endtime="20200717 21:29:20.622"></status>
</kw>
<msg timestamp="20200717 21:29:20.623" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200717 21:29:18.270" endtime="20200717 21:29:20.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200717 21:29:20.623" endtime="20200717 21:29:20.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:20.628" level="INFO">Running command 'ozone sh key get --force /30263-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:24.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:24.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:20.625" endtime="20200717 21:29:24.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:24.676" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:24.675" endtime="20200717 21:29:24.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:24.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:24.676" endtime="20200717 21:29:24.676"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:20.624" endtime="20200717 21:29:24.677"></status>
</kw>
<msg timestamp="20200717 21:29:24.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:20.624" endtime="20200717 21:29:24.677"></status>
</kw>
<msg timestamp="20200717 21:29:24.677" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:29:20.623" endtime="20200717 21:29:24.678"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200717 21:29:24.678" endtime="20200717 21:29:24.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:24.682" level="INFO">Running command 'ozone sh key info /30263-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:27.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:27.377" level="INFO">${output} = {
  "volumeName": "30263-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:28:48.492Z",
  "modificationTime": "2020-07-17T21:28:50.013Z",
  "...</msg>
<status status="PASS" starttime="20200717 21:29:24.680" endtime="20200717 21:29:27.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:27.379" level="INFO">{
  "volumeName": "30263-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:28:48.492Z",
  "modificationTime": "2020-07-17T21:28:50.013Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104531317783986300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200717 21:29:27.378" endtime="20200717 21:29:27.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:27.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:27.379" endtime="20200717 21:29:27.379"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:24.680" endtime="20200717 21:29:27.379"></status>
</kw>
<msg timestamp="20200717 21:29:27.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:24.679" endtime="20200717 21:29:27.380"></status>
</kw>
<msg timestamp="20200717 21:29:27.380" level="INFO">${result} = {
  "volumeName": "30263-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-17T21:28:48.492Z",
  "modificationTime": "2020-07-17T21:28:50.013Z",
  "...</msg>
<status status="PASS" starttime="20200717 21:29:24.678" endtime="20200717 21:29:27.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200717 21:29:27.380" endtime="20200717 21:29:27.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:27.385" level="INFO">Running command 'ozone sh key list /30263-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:29.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:29.954" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200717 21:29:27.382" endtime="20200717 21:29:29.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:29.955" level="INFO">key1</msg>
<status status="PASS" starttime="20200717 21:29:29.954" endtime="20200717 21:29:29.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:29.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:29.955" endtime="20200717 21:29:29.956"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:27.382" endtime="20200717 21:29:29.956"></status>
</kw>
<msg timestamp="20200717 21:29:29.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:27.382" endtime="20200717 21:29:29.956"></status>
</kw>
<msg timestamp="20200717 21:29:29.956" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200717 21:29:27.381" endtime="20200717 21:29:29.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:29:29.956" endtime="20200717 21:29:29.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:29.961" level="INFO">Running command 'ozone sh key rename /30263-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:32.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:32.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:29.958" endtime="20200717 21:29:32.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:32.244" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:32.243" endtime="20200717 21:29:32.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:32.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:32.245" endtime="20200717 21:29:32.245"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:29.957" endtime="20200717 21:29:32.245"></status>
</kw>
<msg timestamp="20200717 21:29:32.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:29.957" endtime="20200717 21:29:32.246"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:29.957" endtime="20200717 21:29:32.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:32.261" level="INFO">Running command 'ozone sh key list /30263-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:34.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:34.852" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200717 21:29:32.257" endtime="20200717 21:29:34.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:34.853" level="INFO">key2</msg>
<status status="PASS" starttime="20200717 21:29:34.852" endtime="20200717 21:29:34.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:34.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:34.853" endtime="20200717 21:29:34.854"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:32.257" endtime="20200717 21:29:34.854"></status>
</kw>
<msg timestamp="20200717 21:29:34.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:32.247" endtime="20200717 21:29:34.854"></status>
</kw>
<msg timestamp="20200717 21:29:34.855" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200717 21:29:32.246" endtime="20200717 21:29:34.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:29:34.855" endtime="20200717 21:29:34.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:34.859" level="INFO">Running command 'ozone sh key delete /30263-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:37.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:37.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:34.856" endtime="20200717 21:29:37.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:37.208" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:37.207" endtime="20200717 21:29:37.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:37.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:37.208" endtime="20200717 21:29:37.209"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:34.856" endtime="20200717 21:29:37.209"></status>
</kw>
<msg timestamp="20200717 21:29:37.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:34.856" endtime="20200717 21:29:37.209"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:34.855" endtime="20200717 21:29:37.209"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:46.234" endtime="20200717 21:29:37.210"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:46.234" endtime="20200717 21:29:37.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:37.213" level="INFO">Running command 'ozone sh bucket delete /30263-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:39.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:39.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:29:37.211" endtime="20200717 21:29:39.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:39.553" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:29:39.553" endtime="20200717 21:29:39.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:39.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:39.554" endtime="20200717 21:29:39.554"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:37.211" endtime="20200717 21:29:39.554"></status>
</kw>
<msg timestamp="20200717 21:29:39.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:37.210" endtime="20200717 21:29:39.555"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:37.210" endtime="20200717 21:29:39.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:29:39.559" level="INFO">Running command 'ozone sh volume delete /30263-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:29:41.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:29:41.797" level="INFO">${output} = Volume 30263-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200717 21:29:39.556" endtime="20200717 21:29:41.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:29:41.798" level="INFO">Volume 30263-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200717 21:29:41.797" endtime="20200717 21:29:41.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:29:41.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:29:41.798" endtime="20200717 21:29:41.799"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:39.556" endtime="20200717 21:29:41.799"></status>
</kw>
<msg timestamp="20200717 21:29:41.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:29:39.555" endtime="20200717 21:29:41.799"></status>
</kw>
<status status="PASS" starttime="20200717 21:29:39.555" endtime="20200717 21:29:41.799"></status>
</kw>
<status status="PASS" starttime="20200717 21:28:24.060" endtime="20200717 21:29:41.799"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:28:24.059" endtime="20200717 21:29:41.800" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200717 21:24:43.993" endtime="20200717 21:29:41.801"></status>
</suite>
<status status="PASS" starttime="20200717 21:22:13.047" endtime="20200717 21:29:41.807"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="15" fail="0" id="s1-s2" name="Links">ozone-basic.Links</stat>
<stat pass="6" fail="0" id="s1-s3" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
