<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:09:54.575" rpa="false">
<suite id="s1" name="hadoop31-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:09:54.629" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:09:56.579" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 21:09:56.579" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200717 21:09:54.626" endtime="20200717 21:09:56.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:09:56.580" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200717 21:09:56.579" endtime="20200717 21:09:56.580"></status>
</kw>
<msg timestamp="20200717 21:09:56.580" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200717 21:09:54.625" endtime="20200717 21:09:56.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:09:56.585" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:09:58.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:09:58.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:09:56.583" endtime="20200717 21:09:58.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:09:58.336" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:09:58.335" endtime="20200717 21:09:58.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:09:58.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:09:58.336" endtime="20200717 21:09:58.337"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:56.582" endtime="20200717 21:09:58.337"></status>
</kw>
<msg timestamp="20200717 21:09:58.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:09:56.582" endtime="20200717 21:09:58.337"></status>
</kw>
<msg timestamp="20200717 21:09:58.337" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 21:09:56.582" endtime="20200717 21:09:58.338"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 21:09:58.338" endtime="20200717 21:09:58.338"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:56.581" endtime="20200717 21:09:58.338"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:56.581" endtime="20200717 21:09:58.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:09:58.344" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:09:59.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:09:59.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:09:58.342" endtime="20200717 21:09:59.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:09:59.967" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:09:59.966" endtime="20200717 21:09:59.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:09:59.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:09:59.967" endtime="20200717 21:09:59.968"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:58.341" endtime="20200717 21:09:59.968"></status>
</kw>
<msg timestamp="20200717 21:09:59.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:09:58.340" endtime="20200717 21:09:59.968"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:58.339" endtime="20200717 21:09:59.968"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:58.339" endtime="20200717 21:09:59.968"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:58.338" endtime="20200717 21:09:59.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200717 21:09:59.969" endtime="20200717 21:09:59.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:09:59.974" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:10:01.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:10:01.740" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:09:59.836Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200717 21:09:59.971" endtime="20200717 21:10:01.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:10:01.741" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:09:59.836Z",
  "modificationTime" : "2020-07-17T21:09:59.836Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200717 21:10:01.740" endtime="20200717 21:10:01.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:10:01.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:10:01.741" endtime="20200717 21:10:01.742"></status>
</kw>
<status status="PASS" starttime="20200717 21:09:59.971" endtime="20200717 21:10:01.742"></status>
</kw>
<msg timestamp="20200717 21:10:01.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:09:59.970" endtime="20200717 21:10:01.742"></status>
</kw>
<msg timestamp="20200717 21:10:01.742" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-17T21:09:59.836Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200717 21:09:59.969" endtime="20200717 21:10:01.742"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200717 21:10:01.743" endtime="20200717 21:10:01.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:10:01.746" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:10:06.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:10:06.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:10:01.744" endtime="20200717 21:10:06.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:10:06.063" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:10:06.062" endtime="20200717 21:10:06.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:10:06.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:10:06.063" endtime="20200717 21:10:06.064"></status>
</kw>
<status status="PASS" starttime="20200717 21:10:01.744" endtime="20200717 21:10:06.064"></status>
</kw>
<msg timestamp="20200717 21:10:06.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:10:01.744" endtime="20200717 21:10:06.064"></status>
</kw>
<status status="PASS" starttime="20200717 21:10:01.743" endtime="20200717 21:10:06.064"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:09:54.624" endtime="20200717 21:10:06.064" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:10:06.072" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:10:08.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:10:08.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:10:06.067" endtime="20200717 21:10:08.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:10:08.385" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:10:08.384" endtime="20200717 21:10:08.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:10:08.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:10:08.385" endtime="20200717 21:10:08.386"></status>
</kw>
<status status="PASS" starttime="20200717 21:10:06.066" endtime="20200717 21:10:08.386"></status>
</kw>
<msg timestamp="20200717 21:10:08.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:10:06.066" endtime="20200717 21:10:08.386"></status>
</kw>
<status status="PASS" starttime="20200717 21:10:06.066" endtime="20200717 21:10:08.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:10:08.390" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:10:10.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:10:10.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 21:10:08.388" endtime="20200717 21:10:10.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:10:10.559" level="INFO"></msg>
<status status="PASS" starttime="20200717 21:10:10.558" endtime="20200717 21:10:10.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:10:10.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:10:10.559" endtime="20200717 21:10:10.560"></status>
</kw>
<status status="PASS" starttime="20200717 21:10:08.387" endtime="20200717 21:10:10.560"></status>
</kw>
<msg timestamp="20200717 21:10:10.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:10:08.387" endtime="20200717 21:10:10.560"></status>
</kw>
<status status="PASS" starttime="20200717 21:10:08.387" endtime="20200717 21:10:10.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200717 21:10:06.065" endtime="20200717 21:10:10.561" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200717 21:09:54.576" endtime="20200717 21:10:10.562"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop31-createmrenv">hadoop31-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
