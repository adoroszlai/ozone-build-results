<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:16:40.116" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:16:40.171" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:16:48.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:16:48.298" level="INFO">${output} = 2020-07-17 21:16:41,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:41,683 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:40.167" endtime="20200717 21:16:48.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:16:48.300" level="INFO">2020-07-17 21:16:41,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:41,683 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:16:41,683 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:16:42,799 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-17 21:16:42,800 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-17 21:16:42,800 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-17 21:16:42,800 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-17 21:16:42,800 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-17 21:16:42,800 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 21:16:42,800 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-17 21:16:42,802 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 21:16:42,808 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:16:42,905 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-87493, with hadoop as owner.
2020-07-17 21:16:42,944 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-87493/bucket-0-62142, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:16:43,478 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:16:43,809 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,123
Average Time spent in bucket creation: 00:00:00,022
Average Time spent in key creation: 00:00:00,147
Average Time spent in key write: 00:00:00,531
Total bytes written: 10240
Total Execution time: 00:00:06,055
***************************************************</msg>
<status status="PASS" starttime="20200717 21:16:48.299" endtime="20200717 21:16:48.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:16:48.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:16:48.300" endtime="20200717 21:16:48.300"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:40.166" endtime="20200717 21:16:48.301"></status>
</kw>
<msg timestamp="20200717 21:16:48.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:16:40.166" endtime="20200717 21:16:48.301"></status>
</kw>
<msg timestamp="20200717 21:16:48.301" level="INFO">${result} = 2020-07-17 21:16:41,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:41,683 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:40.165" endtime="20200717 21:16:48.301"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:16:48.302" endtime="20200717 21:16:48.302"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:48.301" endtime="20200717 21:16:48.302"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:16:40.164" endtime="20200717 21:16:48.303" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:16:48.315" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:16:53.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:16:53.815" level="INFO">${output} = 2020-07-17 21:16:49,765 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:49,910 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:48.306" endtime="20200717 21:16:53.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:16:53.817" level="INFO">2020-07-17 21:16:49,765 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:49,910 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:16:49,910 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:16:50,055 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fpnwms3qht
2020-07-17 21:16:50,067 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:16:51,079 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:16:51,209 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-17 21:16:51,285 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:16:51,845 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:16:52,080 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:16:53,080 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:16:53,478 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1383.612873, max=1383.612873, mean=1383.612873, stddev=0.0, median=1383.612873, p75=1383.612873, p95=1383.612873, p98=1383.612873, p99=1383.612873, p999=1383.612873, mean_rate=0.4647965567599634, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:16:53,482 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-17 21:16:53,482 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:16:53,482 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:16:53.816" endtime="20200717 21:16:53.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:16:53.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:16:53.818" endtime="20200717 21:16:53.818"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:48.305" endtime="20200717 21:16:53.818"></status>
</kw>
<msg timestamp="20200717 21:16:53.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:16:48.305" endtime="20200717 21:16:53.819"></status>
</kw>
<msg timestamp="20200717 21:16:53.819" level="INFO">${result} = 2020-07-17 21:16:49,765 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:49,910 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:48.304" endtime="20200717 21:16:53.819"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:16:53.819" endtime="20200717 21:16:53.820"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:53.819" endtime="20200717 21:16:53.820"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:16:48.303" endtime="20200717 21:16:53.820" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:16:53.825" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:16:57.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:16:57.692" level="INFO">${output} = 2020-07-17 21:16:55,098 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:55,273 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:53.823" endtime="20200717 21:16:57.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:16:57.693" level="INFO">2020-07-17 21:16:55,098 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:55,273 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:16:55,273 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:16:55,415 [main] INFO freon.BaseFreonGenerator: Executing test with prefix y2jeuw3xaa
2020-07-17 21:16:55,429 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:16:56,458 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:16:57,460 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:16:57,635 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=152.759635, max=152.759635, mean=152.759635, stddev=0.0, median=152.759635, p75=152.759635, p95=152.759635, p98=152.759635, p99=152.759635, p999=152.759635, mean_rate=0.886476529371271, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:16:57,636 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-17 21:16:57,640 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:16:57,640 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:16:57.692" endtime="20200717 21:16:57.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:16:57.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:16:57.693" endtime="20200717 21:16:57.694"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:53.822" endtime="20200717 21:16:57.694"></status>
</kw>
<msg timestamp="20200717 21:16:57.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:16:53.822" endtime="20200717 21:16:57.694"></status>
</kw>
<msg timestamp="20200717 21:16:57.695" level="INFO">${result} = 2020-07-17 21:16:55,098 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:55,273 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:53.821" endtime="20200717 21:16:57.695"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:16:57.695" endtime="20200717 21:16:57.696"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:57.695" endtime="20200717 21:16:57.696"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:16:53.821" endtime="20200717 21:16:57.696" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:16:57.702" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:17:01.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:17:01.986" level="INFO">${output} = 2020-07-17 21:16:59,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:59,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:57.699" endtime="20200717 21:17:01.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:17:01.987" level="INFO">2020-07-17 21:16:59,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:59,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:16:59,428 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:16:59,734 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yqyoneq3ru
2020-07-17 21:16:59,767 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:17:00,768 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:17:01,770 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:17:01,953 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=59.656587, max=59.656587, mean=59.656587, stddev=0.0, median=59.656587, p75=59.656587, p95=59.656587, p98=59.656587, p99=59.656587, p999=59.656587, mean_rate=0.8852194003182442, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:17:01,953 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-17 21:17:01,961 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:17:01,961 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:17:01.987" endtime="20200717 21:17:01.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:17:01.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:17:01.988" endtime="20200717 21:17:01.988"></status>
</kw>
<status status="PASS" starttime="20200717 21:16:57.699" endtime="20200717 21:17:01.988"></status>
</kw>
<msg timestamp="20200717 21:17:01.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:16:57.699" endtime="20200717 21:17:01.988"></status>
</kw>
<msg timestamp="20200717 21:17:01.989" level="INFO">${result} = 2020-07-17 21:16:59,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:16:59,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:16:57.698" endtime="20200717 21:17:01.989"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:17:01.989" endtime="20200717 21:17:01.990"></status>
</kw>
<status status="PASS" starttime="20200717 21:17:01.989" endtime="20200717 21:17:01.990"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:16:57.697" endtime="20200717 21:17:01.990" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200717 21:16:40.141" endtime="20200717 21:17:01.991"></status>
</suite>
<status status="PASS" starttime="20200717 21:16:40.117" endtime="20200717 21:17:01.995"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
