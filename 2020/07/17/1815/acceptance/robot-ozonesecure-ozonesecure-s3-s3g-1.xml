<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 22:26:17.893" rpa="false">
<suite id="s1" name="ozonesecure-s3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:17.963" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:17.964" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:26:17.964" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:26:17.958" endtime="20200717 22:26:17.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:17.965" endtime="20200717 22:26:17.965"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:17.968" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:18.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:18.111" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:26:17.966" endtime="20200717 22:26:18.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:18.117" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:18.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:18.491" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:26:18.113" endtime="20200717 22:26:18.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:18.493" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:26:18.492" endtime="20200717 22:26:18.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:18.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:18.493" endtime="20200717 22:26:18.493"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.113" endtime="20200717 22:26:18.493"></status>
</kw>
<msg timestamp="20200717 22:26:18.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:18.113" endtime="20200717 22:26:18.494"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.112" endtime="20200717 22:26:18.494"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.112" endtime="20200717 22:26:18.494"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.111" endtime="20200717 22:26:18.494"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:17.957" endtime="20200717 22:26:18.494"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:17.957" endtime="20200717 22:26:18.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:18.502" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:18.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:18.506" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:18.499" endtime="20200717 22:26:18.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:18.508" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:26:18.507" endtime="20200717 22:26:18.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:18.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:18.508" endtime="20200717 22:26:18.508"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.499" endtime="20200717 22:26:18.509"></status>
</kw>
<msg timestamp="20200717 22:26:18.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:18.497" endtime="20200717 22:26:18.509"></status>
</kw>
<msg timestamp="20200717 22:26:18.510" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:18.496" endtime="20200717 22:26:18.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:26:18.511" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:18.510" endtime="20200717 22:26:18.512"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:18.516" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:18.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:18.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:18.514" endtime="20200717 22:26:18.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:18.529" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:18.528" endtime="20200717 22:26:18.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:18.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:18.529" endtime="20200717 22:26:18.529"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.513" endtime="20200717 22:26:18.530"></status>
</kw>
<msg timestamp="20200717 22:26:18.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:18.513" endtime="20200717 22:26:18.530"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.512" endtime="20200717 22:26:18.530"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.512" endtime="20200717 22:26:18.530"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.496" endtime="20200717 22:26:18.530"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.495" endtime="20200717 22:26:18.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:18.536" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:21.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:21.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:18.532" endtime="20200717 22:26:21.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:21.298" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:21.297" endtime="20200717 22:26:21.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:21.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:21.298" endtime="20200717 22:26:21.298"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.532" endtime="20200717 22:26:21.298"></status>
</kw>
<msg timestamp="20200717 22:26:21.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:18.531" endtime="20200717 22:26:21.299"></status>
</kw>
<msg timestamp="20200717 22:26:21.299" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:18.531" endtime="20200717 22:26:21.299"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:21.300" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:21.299" endtime="20200717 22:26:21.300"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:21.300" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:21.300" endtime="20200717 22:26:21.300"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:21.302" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:26:21.301" endtime="20200717 22:26:21.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:21.302" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:21.302" endtime="20200717 22:26:21.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:21.303" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:21.302" endtime="20200717 22:26:21.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:21.306" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:21.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:21.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:21.304" endtime="20200717 22:26:21.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:21.626" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:21.625" endtime="20200717 22:26:21.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:21.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:21.626" endtime="20200717 22:26:21.627"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:21.304" endtime="20200717 22:26:21.627"></status>
</kw>
<msg timestamp="20200717 22:26:21.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:21.303" endtime="20200717 22:26:21.627"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:21.303" endtime="20200717 22:26:21.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:21.631" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:21.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:21.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:21.629" endtime="20200717 22:26:21.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:21.966" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:21.965" endtime="20200717 22:26:21.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:21.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:21.966" endtime="20200717 22:26:21.966"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:21.628" endtime="20200717 22:26:21.966"></status>
</kw>
<msg timestamp="20200717 22:26:21.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:21.628" endtime="20200717 22:26:21.967"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:21.628" endtime="20200717 22:26:21.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:21.971" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:22.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:22.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:21.968" endtime="20200717 22:26:22.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:22.299" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:22.298" endtime="20200717 22:26:22.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:22.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:22.299" endtime="20200717 22:26:22.299"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:21.968" endtime="20200717 22:26:22.300"></status>
</kw>
<msg timestamp="20200717 22:26:22.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:21.967" endtime="20200717 22:26:22.300"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:21.967" endtime="20200717 22:26:22.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:22.308" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:22.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:22.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:22.302" endtime="20200717 22:26:22.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:22.631" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:22.630" endtime="20200717 22:26:22.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:22.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:22.631" endtime="20200717 22:26:22.631"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:22.301" endtime="20200717 22:26:22.632"></status>
</kw>
<msg timestamp="20200717 22:26:22.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:22.301" endtime="20200717 22:26:22.632"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:22.300" endtime="20200717 22:26:22.632"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.531" endtime="20200717 22:26:22.632"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.530" endtime="20200717 22:26:22.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:22.632" endtime="20200717 22:26:22.633"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.495" endtime="20200717 22:26:22.633"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:18.494" endtime="20200717 22:26:22.633"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:22.637" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:25.401" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:26:25.401" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:22.633" endtime="20200717 22:26:25.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:25.402" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:26:25.402" endtime="20200717 22:26:25.402"></status>
</kw>
<msg timestamp="20200717 22:26:25.403" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:22.633" endtime="20200717 22:26:25.403"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:25.403" endtime="20200717 22:26:25.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:26:25.404" level="INFO">${postfix} = 75040</msg>
<status status="PASS" starttime="20200717 22:26:25.404" endtime="20200717 22:26:25.405"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:26:25.405" level="INFO">${bucket} = bucket-75040</msg>
<status status="PASS" starttime="20200717 22:26:25.405" endtime="20200717 22:26:25.405"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:25.409" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-75040 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:25.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:25.869" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-75040"
}</msg>
<status status="PASS" starttime="20200717 22:26:25.407" endtime="20200717 22:26:25.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:25.870" level="INFO">{
    "Location": "http://s3g:9878/bucket-75040"
}</msg>
<status status="PASS" starttime="20200717 22:26:25.869" endtime="20200717 22:26:25.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:25.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:25.870" endtime="20200717 22:26:25.871"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:25.406" endtime="20200717 22:26:25.871"></status>
</kw>
<msg timestamp="20200717 22:26:25.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:25.406" endtime="20200717 22:26:25.871"></status>
</kw>
<msg timestamp="20200717 22:26:25.871" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-75040"
}</msg>
<status status="PASS" starttime="20200717 22:26:25.406" endtime="20200717 22:26:25.871"></status>
</kw>
<msg timestamp="20200717 22:26:25.872" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-75040"
}</msg>
<status status="PASS" starttime="20200717 22:26:25.405" endtime="20200717 22:26:25.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:25.872" endtime="20200717 22:26:25.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:25.872" endtime="20200717 22:26:25.873"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:25.405" endtime="20200717 22:26:25.873"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:25.404" endtime="20200717 22:26:25.873"></status>
</kw>
<msg timestamp="20200717 22:26:25.873" level="INFO">${BUCKET} = bucket-75040</msg>
<status status="PASS" starttime="20200717 22:26:25.403" endtime="20200717 22:26:25.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:26:25.874" level="INFO">${BUCKET} = bucket-75040</msg>
<status status="PASS" starttime="20200717 22:26:25.873" endtime="20200717 22:26:25.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:25.874" endtime="20200717 22:26:25.874"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:17.957" endtime="20200717 22:26:25.874"></status>
</kw>
<suite id="s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:25.889" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:25.890" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:26:25.890" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:26:25.886" endtime="20200717 22:26:25.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:25.891" endtime="20200717 22:26:25.891"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:25.895" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:26.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:26.033" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:26:25.892" endtime="20200717 22:26:26.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:26.038" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:26.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:26.416" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:26:26.035" endtime="20200717 22:26:26.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:26.417" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:26:26.417" endtime="20200717 22:26:26.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:26.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:26.418" endtime="20200717 22:26:26.418"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.035" endtime="20200717 22:26:26.418"></status>
</kw>
<msg timestamp="20200717 22:26:26.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:26.035" endtime="20200717 22:26:26.419"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.034" endtime="20200717 22:26:26.419"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.034" endtime="20200717 22:26:26.419"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.033" endtime="20200717 22:26:26.419"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:25.885" endtime="20200717 22:26:26.419"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:25.885" endtime="20200717 22:26:26.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:26.424" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:26.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:26.427" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:26.422" endtime="20200717 22:26:26.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:26.427" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:26:26.427" endtime="20200717 22:26:26.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:26.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:26.428" endtime="20200717 22:26:26.428"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.422" endtime="20200717 22:26:26.428"></status>
</kw>
<msg timestamp="20200717 22:26:26.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:26.421" endtime="20200717 22:26:26.428"></status>
</kw>
<msg timestamp="20200717 22:26:26.429" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:26.421" endtime="20200717 22:26:26.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:26:26.430" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:26.429" endtime="20200717 22:26:26.430"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:26.434" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:26.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:26.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:26.432" endtime="20200717 22:26:26.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:26.446" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:26.445" endtime="20200717 22:26:26.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:26.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:26.446" endtime="20200717 22:26:26.446"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.432" endtime="20200717 22:26:26.447"></status>
</kw>
<msg timestamp="20200717 22:26:26.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:26.432" endtime="20200717 22:26:26.447"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.431" endtime="20200717 22:26:26.447"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.430" endtime="20200717 22:26:26.447"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.421" endtime="20200717 22:26:26.447"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.420" endtime="20200717 22:26:26.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:26.452" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:29.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:29.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:26.449" endtime="20200717 22:26:29.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:29.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:29.058" endtime="20200717 22:26:29.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:29.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:29.059" endtime="20200717 22:26:29.060"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.449" endtime="20200717 22:26:29.060"></status>
</kw>
<msg timestamp="20200717 22:26:29.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:26.449" endtime="20200717 22:26:29.060"></status>
</kw>
<msg timestamp="20200717 22:26:29.061" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:26.448" endtime="20200717 22:26:29.061"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:29.061" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:29.061" endtime="20200717 22:26:29.061"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:29.062" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:29.062" endtime="20200717 22:26:29.062"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:29.063" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:26:29.062" endtime="20200717 22:26:29.063"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:29.063" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:29.063" endtime="20200717 22:26:29.063"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:29.064" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:29.063" endtime="20200717 22:26:29.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:29.067" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:29.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:29.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:29.065" endtime="20200717 22:26:29.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:29.390" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:29.389" endtime="20200717 22:26:29.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:29.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:29.390" endtime="20200717 22:26:29.391"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:29.065" endtime="20200717 22:26:29.391"></status>
</kw>
<msg timestamp="20200717 22:26:29.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:29.064" endtime="20200717 22:26:29.392"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:29.064" endtime="20200717 22:26:29.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:29.395" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:29.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:29.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:29.393" endtime="20200717 22:26:29.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:29.723" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:29.723" endtime="20200717 22:26:29.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:29.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:29.724" endtime="20200717 22:26:29.724"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:29.393" endtime="20200717 22:26:29.725"></status>
</kw>
<msg timestamp="20200717 22:26:29.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:29.392" endtime="20200717 22:26:29.725"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:29.392" endtime="20200717 22:26:29.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:29.728" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:30.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:30.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:29.726" endtime="20200717 22:26:30.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:30.050" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:30.050" endtime="20200717 22:26:30.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:30.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:30.050" endtime="20200717 22:26:30.051"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:29.726" endtime="20200717 22:26:30.051"></status>
</kw>
<msg timestamp="20200717 22:26:30.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:29.726" endtime="20200717 22:26:30.051"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:29.725" endtime="20200717 22:26:30.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:30.056" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:30.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:30.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:30.053" endtime="20200717 22:26:30.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:30.386" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:30.385" endtime="20200717 22:26:30.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:30.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:30.386" endtime="20200717 22:26:30.387"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:30.052" endtime="20200717 22:26:30.387"></status>
</kw>
<msg timestamp="20200717 22:26:30.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:30.052" endtime="20200717 22:26:30.387"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:30.051" endtime="20200717 22:26:30.387"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.448" endtime="20200717 22:26:30.388"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.448" endtime="20200717 22:26:30.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:30.388" endtime="20200717 22:26:30.388"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.420" endtime="20200717 22:26:30.388"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:26.420" endtime="20200717 22:26:30.388"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:30.391" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:33.471" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:26:33.471" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:30.389" endtime="20200717 22:26:33.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:33.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:26:33.471" endtime="20200717 22:26:33.472"></status>
</kw>
<msg timestamp="20200717 22:26:33.472" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:30.389" endtime="20200717 22:26:33.472"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:33.472" endtime="20200717 22:26:33.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:26:33.475" level="INFO">${postfix} = 46286</msg>
<status status="PASS" starttime="20200717 22:26:33.474" endtime="20200717 22:26:33.475"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:26:33.476" level="INFO">${bucket} = bucket-46286</msg>
<status status="PASS" starttime="20200717 22:26:33.475" endtime="20200717 22:26:33.476"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:33.480" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-46286 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:33.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:33.942" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-46286"
}</msg>
<status status="PASS" starttime="20200717 22:26:33.478" endtime="20200717 22:26:33.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:33.943" level="INFO">{
    "Location": "http://s3g:9878/bucket-46286"
}</msg>
<status status="PASS" starttime="20200717 22:26:33.942" endtime="20200717 22:26:33.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:33.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:33.943" endtime="20200717 22:26:33.944"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:33.477" endtime="20200717 22:26:33.944"></status>
</kw>
<msg timestamp="20200717 22:26:33.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:33.477" endtime="20200717 22:26:33.944"></status>
</kw>
<msg timestamp="20200717 22:26:33.944" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-46286"
}</msg>
<status status="PASS" starttime="20200717 22:26:33.476" endtime="20200717 22:26:33.944"></status>
</kw>
<msg timestamp="20200717 22:26:33.945" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-46286"
}</msg>
<status status="PASS" starttime="20200717 22:26:33.476" endtime="20200717 22:26:33.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:33.945" endtime="20200717 22:26:33.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:33.945" endtime="20200717 22:26:33.946"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:33.476" endtime="20200717 22:26:33.946"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:33.474" endtime="20200717 22:26:33.946"></status>
</kw>
<msg timestamp="20200717 22:26:33.946" level="INFO">${BUCKET} = bucket-46286</msg>
<status status="PASS" starttime="20200717 22:26:33.474" endtime="20200717 22:26:33.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:26:33.947" level="INFO">${BUCKET} = bucket-46286</msg>
<status status="PASS" starttime="20200717 22:26:33.946" endtime="20200717 22:26:33.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:33.947" endtime="20200717 22:26:33.947"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:25.885" endtime="20200717 22:26:33.947"></status>
</kw>
<test id="s1-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:33.952" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:26:33.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:33.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:33.950" endtime="20200717 22:26:33.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:33.956" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:33.956" endtime="20200717 22:26:33.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:33.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:33.956" endtime="20200717 22:26:33.957"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:33.949" endtime="20200717 22:26:33.957"></status>
</kw>
<msg timestamp="20200717 22:26:33.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:33.949" endtime="20200717 22:26:33.958"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:33.948" endtime="20200717 22:26:33.958"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:33.963" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-46286 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:34.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:34.511" level="INFO">${output} = Completed 29 Bytes/29 Bytes (387 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/testfile          </msg>
<status status="PASS" starttime="20200717 22:26:33.960" endtime="20200717 22:26:34.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:34.512" level="INFO">Completed 29 Bytes/29 Bytes (387 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/testfile          </msg>
<status status="PASS" starttime="20200717 22:26:34.512" endtime="20200717 22:26:34.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:34.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:34.513" endtime="20200717 22:26:34.514"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:33.959" endtime="20200717 22:26:34.514"></status>
</kw>
<msg timestamp="20200717 22:26:34.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:33.959" endtime="20200717 22:26:34.514"></status>
</kw>
<msg timestamp="20200717 22:26:34.514" level="INFO">${output} = Completed 29 Bytes/29 Bytes (387 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/testfile          </msg>
<status status="PASS" starttime="20200717 22:26:33.958" endtime="20200717 22:26:34.514"></status>
</kw>
<msg timestamp="20200717 22:26:34.515" level="INFO">${result} = Completed 29 Bytes/29 Bytes (387 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/testfile          </msg>
<status status="PASS" starttime="20200717 22:26:33.958" endtime="20200717 22:26:34.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:34.515" endtime="20200717 22:26:34.515"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:34.519" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-46286/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:35.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:35.063" level="INFO">${output} = Completed 29 Bytes/29 Bytes (248 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/dir1/dir2/file    </msg>
<status status="PASS" starttime="20200717 22:26:34.517" endtime="20200717 22:26:35.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:35.064" level="INFO">Completed 29 Bytes/29 Bytes (248 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/dir1/dir2/file    </msg>
<status status="PASS" starttime="20200717 22:26:35.063" endtime="20200717 22:26:35.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:35.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:35.064" endtime="20200717 22:26:35.065"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:34.517" endtime="20200717 22:26:35.065"></status>
</kw>
<msg timestamp="20200717 22:26:35.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:34.516" endtime="20200717 22:26:35.065"></status>
</kw>
<msg timestamp="20200717 22:26:35.065" level="INFO">${output} = Completed 29 Bytes/29 Bytes (248 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/dir1/dir2/file    </msg>
<status status="PASS" starttime="20200717 22:26:34.516" endtime="20200717 22:26:35.066"></status>
</kw>
<msg timestamp="20200717 22:26:35.066" level="INFO">${result} = Completed 29 Bytes/29 Bytes (248 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-46286/dir1/dir2/file    </msg>
<status status="PASS" starttime="20200717 22:26:34.515" endtime="20200717 22:26:35.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.066" endtime="20200717 22:26:35.066"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:35.071" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-46286 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:35.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:35.507" level="INFO">${output} =                            PRE dir1/
2020-07-17 22:26:34         29 testfile</msg>
<status status="PASS" starttime="20200717 22:26:35.069" endtime="20200717 22:26:35.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:35.508" level="INFO">                           PRE dir1/
2020-07-17 22:26:34         29 testfile</msg>
<status status="PASS" starttime="20200717 22:26:35.508" endtime="20200717 22:26:35.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:35.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:35.509" endtime="20200717 22:26:35.509"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:35.068" endtime="20200717 22:26:35.509"></status>
</kw>
<msg timestamp="20200717 22:26:35.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:35.068" endtime="20200717 22:26:35.510"></status>
</kw>
<msg timestamp="20200717 22:26:35.510" level="INFO">${output} =                            PRE dir1/
2020-07-17 22:26:34         29 testfile</msg>
<status status="PASS" starttime="20200717 22:26:35.067" endtime="20200717 22:26:35.510"></status>
</kw>
<msg timestamp="20200717 22:26:35.510" level="INFO">${result} =                            PRE dir1/
2020-07-17 22:26:34         29 testfile</msg>
<status status="PASS" starttime="20200717 22:26:35.067" endtime="20200717 22:26:35.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.510" endtime="20200717 22:26:35.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.511" endtime="20200717 22:26:35.511"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.511" endtime="20200717 22:26:35.512"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:35.516" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-46286/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:35.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:35.970" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20200717 22:26:35.514" endtime="20200717 22:26:35.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:35.972" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20200717 22:26:35.971" endtime="20200717 22:26:35.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:35.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:35.972" endtime="20200717 22:26:35.972"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:35.513" endtime="20200717 22:26:35.973"></status>
</kw>
<msg timestamp="20200717 22:26:35.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:35.513" endtime="20200717 22:26:35.973"></status>
</kw>
<msg timestamp="20200717 22:26:35.973" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20200717 22:26:35.512" endtime="20200717 22:26:35.973"></status>
</kw>
<msg timestamp="20200717 22:26:35.973" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20200717 22:26:35.512" endtime="20200717 22:26:35.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.974" endtime="20200717 22:26:35.974"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.976" endtime="20200717 22:26:35.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:35.977" endtime="20200717 22:26:35.977"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:35.982" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-46286/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:36.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:36.429" level="INFO">${output} = 2020-07-17 22:26:35         29 file</msg>
<status status="PASS" starttime="20200717 22:26:35.979" endtime="20200717 22:26:36.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:36.431" level="INFO">2020-07-17 22:26:35         29 file</msg>
<status status="PASS" starttime="20200717 22:26:36.430" endtime="20200717 22:26:36.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:36.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:36.431" endtime="20200717 22:26:36.432"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:35.978" endtime="20200717 22:26:36.432"></status>
</kw>
<msg timestamp="20200717 22:26:36.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:35.978" endtime="20200717 22:26:36.432"></status>
</kw>
<msg timestamp="20200717 22:26:36.432" level="INFO">${output} = 2020-07-17 22:26:35         29 file</msg>
<status status="PASS" starttime="20200717 22:26:35.978" endtime="20200717 22:26:36.432"></status>
</kw>
<msg timestamp="20200717 22:26:36.432" level="INFO">${result} = 2020-07-17 22:26:35         29 file</msg>
<status status="PASS" starttime="20200717 22:26:35.977" endtime="20200717 22:26:36.433"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:36.433" endtime="20200717 22:26:36.433"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:36.433" endtime="20200717 22:26:36.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>file</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:36.434" endtime="20200717 22:26:36.434"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:26:33.947" endtime="20200717 22:26:36.434" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:26:25.874" endtime="20200717 22:26:36.435"></status>
</suite>
<suite id="s1-s2" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:36.451" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:36.452" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:26:36.452" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:26:36.447" endtime="20200717 22:26:36.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:36.452" endtime="20200717 22:26:36.453"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:36.455" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:36.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:36.598" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:26:36.453" endtime="20200717 22:26:36.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:36.604" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:36.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:36.989" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:26:36.601" endtime="20200717 22:26:36.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:36.990" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:26:36.989" endtime="20200717 22:26:36.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:36.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:36.990" endtime="20200717 22:26:36.991"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.601" endtime="20200717 22:26:36.991"></status>
</kw>
<msg timestamp="20200717 22:26:36.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:36.600" endtime="20200717 22:26:36.991"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.600" endtime="20200717 22:26:36.991"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.599" endtime="20200717 22:26:36.991"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.598" endtime="20200717 22:26:36.992"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.447" endtime="20200717 22:26:36.992"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.447" endtime="20200717 22:26:36.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:36.997" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:36.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:37.000" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:36.995" endtime="20200717 22:26:37.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:37.000" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:26:37.000" endtime="20200717 22:26:37.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:37.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:37.001" endtime="20200717 22:26:37.001"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.994" endtime="20200717 22:26:37.002"></status>
</kw>
<msg timestamp="20200717 22:26:37.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:36.994" endtime="20200717 22:26:37.002"></status>
</kw>
<msg timestamp="20200717 22:26:37.002" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:36.994" endtime="20200717 22:26:37.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:26:37.003" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:37.002" endtime="20200717 22:26:37.003"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:37.009" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:37.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:37.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:37.006" endtime="20200717 22:26:37.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:37.021" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:37.020" endtime="20200717 22:26:37.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:37.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:37.021" endtime="20200717 22:26:37.021"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:37.005" endtime="20200717 22:26:37.022"></status>
</kw>
<msg timestamp="20200717 22:26:37.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:37.004" endtime="20200717 22:26:37.022"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:37.004" endtime="20200717 22:26:37.022"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:37.003" endtime="20200717 22:26:37.022"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.993" endtime="20200717 22:26:37.022"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.993" endtime="20200717 22:26:37.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:37.027" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:39.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:39.892" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:37.024" endtime="20200717 22:26:39.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:39.894" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:39.893" endtime="20200717 22:26:39.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:39.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:39.894" endtime="20200717 22:26:39.894"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:37.024" endtime="20200717 22:26:39.895"></status>
</kw>
<msg timestamp="20200717 22:26:39.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:37.024" endtime="20200717 22:26:39.895"></status>
</kw>
<msg timestamp="20200717 22:26:39.895" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:37.023" endtime="20200717 22:26:39.895"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:39.896" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:39.895" endtime="20200717 22:26:39.896"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:39.896" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:39.896" endtime="20200717 22:26:39.896"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:39.897" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:26:39.897" endtime="20200717 22:26:39.897"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:39.898" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:39.897" endtime="20200717 22:26:39.898"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:39.898" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:39.898" endtime="20200717 22:26:39.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:39.903" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:40.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:40.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:39.900" endtime="20200717 22:26:40.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:40.224" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:40.223" endtime="20200717 22:26:40.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:40.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:40.224" endtime="20200717 22:26:40.225"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:39.899" endtime="20200717 22:26:40.225"></status>
</kw>
<msg timestamp="20200717 22:26:40.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:39.899" endtime="20200717 22:26:40.225"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:39.899" endtime="20200717 22:26:40.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:40.229" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:40.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:40.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:40.227" endtime="20200717 22:26:40.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:40.568" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:40.567" endtime="20200717 22:26:40.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:40.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:40.569" endtime="20200717 22:26:40.569"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:40.226" endtime="20200717 22:26:40.569"></status>
</kw>
<msg timestamp="20200717 22:26:40.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:40.226" endtime="20200717 22:26:40.570"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:40.226" endtime="20200717 22:26:40.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:40.573" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:40.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:40.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:40.571" endtime="20200717 22:26:40.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:40.904" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:40.904" endtime="20200717 22:26:40.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:40.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:40.904" endtime="20200717 22:26:40.905"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:40.571" endtime="20200717 22:26:40.905"></status>
</kw>
<msg timestamp="20200717 22:26:40.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:40.570" endtime="20200717 22:26:40.905"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:40.570" endtime="20200717 22:26:40.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:40.910" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:41.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:41.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:40.907" endtime="20200717 22:26:41.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:41.237" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:41.236" endtime="20200717 22:26:41.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:41.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:41.237" endtime="20200717 22:26:41.238"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:40.906" endtime="20200717 22:26:41.238"></status>
</kw>
<msg timestamp="20200717 22:26:41.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:40.906" endtime="20200717 22:26:41.238"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:40.906" endtime="20200717 22:26:41.238"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:37.023" endtime="20200717 22:26:41.239"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:37.023" endtime="20200717 22:26:41.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:41.239" endtime="20200717 22:26:41.239"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.992" endtime="20200717 22:26:41.239"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.992" endtime="20200717 22:26:41.239"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:41.244" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:44.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:26:44.120" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:41.240" endtime="20200717 22:26:44.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:44.122" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:26:44.121" endtime="20200717 22:26:44.122"></status>
</kw>
<msg timestamp="20200717 22:26:44.122" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:41.239" endtime="20200717 22:26:44.122"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:44.122" endtime="20200717 22:26:44.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:26:44.124" level="INFO">${postfix} = 58912</msg>
<status status="PASS" starttime="20200717 22:26:44.124" endtime="20200717 22:26:44.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:26:44.125" level="INFO">${bucket} = bucket-58912</msg>
<status status="PASS" starttime="20200717 22:26:44.124" endtime="20200717 22:26:44.125"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:44.130" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-58912 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:44.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:44.590" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.128" endtime="20200717 22:26:44.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:44.591" level="INFO">{
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.590" endtime="20200717 22:26:44.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:44.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:44.591" endtime="20200717 22:26:44.591"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:44.127" endtime="20200717 22:26:44.592"></status>
</kw>
<msg timestamp="20200717 22:26:44.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:44.126" endtime="20200717 22:26:44.592"></status>
</kw>
<msg timestamp="20200717 22:26:44.592" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.126" endtime="20200717 22:26:44.592"></status>
</kw>
<msg timestamp="20200717 22:26:44.592" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.125" endtime="20200717 22:26:44.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:44.592" endtime="20200717 22:26:44.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:44.593" endtime="20200717 22:26:44.593"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:44.125" endtime="20200717 22:26:44.593"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:44.123" endtime="20200717 22:26:44.594"></status>
</kw>
<msg timestamp="20200717 22:26:44.594" level="INFO">${BUCKET} = bucket-58912</msg>
<status status="PASS" starttime="20200717 22:26:44.123" endtime="20200717 22:26:44.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:26:44.594" level="INFO">${BUCKET} = bucket-58912</msg>
<status status="PASS" starttime="20200717 22:26:44.594" endtime="20200717 22:26:44.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:44.594" endtime="20200717 22:26:44.595"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:36.447" endtime="20200717 22:26:44.595"></status>
</kw>
<test id="s1-s2-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:26:44.597" level="INFO">${postfix} = 77991</msg>
<status status="PASS" starttime="20200717 22:26:44.596" endtime="20200717 22:26:44.597"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:26:44.597" level="INFO">${bucket} = bucket-77991</msg>
<status status="PASS" starttime="20200717 22:26:44.597" endtime="20200717 22:26:44.597"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:44.602" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-77991 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:45.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:45.047" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-77991"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.599" endtime="20200717 22:26:45.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:45.048" level="INFO">{
    "Location": "http://s3g:9878/bucket-77991"
}</msg>
<status status="PASS" starttime="20200717 22:26:45.048" endtime="20200717 22:26:45.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:45.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:45.048" endtime="20200717 22:26:45.049"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:44.599" endtime="20200717 22:26:45.049"></status>
</kw>
<msg timestamp="20200717 22:26:45.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:44.599" endtime="20200717 22:26:45.050"></status>
</kw>
<msg timestamp="20200717 22:26:45.050" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-77991"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.598" endtime="20200717 22:26:45.050"></status>
</kw>
<msg timestamp="20200717 22:26:45.050" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-77991"
}</msg>
<status status="PASS" starttime="20200717 22:26:44.598" endtime="20200717 22:26:45.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:45.050" endtime="20200717 22:26:45.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:45.051" endtime="20200717 22:26:45.051"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:44.598" endtime="20200717 22:26:45.051"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:44.596" endtime="20200717 22:26:45.052"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:26:44.595" endtime="20200717 22:26:45.052" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:45.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-58912 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:45.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:45.520" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:45.056" endtime="20200717 22:26:45.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:45.521" level="INFO">{
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:45.521" endtime="20200717 22:26:45.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:45.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:45.522" endtime="20200717 22:26:45.522"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:45.056" endtime="20200717 22:26:45.522"></status>
</kw>
<msg timestamp="20200717 22:26:45.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:45.055" endtime="20200717 22:26:45.523"></status>
</kw>
<msg timestamp="20200717 22:26:45.523" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:45.054" endtime="20200717 22:26:45.523"></status>
</kw>
<msg timestamp="20200717 22:26:45.523" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-58912"
}</msg>
<status status="PASS" starttime="20200717 22:26:45.054" endtime="20200717 22:26:45.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:45.523" endtime="20200717 22:26:45.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:45.524" endtime="20200717 22:26:45.524"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:45.053" endtime="20200717 22:26:45.524"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:26:45.052" endtime="20200717 22:26:45.525" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:45.530" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:45.985" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:26:45.985" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20200717 22:26:45.527" endtime="20200717 22:26:45.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:45.986" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20200717 22:26:45.986" endtime="20200717 22:26:45.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:45.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:45.987" endtime="20200717 22:26:45.987"></status>
</kw>
<msg timestamp="20200717 22:26:45.988" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20200717 22:26:45.527" endtime="20200717 22:26:45.988"></status>
</kw>
<msg timestamp="20200717 22:26:45.988" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20200717 22:26:45.526" endtime="20200717 22:26:45.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:45.988" endtime="20200717 22:26:45.989"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:26:45.525" endtime="20200717 22:26:45.989" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:26:36.437" endtime="20200717 22:26:45.990"></status>
</suite>
<suite id="s1-s3" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:46.006" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:46.008" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:26:46.008" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:26:46.004" endtime="20200717 22:26:46.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:46.009" endtime="20200717 22:26:46.009"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:46.012" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:46.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:46.154" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:26:46.010" endtime="20200717 22:26:46.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:46.159" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:46.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:46.536" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:26:46.157" endtime="20200717 22:26:46.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:46.537" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:26:46.536" endtime="20200717 22:26:46.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:46.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:46.537" endtime="20200717 22:26:46.538"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.157" endtime="20200717 22:26:46.538"></status>
</kw>
<msg timestamp="20200717 22:26:46.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:46.157" endtime="20200717 22:26:46.538"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.156" endtime="20200717 22:26:46.538"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.156" endtime="20200717 22:26:46.539"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.155" endtime="20200717 22:26:46.539"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.004" endtime="20200717 22:26:46.539"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.004" endtime="20200717 22:26:46.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:46.544" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:46.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:46.546" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:46.542" endtime="20200717 22:26:46.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:46.547" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:26:46.547" endtime="20200717 22:26:46.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:46.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:46.548" endtime="20200717 22:26:46.548"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.542" endtime="20200717 22:26:46.548"></status>
</kw>
<msg timestamp="20200717 22:26:46.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:46.541" endtime="20200717 22:26:46.548"></status>
</kw>
<msg timestamp="20200717 22:26:46.549" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:46.541" endtime="20200717 22:26:46.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:26:46.550" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:46.549" endtime="20200717 22:26:46.550"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:46.555" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:46.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:46.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:46.552" endtime="20200717 22:26:46.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:46.565" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:46.565" endtime="20200717 22:26:46.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:46.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:46.565" endtime="20200717 22:26:46.566"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.552" endtime="20200717 22:26:46.566"></status>
</kw>
<msg timestamp="20200717 22:26:46.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:46.551" endtime="20200717 22:26:46.566"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.551" endtime="20200717 22:26:46.566"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.550" endtime="20200717 22:26:46.566"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.541" endtime="20200717 22:26:46.567"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.540" endtime="20200717 22:26:46.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:46.572" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:49.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:49.385" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:46.569" endtime="20200717 22:26:49.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:49.386" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:49.386" endtime="20200717 22:26:49.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:49.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:49.386" endtime="20200717 22:26:49.387"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.568" endtime="20200717 22:26:49.387"></status>
</kw>
<msg timestamp="20200717 22:26:49.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:46.568" endtime="20200717 22:26:49.387"></status>
</kw>
<msg timestamp="20200717 22:26:49.388" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:46.568" endtime="20200717 22:26:49.388"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:49.388" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:49.388" endtime="20200717 22:26:49.388"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:49.389" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:49.389" endtime="20200717 22:26:49.389"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:49.390" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:26:49.389" endtime="20200717 22:26:49.390"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:49.390" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:49.390" endtime="20200717 22:26:49.390"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:49.391" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:49.390" endtime="20200717 22:26:49.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:49.396" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:49.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:49.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:49.392" endtime="20200717 22:26:49.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:49.719" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:49.719" endtime="20200717 22:26:49.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:49.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:49.719" endtime="20200717 22:26:49.720"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:49.391" endtime="20200717 22:26:49.720"></status>
</kw>
<msg timestamp="20200717 22:26:49.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:49.391" endtime="20200717 22:26:49.720"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:49.391" endtime="20200717 22:26:49.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:49.726" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:50.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:50.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:49.723" endtime="20200717 22:26:50.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:50.059" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:50.058" endtime="20200717 22:26:50.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:50.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:50.059" endtime="20200717 22:26:50.060"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:49.722" endtime="20200717 22:26:50.060"></status>
</kw>
<msg timestamp="20200717 22:26:50.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:49.722" endtime="20200717 22:26:50.060"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:49.721" endtime="20200717 22:26:50.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:50.064" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:50.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:50.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:50.062" endtime="20200717 22:26:50.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:50.403" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:50.403" endtime="20200717 22:26:50.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:50.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:50.403" endtime="20200717 22:26:50.404"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:50.061" endtime="20200717 22:26:50.405"></status>
</kw>
<msg timestamp="20200717 22:26:50.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:50.061" endtime="20200717 22:26:50.405"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:50.060" endtime="20200717 22:26:50.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:50.409" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:50.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:50.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:50.407" endtime="20200717 22:26:50.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:50.736" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:50.735" endtime="20200717 22:26:50.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:50.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:50.736" endtime="20200717 22:26:50.736"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:50.406" endtime="20200717 22:26:50.736"></status>
</kw>
<msg timestamp="20200717 22:26:50.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:50.406" endtime="20200717 22:26:50.737"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:50.405" endtime="20200717 22:26:50.737"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.567" endtime="20200717 22:26:50.737"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.567" endtime="20200717 22:26:50.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:50.737" endtime="20200717 22:26:50.738"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.540" endtime="20200717 22:26:50.738"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.539" endtime="20200717 22:26:50.738"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:50.741" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:53.689" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:26:53.689" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:50.738" endtime="20200717 22:26:53.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:53.690" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:26:53.689" endtime="20200717 22:26:53.690"></status>
</kw>
<msg timestamp="20200717 22:26:53.690" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:50.738" endtime="20200717 22:26:53.690"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:53.691" endtime="20200717 22:26:53.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:26:53.692" level="INFO">${postfix} = 02087</msg>
<status status="PASS" starttime="20200717 22:26:53.692" endtime="20200717 22:26:53.692"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:26:53.693" level="INFO">${bucket} = bucket-02087</msg>
<status status="PASS" starttime="20200717 22:26:53.692" endtime="20200717 22:26:53.693"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:53.697" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-02087 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:54.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:54.153" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-02087"
}</msg>
<status status="PASS" starttime="20200717 22:26:53.695" endtime="20200717 22:26:54.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:54.154" level="INFO">{
    "Location": "http://s3g:9878/bucket-02087"
}</msg>
<status status="PASS" starttime="20200717 22:26:54.154" endtime="20200717 22:26:54.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:54.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:54.155" endtime="20200717 22:26:54.155"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:53.694" endtime="20200717 22:26:54.155"></status>
</kw>
<msg timestamp="20200717 22:26:54.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:53.694" endtime="20200717 22:26:54.155"></status>
</kw>
<msg timestamp="20200717 22:26:54.156" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-02087"
}</msg>
<status status="PASS" starttime="20200717 22:26:53.694" endtime="20200717 22:26:54.156"></status>
</kw>
<msg timestamp="20200717 22:26:54.156" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-02087"
}</msg>
<status status="PASS" starttime="20200717 22:26:53.693" endtime="20200717 22:26:54.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:54.156" endtime="20200717 22:26:54.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:54.157" endtime="20200717 22:26:54.157"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:53.693" endtime="20200717 22:26:54.157"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:53.692" endtime="20200717 22:26:54.157"></status>
</kw>
<msg timestamp="20200717 22:26:54.157" level="INFO">${BUCKET} = bucket-02087</msg>
<status status="PASS" starttime="20200717 22:26:53.691" endtime="20200717 22:26:54.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:26:54.158" level="INFO">${BUCKET} = bucket-02087</msg>
<status status="PASS" starttime="20200717 22:26:54.158" endtime="20200717 22:26:54.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:54.158" endtime="20200717 22:26:54.158"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:46.003" endtime="20200717 22:26:54.159"></status>
</kw>
<test id="s1-s3-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:26:54.162" level="INFO">${postfix} = 72625</msg>
<status status="PASS" starttime="20200717 22:26:54.161" endtime="20200717 22:26:54.162"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:26:54.163" level="INFO">${bucket} = bucket-72625</msg>
<status status="PASS" starttime="20200717 22:26:54.162" endtime="20200717 22:26:54.163"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:54.168" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-72625 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:54.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:54.613" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-72625"
}</msg>
<status status="PASS" starttime="20200717 22:26:54.165" endtime="20200717 22:26:54.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:54.614" level="INFO">{
    "Location": "http://s3g:9878/bucket-72625"
}</msg>
<status status="PASS" starttime="20200717 22:26:54.614" endtime="20200717 22:26:54.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:54.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:54.615" endtime="20200717 22:26:54.615"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:54.164" endtime="20200717 22:26:54.615"></status>
</kw>
<msg timestamp="20200717 22:26:54.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:54.164" endtime="20200717 22:26:54.616"></status>
</kw>
<msg timestamp="20200717 22:26:54.616" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-72625"
}</msg>
<status status="PASS" starttime="20200717 22:26:54.164" endtime="20200717 22:26:54.616"></status>
</kw>
<msg timestamp="20200717 22:26:54.616" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-72625"
}</msg>
<status status="PASS" starttime="20200717 22:26:54.163" endtime="20200717 22:26:54.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:54.616" endtime="20200717 22:26:54.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:54.617" endtime="20200717 22:26:54.617"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:54.163" endtime="20200717 22:26:54.618"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:54.161" endtime="20200717 22:26:54.618"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:54.161" endtime="20200717 22:26:54.618"></status>
</kw>
<msg timestamp="20200717 22:26:54.618" level="INFO">${bucket} = bucket-72625</msg>
<status status="PASS" starttime="20200717 22:26:54.160" endtime="20200717 22:26:54.618"></status>
</kw>
<msg timestamp="20200717 22:26:54.618" level="INFO">${bucket} = bucket-72625</msg>
<status status="PASS" starttime="20200717 22:26:54.160" endtime="20200717 22:26:54.618"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket ${bucket}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:54.624" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-72625 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:55.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:55.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:54.620" endtime="20200717 22:26:55.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:55.063" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:55.062" endtime="20200717 22:26:55.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:55.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:55.063" endtime="20200717 22:26:55.064"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:54.620" endtime="20200717 22:26:55.064"></status>
</kw>
<msg timestamp="20200717 22:26:55.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:54.619" endtime="20200717 22:26:55.064"></status>
</kw>
<msg timestamp="20200717 22:26:55.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:54.619" endtime="20200717 22:26:55.065"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:54.618" endtime="20200717 22:26:55.065"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:26:54.159" endtime="20200717 22:26:55.065" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:55.070" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:55.527" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:26:55.527" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:26:55.068" endtime="20200717 22:26:55.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:55.528" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:26:55.527" endtime="20200717 22:26:55.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:55.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:55.528" endtime="20200717 22:26:55.529"></status>
</kw>
<msg timestamp="20200717 22:26:55.529" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:26:55.067" endtime="20200717 22:26:55.529"></status>
</kw>
<msg timestamp="20200717 22:26:55.530" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:26:55.066" endtime="20200717 22:26:55.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:55.530" endtime="20200717 22:26:55.530"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:26:55.066" endtime="20200717 22:26:55.530" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:26:45.992" endtime="20200717 22:26:55.531"></status>
</suite>
<suite id="s1-s4" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:55.545" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:55.547" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:26:55.547" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:26:55.543" endtime="20200717 22:26:55.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:26:55.548" endtime="20200717 22:26:55.548"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:55.551" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:55.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:55.693" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:26:55.548" endtime="20200717 22:26:55.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:55.700" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:56.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:56.086" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:26:55.696" endtime="20200717 22:26:56.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:56.087" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:26:56.087" endtime="20200717 22:26:56.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:56.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:56.087" endtime="20200717 22:26:56.088"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.696" endtime="20200717 22:26:56.088"></status>
</kw>
<msg timestamp="20200717 22:26:56.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:55.695" endtime="20200717 22:26:56.088"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.695" endtime="20200717 22:26:56.089"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.695" endtime="20200717 22:26:56.089"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.694" endtime="20200717 22:26:56.089"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.543" endtime="20200717 22:26:56.089"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.542" endtime="20200717 22:26:56.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:56.095" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:56.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:56.097" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:56.093" endtime="20200717 22:26:56.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:56.098" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:26:56.098" endtime="20200717 22:26:56.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:56.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:56.099" endtime="20200717 22:26:56.099"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.092" endtime="20200717 22:26:56.099"></status>
</kw>
<msg timestamp="20200717 22:26:56.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:56.092" endtime="20200717 22:26:56.099"></status>
</kw>
<msg timestamp="20200717 22:26:56.100" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:26:56.091" endtime="20200717 22:26:56.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:26:56.101" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:56.100" endtime="20200717 22:26:56.101"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:56.107" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:56.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:56.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:56.103" endtime="20200717 22:26:56.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:56.118" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:56.117" endtime="20200717 22:26:56.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:56.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:56.118" endtime="20200717 22:26:56.119"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.103" endtime="20200717 22:26:56.119"></status>
</kw>
<msg timestamp="20200717 22:26:56.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:56.103" endtime="20200717 22:26:56.119"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.102" endtime="20200717 22:26:56.120"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.102" endtime="20200717 22:26:56.120"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.091" endtime="20200717 22:26:56.120"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.091" endtime="20200717 22:26:56.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:56.125" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:58.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:58.918" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:56.123" endtime="20200717 22:26:58.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:58.920" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:58.919" endtime="20200717 22:26:58.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:58.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:58.920" endtime="20200717 22:26:58.920"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.122" endtime="20200717 22:26:58.921"></status>
</kw>
<msg timestamp="20200717 22:26:58.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:56.122" endtime="20200717 22:26:58.921"></status>
</kw>
<msg timestamp="20200717 22:26:58.921" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:26:56.121" endtime="20200717 22:26:58.921"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:58.922" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:58.921" endtime="20200717 22:26:58.922"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:58.922" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:26:58.922" endtime="20200717 22:26:58.922"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:58.923" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:26:58.923" endtime="20200717 22:26:58.923"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:26:58.924" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:26:58.923" endtime="20200717 22:26:58.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:26:58.924" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:26:58.924" endtime="20200717 22:26:58.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:58.929" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:59.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:59.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:58.927" endtime="20200717 22:26:59.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:59.258" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:59.257" endtime="20200717 22:26:59.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:59.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:59.258" endtime="20200717 22:26:59.259"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:58.925" endtime="20200717 22:26:59.259"></status>
</kw>
<msg timestamp="20200717 22:26:59.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:58.925" endtime="20200717 22:26:59.259"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:58.924" endtime="20200717 22:26:59.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:59.263" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:59.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:59.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:59.261" endtime="20200717 22:26:59.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:59.589" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:59.589" endtime="20200717 22:26:59.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:59.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:59.590" endtime="20200717 22:26:59.590"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:59.260" endtime="20200717 22:26:59.590"></status>
</kw>
<msg timestamp="20200717 22:26:59.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:59.260" endtime="20200717 22:26:59.591"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:59.260" endtime="20200717 22:26:59.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:59.595" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:26:59.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:26:59.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:59.592" endtime="20200717 22:26:59.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:26:59.914" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:26:59.913" endtime="20200717 22:26:59.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:26:59.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:26:59.914" endtime="20200717 22:26:59.915"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:59.592" endtime="20200717 22:26:59.915"></status>
</kw>
<msg timestamp="20200717 22:26:59.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:59.591" endtime="20200717 22:26:59.915"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:59.591" endtime="20200717 22:26:59.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:26:59.920" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:00.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:00.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:26:59.916" endtime="20200717 22:27:00.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:00.242" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:00.241" endtime="20200717 22:27:00.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:00.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:00.242" endtime="20200717 22:27:00.243"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:59.916" endtime="20200717 22:27:00.243"></status>
</kw>
<msg timestamp="20200717 22:27:00.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:26:59.916" endtime="20200717 22:27:00.243"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:59.915" endtime="20200717 22:27:00.243"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.121" endtime="20200717 22:27:00.243"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.121" endtime="20200717 22:27:00.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:00.244" endtime="20200717 22:27:00.244"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.090" endtime="20200717 22:27:00.244"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:56.089" endtime="20200717 22:27:00.244"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:00.247" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:03.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:03.206" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:00.245" endtime="20200717 22:27:03.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:03.208" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:27:03.207" endtime="20200717 22:27:03.208"></status>
</kw>
<msg timestamp="20200717 22:27:03.208" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:00.244" endtime="20200717 22:27:03.208"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:03.209" endtime="20200717 22:27:03.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:27:03.211" level="INFO">${postfix} = 86660</msg>
<status status="PASS" starttime="20200717 22:27:03.210" endtime="20200717 22:27:03.211"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:27:03.211" level="INFO">${bucket} = bucket-86660</msg>
<status status="PASS" starttime="20200717 22:27:03.211" endtime="20200717 22:27:03.211"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:03.215" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-86660 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:03.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:03.659" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-86660"
}</msg>
<status status="PASS" starttime="20200717 22:27:03.213" endtime="20200717 22:27:03.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:03.661" level="INFO">{
    "Location": "http://s3g:9878/bucket-86660"
}</msg>
<status status="PASS" starttime="20200717 22:27:03.660" endtime="20200717 22:27:03.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:03.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:03.661" endtime="20200717 22:27:03.661"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:03.213" endtime="20200717 22:27:03.662"></status>
</kw>
<msg timestamp="20200717 22:27:03.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:03.213" endtime="20200717 22:27:03.662"></status>
</kw>
<msg timestamp="20200717 22:27:03.662" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-86660"
}</msg>
<status status="PASS" starttime="20200717 22:27:03.212" endtime="20200717 22:27:03.662"></status>
</kw>
<msg timestamp="20200717 22:27:03.662" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-86660"
}</msg>
<status status="PASS" starttime="20200717 22:27:03.212" endtime="20200717 22:27:03.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:03.663" endtime="20200717 22:27:03.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:03.663" endtime="20200717 22:27:03.663"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:03.211" endtime="20200717 22:27:03.664"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:03.210" endtime="20200717 22:27:03.664"></status>
</kw>
<msg timestamp="20200717 22:27:03.664" level="INFO">${BUCKET} = bucket-86660</msg>
<status status="PASS" starttime="20200717 22:27:03.209" endtime="20200717 22:27:03.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:27:03.664" level="INFO">${BUCKET} = bucket-86660</msg>
<status status="PASS" starttime="20200717 22:27:03.664" endtime="20200717 22:27:03.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:03.665" endtime="20200717 22:27:03.665"></status>
</kw>
<status status="PASS" starttime="20200717 22:26:55.542" endtime="20200717 22:27:03.665"></status>
</kw>
<test id="s1-s4-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:03.671" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket bucket-86660 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:04.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:04.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:03.668" endtime="20200717 22:27:04.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:04.104" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:04.104" endtime="20200717 22:27:04.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:04.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:04.105" endtime="20200717 22:27:04.105"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:03.667" endtime="20200717 22:27:04.106"></status>
</kw>
<msg timestamp="20200717 22:27:04.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:03.667" endtime="20200717 22:27:04.106"></status>
</kw>
<msg timestamp="20200717 22:27:04.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:03.667" endtime="20200717 22:27:04.106"></status>
</kw>
<msg timestamp="20200717 22:27:04.106" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:27:03.666" endtime="20200717 22:27:04.106"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:04.111" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:04.560" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:04.560" level="INFO">${output} = 
An error occurred (400) when calling the HeadBucket operation: Bad Request</msg>
<status status="PASS" starttime="20200717 22:27:04.108" endtime="20200717 22:27:04.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:04.561" level="INFO">
An error occurred (400) when calling the HeadBucket operation: Bad Request</msg>
<status status="PASS" starttime="20200717 22:27:04.561" endtime="20200717 22:27:04.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:04.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:04.562" endtime="20200717 22:27:04.562"></status>
</kw>
<msg timestamp="20200717 22:27:04.563" level="INFO">${output} = 
An error occurred (400) when calling the HeadBucket operation: Bad Request</msg>
<status status="PASS" starttime="20200717 22:27:04.107" endtime="20200717 22:27:04.563"></status>
</kw>
<msg timestamp="20200717 22:27:04.563" level="INFO">${result} = 
An error occurred (400) when calling the HeadBucket operation: Bad Request</msg>
<status status="PASS" starttime="20200717 22:27:04.106" endtime="20200717 22:27:04.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Bad Request</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:04.563" endtime="20200717 22:27:04.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>400</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:04.564" endtime="20200717 22:27:04.564"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:03.665" endtime="20200717 22:27:04.564" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:26:55.533" endtime="20200717 22:27:04.566"></status>
</suite>
<suite id="s1-s5" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:04.579" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:04.581" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:27:04.582" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:27:04.577" endtime="20200717 22:27:04.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:04.582" endtime="20200717 22:27:04.582"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:04.585" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:04.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:04.719" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:27:04.583" endtime="20200717 22:27:04.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:04.724" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:05.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:05.100" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:27:04.722" endtime="20200717 22:27:05.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:05.102" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:27:05.101" endtime="20200717 22:27:05.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:05.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:05.102" endtime="20200717 22:27:05.102"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.721" endtime="20200717 22:27:05.103"></status>
</kw>
<msg timestamp="20200717 22:27:05.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:04.721" endtime="20200717 22:27:05.103"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.720" endtime="20200717 22:27:05.103"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.720" endtime="20200717 22:27:05.103"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.719" endtime="20200717 22:27:05.103"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.576" endtime="20200717 22:27:05.106"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.576" endtime="20200717 22:27:05.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:05.113" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:05.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:05.116" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:27:05.111" endtime="20200717 22:27:05.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:05.117" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:27:05.117" endtime="20200717 22:27:05.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:05.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:05.117" endtime="20200717 22:27:05.118"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.110" endtime="20200717 22:27:05.118"></status>
</kw>
<msg timestamp="20200717 22:27:05.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:05.110" endtime="20200717 22:27:05.118"></status>
</kw>
<msg timestamp="20200717 22:27:05.119" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:27:05.109" endtime="20200717 22:27:05.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:27:05.120" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:27:05.119" endtime="20200717 22:27:05.120"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:05.125" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:05.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:05.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:05.122" endtime="20200717 22:27:05.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:05.136" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:05.135" endtime="20200717 22:27:05.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:05.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:05.136" endtime="20200717 22:27:05.136"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.121" endtime="20200717 22:27:05.137"></status>
</kw>
<msg timestamp="20200717 22:27:05.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:05.121" endtime="20200717 22:27:05.137"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.121" endtime="20200717 22:27:05.137"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.120" endtime="20200717 22:27:05.137"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.108" endtime="20200717 22:27:05.137"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.108" endtime="20200717 22:27:05.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:05.144" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:08.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:08.057" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:05.140" endtime="20200717 22:27:08.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:08.058" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:27:08.058" endtime="20200717 22:27:08.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:08.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:08.058" endtime="20200717 22:27:08.059"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.140" endtime="20200717 22:27:08.059"></status>
</kw>
<msg timestamp="20200717 22:27:08.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:05.139" endtime="20200717 22:27:08.059"></status>
</kw>
<msg timestamp="20200717 22:27:08.059" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:05.138" endtime="20200717 22:27:08.059"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:27:08.060" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:27:08.060" endtime="20200717 22:27:08.060"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:27:08.061" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:27:08.060" endtime="20200717 22:27:08.061"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:27:08.061" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:27:08.061" endtime="20200717 22:27:08.061"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:27:08.062" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:27:08.061" endtime="20200717 22:27:08.062"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:27:08.062" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:27:08.062" endtime="20200717 22:27:08.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:08.067" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:08.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:08.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:08.064" endtime="20200717 22:27:08.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:08.374" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:08.374" endtime="20200717 22:27:08.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:08.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:08.375" endtime="20200717 22:27:08.375"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:08.063" endtime="20200717 22:27:08.375"></status>
</kw>
<msg timestamp="20200717 22:27:08.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:08.063" endtime="20200717 22:27:08.375"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:08.062" endtime="20200717 22:27:08.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:08.379" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:08.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:08.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:08.377" endtime="20200717 22:27:08.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:08.709" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:08.708" endtime="20200717 22:27:08.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:08.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:08.709" endtime="20200717 22:27:08.710"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:08.377" endtime="20200717 22:27:08.710"></status>
</kw>
<msg timestamp="20200717 22:27:08.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:08.376" endtime="20200717 22:27:08.710"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:08.376" endtime="20200717 22:27:08.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:08.715" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:09.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:09.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:08.712" endtime="20200717 22:27:09.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:09.034" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:09.033" endtime="20200717 22:27:09.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:09.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:09.034" endtime="20200717 22:27:09.035"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:08.711" endtime="20200717 22:27:09.035"></status>
</kw>
<msg timestamp="20200717 22:27:09.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:08.711" endtime="20200717 22:27:09.035"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:08.710" endtime="20200717 22:27:09.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:09.039" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:09.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:09.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:09.037" endtime="20200717 22:27:09.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:09.357" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:09.356" endtime="20200717 22:27:09.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:09.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:09.357" endtime="20200717 22:27:09.357"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:09.036" endtime="20200717 22:27:09.358"></status>
</kw>
<msg timestamp="20200717 22:27:09.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:09.036" endtime="20200717 22:27:09.358"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:09.036" endtime="20200717 22:27:09.358"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.138" endtime="20200717 22:27:09.358"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.138" endtime="20200717 22:27:09.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:09.358" endtime="20200717 22:27:09.359"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.107" endtime="20200717 22:27:09.359"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:05.106" endtime="20200717 22:27:09.359"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:09.363" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:12.118" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:12.118" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:09.360" endtime="20200717 22:27:12.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:12.119" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:27:12.119" endtime="20200717 22:27:12.119"></status>
</kw>
<msg timestamp="20200717 22:27:12.120" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:09.359" endtime="20200717 22:27:12.120"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:12.120" endtime="20200717 22:27:12.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:27:12.122" level="INFO">${postfix} = 34833</msg>
<status status="PASS" starttime="20200717 22:27:12.121" endtime="20200717 22:27:12.122"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:27:12.122" level="INFO">${bucket} = bucket-34833</msg>
<status status="PASS" starttime="20200717 22:27:12.122" endtime="20200717 22:27:12.122"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:12.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-34833 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:12.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:12.582" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-34833"
}</msg>
<status status="PASS" starttime="20200717 22:27:12.124" endtime="20200717 22:27:12.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:12.583" level="INFO">{
    "Location": "http://s3g:9878/bucket-34833"
}</msg>
<status status="PASS" starttime="20200717 22:27:12.583" endtime="20200717 22:27:12.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:12.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:12.583" endtime="20200717 22:27:12.584"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:12.124" endtime="20200717 22:27:12.584"></status>
</kw>
<msg timestamp="20200717 22:27:12.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:12.124" endtime="20200717 22:27:12.584"></status>
</kw>
<msg timestamp="20200717 22:27:12.585" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-34833"
}</msg>
<status status="PASS" starttime="20200717 22:27:12.123" endtime="20200717 22:27:12.585"></status>
</kw>
<msg timestamp="20200717 22:27:12.585" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-34833"
}</msg>
<status status="PASS" starttime="20200717 22:27:12.123" endtime="20200717 22:27:12.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:12.585" endtime="20200717 22:27:12.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:12.585" endtime="20200717 22:27:12.586"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:12.123" endtime="20200717 22:27:12.586"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:12.121" endtime="20200717 22:27:12.586"></status>
</kw>
<msg timestamp="20200717 22:27:12.586" level="INFO">${BUCKET} = bucket-34833</msg>
<status status="PASS" starttime="20200717 22:27:12.120" endtime="20200717 22:27:12.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:27:12.587" level="INFO">${BUCKET} = bucket-34833</msg>
<status status="PASS" starttime="20200717 22:27:12.586" endtime="20200717 22:27:12.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:12.587" endtime="20200717 22:27:12.587"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:04.576" endtime="20200717 22:27:12.587"></status>
</kw>
<test id="s1-s5-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:12.594" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:13.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:13.063" level="INFO">${output} = bucket-02087
bucket-17279
bucket-23259
bucket-34833
bucket-46286
bucket-58912
bucket-75040
bucket-77991
bucket-86660
bucket-test123
destbucket-09766
link</msg>
<status status="PASS" starttime="20200717 22:27:12.590" endtime="20200717 22:27:13.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.064" level="INFO">bucket-02087
bucket-17279
bucket-23259
bucket-34833
bucket-46286
bucket-58912
bucket-75040
bucket-77991
bucket-86660
bucket-test123
destbucket-09766
link</msg>
<status status="PASS" starttime="20200717 22:27:13.063" endtime="20200717 22:27:13.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:13.064" endtime="20200717 22:27:13.065"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:12.590" endtime="20200717 22:27:13.065"></status>
</kw>
<msg timestamp="20200717 22:27:13.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:12.589" endtime="20200717 22:27:13.065"></status>
</kw>
<msg timestamp="20200717 22:27:13.066" level="INFO">${output} = bucket-02087
bucket-17279
bucket-23259
bucket-34833
bucket-46286
bucket-58912
bucket-75040
bucket-77991
bucket-86660
bucket-test123
destbucket-09766
link</msg>
<status status="PASS" starttime="20200717 22:27:12.589" endtime="20200717 22:27:13.066"></status>
</kw>
<msg timestamp="20200717 22:27:13.066" level="INFO">${result} = bucket-02087
bucket-17279
bucket-23259
bucket-34833
bucket-46286
bucket-58912
bucket-75040
bucket-77991
bucket-86660
bucket-test123
destbucket-09766
link</msg>
<status status="PASS" starttime="20200717 22:27:12.588" endtime="20200717 22:27:13.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:13.066" endtime="20200717 22:27:13.066"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:12.588" endtime="20200717 22:27:13.067" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:27:04.567" endtime="20200717 22:27:13.068"></status>
</suite>
<suite id="s1-s6" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:13.082" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:13.084" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:27:13.084" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:27:13.079" endtime="20200717 22:27:13.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:13.085" endtime="20200717 22:27:13.085"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:13.087" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:13.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:13.224" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:27:13.085" endtime="20200717 22:27:13.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:13.229" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:13.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:13.597" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:27:13.227" endtime="20200717 22:27:13.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.598" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:27:13.598" endtime="20200717 22:27:13.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:13.599" endtime="20200717 22:27:13.599"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.226" endtime="20200717 22:27:13.599"></status>
</kw>
<msg timestamp="20200717 22:27:13.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:13.226" endtime="20200717 22:27:13.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.226" endtime="20200717 22:27:13.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.225" endtime="20200717 22:27:13.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.225" endtime="20200717 22:27:13.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.079" endtime="20200717 22:27:13.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.079" endtime="20200717 22:27:13.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:13.607" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:13.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:13.609" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:27:13.604" endtime="20200717 22:27:13.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.610" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:27:13.609" endtime="20200717 22:27:13.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:13.610" endtime="20200717 22:27:13.610"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.602" endtime="20200717 22:27:13.611"></status>
</kw>
<msg timestamp="20200717 22:27:13.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:13.602" endtime="20200717 22:27:13.611"></status>
</kw>
<msg timestamp="20200717 22:27:13.611" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:27:13.602" endtime="20200717 22:27:13.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:27:13.612" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:27:13.611" endtime="20200717 22:27:13.612"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:13.618" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:13.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:13.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:13.615" endtime="20200717 22:27:13.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.628" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:13.628" endtime="20200717 22:27:13.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:13.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:13.629" endtime="20200717 22:27:13.629"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.614" endtime="20200717 22:27:13.629"></status>
</kw>
<msg timestamp="20200717 22:27:13.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:13.613" endtime="20200717 22:27:13.629"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.613" endtime="20200717 22:27:13.630"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.613" endtime="20200717 22:27:13.630"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.602" endtime="20200717 22:27:13.630"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.601" endtime="20200717 22:27:13.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:13.635" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:16.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:16.538" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:13.632" endtime="20200717 22:27:16.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:16.539" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:27:16.539" endtime="20200717 22:27:16.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:16.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:16.540" endtime="20200717 22:27:16.540"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.631" endtime="20200717 22:27:16.540"></status>
</kw>
<msg timestamp="20200717 22:27:16.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:13.631" endtime="20200717 22:27:16.541"></status>
</kw>
<msg timestamp="20200717 22:27:16.541" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:13.631" endtime="20200717 22:27:16.541"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:27:16.542" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:27:16.542" endtime="20200717 22:27:16.542"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:27:16.543" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:27:16.542" endtime="20200717 22:27:16.543"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:27:16.543" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:27:16.543" endtime="20200717 22:27:16.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:27:16.544" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:27:16.543" endtime="20200717 22:27:16.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:27:16.544" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:27:16.544" endtime="20200717 22:27:16.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:16.549" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:16.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:16.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:16.546" endtime="20200717 22:27:16.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:16.866" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:16.865" endtime="20200717 22:27:16.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:16.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:16.866" endtime="20200717 22:27:16.866"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:16.545" endtime="20200717 22:27:16.867"></status>
</kw>
<msg timestamp="20200717 22:27:16.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:16.545" endtime="20200717 22:27:16.867"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:16.544" endtime="20200717 22:27:16.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:16.871" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:17.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:17.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:16.869" endtime="20200717 22:27:17.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:17.191" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:17.191" endtime="20200717 22:27:17.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:17.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:17.192" endtime="20200717 22:27:17.192"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:16.868" endtime="20200717 22:27:17.193"></status>
</kw>
<msg timestamp="20200717 22:27:17.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:16.868" endtime="20200717 22:27:17.193"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:16.867" endtime="20200717 22:27:17.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:17.197" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:17.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:17.194" endtime="20200717 22:27:17.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:17.523" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:17.523" endtime="20200717 22:27:17.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:17.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:17.524" endtime="20200717 22:27:17.524"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:17.194" endtime="20200717 22:27:17.524"></status>
</kw>
<msg timestamp="20200717 22:27:17.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:17.194" endtime="20200717 22:27:17.525"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:17.193" endtime="20200717 22:27:17.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:17.529" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:17.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:17.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:17.527" endtime="20200717 22:27:17.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:17.860" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:17.859" endtime="20200717 22:27:17.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:17.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:17.860" endtime="20200717 22:27:17.861"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:17.526" endtime="20200717 22:27:17.861"></status>
</kw>
<msg timestamp="20200717 22:27:17.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:17.526" endtime="20200717 22:27:17.861"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:17.525" endtime="20200717 22:27:17.861"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.630" endtime="20200717 22:27:17.861"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.630" endtime="20200717 22:27:17.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:17.862" endtime="20200717 22:27:17.862"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.601" endtime="20200717 22:27:17.862"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.600" endtime="20200717 22:27:17.862"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:17.865" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:20.892" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:20.892" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:17.863" endtime="20200717 22:27:20.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:20.893" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:27:20.893" endtime="20200717 22:27:20.893"></status>
</kw>
<msg timestamp="20200717 22:27:20.894" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:17.862" endtime="20200717 22:27:20.894"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:20.894" endtime="20200717 22:27:20.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:27:20.896" level="INFO">${postfix} = 17515</msg>
<status status="PASS" starttime="20200717 22:27:20.895" endtime="20200717 22:27:20.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:27:20.896" level="INFO">${bucket} = bucket-17515</msg>
<status status="PASS" starttime="20200717 22:27:20.896" endtime="20200717 22:27:20.896"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:20.901" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-17515 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:21.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:21.342" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-17515"
}</msg>
<status status="PASS" starttime="20200717 22:27:20.898" endtime="20200717 22:27:21.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.343" level="INFO">{
    "Location": "http://s3g:9878/bucket-17515"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.343" endtime="20200717 22:27:21.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:21.343" endtime="20200717 22:27:21.344"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:20.898" endtime="20200717 22:27:21.344"></status>
</kw>
<msg timestamp="20200717 22:27:21.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:20.898" endtime="20200717 22:27:21.344"></status>
</kw>
<msg timestamp="20200717 22:27:21.345" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-17515"
}</msg>
<status status="PASS" starttime="20200717 22:27:20.897" endtime="20200717 22:27:21.345"></status>
</kw>
<msg timestamp="20200717 22:27:21.345" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-17515"
}</msg>
<status status="PASS" starttime="20200717 22:27:20.896" endtime="20200717 22:27:21.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:21.345" endtime="20200717 22:27:21.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:21.346" endtime="20200717 22:27:21.346"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:20.896" endtime="20200717 22:27:21.346"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:20.895" endtime="20200717 22:27:21.346"></status>
</kw>
<msg timestamp="20200717 22:27:21.346" level="INFO">${BUCKET} = bucket-17515</msg>
<status status="PASS" starttime="20200717 22:27:20.894" endtime="20200717 22:27:21.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.347" level="INFO">${BUCKET} = bucket-17515</msg>
<status status="PASS" starttime="20200717 22:27:21.347" endtime="20200717 22:27:21.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:21.347" endtime="20200717 22:27:21.347"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:13.079" endtime="20200717 22:27:21.348"></status>
</kw>
<test id="s1-s6-t1" name="Test Multipart Upload">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:21.354" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:21.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:21.796" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.351" endtime="20200717 22:27:21.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.798" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.797" endtime="20200717 22:27:21.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:21.798" endtime="20200717 22:27:21.798"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:21.350" endtime="20200717 22:27:21.799"></status>
</kw>
<msg timestamp="20200717 22:27:21.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:21.350" endtime="20200717 22:27:21.799"></status>
</kw>
<msg timestamp="20200717 22:27:21.799" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.349" endtime="20200717 22:27:21.799"></status>
</kw>
<msg timestamp="20200717 22:27:21.799" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.349" endtime="20200717 22:27:21.799"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:21.802" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298", 
    "Key": "multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:21.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:21.840" level="INFO">${output} = 9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298</msg>
<status status="PASS" starttime="20200717 22:27:21.800" endtime="20200717 22:27:21.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.841" level="INFO">9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298</msg>
<status status="PASS" starttime="20200717 22:27:21.840" endtime="20200717 22:27:21.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:21.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:21.841" endtime="20200717 22:27:21.841"></status>
</kw>
<msg timestamp="20200717 22:27:21.842" level="INFO">${uploadID} = 9e5586e8-dc08-49f7-a5e2-f1c790601507-104531548029059298</msg>
<status status="PASS" starttime="20200717 22:27:21.800" endtime="20200717 22:27:21.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:21.842" endtime="20200717 22:27:21.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:21.843" endtime="20200717 22:27:21.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:21.843" endtime="20200717 22:27:21.843"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:21.850" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:22.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:22.313" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.847" endtime="20200717 22:27:22.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:22.314" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:22.313" endtime="20200717 22:27:22.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:22.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:22.314" endtime="20200717 22:27:22.315"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:21.846" endtime="20200717 22:27:22.315"></status>
</kw>
<msg timestamp="20200717 22:27:22.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:21.845" endtime="20200717 22:27:22.315"></status>
</kw>
<msg timestamp="20200717 22:27:22.315" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.844" endtime="20200717 22:27:22.315"></status>
</kw>
<msg timestamp="20200717 22:27:22.316" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483", 
    "Key": "multipartKey"
}</msg>
<status status="PASS" starttime="20200717 22:27:21.844" endtime="20200717 22:27:22.316"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${nextUploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:22.319" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483", 
    "Key": "multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:22.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:22.358" level="INFO">${output} = 4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483</msg>
<status status="PASS" starttime="20200717 22:27:22.316" endtime="20200717 22:27:22.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:22.359" level="INFO">4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483</msg>
<status status="PASS" starttime="20200717 22:27:22.358" endtime="20200717 22:27:22.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:22.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:22.359" endtime="20200717 22:27:22.360"></status>
</kw>
<msg timestamp="20200717 22:27:22.360" level="INFO">${nextUploadID} = 4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483</msg>
<status status="PASS" starttime="20200717 22:27:22.316" endtime="20200717 22:27:22.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:22.360" endtime="20200717 22:27:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:22.361" endtime="20200717 22:27:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:22.361" endtime="20200717 22:27:22.362"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:22.362" endtime="20200717 22:27:22.362"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:22.366" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:22.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:22.414" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0427567 s, 123 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:22.364" endtime="20200717 22:27:22.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:22.415" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0427567 s, 123 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:22.414" endtime="20200717 22:27:22.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:22.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:22.415" endtime="20200717 22:27:22.416"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:22.364" endtime="20200717 22:27:22.416"></status>
</kw>
<msg timestamp="20200717 22:27:22.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:22.364" endtime="20200717 22:27:22.416"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:22.363" endtime="20200717 22:27:22.416"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:22.363" endtime="20200717 22:27:22.417"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:22.362" endtime="20200717 22:27:22.417"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:22.421" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey --part-number 1 --body /tmp/part1 --upload-id 4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:23.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:23.216" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey104531548102394084"
}</msg>
<status status="PASS" starttime="20200717 22:27:22.419" endtime="20200717 22:27:23.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:23.217" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey104531548102394084"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.217" endtime="20200717 22:27:23.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:23.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:23.218" endtime="20200717 22:27:23.230"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:22.418" endtime="20200717 22:27:23.230"></status>
</kw>
<msg timestamp="20200717 22:27:23.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:22.418" endtime="20200717 22:27:23.230"></status>
</kw>
<msg timestamp="20200717 22:27:23.231" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey104531548102394084"
}</msg>
<status status="PASS" starttime="20200717 22:27:22.417" endtime="20200717 22:27:23.231"></status>
</kw>
<msg timestamp="20200717 22:27:23.231" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey104531548102394084"
}</msg>
<status status="PASS" starttime="20200717 22:27:22.417" endtime="20200717 22:27:23.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:23.231" endtime="20200717 22:27:23.231"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:23.236" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:23.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:23.309" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0690368 s, 75.9 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:23.233" endtime="20200717 22:27:23.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:23.310" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0690368 s, 75.9 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:23.309" endtime="20200717 22:27:23.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:23.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:23.310" endtime="20200717 22:27:23.311"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:23.233" endtime="20200717 22:27:23.311"></status>
</kw>
<msg timestamp="20200717 22:27:23.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:23.233" endtime="20200717 22:27:23.311"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:23.232" endtime="20200717 22:27:23.312"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:23.232" endtime="20200717 22:27:23.312"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:23.231" endtime="20200717 22:27:23.312"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:23.316" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey --part-number 1 --body /tmp/part1 --upload-id 4dd4f7a5-89f3-4c2d-9817-099ee6e88054-104531548063072483 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:23.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:23.988" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey104531548161245413"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.314" endtime="20200717 22:27:23.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:23.990" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey104531548161245413"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.989" endtime="20200717 22:27:23.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:23.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:23.990" endtime="20200717 22:27:23.990"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:23.313" endtime="20200717 22:27:23.991"></status>
</kw>
<msg timestamp="20200717 22:27:23.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:23.313" endtime="20200717 22:27:23.991"></status>
</kw>
<msg timestamp="20200717 22:27:23.991" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey104531548161245413"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.313" endtime="20200717 22:27:23.991"></status>
</kw>
<msg timestamp="20200717 22:27:23.992" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey104531548161245413"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.312" endtime="20200717 22:27:23.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:23.992" endtime="20200717 22:27:23.992"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:21.348" endtime="20200717 22:27:23.992" critical="yes"></status>
</test>
<test id="s1-s6-t2" name="Test Multipart Upload Complete">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:23.999" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:24.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:24.446" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.997" endtime="20200717 22:27:24.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:24.447" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:24.446" endtime="20200717 22:27:24.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:24.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:24.447" endtime="20200717 22:27:24.448"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:23.996" endtime="20200717 22:27:24.448"></status>
</kw>
<msg timestamp="20200717 22:27:24.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:23.996" endtime="20200717 22:27:24.448"></status>
</kw>
<msg timestamp="20200717 22:27:24.449" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.996" endtime="20200717 22:27:24.449"></status>
</kw>
<msg timestamp="20200717 22:27:24.449" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:23.995" endtime="20200717 22:27:24.449"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:24.453" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846", 
    "Key": "multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:24.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:24.489" level="INFO">${output} = b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846</msg>
<status status="PASS" starttime="20200717 22:27:24.450" endtime="20200717 22:27:24.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:24.490" level="INFO">b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846</msg>
<status status="PASS" starttime="20200717 22:27:24.489" endtime="20200717 22:27:24.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:24.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:24.490" endtime="20200717 22:27:24.491"></status>
</kw>
<msg timestamp="20200717 22:27:24.491" level="INFO">${uploadID} = b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846</msg>
<status status="PASS" starttime="20200717 22:27:24.449" endtime="20200717 22:27:24.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:24.491" endtime="20200717 22:27:24.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:24.492" endtime="20200717 22:27:24.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:24.492" endtime="20200717 22:27:24.493"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:24.498" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:24.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:24.538" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0379926 s, 138 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:24.495" endtime="20200717 22:27:24.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:24.539" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0379926 s, 138 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:24.539" endtime="20200717 22:27:24.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:24.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:24.540" endtime="20200717 22:27:24.540"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:24.494" endtime="20200717 22:27:24.540"></status>
</kw>
<msg timestamp="20200717 22:27:24.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:24.494" endtime="20200717 22:27:24.540"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:24.494" endtime="20200717 22:27:24.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:24.493" endtime="20200717 22:27:24.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:24.493" endtime="20200717 22:27:24.541"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:24.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey1 --part-number 1 --body /tmp/part1 --upload-id b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:25.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:25.228" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey1104531548240085223"
}</msg>
<status status="PASS" starttime="20200717 22:27:24.543" endtime="20200717 22:27:25.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.230" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey1104531548240085223"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.229" endtime="20200717 22:27:25.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:25.231" endtime="20200717 22:27:25.232"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:24.543" endtime="20200717 22:27:25.232"></status>
</kw>
<msg timestamp="20200717 22:27:25.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:24.542" endtime="20200717 22:27:25.232"></status>
</kw>
<msg timestamp="20200717 22:27:25.232" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey1104531548240085223"
}</msg>
<status status="PASS" starttime="20200717 22:27:24.542" endtime="20200717 22:27:25.233"></status>
</kw>
<msg timestamp="20200717 22:27:25.233" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey1104531548240085223"
}</msg>
<status status="PASS" starttime="20200717 22:27:24.541" endtime="20200717 22:27:25.233"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:25.236" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey1104531548240085223"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:25.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:25.278" level="INFO">${output} = /s3v/bucket-17515/multipartKey1104531548240085223</msg>
<status status="PASS" starttime="20200717 22:27:25.234" endtime="20200717 22:27:25.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.279" level="INFO">/s3v/bucket-17515/multipartKey1104531548240085223</msg>
<status status="PASS" starttime="20200717 22:27:25.279" endtime="20200717 22:27:25.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:25.279" endtime="20200717 22:27:25.280"></status>
</kw>
<msg timestamp="20200717 22:27:25.280" level="INFO">${eTag1} = /s3v/bucket-17515/multipartKey1104531548240085223</msg>
<status status="PASS" starttime="20200717 22:27:25.233" endtime="20200717 22:27:25.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:25.280" endtime="20200717 22:27:25.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:25.285" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20200717 22:27:25.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:25.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:25.282" endtime="20200717 22:27:25.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.287" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:25.287" endtime="20200717 22:27:25.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:25.287" endtime="20200717 22:27:25.288"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:25.282" endtime="20200717 22:27:25.288"></status>
</kw>
<msg timestamp="20200717 22:27:25.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:25.281" endtime="20200717 22:27:25.288"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:25.281" endtime="20200717 22:27:25.289"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:25.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey1 --part-number 2 --body /tmp/part2 --upload-id b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:25.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:25.781" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey1104531548287402216"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.291" endtime="20200717 22:27:25.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.782" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey1104531548287402216"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.782" endtime="20200717 22:27:25.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:25.783" endtime="20200717 22:27:25.783"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:25.290" endtime="20200717 22:27:25.783"></status>
</kw>
<msg timestamp="20200717 22:27:25.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:25.290" endtime="20200717 22:27:25.784"></status>
</kw>
<msg timestamp="20200717 22:27:25.784" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey1104531548287402216"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.290" endtime="20200717 22:27:25.784"></status>
</kw>
<msg timestamp="20200717 22:27:25.784" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey1104531548287402216"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.289" endtime="20200717 22:27:25.784"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:25.788" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey1104531548287402216"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:25.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:25.825" level="INFO">${output} = /s3v/bucket-17515/multipartKey1104531548287402216</msg>
<status status="PASS" starttime="20200717 22:27:25.785" endtime="20200717 22:27:25.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.826" level="INFO">/s3v/bucket-17515/multipartKey1104531548287402216</msg>
<status status="PASS" starttime="20200717 22:27:25.825" endtime="20200717 22:27:25.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:25.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:25.826" endtime="20200717 22:27:25.827"></status>
</kw>
<msg timestamp="20200717 22:27:25.827" level="INFO">${eTag2} = /s3v/bucket-17515/multipartKey1104531548287402216</msg>
<status status="PASS" starttime="20200717 22:27:25.784" endtime="20200717 22:27:25.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:25.827" endtime="20200717 22:27:25.827"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:25.833" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b706338e-2959-41ab-81f6-bcea3a81f3b2-104531548202991846 --bucket bucket-17515 --key multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/multipartKey1104531548240085223,PartNumber=1},{ETag=/s3v/bucket-17515/multipartKey1104531548287402216,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:26.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:26.281" level="INFO">${output} = {
    "ETag": "bce9fd38ec234b410e92c9e4ad7e9d5be7c68905ee5cb43842f04e8450deb67c", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.830" endtime="20200717 22:27:26.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.283" level="INFO">{
    "ETag": "bce9fd38ec234b410e92c9e4ad7e9d5be7c68905ee5cb43842f04e8450deb67c", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:26.282" endtime="20200717 22:27:26.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:26.283" endtime="20200717 22:27:26.283"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:25.829" endtime="20200717 22:27:26.284"></status>
</kw>
<msg timestamp="20200717 22:27:26.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:25.829" endtime="20200717 22:27:26.284"></status>
</kw>
<msg timestamp="20200717 22:27:26.284" level="INFO">${output} = {
    "ETag": "bce9fd38ec234b410e92c9e4ad7e9d5be7c68905ee5cb43842f04e8450deb67c", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.829" endtime="20200717 22:27:26.284"></status>
</kw>
<msg timestamp="20200717 22:27:26.284" level="INFO">${result} = {
    "ETag": "bce9fd38ec234b410e92c9e4ad7e9d5be7c68905ee5cb43842f04e8450deb67c", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey1"
}</msg>
<status status="PASS" starttime="20200717 22:27:25.827" endtime="20200717 22:27:26.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:26.284" endtime="20200717 22:27:26.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:26.285" endtime="20200717 22:27:26.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:26.285" endtime="20200717 22:27:26.286"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key multipartKey1 /tmp/multipartKey1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:26.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-17515 --key multipartKey1 /tmp/multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:26.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:26.874" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:26 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:26.288" endtime="20200717 22:27:26.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.875" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:26 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22:27:26 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:27:26.874" endtime="20200717 22:27:26.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:26.875" endtime="20200717 22:27:26.876"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.287" endtime="20200717 22:27:26.876"></status>
</kw>
<msg timestamp="20200717 22:27:26.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:26.287" endtime="20200717 22:27:26.876"></status>
</kw>
<msg timestamp="20200717 22:27:26.877" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:26 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:26.286" endtime="20200717 22:27:26.877"></status>
</kw>
<msg timestamp="20200717 22:27:26.877" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:26 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:26.286" endtime="20200717 22:27:26.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/multipartKey1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:26.880" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/multipartKey1'.</msg>
<msg timestamp="20200717 22:27:26.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:26.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:26.878" endtime="20200717 22:27:26.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.891" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:26.891" endtime="20200717 22:27:26.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:26.891" endtime="20200717 22:27:26.892"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.878" endtime="20200717 22:27:26.892"></status>
</kw>
<msg timestamp="20200717 22:27:26.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:26.878" endtime="20200717 22:27:26.892"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.877" endtime="20200717 22:27:26.893"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/multipartKey1</arg>
<arg>/tmp/multipartKey1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:26.897" level="INFO">Running command 'md5sum /tmp/multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:26.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:26.912" level="INFO">${output} = f70360e9e613c8af82186ec429e07053</msg>
<status status="PASS" starttime="20200717 22:27:26.895" endtime="20200717 22:27:26.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.913" level="INFO">f70360e9e613c8af82186ec429e07053</msg>
<status status="PASS" starttime="20200717 22:27:26.912" endtime="20200717 22:27:26.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:26.913" endtime="20200717 22:27:26.914"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.895" endtime="20200717 22:27:26.914"></status>
</kw>
<msg timestamp="20200717 22:27:26.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:26.894" endtime="20200717 22:27:26.916"></status>
</kw>
<msg timestamp="20200717 22:27:26.917" level="INFO">${checksumbefore} = f70360e9e613c8af82186ec429e07053</msg>
<status status="PASS" starttime="20200717 22:27:26.893" endtime="20200717 22:27:26.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:26.921" level="INFO">Running command 'md5sum /tmp/multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:26.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:26.935" level="INFO">${output} = f70360e9e613c8af82186ec429e07053</msg>
<status status="PASS" starttime="20200717 22:27:26.918" endtime="20200717 22:27:26.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.936" level="INFO">f70360e9e613c8af82186ec429e07053</msg>
<status status="PASS" starttime="20200717 22:27:26.935" endtime="20200717 22:27:26.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:26.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:26.936" endtime="20200717 22:27:26.937"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.918" endtime="20200717 22:27:26.937"></status>
</kw>
<msg timestamp="20200717 22:27:26.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:26.917" endtime="20200717 22:27:26.937"></status>
</kw>
<msg timestamp="20200717 22:27:26.937" level="INFO">${checksumafter} = f70360e9e613c8af82186ec429e07053</msg>
<status status="PASS" starttime="20200717 22:27:26.917" endtime="20200717 22:27:26.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:26.938" endtime="20200717 22:27:26.938"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.893" endtime="20200717 22:27:26.938"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:23.994" endtime="20200717 22:27:26.938" critical="yes"></status>
</test>
<test id="s1-s6-t3" name="Test Multipart Upload Complete Entity too small">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:26.945" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:27.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:27.415" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625", 
    "Key": "multipartKey2"
}</msg>
<status status="PASS" starttime="20200717 22:27:26.942" endtime="20200717 22:27:27.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:27.417" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625", 
    "Key": "multipartKey2"
}</msg>
<status status="PASS" starttime="20200717 22:27:27.416" endtime="20200717 22:27:27.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:27.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:27.418" endtime="20200717 22:27:27.418"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:26.941" endtime="20200717 22:27:27.419"></status>
</kw>
<msg timestamp="20200717 22:27:27.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:26.941" endtime="20200717 22:27:27.419"></status>
</kw>
<msg timestamp="20200717 22:27:27.419" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625", 
    "Key": "multipartKey2"
}</msg>
<status status="PASS" starttime="20200717 22:27:26.941" endtime="20200717 22:27:27.419"></status>
</kw>
<msg timestamp="20200717 22:27:27.419" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625", 
    "Key": "multipartKey2"
}</msg>
<status status="PASS" starttime="20200717 22:27:26.940" endtime="20200717 22:27:27.420"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:27.424" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625", 
    "Key": "multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:27.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:27.466" level="INFO">${output} = 52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625</msg>
<status status="PASS" starttime="20200717 22:27:27.420" endtime="20200717 22:27:27.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:27.467" level="INFO">52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625</msg>
<status status="PASS" starttime="20200717 22:27:27.466" endtime="20200717 22:27:27.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:27.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:27.467" endtime="20200717 22:27:27.468"></status>
</kw>
<msg timestamp="20200717 22:27:27.468" level="INFO">${uploadID} = 52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625</msg>
<status status="PASS" starttime="20200717 22:27:27.420" endtime="20200717 22:27:27.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:27.468" endtime="20200717 22:27:27.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:27.469" endtime="20200717 22:27:27.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:27.469" endtime="20200717 22:27:27.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part1" &gt; /tmp/part1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:27.476" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20200717 22:27:27.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:27.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:27.471" endtime="20200717 22:27:27.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:27.478" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:27.477" endtime="20200717 22:27:27.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:27.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:27.478" endtime="20200717 22:27:27.479"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:27.471" endtime="20200717 22:27:27.479"></status>
</kw>
<msg timestamp="20200717 22:27:27.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:27.470" endtime="20200717 22:27:27.479"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:27.470" endtime="20200717 22:27:27.480"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:27.484" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:28.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:28.024" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey2104531548432433386"
}</msg>
<status status="PASS" starttime="20200717 22:27:27.482" endtime="20200717 22:27:28.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.025" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey2104531548432433386"
}</msg>
<status status="PASS" starttime="20200717 22:27:28.024" endtime="20200717 22:27:28.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:28.025" endtime="20200717 22:27:28.026"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:27.481" endtime="20200717 22:27:28.026"></status>
</kw>
<msg timestamp="20200717 22:27:28.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:27.481" endtime="20200717 22:27:28.026"></status>
</kw>
<msg timestamp="20200717 22:27:28.026" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey2104531548432433386"
}</msg>
<status status="PASS" starttime="20200717 22:27:27.480" endtime="20200717 22:27:28.026"></status>
</kw>
<msg timestamp="20200717 22:27:28.027" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey2104531548432433386"
}</msg>
<status status="PASS" starttime="20200717 22:27:27.480" endtime="20200717 22:27:28.027"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:28.030" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey2104531548432433386"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:28.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:28.067" level="INFO">${output} = /s3v/bucket-17515/multipartKey2104531548432433386</msg>
<status status="PASS" starttime="20200717 22:27:28.027" endtime="20200717 22:27:28.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.068" level="INFO">/s3v/bucket-17515/multipartKey2104531548432433386</msg>
<status status="PASS" starttime="20200717 22:27:28.068" endtime="20200717 22:27:28.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:28.069" endtime="20200717 22:27:28.069"></status>
</kw>
<msg timestamp="20200717 22:27:28.070" level="INFO">${eTag1} = /s3v/bucket-17515/multipartKey2104531548432433386</msg>
<status status="PASS" starttime="20200717 22:27:28.027" endtime="20200717 22:27:28.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:28.070" endtime="20200717 22:27:28.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:28.074" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20200717 22:27:28.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:28.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:28.072" endtime="20200717 22:27:28.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.077" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:28.076" endtime="20200717 22:27:28.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:28.077" endtime="20200717 22:27:28.077"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:28.071" endtime="20200717 22:27:28.078"></status>
</kw>
<msg timestamp="20200717 22:27:28.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:28.071" endtime="20200717 22:27:28.078"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:28.070" endtime="20200717 22:27:28.078"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:28.082" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:28.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:28.573" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey2104531548470575339"
}</msg>
<status status="PASS" starttime="20200717 22:27:28.080" endtime="20200717 22:27:28.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.574" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey2104531548470575339"
}</msg>
<status status="PASS" starttime="20200717 22:27:28.573" endtime="20200717 22:27:28.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:28.574" endtime="20200717 22:27:28.575"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:28.079" endtime="20200717 22:27:28.575"></status>
</kw>
<msg timestamp="20200717 22:27:28.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:28.079" endtime="20200717 22:27:28.575"></status>
</kw>
<msg timestamp="20200717 22:27:28.575" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey2104531548470575339"
}</msg>
<status status="PASS" starttime="20200717 22:27:28.079" endtime="20200717 22:27:28.575"></status>
</kw>
<msg timestamp="20200717 22:27:28.576" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey2104531548470575339"
}</msg>
<status status="PASS" starttime="20200717 22:27:28.078" endtime="20200717 22:27:28.576"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:28.579" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey2104531548470575339"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:28.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:28.620" level="INFO">${output} = /s3v/bucket-17515/multipartKey2104531548470575339</msg>
<status status="PASS" starttime="20200717 22:27:28.576" endtime="20200717 22:27:28.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.621" level="INFO">/s3v/bucket-17515/multipartKey2104531548470575339</msg>
<status status="PASS" starttime="20200717 22:27:28.620" endtime="20200717 22:27:28.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:28.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:28.621" endtime="20200717 22:27:28.622"></status>
</kw>
<msg timestamp="20200717 22:27:28.622" level="INFO">${eTag2} = /s3v/bucket-17515/multipartKey2104531548470575339</msg>
<status status="PASS" starttime="20200717 22:27:28.576" endtime="20200717 22:27:28.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:28.622" endtime="20200717 22:27:28.623"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:28.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 52c46d8e-bd38-4f54-bf38-4607cf33c032-104531548397371625 --bucket bucket-17515 --key multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/multipartKey2104531548432433386,PartNumber=1},{ETag=/s3v/bucket-17515/multipartKey2104531548470575339,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:29.073" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:29.073" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20200717 22:27:28.624" endtime="20200717 22:27:29.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:29.074" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20200717 22:27:29.074" endtime="20200717 22:27:29.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:29.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:29.075" endtime="20200717 22:27:29.075"></status>
</kw>
<msg timestamp="20200717 22:27:29.076" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20200717 22:27:28.624" endtime="20200717 22:27:29.076"></status>
</kw>
<msg timestamp="20200717 22:27:29.076" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20200717 22:27:28.623" endtime="20200717 22:27:29.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:29.076" endtime="20200717 22:27:29.077"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:26.939" endtime="20200717 22:27:29.077" critical="yes"></status>
</test>
<test id="s1-s6-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:29.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:29.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:29.535" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:29.080" endtime="20200717 22:27:29.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:29.536" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:29.536" endtime="20200717 22:27:29.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:29.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:29.537" endtime="20200717 22:27:29.537"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:29.080" endtime="20200717 22:27:29.537"></status>
</kw>
<msg timestamp="20200717 22:27:29.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:29.079" endtime="20200717 22:27:29.538"></status>
</kw>
<msg timestamp="20200717 22:27:29.538" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:29.079" endtime="20200717 22:27:29.538"></status>
</kw>
<msg timestamp="20200717 22:27:29.538" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:29.078" endtime="20200717 22:27:29.538"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:29.541" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412", 
    "Key": "multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:29.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:29.580" level="INFO">${output} = 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412</msg>
<status status="PASS" starttime="20200717 22:27:29.539" endtime="20200717 22:27:29.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:29.582" level="INFO">002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412</msg>
<status status="PASS" starttime="20200717 22:27:29.581" endtime="20200717 22:27:29.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:29.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:29.582" endtime="20200717 22:27:29.583"></status>
</kw>
<msg timestamp="20200717 22:27:29.583" level="INFO">${uploadID} = 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412</msg>
<status status="PASS" starttime="20200717 22:27:29.538" endtime="20200717 22:27:29.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:29.583" endtime="20200717 22:27:29.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:29.584" endtime="20200717 22:27:29.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:29.584" endtime="20200717 22:27:29.585"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:29.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 --bucket bucket-17515 --key multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:30.032" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:30.032" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:29.586" endtime="20200717 22:27:30.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:30.033" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20200717 22:27:30.033" endtime="20200717 22:27:30.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:30.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:30.034" endtime="20200717 22:27:30.034"></status>
</kw>
<msg timestamp="20200717 22:27:30.034" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:29.586" endtime="20200717 22:27:30.034"></status>
</kw>
<msg timestamp="20200717 22:27:30.035" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:29.585" endtime="20200717 22:27:30.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:30.035" endtime="20200717 22:27:30.035"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:30.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 --bucket bucket-17515 --key multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:30.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:30.508" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:30.037" endtime="20200717 22:27:30.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:30.509" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20200717 22:27:30.508" endtime="20200717 22:27:30.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:30.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:30.509" endtime="20200717 22:27:30.510"></status>
</kw>
<msg timestamp="20200717 22:27:30.510" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:30.036" endtime="20200717 22:27:30.510"></status>
</kw>
<msg timestamp="20200717 22:27:30.510" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:30.035" endtime="20200717 22:27:30.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:30.510" endtime="20200717 22:27:30.511"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:30.522" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:30.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:30.580" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0467919 s, 112 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:30.513" endtime="20200717 22:27:30.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:30.582" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0467919 s, 112 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:30.581" endtime="20200717 22:27:30.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:30.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:30.582" endtime="20200717 22:27:30.583"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:30.512" endtime="20200717 22:27:30.583"></status>
</kw>
<msg timestamp="20200717 22:27:30.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:30.512" endtime="20200717 22:27:30.583"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:30.512" endtime="20200717 22:27:30.584"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:30.511" endtime="20200717 22:27:30.584"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:30.511" endtime="20200717 22:27:30.584"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:30.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:31.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:31.405" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548637167853"
}</msg>
<status status="PASS" starttime="20200717 22:27:30.586" endtime="20200717 22:27:31.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:31.406" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey3104531548637167853"
}</msg>
<status status="PASS" starttime="20200717 22:27:31.405" endtime="20200717 22:27:31.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:31.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:31.406" endtime="20200717 22:27:31.407"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:30.585" endtime="20200717 22:27:31.407"></status>
</kw>
<msg timestamp="20200717 22:27:31.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:30.585" endtime="20200717 22:27:31.407"></status>
</kw>
<msg timestamp="20200717 22:27:31.408" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548637167853"
}</msg>
<status status="PASS" starttime="20200717 22:27:30.585" endtime="20200717 22:27:31.408"></status>
</kw>
<msg timestamp="20200717 22:27:31.408" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548637167853"
}</msg>
<status status="PASS" starttime="20200717 22:27:30.584" endtime="20200717 22:27:31.408"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:31.411" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey3104531548637167853"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:31.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:31.454" level="INFO">${output} = /s3v/bucket-17515/multipartKey3104531548637167853</msg>
<status status="PASS" starttime="20200717 22:27:31.409" endtime="20200717 22:27:31.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:31.455" level="INFO">/s3v/bucket-17515/multipartKey3104531548637167853</msg>
<status status="PASS" starttime="20200717 22:27:31.455" endtime="20200717 22:27:31.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:31.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:31.455" endtime="20200717 22:27:31.456"></status>
</kw>
<msg timestamp="20200717 22:27:31.456" level="INFO">${eTag1} = /s3v/bucket-17515/multipartKey3104531548637167853</msg>
<status status="PASS" starttime="20200717 22:27:31.408" endtime="20200717 22:27:31.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:31.457" endtime="20200717 22:27:31.457"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:31.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:32.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:32.114" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548693922030"
}</msg>
<status status="PASS" starttime="20200717 22:27:31.459" endtime="20200717 22:27:32.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.116" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey3104531548693922030"
}</msg>
<status status="PASS" starttime="20200717 22:27:32.115" endtime="20200717 22:27:32.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:32.116" endtime="20200717 22:27:32.117"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:31.458" endtime="20200717 22:27:32.117"></status>
</kw>
<msg timestamp="20200717 22:27:32.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:31.458" endtime="20200717 22:27:32.117"></status>
</kw>
<msg timestamp="20200717 22:27:32.117" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548693922030"
}</msg>
<status status="PASS" starttime="20200717 22:27:31.458" endtime="20200717 22:27:32.117"></status>
</kw>
<msg timestamp="20200717 22:27:32.118" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548693922030"
}</msg>
<status status="PASS" starttime="20200717 22:27:31.457" endtime="20200717 22:27:32.118"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:32.121" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey3104531548693922030"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:32.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:32.160" level="INFO">${output} = /s3v/bucket-17515/multipartKey3104531548693922030</msg>
<status status="PASS" starttime="20200717 22:27:32.118" endtime="20200717 22:27:32.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.161" level="INFO">/s3v/bucket-17515/multipartKey3104531548693922030</msg>
<status status="PASS" starttime="20200717 22:27:32.160" endtime="20200717 22:27:32.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:32.161" endtime="20200717 22:27:32.162"></status>
</kw>
<msg timestamp="20200717 22:27:32.162" level="INFO">${eTag2} = /s3v/bucket-17515/multipartKey3104531548693922030</msg>
<status status="PASS" starttime="20200717 22:27:32.118" endtime="20200717 22:27:32.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:32.162" endtime="20200717 22:27:32.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part3" &gt; /tmp/part3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:32.167" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20200717 22:27:32.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:32.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:32.165" endtime="20200717 22:27:32.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.170" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:32.169" endtime="20200717 22:27:32.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:32.170" endtime="20200717 22:27:32.170"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:32.165" endtime="20200717 22:27:32.171"></status>
</kw>
<msg timestamp="20200717 22:27:32.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:32.164" endtime="20200717 22:27:32.171"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:32.163" endtime="20200717 22:27:32.171"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:32.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:32.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:32.695" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548739272943"
}</msg>
<status status="PASS" starttime="20200717 22:27:32.174" endtime="20200717 22:27:32.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.696" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey3104531548739272943"
}</msg>
<status status="PASS" starttime="20200717 22:27:32.695" endtime="20200717 22:27:32.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:32.696" endtime="20200717 22:27:32.697"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:32.173" endtime="20200717 22:27:32.697"></status>
</kw>
<msg timestamp="20200717 22:27:32.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:32.173" endtime="20200717 22:27:32.698"></status>
</kw>
<msg timestamp="20200717 22:27:32.698" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548739272943"
}</msg>
<status status="PASS" starttime="20200717 22:27:32.172" endtime="20200717 22:27:32.698"></status>
</kw>
<msg timestamp="20200717 22:27:32.698" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey3104531548739272943"
}</msg>
<status status="PASS" starttime="20200717 22:27:32.172" endtime="20200717 22:27:32.698"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag3}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:32.701" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey3104531548739272943"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:32.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:32.742" level="INFO">${output} = /s3v/bucket-17515/multipartKey3104531548739272943</msg>
<status status="PASS" starttime="20200717 22:27:32.699" endtime="20200717 22:27:32.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.743" level="INFO">/s3v/bucket-17515/multipartKey3104531548739272943</msg>
<status status="PASS" starttime="20200717 22:27:32.743" endtime="20200717 22:27:32.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:32.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:32.743" endtime="20200717 22:27:32.744"></status>
</kw>
<msg timestamp="20200717 22:27:32.744" level="INFO">${eTag3} = /s3v/bucket-17515/multipartKey3104531548739272943</msg>
<status status="PASS" starttime="20200717 22:27:32.698" endtime="20200717 22:27:32.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:32.744" endtime="20200717 22:27:32.745"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:32.749" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 --bucket bucket-17515 --key multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:33.203" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:33.203" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:32.746" endtime="20200717 22:27:33.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:33.204" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20200717 22:27:33.203" endtime="20200717 22:27:33.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:33.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:33.204" endtime="20200717 22:27:33.205"></status>
</kw>
<msg timestamp="20200717 22:27:33.205" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:32.746" endtime="20200717 22:27:33.205"></status>
</kw>
<msg timestamp="20200717 22:27:33.205" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:32.745" endtime="20200717 22:27:33.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:33.206" endtime="20200717 22:27:33.206"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:33.210" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 --bucket bucket-17515 --key multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/multipartKey3104531548637167853,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:33.677" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:33.677" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:33.208" endtime="20200717 22:27:33.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:33.678" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20200717 22:27:33.677" endtime="20200717 22:27:33.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:33.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:33.678" endtime="20200717 22:27:33.679"></status>
</kw>
<msg timestamp="20200717 22:27:33.679" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:33.207" endtime="20200717 22:27:33.679"></status>
</kw>
<msg timestamp="20200717 22:27:33.679" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20200717 22:27:33.206" endtime="20200717 22:27:33.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:33.680" endtime="20200717 22:27:33.680"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:33.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 --bucket bucket-17515 --key multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/multipartKey3104531548637167853,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:34.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:34.123" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20200717 22:27:33.682" endtime="20200717 22:27:34.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:34.124" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20200717 22:27:34.124" endtime="20200717 22:27:34.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:34.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:34.125" endtime="20200717 22:27:34.125"></status>
</kw>
<msg timestamp="20200717 22:27:34.125" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20200717 22:27:33.681" endtime="20200717 22:27:34.125"></status>
</kw>
<msg timestamp="20200717 22:27:34.126" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20200717 22:27:33.680" endtime="20200717 22:27:34.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:34.126" endtime="20200717 22:27:34.126"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:34.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 002565d4-cc09-4d38-b16d-bcc3acad8606-104531548536242412 --bucket bucket-17515 --key multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/multipartKey3104531548637167853,PartNumber=1},{ETag=/s3v/bucket-17515/multipartKey3104531548739272943,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:34.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:34.562" level="INFO">${output} = {
    "ETag": "9c015dc75b557f6b3e089f01cbb17ba098564a774d72eb3f473332bf86aa473e", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:34.128" endtime="20200717 22:27:34.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:34.563" level="INFO">{
    "ETag": "9c015dc75b557f6b3e089f01cbb17ba098564a774d72eb3f473332bf86aa473e", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:34.563" endtime="20200717 22:27:34.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:34.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:34.564" endtime="20200717 22:27:34.564"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:34.128" endtime="20200717 22:27:34.564"></status>
</kw>
<msg timestamp="20200717 22:27:34.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:34.128" endtime="20200717 22:27:34.565"></status>
</kw>
<msg timestamp="20200717 22:27:34.565" level="INFO">${output} = {
    "ETag": "9c015dc75b557f6b3e089f01cbb17ba098564a774d72eb3f473332bf86aa473e", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:34.127" endtime="20200717 22:27:34.565"></status>
</kw>
<msg timestamp="20200717 22:27:34.565" level="INFO">${result} = {
    "ETag": "9c015dc75b557f6b3e089f01cbb17ba098564a774d72eb3f473332bf86aa473e", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "multipartKey3"
}</msg>
<status status="PASS" starttime="20200717 22:27:34.126" endtime="20200717 22:27:34.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:34.565" endtime="20200717 22:27:34.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:34.566" endtime="20200717 22:27:34.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:34.566" endtime="20200717 22:27:34.567"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key multipartKey3 /tmp/multipartKey3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:34.571" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-17515 --key multipartKey3 /tmp/multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:35.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:35.198" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:34.569" endtime="20200717 22:27:35.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.199" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22:27:34 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:27:35.198" endtime="20200717 22:27:35.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:35.199" endtime="20200717 22:27:35.200"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:34.568" endtime="20200717 22:27:35.201"></status>
</kw>
<msg timestamp="20200717 22:27:35.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:34.568" endtime="20200717 22:27:35.201"></status>
</kw>
<msg timestamp="20200717 22:27:35.201" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:34.567" endtime="20200717 22:27:35.201"></status>
</kw>
<msg timestamp="20200717 22:27:35.201" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:34.567" endtime="20200717 22:27:35.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/multipartKey3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:35.205" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/multipartKey3'.</msg>
<msg timestamp="20200717 22:27:35.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:35.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:35.203" endtime="20200717 22:27:35.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.215" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:35.214" endtime="20200717 22:27:35.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:35.215" endtime="20200717 22:27:35.215"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:35.202" endtime="20200717 22:27:35.216"></status>
</kw>
<msg timestamp="20200717 22:27:35.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:35.202" endtime="20200717 22:27:35.216"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:35.201" endtime="20200717 22:27:35.216"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/multipartKey3</arg>
<arg>/tmp/multipartKey3.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:35.220" level="INFO">Running command 'md5sum /tmp/multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:35.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:35.234" level="INFO">${output} = 4627241b5eabe1c974ddac55c0c552ad</msg>
<status status="PASS" starttime="20200717 22:27:35.218" endtime="20200717 22:27:35.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.235" level="INFO">4627241b5eabe1c974ddac55c0c552ad</msg>
<status status="PASS" starttime="20200717 22:27:35.234" endtime="20200717 22:27:35.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:35.235" endtime="20200717 22:27:35.235"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:35.217" endtime="20200717 22:27:35.236"></status>
</kw>
<msg timestamp="20200717 22:27:35.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:35.217" endtime="20200717 22:27:35.236"></status>
</kw>
<msg timestamp="20200717 22:27:35.236" level="INFO">${checksumbefore} = 4627241b5eabe1c974ddac55c0c552ad</msg>
<status status="PASS" starttime="20200717 22:27:35.217" endtime="20200717 22:27:35.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:35.239" level="INFO">Running command 'md5sum /tmp/multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:35.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:35.254" level="INFO">${output} = 4627241b5eabe1c974ddac55c0c552ad</msg>
<status status="PASS" starttime="20200717 22:27:35.237" endtime="20200717 22:27:35.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.255" level="INFO">4627241b5eabe1c974ddac55c0c552ad</msg>
<status status="PASS" starttime="20200717 22:27:35.255" endtime="20200717 22:27:35.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:35.256" endtime="20200717 22:27:35.256"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:35.237" endtime="20200717 22:27:35.256"></status>
</kw>
<msg timestamp="20200717 22:27:35.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:35.237" endtime="20200717 22:27:35.256"></status>
</kw>
<msg timestamp="20200717 22:27:35.257" level="INFO">${checksumafter} = 4627241b5eabe1c974ddac55c0c552ad</msg>
<status status="PASS" starttime="20200717 22:27:35.236" endtime="20200717 22:27:35.257"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:35.257" endtime="20200717 22:27:35.257"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:35.216" endtime="20200717 22:27:35.257"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:29.077" endtime="20200717 22:27:35.258" critical="yes"></status>
</test>
<test id="s1-s6-t5" name="Test abort Multipart upload">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:35.264" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:35.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:35.702" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464", 
    "Key": "multipartKey4"
}</msg>
<status status="PASS" starttime="20200717 22:27:35.262" endtime="20200717 22:27:35.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.703" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464", 
    "Key": "multipartKey4"
}</msg>
<status status="PASS" starttime="20200717 22:27:35.703" endtime="20200717 22:27:35.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:35.704" endtime="20200717 22:27:35.704"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:35.262" endtime="20200717 22:27:35.704"></status>
</kw>
<msg timestamp="20200717 22:27:35.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:35.261" endtime="20200717 22:27:35.705"></status>
</kw>
<msg timestamp="20200717 22:27:35.705" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464", 
    "Key": "multipartKey4"
}</msg>
<status status="PASS" starttime="20200717 22:27:35.259" endtime="20200717 22:27:35.705"></status>
</kw>
<msg timestamp="20200717 22:27:35.705" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464", 
    "Key": "multipartKey4"
}</msg>
<status status="PASS" starttime="20200717 22:27:35.259" endtime="20200717 22:27:35.705"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:35.710" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464", 
    "Key": "multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:35.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:35.747" level="INFO">${output} = c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464</msg>
<status status="PASS" starttime="20200717 22:27:35.706" endtime="20200717 22:27:35.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.748" level="INFO">c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464</msg>
<status status="PASS" starttime="20200717 22:27:35.747" endtime="20200717 22:27:35.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:35.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:35.748" endtime="20200717 22:27:35.749"></status>
</kw>
<msg timestamp="20200717 22:27:35.749" level="INFO">${uploadID} = c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464</msg>
<status status="PASS" starttime="20200717 22:27:35.706" endtime="20200717 22:27:35.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:35.749" endtime="20200717 22:27:35.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:35.750" endtime="20200717 22:27:35.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:35.750" endtime="20200717 22:27:35.751"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:35.755" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-17515 --key multipartKey4 --upload-id c621de3e-03b3-4a99-93a9-f6a1c63f7804-104531548940468464 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:36.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:36.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:35.752" endtime="20200717 22:27:36.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:36.198" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:36.197" endtime="20200717 22:27:36.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:36.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:36.198" endtime="20200717 22:27:36.198"></status>
</kw>
<msg timestamp="20200717 22:27:36.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:35.751" endtime="20200717 22:27:36.199"></status>
</kw>
<msg timestamp="20200717 22:27:36.199" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:27:35.751" endtime="20200717 22:27:36.199"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:35.258" endtime="20200717 22:27:36.199" critical="yes"></status>
</test>
<test id="s1-s6-t6" name="Test abort Multipart upload with invalid uploadId">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:36.205" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-17515 --key multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:36.668" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:36.668" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20200717 22:27:36.202" endtime="20200717 22:27:36.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:36.669" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20200717 22:27:36.668" endtime="20200717 22:27:36.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:36.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:36.669" endtime="20200717 22:27:36.670"></status>
</kw>
<msg timestamp="20200717 22:27:36.670" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20200717 22:27:36.201" endtime="20200717 22:27:36.670"></status>
</kw>
<msg timestamp="20200717 22:27:36.671" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20200717 22:27:36.201" endtime="20200717 22:27:36.671"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:36.200" endtime="20200717 22:27:36.671" critical="yes"></status>
</test>
<test id="s1-s6-t7" name="Upload part with Incorrect uploadID">
<kw name="Execute" library="os">
<arguments>
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:36.676" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:27:36.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:36.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:36.674" endtime="20200717 22:27:36.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:36.678" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:36.678" endtime="20200717 22:27:36.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:36.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:36.679" endtime="20200717 22:27:36.679"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:36.673" endtime="20200717 22:27:36.679"></status>
</kw>
<msg timestamp="20200717 22:27:36.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:36.673" endtime="20200717 22:27:36.679"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:36.672" endtime="20200717 22:27:36.680"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:36.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:37.129" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:27:37.129" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20200717 22:27:36.681" endtime="20200717 22:27:37.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.130" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20200717 22:27:37.130" endtime="20200717 22:27:37.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:37.131" endtime="20200717 22:27:37.131"></status>
</kw>
<msg timestamp="20200717 22:27:37.132" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20200717 22:27:36.680" endtime="20200717 22:27:37.132"></status>
</kw>
<msg timestamp="20200717 22:27:37.132" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20200717 22:27:36.680" endtime="20200717 22:27:37.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:37.132" endtime="20200717 22:27:37.132"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:36.671" endtime="20200717 22:27:37.133" critical="yes"></status>
</test>
<test id="s1-s6-t8" name="Test list parts">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key multipartKey5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:37.139" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:37.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:37.592" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578", 
    "Key": "multipartKey5"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.136" endtime="20200717 22:27:37.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.593" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578", 
    "Key": "multipartKey5"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.593" endtime="20200717 22:27:37.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:37.594" endtime="20200717 22:27:37.594"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:37.136" endtime="20200717 22:27:37.594"></status>
</kw>
<msg timestamp="20200717 22:27:37.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:37.136" endtime="20200717 22:27:37.595"></status>
</kw>
<msg timestamp="20200717 22:27:37.595" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578", 
    "Key": "multipartKey5"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.135" endtime="20200717 22:27:37.595"></status>
</kw>
<msg timestamp="20200717 22:27:37.595" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578", 
    "Key": "multipartKey5"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.135" endtime="20200717 22:27:37.595"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:37.599" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578", 
    "Key": "multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:37.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:37.637" level="INFO">${output} = 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578</msg>
<status status="PASS" starttime="20200717 22:27:37.596" endtime="20200717 22:27:37.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.638" level="INFO">0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578</msg>
<status status="PASS" starttime="20200717 22:27:37.637" endtime="20200717 22:27:37.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:37.638" endtime="20200717 22:27:37.639"></status>
</kw>
<msg timestamp="20200717 22:27:37.639" level="INFO">${uploadID} = 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578</msg>
<status status="PASS" starttime="20200717 22:27:37.595" endtime="20200717 22:27:37.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:37.640" endtime="20200717 22:27:37.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multipartKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:37.640" endtime="20200717 22:27:37.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:37.641" endtime="20200717 22:27:37.641"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:37.647" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:37.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:37.690" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0405372 s, 129 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:37.643" endtime="20200717 22:27:37.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.691" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0405372 s, 129 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:37.690" endtime="20200717 22:27:37.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:37.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:37.691" endtime="20200717 22:27:37.692"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:37.643" endtime="20200717 22:27:37.692"></status>
</kw>
<msg timestamp="20200717 22:27:37.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:37.642" endtime="20200717 22:27:37.692"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:37.642" endtime="20200717 22:27:37.692"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:37.641" endtime="20200717 22:27:37.692"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:37.641" endtime="20200717 22:27:37.693"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:37.698" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:40.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:40.825" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.695" endtime="20200717 22:27:40.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:40.826" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531"
}</msg>
<status status="PASS" starttime="20200717 22:27:40.825" endtime="20200717 22:27:40.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:40.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:40.826" endtime="20200717 22:27:40.827"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:37.694" endtime="20200717 22:27:40.827"></status>
</kw>
<msg timestamp="20200717 22:27:40.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:37.694" endtime="20200717 22:27:40.827"></status>
</kw>
<msg timestamp="20200717 22:27:40.828" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.693" endtime="20200717 22:27:40.828"></status>
</kw>
<msg timestamp="20200717 22:27:40.828" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531"
}</msg>
<status status="PASS" starttime="20200717 22:27:37.693" endtime="20200717 22:27:40.828"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:40.831" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:40.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:40.870" level="INFO">${output} = /s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:40.829" endtime="20200717 22:27:40.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:40.871" level="INFO">/s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:40.870" endtime="20200717 22:27:40.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:40.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:40.872" endtime="20200717 22:27:40.872"></status>
</kw>
<msg timestamp="20200717 22:27:40.873" level="INFO">${eTag1} = /s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:40.828" endtime="20200717 22:27:40.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:40.873" endtime="20200717 22:27:40.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:40.877" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20200717 22:27:40.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:40.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:40.875" endtime="20200717 22:27:40.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:40.880" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:40.880" endtime="20200717 22:27:40.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:40.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:40.880" endtime="20200717 22:27:40.882"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:40.874" endtime="20200717 22:27:40.882"></status>
</kw>
<msg timestamp="20200717 22:27:40.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:40.874" endtime="20200717 22:27:40.883"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:40.873" endtime="20200717 22:27:40.883"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:40.889" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-17515 --key multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:41.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:41.410" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508"
}</msg>
<status status="PASS" starttime="20200717 22:27:40.886" endtime="20200717 22:27:41.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.411" level="INFO">{
    "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508"
}</msg>
<status status="PASS" starttime="20200717 22:27:41.411" endtime="20200717 22:27:41.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:41.412" endtime="20200717 22:27:41.412"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:40.885" endtime="20200717 22:27:41.412"></status>
</kw>
<msg timestamp="20200717 22:27:41.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:40.884" endtime="20200717 22:27:41.413"></status>
</kw>
<msg timestamp="20200717 22:27:41.413" level="INFO">${output} = {
    "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508"
}</msg>
<status status="PASS" starttime="20200717 22:27:40.884" endtime="20200717 22:27:41.413"></status>
</kw>
<msg timestamp="20200717 22:27:41.413" level="INFO">${result} = {
    "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508"
}</msg>
<status status="PASS" starttime="20200717 22:27:40.883" endtime="20200717 22:27:41.413"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:41.416" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:41.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:41.454" level="INFO">${output} = /s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:41.414" endtime="20200717 22:27:41.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.455" level="INFO">/s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:41.454" endtime="20200717 22:27:41.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:41.455" endtime="20200717 22:27:41.456"></status>
</kw>
<msg timestamp="20200717 22:27:41.456" level="INFO">${eTag2} = /s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:41.413" endtime="20200717 22:27:41.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:41.456" endtime="20200717 22:27:41.456"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key multipartKey5 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:41.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-17515 --key multipartKey5 --upload-id 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:41.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:41.919" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:41.459" endtime="20200717 22:27:41.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.921" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20200717 22:27:41.920" endtime="20200717 22:27:41.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:41.921" endtime="20200717 22:27:41.922"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:41.458" endtime="20200717 22:27:41.922"></status>
</kw>
<msg timestamp="20200717 22:27:41.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:41.458" endtime="20200717 22:27:41.922"></status>
</kw>
<msg timestamp="20200717 22:27:41.923" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:41.457" endtime="20200717 22:27:41.923"></status>
</kw>
<msg timestamp="20200717 22:27:41.923" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:41.457" endtime="20200717 22:27:41.923"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:41.926" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:41.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:41.965" level="INFO">${output} = /s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:41.924" endtime="20200717 22:27:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.966" level="INFO">/s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:41.966" endtime="20200717 22:27:41.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:41.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:41.967" endtime="20200717 22:27:41.967"></status>
</kw>
<msg timestamp="20200717 22:27:41.968" level="INFO">${part1} = /s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:41.923" endtime="20200717 22:27:41.968"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:41.971" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:42.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:42.013" level="INFO">${output} = /s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:41.968" endtime="20200717 22:27:42.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.014" level="INFO">/s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:42.013" endtime="20200717 22:27:42.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:42.014" endtime="20200717 22:27:42.015"></status>
</kw>
<msg timestamp="20200717 22:27:42.015" level="INFO">${part2} = /s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:41.968" endtime="20200717 22:27:42.015"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:42.015" endtime="20200717 22:27:42.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:42.016" endtime="20200717 22:27:42.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:42.016" endtime="20200717 22:27:42.017"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:42.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-17515 --key multipartKey5 --upload-id 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:42.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:42.480" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:42.019" endtime="20200717 22:27:42.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.481" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20200717 22:27:42.481" endtime="20200717 22:27:42.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:42.482" endtime="20200717 22:27:42.482"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:42.018" endtime="20200717 22:27:42.482"></status>
</kw>
<msg timestamp="20200717 22:27:42.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:42.018" endtime="20200717 22:27:42.483"></status>
</kw>
<msg timestamp="20200717 22:27:42.483" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:42.017" endtime="20200717 22:27:42.483"></status>
</kw>
<msg timestamp="20200717 22:27:42.483" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:42.017" endtime="20200717 22:27:42.483"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:42.486" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:42.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:42.523" level="INFO">${output} = /s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:42.484" endtime="20200717 22:27:42.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.524" level="INFO">/s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:42.524" endtime="20200717 22:27:42.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:42.525" endtime="20200717 22:27:42.525"></status>
</kw>
<msg timestamp="20200717 22:27:42.525" level="INFO">${part1} = /s3v/bucket-17515/multipartKey5104531549102604531</msg>
<status status="PASS" starttime="20200717 22:27:42.483" endtime="20200717 22:27:42.525"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:42.528" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:40.776Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549102604531", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:42.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:42.565" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20200717 22:27:42.526" endtime="20200717 22:27:42.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.566" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20200717 22:27:42.566" endtime="20200717 22:27:42.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:42.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:42.566" endtime="20200717 22:27:42.567"></status>
</kw>
<msg timestamp="20200717 22:27:42.567" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20200717 22:27:42.526" endtime="20200717 22:27:42.567"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:42.567" endtime="20200717 22:27:42.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:42.568" endtime="20200717 22:27:42.569"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:42.573" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-17515 --key multipartKey5 --upload-id 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:43.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:43.028" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:42.571" endtime="20200717 22:27:43.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.029" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20200717 22:27:43.028" endtime="20200717 22:27:43.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:43.029" endtime="20200717 22:27:43.030"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:42.570" endtime="20200717 22:27:43.030"></status>
</kw>
<msg timestamp="20200717 22:27:43.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:42.570" endtime="20200717 22:27:43.030"></status>
</kw>
<msg timestamp="20200717 22:27:43.030" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:42.569" endtime="20200717 22:27:43.030"></status>
</kw>
<msg timestamp="20200717 22:27:43.031" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/mul...</msg>
<status status="PASS" starttime="20200717 22:27:42.569" endtime="20200717 22:27:43.031"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:43.034" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2020-07-17T22:27:41.363Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-17515/multipartKey5104531549310091508", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:43.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:43.073" level="INFO">${output} = /s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:43.031" endtime="20200717 22:27:43.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.074" level="INFO">/s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:43.074" endtime="20200717 22:27:43.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:43.074" endtime="20200717 22:27:43.075"></status>
</kw>
<msg timestamp="20200717 22:27:43.075" level="INFO">${part2} = /s3v/bucket-17515/multipartKey5104531549310091508</msg>
<status status="PASS" starttime="20200717 22:27:43.031" endtime="20200717 22:27:43.075"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:43.076" endtime="20200717 22:27:43.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:43.076" endtime="20200717 22:27:43.077"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:43.081" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-17515 --key multipartKey5 --upload-id 0f89ebfd-dbb2-4466-a4da-4f9e85977977-104531549064462578 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:43.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:43.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:43.078" endtime="20200717 22:27:43.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.520" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:43.519" endtime="20200717 22:27:43.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:43.520" endtime="20200717 22:27:43.520"></status>
</kw>
<msg timestamp="20200717 22:27:43.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:43.078" endtime="20200717 22:27:43.521"></status>
</kw>
<msg timestamp="20200717 22:27:43.521" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:27:43.077" endtime="20200717 22:27:43.521"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:37.134" endtime="20200717 22:27:43.521" critical="yes"></status>
</test>
<test id="s1-s6-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Create Random file">
<arguments>
<arg>22</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:43.528" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:43.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:43.704" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.172141 s, 134 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:43.525" endtime="20200717 22:27:43.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.705" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.172141 s, 134 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:43.704" endtime="20200717 22:27:43.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:43.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:43.705" endtime="20200717 22:27:43.706"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:43.525" endtime="20200717 22:27:43.706"></status>
</kw>
<msg timestamp="20200717 22:27:43.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:43.524" endtime="20200717 22:27:43.706"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:43.524" endtime="20200717 22:27:43.706"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:43.523" endtime="20200717 22:27:43.707"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:43.712" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://bucket-17515/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:44.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:44.982" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20200717 22:27:43.709" endtime="20200717 22:27:44.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:44.983" level="INFO">Completed 256.0 KiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (11.8 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (17.6 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (15.4 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (17.5 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (21.7 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (26.6 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (27.7 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (31.1 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (31.4 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (33.2 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (38.3 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (37.9 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (39.4 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (28.4 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (28.7 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (29.7 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (30.3 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (30.4 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (30.2 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (32.8 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (33.2 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (32.3 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (32.0 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (32.5 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (33.2 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (34.0 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (34.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (36.3 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (34.4 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (35.4 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (35.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (37.8 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (38.5 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (39.1 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (40.4 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (40.1 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (39.5 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (39.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (40.8 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (41.3 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (41.6 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (42.2 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (43.3 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (43.6 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (44.0 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (44.5 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (45.0 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (45.5 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (44.6 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (45.1 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (45.6 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (46.1 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (46.6 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (47.1 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (47.7 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (45.6 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (46.1 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (46.5 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://bucket-17515/mpyawscli           </msg>
<status status="PASS" starttime="20200717 22:27:44.982" endtime="20200717 22:27:44.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:44.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:44.983" endtime="20200717 22:27:44.984"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:43.708" endtime="20200717 22:27:44.984"></status>
</kw>
<msg timestamp="20200717 22:27:44.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:43.708" endtime="20200717 22:27:44.985"></status>
</kw>
<msg timestamp="20200717 22:27:44.985" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20200717 22:27:43.707" endtime="20200717 22:27:44.985"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:43.707" endtime="20200717 22:27:44.985"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:44.989" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://bucket-17515/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:45.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:45.906" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20200717 22:27:44.987" endtime="20200717 22:27:45.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:45.907" level="INFO">Completed 256.0 KiB/22.0 MiB (1.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (9.7 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (11.1 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (12.0 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (13.3 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (15.4 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (20.7 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (21.3 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (22.4 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (23.4 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (24.4 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (26.3 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (27.3 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (26.6 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (27.6 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (28.5 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (29.5 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (30.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (31.5 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (33.4 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (32.0 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (33.0 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (33.9 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (34.6 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (35.9 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (36.7 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (37.6 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (37.3 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (38.1 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (38.9 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (39.0 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (39.1 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (39.9 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (40.7 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (41.4 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (42.0 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (42.5 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (43.2 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (43.4 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (44.0 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (44.7 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (45.6 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (46.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (44.1 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (44.7 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (45.3 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (45.9 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (45.8 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (45.9 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (46.5 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (47.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (46.7 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (47.2 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (47.8 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (47.8 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (47.6 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (48.0 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (48.6 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (49.2 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (48.9 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (49.4 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (49.8 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (50.3 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (49.9 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (50.3 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (50.8 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (51.4 MiB/s) with 1 file(s) remaining
download: s3://bucket-17515/mpyawscli to ../../tmp/part1.result  </msg>
<status status="PASS" starttime="20200717 22:27:45.906" endtime="20200717 22:27:45.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:45.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:45.908" endtime="20200717 22:27:45.908"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:44.987" endtime="20200717 22:27:45.909"></status>
</kw>
<msg timestamp="20200717 22:27:45.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:44.986" endtime="20200717 22:27:45.909"></status>
</kw>
<msg timestamp="20200717 22:27:45.909" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20200717 22:27:44.986" endtime="20200717 22:27:45.909"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:44.985" endtime="20200717 22:27:45.909"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>rm s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:45.913" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-17515/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:46.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:46.399" level="INFO">${output} = delete: s3://bucket-17515/mpyawscli</msg>
<status status="PASS" starttime="20200717 22:27:45.911" endtime="20200717 22:27:46.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.400" level="INFO">delete: s3://bucket-17515/mpyawscli</msg>
<status status="PASS" starttime="20200717 22:27:46.399" endtime="20200717 22:27:46.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:46.400" endtime="20200717 22:27:46.401"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:45.911" endtime="20200717 22:27:46.401"></status>
</kw>
<msg timestamp="20200717 22:27:46.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:45.910" endtime="20200717 22:27:46.401"></status>
</kw>
<msg timestamp="20200717 22:27:46.401" level="INFO">${output} = delete: s3://bucket-17515/mpyawscli</msg>
<status status="PASS" starttime="20200717 22:27:45.910" endtime="20200717 22:27:46.402"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:45.909" endtime="20200717 22:27:46.402"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:46.406" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:46.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:46.469" level="INFO">${output} = 5e5127b49d5046ab2a2796f318fdeb6c</msg>
<status status="PASS" starttime="20200717 22:27:46.404" endtime="20200717 22:27:46.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.470" level="INFO">5e5127b49d5046ab2a2796f318fdeb6c</msg>
<status status="PASS" starttime="20200717 22:27:46.470" endtime="20200717 22:27:46.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:46.470" endtime="20200717 22:27:46.471"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.403" endtime="20200717 22:27:46.471"></status>
</kw>
<msg timestamp="20200717 22:27:46.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:46.403" endtime="20200717 22:27:46.471"></status>
</kw>
<msg timestamp="20200717 22:27:46.472" level="INFO">${checksumbefore} = 5e5127b49d5046ab2a2796f318fdeb6c</msg>
<status status="PASS" starttime="20200717 22:27:46.402" endtime="20200717 22:27:46.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:46.475" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:46.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:46.532" level="INFO">${output} = 5e5127b49d5046ab2a2796f318fdeb6c</msg>
<status status="PASS" starttime="20200717 22:27:46.473" endtime="20200717 22:27:46.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.533" level="INFO">5e5127b49d5046ab2a2796f318fdeb6c</msg>
<status status="PASS" starttime="20200717 22:27:46.533" endtime="20200717 22:27:46.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:46.534" endtime="20200717 22:27:46.534"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.473" endtime="20200717 22:27:46.535"></status>
</kw>
<msg timestamp="20200717 22:27:46.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:46.472" endtime="20200717 22:27:46.535"></status>
</kw>
<msg timestamp="20200717 22:27:46.535" level="INFO">${checksumafter} = 5e5127b49d5046ab2a2796f318fdeb6c</msg>
<status status="PASS" starttime="20200717 22:27:46.472" endtime="20200717 22:27:46.535"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:46.535" endtime="20200717 22:27:46.536"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.402" endtime="20200717 22:27:46.536"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:43.522" endtime="20200717 22:27:46.536" critical="yes"></status>
</test>
<test id="s1-s6-t10" name="Test Multipart Upload Put With Copy">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:46.542" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:46.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:46.588" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0393404 s, 133 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:46.540" endtime="20200717 22:27:46.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.589" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0393404 s, 133 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:46.588" endtime="20200717 22:27:46.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:46.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:46.589" endtime="20200717 22:27:46.590"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.540" endtime="20200717 22:27:46.590"></status>
</kw>
<msg timestamp="20200717 22:27:46.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:46.539" endtime="20200717 22:27:46.591"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.539" endtime="20200717 22:27:46.591"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.538" endtime="20200717 22:27:46.591"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.538" endtime="20200717 22:27:46.591"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key copytest/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:46.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-17515 --key copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:49.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:49.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:46.593" endtime="20200717 22:27:49.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:49.752" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:49.751" endtime="20200717 22:27:49.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:49.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:49.752" endtime="20200717 22:27:49.752"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:46.592" endtime="20200717 22:27:49.753"></status>
</kw>
<msg timestamp="20200717 22:27:49.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:46.592" endtime="20200717 22:27:49.753"></status>
</kw>
<msg timestamp="20200717 22:27:49.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:46.592" endtime="20200717 22:27:49.753"></status>
</kw>
<msg timestamp="20200717 22:27:49.754" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:27:46.591" endtime="20200717 22:27:49.754"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key copytest/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:49.758" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:50.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:50.210" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:49.756" endtime="20200717 22:27:50.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:50.211" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:50.210" endtime="20200717 22:27:50.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:50.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:50.212" endtime="20200717 22:27:50.212"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:49.755" endtime="20200717 22:27:50.212"></status>
</kw>
<msg timestamp="20200717 22:27:50.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:49.755" endtime="20200717 22:27:50.213"></status>
</kw>
<msg timestamp="20200717 22:27:50.213" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:49.755" endtime="20200717 22:27:50.213"></status>
</kw>
<msg timestamp="20200717 22:27:50.213" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:49.754" endtime="20200717 22:27:50.213"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:50.220" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690", 
    "Key": "copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:50.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:50.261" level="INFO">${output} = 55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690</msg>
<status status="PASS" starttime="20200717 22:27:50.214" endtime="20200717 22:27:50.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:50.263" level="INFO">55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690</msg>
<status status="PASS" starttime="20200717 22:27:50.262" endtime="20200717 22:27:50.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:50.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:50.265" endtime="20200717 22:27:50.267"></status>
</kw>
<msg timestamp="20200717 22:27:50.267" level="INFO">${uploadID} = 55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690</msg>
<status status="PASS" starttime="20200717 22:27:50.213" endtime="20200717 22:27:50.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:50.267" endtime="20200717 22:27:50.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:50.268" endtime="20200717 22:27:50.268"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/copytest/source</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:50.272" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-17515 --key copytest/destination --upload-id 55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690 --part-number 1 --copy-source bucket-17515/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:51.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:51.008" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:50.925Z", 
        "ETag": "/s3v/bucket-17515/copytest/destination104531549926523131"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:50.270" endtime="20200717 22:27:51.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:51.009" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:50.925Z", 
        "ETag": "/s3v/bucket-17515/copytest/destination104531549926523131"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:51.009" endtime="20200717 22:27:51.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:51.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:51.009" endtime="20200717 22:27:51.010"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:50.270" endtime="20200717 22:27:51.010"></status>
</kw>
<msg timestamp="20200717 22:27:51.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:50.269" endtime="20200717 22:27:51.010"></status>
</kw>
<msg timestamp="20200717 22:27:51.011" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:50.925Z", 
        "ETag": "/s3v/bucket-17515/copytest/destination104531549926523131"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:50.269" endtime="20200717 22:27:51.011"></status>
</kw>
<msg timestamp="20200717 22:27:51.011" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:50.925Z", 
        "ETag": "/s3v/bucket-17515/copytest/destination104531549926523131"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:50.268" endtime="20200717 22:27:51.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:51.011" endtime="20200717 22:27:51.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:51.012" endtime="20200717 22:27:51.012"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:51.017" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:50.925Z", 
        "ETag": "/s3v/bucket-17515/copytest/destination104531549926523131"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:51.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:51.065" level="INFO">${output} = /s3v/bucket-17515/copytest/destination104531549926523131</msg>
<status status="PASS" starttime="20200717 22:27:51.013" endtime="20200717 22:27:51.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:51.066" level="INFO">/s3v/bucket-17515/copytest/destination104531549926523131</msg>
<status status="PASS" starttime="20200717 22:27:51.065" endtime="20200717 22:27:51.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:51.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:51.066" endtime="20200717 22:27:51.067"></status>
</kw>
<msg timestamp="20200717 22:27:51.067" level="INFO">${eTag1} = /s3v/bucket-17515/copytest/destination104531549926523131</msg>
<status status="PASS" starttime="20200717 22:27:51.012" endtime="20200717 22:27:51.067"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:51.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 55dc120b-5c7a-406a-96cd-48272c124a61-104531549891133690 --bucket bucket-17515 --key copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/copytest/destination104531549926523131,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:51.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:51.514" level="INFO">${output} = {
    "ETag": "9404cbcadb4b5edb5a6d2f7f68607711607868f8f372162db728f4c0f0a23cfc", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:51.070" endtime="20200717 22:27:51.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:51.515" level="INFO">{
    "ETag": "9404cbcadb4b5edb5a6d2f7f68607711607868f8f372162db728f4c0f0a23cfc", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:51.514" endtime="20200717 22:27:51.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:51.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:51.515" endtime="20200717 22:27:51.516"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:51.069" endtime="20200717 22:27:51.516"></status>
</kw>
<msg timestamp="20200717 22:27:51.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:51.069" endtime="20200717 22:27:51.516"></status>
</kw>
<msg timestamp="20200717 22:27:51.517" level="INFO">${output} = {
    "ETag": "9404cbcadb4b5edb5a6d2f7f68607711607868f8f372162db728f4c0f0a23cfc", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "copytest/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:51.068" endtime="20200717 22:27:51.517"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:51.067" endtime="20200717 22:27:51.517"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key copytest/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:51.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-17515 --key copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:52.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:52.052" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:51 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:51.519" endtime="20200717 22:27:52.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.053" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:51 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Fri, 17 Jul 2020 22:27:51 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:27:52.052" endtime="20200717 22:27:52.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:52.054" endtime="20200717 22:27:52.054"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:51.519" endtime="20200717 22:27:52.055"></status>
</kw>
<msg timestamp="20200717 22:27:52.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:51.518" endtime="20200717 22:27:52.055"></status>
</kw>
<msg timestamp="20200717 22:27:52.055" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:51 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Fri, 17 Jul 2020 22...</msg>
<status status="PASS" starttime="20200717 22:27:51.518" endtime="20200717 22:27:52.055"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:51.517" endtime="20200717 22:27:52.055"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:52.059" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:52.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:52.080" level="INFO">${output} = 798b199d41353b4139e1c3273e5cb6ef</msg>
<status status="PASS" starttime="20200717 22:27:52.057" endtime="20200717 22:27:52.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.081" level="INFO">798b199d41353b4139e1c3273e5cb6ef</msg>
<status status="PASS" starttime="20200717 22:27:52.081" endtime="20200717 22:27:52.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:52.082" endtime="20200717 22:27:52.082"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.057" endtime="20200717 22:27:52.083"></status>
</kw>
<msg timestamp="20200717 22:27:52.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:52.056" endtime="20200717 22:27:52.083"></status>
</kw>
<msg timestamp="20200717 22:27:52.083" level="INFO">${checksumbefore} = 798b199d41353b4139e1c3273e5cb6ef</msg>
<status status="PASS" starttime="20200717 22:27:52.056" endtime="20200717 22:27:52.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:52.087" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:52.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:52.103" level="INFO">${output} = 798b199d41353b4139e1c3273e5cb6ef</msg>
<status status="PASS" starttime="20200717 22:27:52.085" endtime="20200717 22:27:52.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.105" level="INFO">798b199d41353b4139e1c3273e5cb6ef</msg>
<status status="PASS" starttime="20200717 22:27:52.104" endtime="20200717 22:27:52.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:52.105" endtime="20200717 22:27:52.106"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.084" endtime="20200717 22:27:52.106"></status>
</kw>
<msg timestamp="20200717 22:27:52.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:52.084" endtime="20200717 22:27:52.106"></status>
</kw>
<msg timestamp="20200717 22:27:52.107" level="INFO">${checksumafter} = 798b199d41353b4139e1c3273e5cb6ef</msg>
<status status="PASS" starttime="20200717 22:27:52.083" endtime="20200717 22:27:52.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:52.107" endtime="20200717 22:27:52.108"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.055" endtime="20200717 22:27:52.108"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:46.537" endtime="20200717 22:27:52.108" critical="yes"></status>
</test>
<test id="s1-s6-t11" name="Test Multipart Upload Put With Copy and range">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>10</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>10</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:52.115" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:52.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:52.199" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0796168 s, 132 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:52.113" endtime="20200717 22:27:52.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.200" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0796168 s, 132 MB/s</msg>
<status status="PASS" starttime="20200717 22:27:52.199" endtime="20200717 22:27:52.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:52.201" endtime="20200717 22:27:52.201"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.112" endtime="20200717 22:27:52.202"></status>
</kw>
<msg timestamp="20200717 22:27:52.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:52.112" endtime="20200717 22:27:52.202"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.111" endtime="20200717 22:27:52.202"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.111" endtime="20200717 22:27:52.202"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.110" endtime="20200717 22:27:52.202"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key copyrange/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:52.207" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-17515 --key copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:52.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:52.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:52.205" endtime="20200717 22:27:52.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.990" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:52.990" endtime="20200717 22:27:52.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:52.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:52.991" endtime="20200717 22:27:52.991"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.204" endtime="20200717 22:27:52.992"></status>
</kw>
<msg timestamp="20200717 22:27:52.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:52.204" endtime="20200717 22:27:52.992"></status>
</kw>
<msg timestamp="20200717 22:27:52.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:52.203" endtime="20200717 22:27:52.992"></status>
</kw>
<msg timestamp="20200717 22:27:52.993" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:27:52.203" endtime="20200717 22:27:52.993"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key copyrange/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:52.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:53.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:53.426" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:52.995" endtime="20200717 22:27:53.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:53.427" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:53.426" endtime="20200717 22:27:53.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:53.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:53.427" endtime="20200717 22:27:53.428"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:52.994" endtime="20200717 22:27:53.428"></status>
</kw>
<msg timestamp="20200717 22:27:53.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:52.994" endtime="20200717 22:27:53.428"></status>
</kw>
<msg timestamp="20200717 22:27:53.428" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:52.993" endtime="20200717 22:27:53.428"></status>
</kw>
<msg timestamp="20200717 22:27:53.429" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:52.993" endtime="20200717 22:27:53.429"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:53.433" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933", 
    "Key": "copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:53.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:53.472" level="INFO">${output} = 9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933</msg>
<status status="PASS" starttime="20200717 22:27:53.429" endtime="20200717 22:27:53.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:53.473" level="INFO">9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933</msg>
<status status="PASS" starttime="20200717 22:27:53.472" endtime="20200717 22:27:53.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:53.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:53.473" endtime="20200717 22:27:53.474"></status>
</kw>
<msg timestamp="20200717 22:27:53.474" level="INFO">${uploadID} = 9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933</msg>
<status status="PASS" starttime="20200717 22:27:53.429" endtime="20200717 22:27:53.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:53.474" endtime="20200717 22:27:53.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:53.475" endtime="20200717 22:27:53.475"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/copyrange/source --copy-source-range bytes=0-10485758</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:53.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-17515 --key copyrange/destination --upload-id 9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933 --part-number 1 --copy-source bucket-17515/copyrange/source --copy-source-range bytes=0-10485758 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:54.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:54.359" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.310Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550134206718"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:53.479" endtime="20200717 22:27:54.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:54.360" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.310Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550134206718"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:54.359" endtime="20200717 22:27:54.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:54.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:54.360" endtime="20200717 22:27:54.361"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:53.478" endtime="20200717 22:27:54.361"></status>
</kw>
<msg timestamp="20200717 22:27:54.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:53.477" endtime="20200717 22:27:54.361"></status>
</kw>
<msg timestamp="20200717 22:27:54.361" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.310Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550134206718"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:53.477" endtime="20200717 22:27:54.361"></status>
</kw>
<msg timestamp="20200717 22:27:54.362" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.310Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550134206718"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:53.475" endtime="20200717 22:27:54.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:54.362" endtime="20200717 22:27:54.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:54.362" endtime="20200717 22:27:54.363"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:54.366" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.310Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550134206718"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:54.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:54.404" level="INFO">${output} = /s3v/bucket-17515/copyrange/destination104531550134206718</msg>
<status status="PASS" starttime="20200717 22:27:54.363" endtime="20200717 22:27:54.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:54.405" level="INFO">/s3v/bucket-17515/copyrange/destination104531550134206718</msg>
<status status="PASS" starttime="20200717 22:27:54.404" endtime="20200717 22:27:54.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:54.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:54.406" endtime="20200717 22:27:54.406"></status>
</kw>
<msg timestamp="20200717 22:27:54.407" level="INFO">${eTag1} = /s3v/bucket-17515/copyrange/destination104531550134206718</msg>
<status status="PASS" starttime="20200717 22:27:54.363" endtime="20200717 22:27:54.407"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/copyrange/source --copy-source-range bytes=10485758-10485760</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:54.411" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-17515 --key copyrange/destination --upload-id 9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933 --part-number 2 --copy-source bucket-17515/copyrange/source --copy-source-range bytes=10485758-10485760 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:54.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:54.954" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.908Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550196203775"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:54.409" endtime="20200717 22:27:54.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:54.956" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.908Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550196203775"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:54.955" endtime="20200717 22:27:54.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:54.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:54.956" endtime="20200717 22:27:54.956"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:54.409" endtime="20200717 22:27:54.957"></status>
</kw>
<msg timestamp="20200717 22:27:54.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:54.408" endtime="20200717 22:27:54.957"></status>
</kw>
<msg timestamp="20200717 22:27:54.957" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.908Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550196203775"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:54.408" endtime="20200717 22:27:54.957"></status>
</kw>
<msg timestamp="20200717 22:27:54.958" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.908Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550196203775"
    }
}</msg>
<status status="PASS" starttime="20200717 22:27:54.407" endtime="20200717 22:27:54.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:54.958" endtime="20200717 22:27:54.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:54.958" endtime="20200717 22:27:54.959"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:54.962" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2020-07-17T22:27:54.908Z", 
        "ETag": "/s3v/bucket-17515/copyrange/destination104531550196203775"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:55.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:55.004" level="INFO">${output} = /s3v/bucket-17515/copyrange/destination104531550196203775</msg>
<status status="PASS" starttime="20200717 22:27:54.960" endtime="20200717 22:27:55.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:55.005" level="INFO">/s3v/bucket-17515/copyrange/destination104531550196203775</msg>
<status status="PASS" starttime="20200717 22:27:55.004" endtime="20200717 22:27:55.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:55.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:55.005" endtime="20200717 22:27:55.005"></status>
</kw>
<msg timestamp="20200717 22:27:55.006" level="INFO">${eTag2} = /s3v/bucket-17515/copyrange/destination104531550196203775</msg>
<status status="PASS" starttime="20200717 22:27:54.959" endtime="20200717 22:27:55.006"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:55.012" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9cf04a7d-8612-47d2-b3bc-9464f1692243-104531550101831933 --bucket bucket-17515 --key copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-17515/copyrange/destination104531550134206718,PartNumber=1},{ETag=/s3v/bucket-17515/copyrange/destination104531550196203775,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:55.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:55.476" level="INFO">${output} = {
    "ETag": "eeb4732a1bcf3ab61706603825450b9838f0e899787bdb9005e4742f37543d4f", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:55.010" endtime="20200717 22:27:55.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:55.477" level="INFO">{
    "ETag": "eeb4732a1bcf3ab61706603825450b9838f0e899787bdb9005e4742f37543d4f", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:55.476" endtime="20200717 22:27:55.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:55.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:55.477" endtime="20200717 22:27:55.478"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:55.007" endtime="20200717 22:27:55.478"></status>
</kw>
<msg timestamp="20200717 22:27:55.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:55.007" endtime="20200717 22:27:55.478"></status>
</kw>
<msg timestamp="20200717 22:27:55.479" level="INFO">${output} = {
    "ETag": "eeb4732a1bcf3ab61706603825450b9838f0e899787bdb9005e4742f37543d4f", 
    "Bucket": "bucket-17515", 
    "Location": "bucket-17515", 
    "Key": "copyrange/destination"
}</msg>
<status status="PASS" starttime="20200717 22:27:55.007" endtime="20200717 22:27:55.479"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:55.006" endtime="20200717 22:27:55.479"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key copyrange/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:55.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-17515 --key copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:56.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:56.089" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:55 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Fri, 17 Jul 2020 2...</msg>
<status status="PASS" starttime="20200717 22:27:55.481" endtime="20200717 22:27:56.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.091" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:55 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Fri, 17 Jul 2020 22:27:55 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:27:56.090" endtime="20200717 22:27:56.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:56.091" endtime="20200717 22:27:56.091"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:55.480" endtime="20200717 22:27:56.092"></status>
</kw>
<msg timestamp="20200717 22:27:56.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:55.480" endtime="20200717 22:27:56.092"></status>
</kw>
<msg timestamp="20200717 22:27:56.092" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:27:55 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Fri, 17 Jul 2020 2...</msg>
<status status="PASS" starttime="20200717 22:27:55.480" endtime="20200717 22:27:56.092"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:55.479" endtime="20200717 22:27:56.092"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:56.097" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:56.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:56.132" level="INFO">${output} = ad4e8b4d62878987f2c87c3bcdf16689</msg>
<status status="PASS" starttime="20200717 22:27:56.094" endtime="20200717 22:27:56.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.134" level="INFO">ad4e8b4d62878987f2c87c3bcdf16689</msg>
<status status="PASS" starttime="20200717 22:27:56.133" endtime="20200717 22:27:56.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:56.134" endtime="20200717 22:27:56.136"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:56.094" endtime="20200717 22:27:56.136"></status>
</kw>
<msg timestamp="20200717 22:27:56.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:56.094" endtime="20200717 22:27:56.137"></status>
</kw>
<msg timestamp="20200717 22:27:56.137" level="INFO">${checksumbefore} = ad4e8b4d62878987f2c87c3bcdf16689</msg>
<status status="PASS" starttime="20200717 22:27:56.093" endtime="20200717 22:27:56.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:56.143" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:56.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:56.176" level="INFO">${output} = ad4e8b4d62878987f2c87c3bcdf16689</msg>
<status status="PASS" starttime="20200717 22:27:56.139" endtime="20200717 22:27:56.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.178" level="INFO">ad4e8b4d62878987f2c87c3bcdf16689</msg>
<status status="PASS" starttime="20200717 22:27:56.177" endtime="20200717 22:27:56.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:56.178" endtime="20200717 22:27:56.179"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:56.138" endtime="20200717 22:27:56.179"></status>
</kw>
<msg timestamp="20200717 22:27:56.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:56.138" endtime="20200717 22:27:56.179"></status>
</kw>
<msg timestamp="20200717 22:27:56.179" level="INFO">${checksumafter} = ad4e8b4d62878987f2c87c3bcdf16689</msg>
<status status="PASS" starttime="20200717 22:27:56.137" endtime="20200717 22:27:56.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:56.179" endtime="20200717 22:27:56.180"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:56.093" endtime="20200717 22:27:56.180"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:52.109" endtime="20200717 22:27:56.180" critical="yes"></status>
</test>
<test id="s1-s6-t12" name="Test Multipart Upload list">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key listtest/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:56.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:56.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:56.634" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
    "Key": "listtest/key1"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.185" endtime="20200717 22:27:56.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.636" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
    "Key": "listtest/key1"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.635" endtime="20200717 22:27:56.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:56.636" endtime="20200717 22:27:56.636"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:56.184" endtime="20200717 22:27:56.637"></status>
</kw>
<msg timestamp="20200717 22:27:56.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:56.184" endtime="20200717 22:27:56.637"></status>
</kw>
<msg timestamp="20200717 22:27:56.637" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
    "Key": "listtest/key1"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.184" endtime="20200717 22:27:56.637"></status>
</kw>
<msg timestamp="20200717 22:27:56.637" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
    "Key": "listtest/key1"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.183" endtime="20200717 22:27:56.637"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:56.641" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
    "Key": "listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:56.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:56.680" level="INFO">${output} = 49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424</msg>
<status status="PASS" starttime="20200717 22:27:56.638" endtime="20200717 22:27:56.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.681" level="INFO">49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424</msg>
<status status="PASS" starttime="20200717 22:27:56.680" endtime="20200717 22:27:56.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:56.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:56.681" endtime="20200717 22:27:56.682"></status>
</kw>
<msg timestamp="20200717 22:27:56.683" level="INFO">${uploadID1} = 49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424</msg>
<status status="PASS" starttime="20200717 22:27:56.638" endtime="20200717 22:27:56.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:56.683" endtime="20200717 22:27:56.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>listtest/key1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:56.683" endtime="20200717 22:27:56.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:56.684" endtime="20200717 22:27:56.684"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key listtest/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:56.689" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-17515 --key listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:57.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:57.126" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
    "Key": "listtest/key2"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.687" endtime="20200717 22:27:57.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.127" level="INFO">{
    "Bucket": "bucket-17515", 
    "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
    "Key": "listtest/key2"
}</msg>
<status status="PASS" starttime="20200717 22:27:57.126" endtime="20200717 22:27:57.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:57.127" endtime="20200717 22:27:57.127"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:56.686" endtime="20200717 22:27:57.128"></status>
</kw>
<msg timestamp="20200717 22:27:57.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:56.686" endtime="20200717 22:27:57.128"></status>
</kw>
<msg timestamp="20200717 22:27:57.128" level="INFO">${output} = {
    "Bucket": "bucket-17515", 
    "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
    "Key": "listtest/key2"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.685" endtime="20200717 22:27:57.128"></status>
</kw>
<msg timestamp="20200717 22:27:57.128" level="INFO">${result} = {
    "Bucket": "bucket-17515", 
    "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
    "Key": "listtest/key2"
}</msg>
<status status="PASS" starttime="20200717 22:27:56.685" endtime="20200717 22:27:57.128"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:57.132" level="INFO">Running command 'echo '{
    "Bucket": "bucket-17515", 
    "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
    "Key": "listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:57.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:57.170" level="INFO">${output} = a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281</msg>
<status status="PASS" starttime="20200717 22:27:57.129" endtime="20200717 22:27:57.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.172" level="INFO">a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281</msg>
<status status="PASS" starttime="20200717 22:27:57.170" endtime="20200717 22:27:57.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:57.172" endtime="20200717 22:27:57.172"></status>
</kw>
<msg timestamp="20200717 22:27:57.173" level="INFO">${uploadID2} = a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281</msg>
<status status="PASS" starttime="20200717 22:27:57.128" endtime="20200717 22:27:57.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.173" endtime="20200717 22:27:57.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>listtest/key2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.173" endtime="20200717 22:27:57.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.174" endtime="20200717 22:27:57.174"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix listtest</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:57.180" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-17515 --prefix listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:57.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:57.616" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:2...</msg>
<status status="PASS" starttime="20200717 22:27:57.177" endtime="20200717 22:27:57.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.617" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:27:56.588Z", 
            "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
            "StorageClass": "STANDARD", 
            "Key": "listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:27:57.084Z", 
            "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
            "StorageClass": "STANDARD", 
            "Key": "listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:27:57.616" endtime="20200717 22:27:57.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:57.618" endtime="20200717 22:27:57.618"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.176" endtime="20200717 22:27:57.618"></status>
</kw>
<msg timestamp="20200717 22:27:57.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:57.176" endtime="20200717 22:27:57.619"></status>
</kw>
<msg timestamp="20200717 22:27:57.619" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:2...</msg>
<status status="PASS" starttime="20200717 22:27:57.175" endtime="20200717 22:27:57.619"></status>
</kw>
<msg timestamp="20200717 22:27:57.619" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:2...</msg>
<status status="PASS" starttime="20200717 22:27:57.175" endtime="20200717 22:27:57.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID1}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.619" endtime="20200717 22:27:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID2}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.620" endtime="20200717 22:27:57.620"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:57.624" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:27:56.588Z", 
            "UploadId": "49d9713b-e8f6-41dd-ba88-fd2847680906-104531550312071424", 
            "StorageClass": "STANDARD", 
            "Key": "listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2020-07-17T22:27:57.084Z", 
            "UploadId": "a1b0f526-5bbe-443d-b6d8-1995081cc4a2-104531550344577281", 
            "StorageClass": "STANDARD", 
            "Key": "listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:57.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:57.662" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20200717 22:27:57.621" endtime="20200717 22:27:57.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.663" level="INFO">2</msg>
<status status="PASS" starttime="20200717 22:27:57.662" endtime="20200717 22:27:57.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:57.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:57.663" endtime="20200717 22:27:57.664"></status>
</kw>
<msg timestamp="20200717 22:27:57.664" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20200717 22:27:57.620" endtime="20200717 22:27:57.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${count}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.664" endtime="20200717 22:27:57.665"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:27:56.182" endtime="20200717 22:27:57.665" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:27:13.070" endtime="20200717 22:27:57.667"></status>
</suite>
<suite id="s1-s7" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:57.691" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:57.694" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:27:57.694" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:27:57.689" endtime="20200717 22:27:57.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:27:57.694" endtime="20200717 22:27:57.695"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:57.697" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:57.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:57.841" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:27:57.695" endtime="20200717 22:27:57.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:57.849" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:58.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:58.227" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:27:57.845" endtime="20200717 22:27:58.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:58.228" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:27:58.228" endtime="20200717 22:27:58.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:58.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:58.229" endtime="20200717 22:27:58.229"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.845" endtime="20200717 22:27:58.230"></status>
</kw>
<msg timestamp="20200717 22:27:58.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:57.845" endtime="20200717 22:27:58.230"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.844" endtime="20200717 22:27:58.230"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.844" endtime="20200717 22:27:58.230"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.841" endtime="20200717 22:27:58.230"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.689" endtime="20200717 22:27:58.230"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.689" endtime="20200717 22:27:58.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:58.236" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:58.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:58.239" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:27:58.234" endtime="20200717 22:27:58.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:58.240" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:27:58.239" endtime="20200717 22:27:58.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:58.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:58.240" endtime="20200717 22:27:58.240"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.233" endtime="20200717 22:27:58.240"></status>
</kw>
<msg timestamp="20200717 22:27:58.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:58.233" endtime="20200717 22:27:58.241"></status>
</kw>
<msg timestamp="20200717 22:27:58.241" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:27:58.233" endtime="20200717 22:27:58.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:27:58.242" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:27:58.241" endtime="20200717 22:27:58.242"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:58.246" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:27:58.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:27:58.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:27:58.244" endtime="20200717 22:27:58.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:27:58.268" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:27:58.268" endtime="20200717 22:27:58.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:27:58.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:27:58.268" endtime="20200717 22:27:58.269"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.243" endtime="20200717 22:27:58.269"></status>
</kw>
<msg timestamp="20200717 22:27:58.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:58.243" endtime="20200717 22:27:58.269"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.243" endtime="20200717 22:27:58.269"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.242" endtime="20200717 22:27:58.269"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.232" endtime="20200717 22:27:58.270"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.232" endtime="20200717 22:27:58.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:27:58.274" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:00.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:00.942" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:58.272" endtime="20200717 22:28:00.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:00.943" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:00.943" endtime="20200717 22:28:00.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:00.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:00.944" endtime="20200717 22:28:00.944"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.271" endtime="20200717 22:28:00.944"></status>
</kw>
<msg timestamp="20200717 22:28:00.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:27:58.271" endtime="20200717 22:28:00.945"></status>
</kw>
<msg timestamp="20200717 22:28:00.945" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:27:58.271" endtime="20200717 22:28:00.945"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:00.946" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:00.945" endtime="20200717 22:28:00.946"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:00.946" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:00.946" endtime="20200717 22:28:00.946"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:00.947" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:28:00.946" endtime="20200717 22:28:00.947"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:00.947" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:00.947" endtime="20200717 22:28:00.947"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:00.948" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:00.947" endtime="20200717 22:28:00.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:00.952" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:01.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:01.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:00.950" endtime="20200717 22:28:01.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:01.270" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:01.270" endtime="20200717 22:28:01.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:01.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:01.270" endtime="20200717 22:28:01.271"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:00.949" endtime="20200717 22:28:01.271"></status>
</kw>
<msg timestamp="20200717 22:28:01.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:00.948" endtime="20200717 22:28:01.272"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:00.948" endtime="20200717 22:28:01.272"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:01.275" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:01.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:01.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:01.273" endtime="20200717 22:28:01.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:01.598" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:01.598" endtime="20200717 22:28:01.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:01.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:01.598" endtime="20200717 22:28:01.599"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:01.273" endtime="20200717 22:28:01.599"></status>
</kw>
<msg timestamp="20200717 22:28:01.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:01.272" endtime="20200717 22:28:01.599"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:01.272" endtime="20200717 22:28:01.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:01.606" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:01.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:01.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:01.601" endtime="20200717 22:28:01.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:01.925" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:01.924" endtime="20200717 22:28:01.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:01.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:01.925" endtime="20200717 22:28:01.926"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:01.600" endtime="20200717 22:28:01.926"></status>
</kw>
<msg timestamp="20200717 22:28:01.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:01.600" endtime="20200717 22:28:01.926"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:01.600" endtime="20200717 22:28:01.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:01.929" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:02.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:02.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:01.927" endtime="20200717 22:28:02.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:02.244" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:02.243" endtime="20200717 22:28:02.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:02.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:02.244" endtime="20200717 22:28:02.245"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:01.927" endtime="20200717 22:28:02.245"></status>
</kw>
<msg timestamp="20200717 22:28:02.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:01.927" endtime="20200717 22:28:02.245"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:01.926" endtime="20200717 22:28:02.246"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.270" endtime="20200717 22:28:02.246"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.270" endtime="20200717 22:28:02.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:02.246" endtime="20200717 22:28:02.247"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.231" endtime="20200717 22:28:02.247"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:58.231" endtime="20200717 22:28:02.247"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:02.250" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:05.094" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:05.094" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:02.248" endtime="20200717 22:28:05.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:05.095" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:28:05.094" endtime="20200717 22:28:05.095"></status>
</kw>
<msg timestamp="20200717 22:28:05.095" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:02.247" endtime="20200717 22:28:05.095"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:05.095" endtime="20200717 22:28:05.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:28:05.097" level="INFO">${postfix} = 61626</msg>
<status status="PASS" starttime="20200717 22:28:05.097" endtime="20200717 22:28:05.097"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:28:05.098" level="INFO">${bucket} = bucket-61626</msg>
<status status="PASS" starttime="20200717 22:28:05.097" endtime="20200717 22:28:05.098"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:05.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-61626 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:05.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:05.537" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-61626"
}</msg>
<status status="PASS" starttime="20200717 22:28:05.100" endtime="20200717 22:28:05.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:05.538" level="INFO">{
    "Location": "http://s3g:9878/bucket-61626"
}</msg>
<status status="PASS" starttime="20200717 22:28:05.537" endtime="20200717 22:28:05.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:05.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:05.538" endtime="20200717 22:28:05.538"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.099" endtime="20200717 22:28:05.539"></status>
</kw>
<msg timestamp="20200717 22:28:05.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:05.099" endtime="20200717 22:28:05.539"></status>
</kw>
<msg timestamp="20200717 22:28:05.539" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-61626"
}</msg>
<status status="PASS" starttime="20200717 22:28:05.098" endtime="20200717 22:28:05.539"></status>
</kw>
<msg timestamp="20200717 22:28:05.539" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-61626"
}</msg>
<status status="PASS" starttime="20200717 22:28:05.098" endtime="20200717 22:28:05.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:05.540" endtime="20200717 22:28:05.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:05.540" endtime="20200717 22:28:05.540"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.098" endtime="20200717 22:28:05.541"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.096" endtime="20200717 22:28:05.541"></status>
</kw>
<msg timestamp="20200717 22:28:05.541" level="INFO">${BUCKET} = bucket-61626</msg>
<status status="PASS" starttime="20200717 22:28:05.096" endtime="20200717 22:28:05.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:28:05.541" level="INFO">${BUCKET} = bucket-61626</msg>
<status status="PASS" starttime="20200717 22:28:05.541" endtime="20200717 22:28:05.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:05.542" endtime="20200717 22:28:05.542"></status>
</kw>
<status status="PASS" starttime="20200717 22:27:57.688" endtime="20200717 22:28:05.542"></status>
</kw>
<test id="s1-s7-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
</arguments>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:28:05.545" level="INFO">${postfix} = 67793</msg>
<status status="PASS" starttime="20200717 22:28:05.544" endtime="20200717 22:28:05.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
</arguments>
<msg timestamp="20200717 22:28:05.546" level="INFO">${DESTBUCKET} = destbucket-67793</msg>
<status status="PASS" starttime="20200717 22:28:05.545" endtime="20200717 22:28:05.546"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:05.550" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-67793 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:06.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:06.001" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-67793"
}</msg>
<status status="PASS" starttime="20200717 22:28:05.547" endtime="20200717 22:28:06.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.003" level="INFO">{
    "Location": "http://s3g:9878/destbucket-67793"
}</msg>
<status status="PASS" starttime="20200717 22:28:06.002" endtime="20200717 22:28:06.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:06.003" endtime="20200717 22:28:06.004"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.547" endtime="20200717 22:28:06.004"></status>
</kw>
<msg timestamp="20200717 22:28:06.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:05.547" endtime="20200717 22:28:06.004"></status>
</kw>
<msg timestamp="20200717 22:28:06.004" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-67793"
}</msg>
<status status="PASS" starttime="20200717 22:28:05.546" endtime="20200717 22:28:06.004"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.546" endtime="20200717 22:28:06.005"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.544" endtime="20200717 22:28:06.005"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:05.543" endtime="20200717 22:28:06.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/copyfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:06.009" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20200717 22:28:06.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:06.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:06.006" endtime="20200717 22:28:06.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.013" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:06.012" endtime="20200717 22:28:06.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:06.013" endtime="20200717 22:28:06.014"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:06.006" endtime="20200717 22:28:06.014"></status>
</kw>
<msg timestamp="20200717 22:28:06.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:06.006" endtime="20200717 22:28:06.014"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:06.005" endtime="20200717 22:28:06.015"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key copyobject/f1 --body /tmp/copyfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:06.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-61626 --key copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:06.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:06.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:06.017" endtime="20200717 22:28:06.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.541" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:06.540" endtime="20200717 22:28:06.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:06.541" endtime="20200717 22:28:06.542"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:06.016" endtime="20200717 22:28:06.542"></status>
</kw>
<msg timestamp="20200717 22:28:06.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:06.016" endtime="20200717 22:28:06.542"></status>
</kw>
<msg timestamp="20200717 22:28:06.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:06.015" endtime="20200717 22:28:06.543"></status>
</kw>
<msg timestamp="20200717 22:28:06.543" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:06.015" endtime="20200717 22:28:06.543"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:06.547" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-61626 --prefix copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:06.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:06.990" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:06.494Z", 
            "ETag": "2020-07-17T22:28:06.494Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:06.545" endtime="20200717 22:28:06.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.991" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:06.494Z", 
            "ETag": "2020-07-17T22:28:06.494Z", 
            "StorageClass": "STANDARD", 
            "Key": "copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:06.990" endtime="20200717 22:28:06.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:06.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:06.991" endtime="20200717 22:28:06.992"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:06.544" endtime="20200717 22:28:06.992"></status>
</kw>
<msg timestamp="20200717 22:28:06.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:06.544" endtime="20200717 22:28:06.992"></status>
</kw>
<msg timestamp="20200717 22:28:06.992" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:06.494Z", 
            "ETag": "2020-07-17T22:28:06.494Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:06.544" endtime="20200717 22:28:06.992"></status>
</kw>
<msg timestamp="20200717 22:28:06.993" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:06.494Z", 
            "ETag": "2020-07-17T22:28:06.494Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:06.543" endtime="20200717 22:28:06.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:06.993" endtime="20200717 22:28:06.993"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key copyobject/f1 --copy-source ${BUCKET}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:06.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-67793 --key copyobject/f1 --copy-source bucket-61626/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:07.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:07.588" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:07.527Z", 
        "ETag": "030e8f62-7e05-4407-a74c-dcff9c1542bc"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:06.995" endtime="20200717 22:28:07.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:07.589" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:07.527Z", 
        "ETag": "030e8f62-7e05-4407-a74c-dcff9c1542bc"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:07.588" endtime="20200717 22:28:07.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:07.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:07.589" endtime="20200717 22:28:07.590"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:06.995" endtime="20200717 22:28:07.590"></status>
</kw>
<msg timestamp="20200717 22:28:07.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:06.994" endtime="20200717 22:28:07.590"></status>
</kw>
<msg timestamp="20200717 22:28:07.591" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:07.527Z", 
        "ETag": "030e8f62-7e05-4407-a74c-dcff9c1542bc"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:06.994" endtime="20200717 22:28:07.591"></status>
</kw>
<msg timestamp="20200717 22:28:07.592" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:07.527Z", 
        "ETag": "030e8f62-7e05-4407-a74c-dcff9c1542bc"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:06.993" endtime="20200717 22:28:07.592"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:07.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-67793 --prefix copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:08.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:08.045" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:07.527Z", 
            "ETag": "2020-07-17T22:28:07.527Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:07.594" endtime="20200717 22:28:08.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:08.047" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:07.527Z", 
            "ETag": "2020-07-17T22:28:07.527Z", 
            "StorageClass": "STANDARD", 
            "Key": "copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:08.046" endtime="20200717 22:28:08.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:08.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:08.047" endtime="20200717 22:28:08.049"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:07.593" endtime="20200717 22:28:08.049"></status>
</kw>
<msg timestamp="20200717 22:28:08.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:07.593" endtime="20200717 22:28:08.049"></status>
</kw>
<msg timestamp="20200717 22:28:08.049" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:07.527Z", 
            "ETag": "2020-07-17T22:28:07.527Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:07.592" endtime="20200717 22:28:08.049"></status>
</kw>
<msg timestamp="20200717 22:28:08.050" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:07.527Z", 
            "ETag": "2020-07-17T22:28:07.527Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:07.592" endtime="20200717 22:28:08.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:08.050" endtime="20200717 22:28:08.050"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key copyobject/f1 --copy-source ${BUCKET}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:08.055" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-67793 --key copyobject/f1 --copy-source bucket-61626/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:08.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:08.606" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:08.551Z", 
        "ETag": "d37a27d2-fad5-4998-86ec-f31623256a46"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:08.052" endtime="20200717 22:28:08.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:08.607" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:08.551Z", 
        "ETag": "d37a27d2-fad5-4998-86ec-f31623256a46"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:08.607" endtime="20200717 22:28:08.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:08.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:08.608" endtime="20200717 22:28:08.608"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:08.052" endtime="20200717 22:28:08.609"></status>
</kw>
<msg timestamp="20200717 22:28:08.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:08.052" endtime="20200717 22:28:08.609"></status>
</kw>
<msg timestamp="20200717 22:28:08.609" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:08.551Z", 
        "ETag": "d37a27d2-fad5-4998-86ec-f31623256a46"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:08.051" endtime="20200717 22:28:08.609"></status>
</kw>
<msg timestamp="20200717 22:28:08.610" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:08.551Z", 
        "ETag": "d37a27d2-fad5-4998-86ec-f31623256a46"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:08.051" endtime="20200717 22:28:08.610"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:08.614" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-67793 --prefix copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:09.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:09.080" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:08.551Z", 
            "ETag": "2020-07-17T22:28:08.551Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:08.612" endtime="20200717 22:28:09.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:09.081" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:08.551Z", 
            "ETag": "2020-07-17T22:28:08.551Z", 
            "StorageClass": "STANDARD", 
            "Key": "copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:09.080" endtime="20200717 22:28:09.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:09.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:09.081" endtime="20200717 22:28:09.082"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:08.611" endtime="20200717 22:28:09.082"></status>
</kw>
<msg timestamp="20200717 22:28:09.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:08.611" endtime="20200717 22:28:09.082"></status>
</kw>
<msg timestamp="20200717 22:28:09.082" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:08.551Z", 
            "ETag": "2020-07-17T22:28:08.551Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:08.610" endtime="20200717 22:28:09.082"></status>
</kw>
<msg timestamp="20200717 22:28:09.083" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:08.551Z", 
            "ETag": "2020-07-17T22:28:08.551Z", 
            "StorageClass": "STANDARD", 
            "Key": "cop...</msg>
<status status="PASS" starttime="20200717 22:28:08.610" endtime="20200717 22:28:09.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:09.083" endtime="20200717 22:28:09.083"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:05.542" endtime="20200717 22:28:09.083" critical="yes"></status>
</test>
<test id="s1-s7-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key copyobject/f1 --copy-source ${BUCKET}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:09.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key copyobject/f1 --copy-source bucket-61626/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:09.538" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:09.538" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.086" endtime="20200717 22:28:09.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:09.539" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.539" endtime="20200717 22:28:09.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:09.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:09.540" endtime="20200717 22:28:09.540"></status>
</kw>
<msg timestamp="20200717 22:28:09.541" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.086" endtime="20200717 22:28:09.541"></status>
</kw>
<msg timestamp="20200717 22:28:09.541" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.085" endtime="20200717 22:28:09.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:09.541" endtime="20200717 22:28:09.542"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key copyobject/f1 --copy-source dfdfdfdfdfnonexistent/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:09.547" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-67793 --key copyobject/f1 --copy-source dfdfdfdfdfnonexistent/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:09.997" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:09.997" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.543" endtime="20200717 22:28:09.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:09.998" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.998" endtime="20200717 22:28:09.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:09.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:09.999" endtime="20200717 22:28:09.999"></status>
</kw>
<msg timestamp="20200717 22:28:10.000" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.542" endtime="20200717 22:28:10.000"></status>
</kw>
<msg timestamp="20200717 22:28:10.000" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:09.542" endtime="20200717 22:28:10.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:10.000" endtime="20200717 22:28:10.001"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:09.084" endtime="20200717 22:28:10.001" critical="yes"></status>
</test>
<test id="s1-s7-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key copyobject/f1 --copy-source ${DESTBUCKET}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:10.008" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-67793 --key copyobject/f1 --copy-source destbucket-67793/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:10.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:10.448" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:10.408Z", 
        "ETag": "eda51e75-e741-408e-9ac5-35d3e2b5fbf9"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:10.005" endtime="20200717 22:28:10.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:10.449" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:10.408Z", 
        "ETag": "eda51e75-e741-408e-9ac5-35d3e2b5fbf9"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:10.448" endtime="20200717 22:28:10.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:10.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:10.449" endtime="20200717 22:28:10.450"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:10.005" endtime="20200717 22:28:10.450"></status>
</kw>
<msg timestamp="20200717 22:28:10.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:10.005" endtime="20200717 22:28:10.450"></status>
</kw>
<msg timestamp="20200717 22:28:10.451" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:10.408Z", 
        "ETag": "eda51e75-e741-408e-9ac5-35d3e2b5fbf9"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:10.004" endtime="20200717 22:28:10.451"></status>
</kw>
<msg timestamp="20200717 22:28:10.451" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2020-07-17T22:28:10.408Z", 
        "ETag": "eda51e75-e741-408e-9ac5-35d3e2b5fbf9"
    }
}</msg>
<status status="PASS" starttime="20200717 22:28:10.003" endtime="20200717 22:28:10.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:10.451" endtime="20200717 22:28:10.451"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:10.002" endtime="20200717 22:28:10.451" critical="yes"></status>
</test>
<test id="s1-s7-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:10.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-67793 --key copyobject/f1 --copy-source bucket-61626/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:10.912" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:10.912" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20200717 22:28:10.454" endtime="20200717 22:28:10.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:10.914" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20200717 22:28:10.913" endtime="20200717 22:28:10.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:10.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:10.914" endtime="20200717 22:28:10.914"></status>
</kw>
<msg timestamp="20200717 22:28:10.915" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20200717 22:28:10.454" endtime="20200717 22:28:10.915"></status>
</kw>
<msg timestamp="20200717 22:28:10.915" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20200717 22:28:10.453" endtime="20200717 22:28:10.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchKey</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:10.915" endtime="20200717 22:28:10.916"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:10.452" endtime="20200717 22:28:10.916" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:27:57.676" endtime="20200717 22:28:10.917"></status>
</suite>
<suite id="s1-s8" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:10.931" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:10.932" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:28:10.933" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:28:10.928" endtime="20200717 22:28:10.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:10.933" endtime="20200717 22:28:10.933"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:10.935" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:11.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:11.071" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:28:10.934" endtime="20200717 22:28:11.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:11.077" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:11.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:11.471" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:28:11.075" endtime="20200717 22:28:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:11.472" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:28:11.472" endtime="20200717 22:28:11.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:11.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:11.472" endtime="20200717 22:28:11.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.075" endtime="20200717 22:28:11.473"></status>
</kw>
<msg timestamp="20200717 22:28:11.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:11.074" endtime="20200717 22:28:11.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.074" endtime="20200717 22:28:11.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.072" endtime="20200717 22:28:11.474"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.071" endtime="20200717 22:28:11.474"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:10.928" endtime="20200717 22:28:11.474"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:10.928" endtime="20200717 22:28:11.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:11.481" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:11.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:11.482" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:11.477" endtime="20200717 22:28:11.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:11.483" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:28:11.482" endtime="20200717 22:28:11.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:11.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:11.483" endtime="20200717 22:28:11.483"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.476" endtime="20200717 22:28:11.484"></status>
</kw>
<msg timestamp="20200717 22:28:11.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:11.476" endtime="20200717 22:28:11.484"></status>
</kw>
<msg timestamp="20200717 22:28:11.484" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:11.475" endtime="20200717 22:28:11.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:28:11.486" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:11.484" endtime="20200717 22:28:11.486"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:11.489" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:11.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:11.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:11.487" endtime="20200717 22:28:11.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:11.513" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:11.513" endtime="20200717 22:28:11.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:11.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:11.514" endtime="20200717 22:28:11.514"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.487" endtime="20200717 22:28:11.514"></status>
</kw>
<msg timestamp="20200717 22:28:11.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:11.487" endtime="20200717 22:28:11.515"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.486" endtime="20200717 22:28:11.515"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.486" endtime="20200717 22:28:11.515"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.475" endtime="20200717 22:28:11.515"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.475" endtime="20200717 22:28:11.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:11.519" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:13.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:13.922" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:11.517" endtime="20200717 22:28:13.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:13.923" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:13.923" endtime="20200717 22:28:13.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:13.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:13.923" endtime="20200717 22:28:13.924"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.517" endtime="20200717 22:28:13.924"></status>
</kw>
<msg timestamp="20200717 22:28:13.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:11.516" endtime="20200717 22:28:13.925"></status>
</kw>
<msg timestamp="20200717 22:28:13.925" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:11.516" endtime="20200717 22:28:13.925"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:13.925" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:13.925" endtime="20200717 22:28:13.925"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:13.927" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:13.926" endtime="20200717 22:28:13.927"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:13.927" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:28:13.927" endtime="20200717 22:28:13.927"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:13.928" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:13.927" endtime="20200717 22:28:13.928"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:13.928" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:13.928" endtime="20200717 22:28:13.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:13.933" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:14.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:14.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:13.930" endtime="20200717 22:28:14.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:14.239" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:14.238" endtime="20200717 22:28:14.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:14.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:14.239" endtime="20200717 22:28:14.239"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:13.929" endtime="20200717 22:28:14.239"></status>
</kw>
<msg timestamp="20200717 22:28:14.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:13.929" endtime="20200717 22:28:14.240"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:13.928" endtime="20200717 22:28:14.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:14.243" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:14.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:14.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:14.241" endtime="20200717 22:28:14.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:14.574" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:14.573" endtime="20200717 22:28:14.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:14.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:14.574" endtime="20200717 22:28:14.575"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:14.241" endtime="20200717 22:28:14.575"></status>
</kw>
<msg timestamp="20200717 22:28:14.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:14.240" endtime="20200717 22:28:14.576"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:14.240" endtime="20200717 22:28:14.576"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:14.579" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:14.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:14.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:14.577" endtime="20200717 22:28:14.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:14.916" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:14.916" endtime="20200717 22:28:14.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:14.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:14.916" endtime="20200717 22:28:14.917"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:14.577" endtime="20200717 22:28:14.917"></status>
</kw>
<msg timestamp="20200717 22:28:14.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:14.576" endtime="20200717 22:28:14.917"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:14.576" endtime="20200717 22:28:14.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:14.922" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:15.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:15.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:14.919" endtime="20200717 22:28:15.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:15.239" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:15.238" endtime="20200717 22:28:15.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:15.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:15.239" endtime="20200717 22:28:15.240"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:14.919" endtime="20200717 22:28:15.240"></status>
</kw>
<msg timestamp="20200717 22:28:15.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:14.918" endtime="20200717 22:28:15.240"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:14.918" endtime="20200717 22:28:15.240"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.516" endtime="20200717 22:28:15.241"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.515" endtime="20200717 22:28:15.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:15.241" endtime="20200717 22:28:15.241"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.474" endtime="20200717 22:28:15.241"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:11.474" endtime="20200717 22:28:15.241"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:15.244" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:18.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:18.053" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:15.242" endtime="20200717 22:28:18.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:18.054" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:28:18.053" endtime="20200717 22:28:18.054"></status>
</kw>
<msg timestamp="20200717 22:28:18.054" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:15.242" endtime="20200717 22:28:18.054"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:18.054" endtime="20200717 22:28:18.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:28:18.056" level="INFO">${postfix} = 19166</msg>
<status status="PASS" starttime="20200717 22:28:18.056" endtime="20200717 22:28:18.056"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:28:18.057" level="INFO">${bucket} = bucket-19166</msg>
<status status="PASS" starttime="20200717 22:28:18.056" endtime="20200717 22:28:18.057"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:18.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-19166 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:18.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:18.497" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-19166"
}</msg>
<status status="PASS" starttime="20200717 22:28:18.059" endtime="20200717 22:28:18.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:18.498" level="INFO">{
    "Location": "http://s3g:9878/bucket-19166"
}</msg>
<status status="PASS" starttime="20200717 22:28:18.497" endtime="20200717 22:28:18.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:18.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:18.498" endtime="20200717 22:28:18.498"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:18.059" endtime="20200717 22:28:18.499"></status>
</kw>
<msg timestamp="20200717 22:28:18.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:18.058" endtime="20200717 22:28:18.499"></status>
</kw>
<msg timestamp="20200717 22:28:18.499" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-19166"
}</msg>
<status status="PASS" starttime="20200717 22:28:18.058" endtime="20200717 22:28:18.499"></status>
</kw>
<msg timestamp="20200717 22:28:18.499" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-19166"
}</msg>
<status status="PASS" starttime="20200717 22:28:18.057" endtime="20200717 22:28:18.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:18.500" endtime="20200717 22:28:18.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:18.500" endtime="20200717 22:28:18.501"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:18.057" endtime="20200717 22:28:18.501"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:18.055" endtime="20200717 22:28:18.501"></status>
</kw>
<msg timestamp="20200717 22:28:18.501" level="INFO">${BUCKET} = bucket-19166</msg>
<status status="PASS" starttime="20200717 22:28:18.055" endtime="20200717 22:28:18.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:28:18.502" level="INFO">${BUCKET} = bucket-19166</msg>
<status status="PASS" starttime="20200717 22:28:18.501" endtime="20200717 22:28:18.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:18.502" endtime="20200717 22:28:18.502"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:10.927" endtime="20200717 22:28:18.502"></status>
</kw>
<test id="s1-s8-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:18.508" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:28:18.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:18.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:18.506" endtime="20200717 22:28:18.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:18.512" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:18.511" endtime="20200717 22:28:18.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:18.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:18.512" endtime="20200717 22:28:18.512"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:18.505" endtime="20200717 22:28:18.513"></status>
</kw>
<msg timestamp="20200717 22:28:18.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:18.504" endtime="20200717 22:28:18.513"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:18.504" endtime="20200717 22:28:18.513"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key deletetestapi/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:18.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-19166 --key deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:19.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:19.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:18.515" endtime="20200717 22:28:19.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:19.024" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:19.023" endtime="20200717 22:28:19.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:19.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:19.024" endtime="20200717 22:28:19.025"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:18.515" endtime="20200717 22:28:19.025"></status>
</kw>
<msg timestamp="20200717 22:28:19.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:18.514" endtime="20200717 22:28:19.025"></status>
</kw>
<msg timestamp="20200717 22:28:19.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:18.514" endtime="20200717 22:28:19.026"></status>
</kw>
<msg timestamp="20200717 22:28:19.026" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:18.513" endtime="20200717 22:28:19.026"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:19.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-19166 --prefix deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:19.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:19.473" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:18.976Z", 
            "ETag": "2020-07-17T22:28:18.976Z", 
            "StorageClass": "STANDARD", 
            "Key": "del...</msg>
<status status="PASS" starttime="20200717 22:28:19.028" endtime="20200717 22:28:19.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:19.474" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:18.976Z", 
            "ETag": "2020-07-17T22:28:18.976Z", 
            "StorageClass": "STANDARD", 
            "Key": "deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:19.473" endtime="20200717 22:28:19.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:19.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:19.475" endtime="20200717 22:28:19.475"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:19.027" endtime="20200717 22:28:19.476"></status>
</kw>
<msg timestamp="20200717 22:28:19.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:19.027" endtime="20200717 22:28:19.476"></status>
</kw>
<msg timestamp="20200717 22:28:19.476" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:18.976Z", 
            "ETag": "2020-07-17T22:28:18.976Z", 
            "StorageClass": "STANDARD", 
            "Key": "del...</msg>
<status status="PASS" starttime="20200717 22:28:19.027" endtime="20200717 22:28:19.476"></status>
</kw>
<msg timestamp="20200717 22:28:19.477" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:18.976Z", 
            "ETag": "2020-07-17T22:28:18.976Z", 
            "StorageClass": "STANDARD", 
            "Key": "del...</msg>
<status status="PASS" starttime="20200717 22:28:19.026" endtime="20200717 22:28:19.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:19.477" endtime="20200717 22:28:19.477"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key deletetestapi/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:19.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166 --key deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:19.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:19.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:19.479" endtime="20200717 22:28:19.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:19.935" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:19.935" endtime="20200717 22:28:19.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:19.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:19.936" endtime="20200717 22:28:19.936"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:19.479" endtime="20200717 22:28:19.936"></status>
</kw>
<msg timestamp="20200717 22:28:19.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:19.479" endtime="20200717 22:28:19.937"></status>
</kw>
<msg timestamp="20200717 22:28:19.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:19.478" endtime="20200717 22:28:19.937"></status>
</kw>
<msg timestamp="20200717 22:28:19.937" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:19.477" endtime="20200717 22:28:19.937"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:19.943" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-19166 --prefix deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:20.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:20.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:19.940" endtime="20200717 22:28:20.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:20.406" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:20.406" endtime="20200717 22:28:20.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:20.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:20.407" endtime="20200717 22:28:20.407"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:19.939" endtime="20200717 22:28:20.407"></status>
</kw>
<msg timestamp="20200717 22:28:20.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:19.939" endtime="20200717 22:28:20.408"></status>
</kw>
<msg timestamp="20200717 22:28:20.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:19.938" endtime="20200717 22:28:20.408"></status>
</kw>
<msg timestamp="20200717 22:28:20.408" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:19.938" endtime="20200717 22:28:20.408"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:20.408" endtime="20200717 22:28:20.409"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>500</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:20.409" endtime="20200717 22:28:20.409"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:18.503" endtime="20200717 22:28:20.409" critical="yes"></status>
</test>
<test id="s1-s8-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:20.415" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-19166/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:20.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:20.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:20.413" endtime="20200717 22:28:20.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:20.865" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:20.864" endtime="20200717 22:28:20.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:20.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:20.865" endtime="20200717 22:28:20.866"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:20.412" endtime="20200717 22:28:20.866"></status>
</kw>
<msg timestamp="20200717 22:28:20.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:20.412" endtime="20200717 22:28:20.866"></status>
</kw>
<msg timestamp="20200717 22:28:20.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:20.412" endtime="20200717 22:28:20.867"></status>
</kw>
<msg timestamp="20200717 22:28:20.867" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:20.411" endtime="20200717 22:28:20.867"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:20.867" endtime="20200717 22:28:20.868"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:20.872" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166 --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:21.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:21.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:20.870" endtime="20200717 22:28:21.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:21.311" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:21.311" endtime="20200717 22:28:21.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:21.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:21.312" endtime="20200717 22:28:21.312"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:20.869" endtime="20200717 22:28:21.312"></status>
</kw>
<msg timestamp="20200717 22:28:21.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:20.869" endtime="20200717 22:28:21.313"></status>
</kw>
<msg timestamp="20200717 22:28:21.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:20.868" endtime="20200717 22:28:21.313"></status>
</kw>
<msg timestamp="20200717 22:28:21.313" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:20.868" endtime="20200717 22:28:21.313"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:21.317" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-19166/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:21.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:21.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:21.315" endtime="20200717 22:28:21.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:21.764" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:21.763" endtime="20200717 22:28:21.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:21.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:21.764" endtime="20200717 22:28:21.764"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:21.315" endtime="20200717 22:28:21.765"></status>
</kw>
<msg timestamp="20200717 22:28:21.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:21.315" endtime="20200717 22:28:21.765"></status>
</kw>
<msg timestamp="20200717 22:28:21.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:21.314" endtime="20200717 22:28:21.766"></status>
</kw>
<msg timestamp="20200717 22:28:21.766" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:21.314" endtime="20200717 22:28:21.766"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:21.766" endtime="20200717 22:28:21.767"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:20.410" endtime="20200717 22:28:21.767" critical="yes"></status>
</test>
<test id="s1-s8-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:21.773" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:28:21.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:21.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:21.770" endtime="20200717 22:28:21.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:21.783" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:21.783" endtime="20200717 22:28:21.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:21.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:21.784" endtime="20200717 22:28:21.784"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:21.769" endtime="20200717 22:28:21.784"></status>
</kw>
<msg timestamp="20200717 22:28:21.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:21.769" endtime="20200717 22:28:21.785"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:21.768" endtime="20200717 22:28:21.785"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:21.789" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-19166/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:22.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:22.332" level="INFO">${output} = Completed 29 Bytes/29 Bytes (383 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapidir/f1</msg>
<status status="PASS" starttime="20200717 22:28:21.787" endtime="20200717 22:28:22.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:22.333" level="INFO">Completed 29 Bytes/29 Bytes (383 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapidir/f1</msg>
<status status="PASS" starttime="20200717 22:28:22.332" endtime="20200717 22:28:22.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:22.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:22.333" endtime="20200717 22:28:22.334"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:21.786" endtime="20200717 22:28:22.334"></status>
</kw>
<msg timestamp="20200717 22:28:22.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:21.786" endtime="20200717 22:28:22.334"></status>
</kw>
<msg timestamp="20200717 22:28:22.334" level="INFO">${output} = Completed 29 Bytes/29 Bytes (383 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapidir/f1</msg>
<status status="PASS" starttime="20200717 22:28:21.785" endtime="20200717 22:28:22.334"></status>
</kw>
<msg timestamp="20200717 22:28:22.335" level="INFO">${result} = Completed 29 Bytes/29 Bytes (383 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapidir/f1</msg>
<status status="PASS" starttime="20200717 22:28:21.785" endtime="20200717 22:28:22.335"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:22.339" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-19166/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:22.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:22.781" level="INFO">${output} = 2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:22.337" endtime="20200717 22:28:22.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:22.783" level="INFO">2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:22.782" endtime="20200717 22:28:22.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:22.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:22.783" endtime="20200717 22:28:22.784"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:22.336" endtime="20200717 22:28:22.784"></status>
</kw>
<msg timestamp="20200717 22:28:22.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:22.336" endtime="20200717 22:28:22.784"></status>
</kw>
<msg timestamp="20200717 22:28:22.784" level="INFO">${output} = 2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:22.335" endtime="20200717 22:28:22.784"></status>
</kw>
<msg timestamp="20200717 22:28:22.785" level="INFO">${result} = 2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:22.335" endtime="20200717 22:28:22.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:22.785" endtime="20200717 22:28:22.785"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:22.790" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166 --key deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:23.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:23.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:22.787" endtime="20200717 22:28:23.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:23.231" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:23.229" endtime="20200717 22:28:23.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:23.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:23.231" endtime="20200717 22:28:23.231"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:22.787" endtime="20200717 22:28:23.232"></status>
</kw>
<msg timestamp="20200717 22:28:23.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:22.786" endtime="20200717 22:28:23.232"></status>
</kw>
<msg timestamp="20200717 22:28:23.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:22.786" endtime="20200717 22:28:23.232"></status>
</kw>
<msg timestamp="20200717 22:28:23.232" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:22.785" endtime="20200717 22:28:23.232"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:23.238" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-19166/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:23.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:23.645" level="INFO">${output} = 2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:23.234" endtime="20200717 22:28:23.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:23.646" level="INFO">2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:23.646" endtime="20200717 22:28:23.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:23.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:23.647" endtime="20200717 22:28:23.647"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:23.234" endtime="20200717 22:28:23.648"></status>
</kw>
<msg timestamp="20200717 22:28:23.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:23.233" endtime="20200717 22:28:23.648"></status>
</kw>
<msg timestamp="20200717 22:28:23.648" level="INFO">${output} = 2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:23.233" endtime="20200717 22:28:23.648"></status>
</kw>
<msg timestamp="20200717 22:28:23.648" level="INFO">${result} = 2020-07-17 22:28:22         29 f1</msg>
<status status="PASS" starttime="20200717 22:28:23.232" endtime="20200717 22:28:23.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:23.648" endtime="20200717 22:28:23.649"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:23.653" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166 --key deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:24.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:24.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:23.651" endtime="20200717 22:28:24.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:24.090" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:24.089" endtime="20200717 22:28:24.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:24.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:24.090" endtime="20200717 22:28:24.091"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:23.650" endtime="20200717 22:28:24.091"></status>
</kw>
<msg timestamp="20200717 22:28:24.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:23.650" endtime="20200717 22:28:24.091"></status>
</kw>
<msg timestamp="20200717 22:28:24.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:23.649" endtime="20200717 22:28:24.092"></status>
</kw>
<msg timestamp="20200717 22:28:24.092" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:23.649" endtime="20200717 22:28:24.092"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:21.768" endtime="20200717 22:28:24.092" critical="yes"></status>
</test>
<test id="s1-s8-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:24.098" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:28:24.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:24.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:24.095" endtime="20200717 22:28:24.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:24.101" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:24.101" endtime="20200717 22:28:24.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:24.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:24.101" endtime="20200717 22:28:24.102"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:24.095" endtime="20200717 22:28:24.102"></status>
</kw>
<msg timestamp="20200717 22:28:24.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:24.094" endtime="20200717 22:28:24.102"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:24.094" endtime="20200717 22:28:24.103"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:24.109" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-19166/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:24.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:24.623" level="INFO">${output} = Completed 29 Bytes/29 Bytes (404 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.105" endtime="20200717 22:28:24.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:24.625" level="INFO">Completed 29 Bytes/29 Bytes (404 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.624" endtime="20200717 22:28:24.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:24.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:24.625" endtime="20200717 22:28:24.626"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:24.104" endtime="20200717 22:28:24.626"></status>
</kw>
<msg timestamp="20200717 22:28:24.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:24.104" endtime="20200717 22:28:24.626"></status>
</kw>
<msg timestamp="20200717 22:28:24.627" level="INFO">${output} = Completed 29 Bytes/29 Bytes (404 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.104" endtime="20200717 22:28:24.627"></status>
</kw>
<msg timestamp="20200717 22:28:24.627" level="INFO">${result} = Completed 29 Bytes/29 Bytes (404 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-19166/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.103" endtime="20200717 22:28:24.627"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:24.631" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-19166/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:25.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:25.059" level="INFO">${output} = 2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.629" endtime="20200717 22:28:25.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:25.060" level="INFO">2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:25.059" endtime="20200717 22:28:25.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:25.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:25.060" endtime="20200717 22:28:25.060"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:24.629" endtime="20200717 22:28:25.061"></status>
</kw>
<msg timestamp="20200717 22:28:25.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:24.628" endtime="20200717 22:28:25.061"></status>
</kw>
<msg timestamp="20200717 22:28:25.061" level="INFO">${output} = 2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.628" endtime="20200717 22:28:25.061"></status>
</kw>
<msg timestamp="20200717 22:28:25.061" level="INFO">${result} = 2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:24.627" endtime="20200717 22:28:25.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:25.062" endtime="20200717 22:28:25.062"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key deletetestapiprefix/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:25.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166 --key deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:25.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:25.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:25.064" endtime="20200717 22:28:25.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:25.504" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:25.503" endtime="20200717 22:28:25.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:25.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:25.504" endtime="20200717 22:28:25.505"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:25.064" endtime="20200717 22:28:25.505"></status>
</kw>
<msg timestamp="20200717 22:28:25.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:25.063" endtime="20200717 22:28:25.505"></status>
</kw>
<msg timestamp="20200717 22:28:25.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:25.063" endtime="20200717 22:28:25.506"></status>
</kw>
<msg timestamp="20200717 22:28:25.506" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:25.062" endtime="20200717 22:28:25.506"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:25.512" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-19166/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:25.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:25.951" level="INFO">${output} = 2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:25.508" endtime="20200717 22:28:25.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:25.952" level="INFO">2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:25.951" endtime="20200717 22:28:25.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:25.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:25.952" endtime="20200717 22:28:25.953"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:25.508" endtime="20200717 22:28:25.953"></status>
</kw>
<msg timestamp="20200717 22:28:25.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:25.508" endtime="20200717 22:28:25.953"></status>
</kw>
<msg timestamp="20200717 22:28:25.954" level="INFO">${output} = 2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:25.507" endtime="20200717 22:28:25.954"></status>
</kw>
<msg timestamp="20200717 22:28:25.954" level="INFO">${result} = 2020-07-17 22:28:24         29 filefile</msg>
<status status="PASS" starttime="20200717 22:28:25.506" endtime="20200717 22:28:25.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:25.955" endtime="20200717 22:28:25.955"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:25.959" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166 --key deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:26.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:26.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:25.957" endtime="20200717 22:28:26.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:26.407" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:26.407" endtime="20200717 22:28:26.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:26.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:26.408" endtime="20200717 22:28:26.408"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:25.957" endtime="20200717 22:28:26.408"></status>
</kw>
<msg timestamp="20200717 22:28:26.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:25.956" endtime="20200717 22:28:26.409"></status>
</kw>
<msg timestamp="20200717 22:28:26.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:25.956" endtime="20200717 22:28:26.409"></status>
</kw>
<msg timestamp="20200717 22:28:26.409" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:25.955" endtime="20200717 22:28:26.409"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:24.093" endtime="20200717 22:28:26.409" critical="yes"></status>
</test>
<test id="s1-s8-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:26.414" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-19166-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:26.871" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:26.871" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:26.412" endtime="20200717 22:28:26.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:26.873" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:26.872" endtime="20200717 22:28:26.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:26.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:26.873" endtime="20200717 22:28:26.874"></status>
</kw>
<msg timestamp="20200717 22:28:26.874" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:26.412" endtime="20200717 22:28:26.874"></status>
</kw>
<msg timestamp="20200717 22:28:26.874" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20200717 22:28:26.411" endtime="20200717 22:28:26.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:26.874" endtime="20200717 22:28:26.875"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:26.410" endtime="20200717 22:28:26.875" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:28:10.919" endtime="20200717 22:28:26.877"></status>
</suite>
<suite id="s1-s9" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:26.892" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:26.894" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:28:26.894" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:28:26.890" endtime="20200717 22:28:26.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:26.894" endtime="20200717 22:28:26.895"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:26.897" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:27.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:27.039" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:28:26.895" endtime="20200717 22:28:27.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:27.044" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:27.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:27.428" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:28:27.042" endtime="20200717 22:28:27.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:27.429" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:28:27.429" endtime="20200717 22:28:27.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:27.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:27.430" endtime="20200717 22:28:27.430"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.042" endtime="20200717 22:28:27.430"></status>
</kw>
<msg timestamp="20200717 22:28:27.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:27.042" endtime="20200717 22:28:27.431"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.041" endtime="20200717 22:28:27.431"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.040" endtime="20200717 22:28:27.431"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.040" endtime="20200717 22:28:27.431"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:26.889" endtime="20200717 22:28:27.431"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:26.889" endtime="20200717 22:28:27.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:27.436" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:27.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:27.438" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:27.434" endtime="20200717 22:28:27.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:27.439" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:28:27.439" endtime="20200717 22:28:27.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:27.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:27.439" endtime="20200717 22:28:27.440"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.433" endtime="20200717 22:28:27.440"></status>
</kw>
<msg timestamp="20200717 22:28:27.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:27.433" endtime="20200717 22:28:27.440"></status>
</kw>
<msg timestamp="20200717 22:28:27.441" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:27.433" endtime="20200717 22:28:27.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:28:27.443" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:27.441" endtime="20200717 22:28:27.443"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:27.449" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:27.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:27.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:27.447" endtime="20200717 22:28:27.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:27.472" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:27.471" endtime="20200717 22:28:27.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:27.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:27.472" endtime="20200717 22:28:27.472"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.446" endtime="20200717 22:28:27.473"></status>
</kw>
<msg timestamp="20200717 22:28:27.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:27.445" endtime="20200717 22:28:27.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.444" endtime="20200717 22:28:27.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.444" endtime="20200717 22:28:27.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.433" endtime="20200717 22:28:27.473"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.432" endtime="20200717 22:28:27.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:27.478" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:30.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:30.174" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:27.475" endtime="20200717 22:28:30.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:30.175" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:30.174" endtime="20200717 22:28:30.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:30.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:30.175" endtime="20200717 22:28:30.176"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.475" endtime="20200717 22:28:30.176"></status>
</kw>
<msg timestamp="20200717 22:28:30.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:27.474" endtime="20200717 22:28:30.176"></status>
</kw>
<msg timestamp="20200717 22:28:30.177" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:27.474" endtime="20200717 22:28:30.177"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:30.178" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:30.177" endtime="20200717 22:28:30.178"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:30.178" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:30.178" endtime="20200717 22:28:30.178"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:30.179" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:28:30.178" endtime="20200717 22:28:30.179"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:30.180" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:30.179" endtime="20200717 22:28:30.180"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:30.180" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:30.180" endtime="20200717 22:28:30.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:30.184" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:30.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:30.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:30.182" endtime="20200717 22:28:30.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:30.506" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:30.505" endtime="20200717 22:28:30.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:30.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:30.506" endtime="20200717 22:28:30.506"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:30.181" endtime="20200717 22:28:30.506"></status>
</kw>
<msg timestamp="20200717 22:28:30.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:30.181" endtime="20200717 22:28:30.507"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:30.180" endtime="20200717 22:28:30.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:30.511" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:30.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:30.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:30.508" endtime="20200717 22:28:30.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:30.844" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:30.843" endtime="20200717 22:28:30.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:30.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:30.844" endtime="20200717 22:28:30.844"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:30.508" endtime="20200717 22:28:30.845"></status>
</kw>
<msg timestamp="20200717 22:28:30.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:30.508" endtime="20200717 22:28:30.845"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:30.507" endtime="20200717 22:28:30.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:30.850" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:31.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:31.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:30.847" endtime="20200717 22:28:31.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:31.173" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:31.172" endtime="20200717 22:28:31.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:31.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:31.173" endtime="20200717 22:28:31.174"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:30.846" endtime="20200717 22:28:31.174"></status>
</kw>
<msg timestamp="20200717 22:28:31.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:30.846" endtime="20200717 22:28:31.174"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:30.846" endtime="20200717 22:28:31.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:31.178" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:31.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:31.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:31.176" endtime="20200717 22:28:31.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:31.485" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:31.485" endtime="20200717 22:28:31.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:31.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:31.486" endtime="20200717 22:28:31.486"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:31.175" endtime="20200717 22:28:31.487"></status>
</kw>
<msg timestamp="20200717 22:28:31.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:31.175" endtime="20200717 22:28:31.487"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:31.175" endtime="20200717 22:28:31.487"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.474" endtime="20200717 22:28:31.487"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.473" endtime="20200717 22:28:31.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:31.487" endtime="20200717 22:28:31.488"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.432" endtime="20200717 22:28:31.488"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:27.431" endtime="20200717 22:28:31.488"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:31.491" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:34.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:34.759" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:31.488" endtime="20200717 22:28:34.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:34.760" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:28:34.760" endtime="20200717 22:28:34.760"></status>
</kw>
<msg timestamp="20200717 22:28:34.760" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:31.488" endtime="20200717 22:28:34.760"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:34.761" endtime="20200717 22:28:34.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:28:34.762" level="INFO">${postfix} = 44434</msg>
<status status="PASS" starttime="20200717 22:28:34.762" endtime="20200717 22:28:34.762"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:28:34.763" level="INFO">${bucket} = bucket-44434</msg>
<status status="PASS" starttime="20200717 22:28:34.762" endtime="20200717 22:28:34.763"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:34.767" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-44434 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:35.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:35.205" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-44434"
}</msg>
<status status="PASS" starttime="20200717 22:28:34.765" endtime="20200717 22:28:35.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.206" level="INFO">{
    "Location": "http://s3g:9878/bucket-44434"
}</msg>
<status status="PASS" starttime="20200717 22:28:35.206" endtime="20200717 22:28:35.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:35.207" endtime="20200717 22:28:35.207"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:34.765" endtime="20200717 22:28:35.207"></status>
</kw>
<msg timestamp="20200717 22:28:35.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:34.765" endtime="20200717 22:28:35.208"></status>
</kw>
<msg timestamp="20200717 22:28:35.208" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-44434"
}</msg>
<status status="PASS" starttime="20200717 22:28:34.764" endtime="20200717 22:28:35.208"></status>
</kw>
<msg timestamp="20200717 22:28:35.208" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-44434"
}</msg>
<status status="PASS" starttime="20200717 22:28:34.763" endtime="20200717 22:28:35.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:35.208" endtime="20200717 22:28:35.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:35.209" endtime="20200717 22:28:35.209"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:34.763" endtime="20200717 22:28:35.209"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:34.762" endtime="20200717 22:28:35.209"></status>
</kw>
<msg timestamp="20200717 22:28:35.209" level="INFO">${BUCKET} = bucket-44434</msg>
<status status="PASS" starttime="20200717 22:28:34.761" endtime="20200717 22:28:35.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.210" level="INFO">${BUCKET} = bucket-44434</msg>
<status status="PASS" starttime="20200717 22:28:35.210" endtime="20200717 22:28:35.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:35.210" endtime="20200717 22:28:35.210"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:26.889" endtime="20200717 22:28:35.211"></status>
</kw>
<test id="s1-s9-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:35.216" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:28:35.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:35.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:35.213" endtime="20200717 22:28:35.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.219" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:35.218" endtime="20200717 22:28:35.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:35.219" endtime="20200717 22:28:35.220"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:35.212" endtime="20200717 22:28:35.220"></status>
</kw>
<msg timestamp="20200717 22:28:35.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:35.212" endtime="20200717 22:28:35.220"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:35.212" endtime="20200717 22:28:35.220"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key multidelete/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:35.224" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-44434 --key multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:35.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:35.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:35.222" endtime="20200717 22:28:35.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.754" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:35.753" endtime="20200717 22:28:35.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:35.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:35.754" endtime="20200717 22:28:35.754"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:35.222" endtime="20200717 22:28:35.755"></status>
</kw>
<msg timestamp="20200717 22:28:35.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:35.222" endtime="20200717 22:28:35.755"></status>
</kw>
<msg timestamp="20200717 22:28:35.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:35.221" endtime="20200717 22:28:35.755"></status>
</kw>
<msg timestamp="20200717 22:28:35.755" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:35.220" endtime="20200717 22:28:35.755"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key multidelete/f2 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:35.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-44434 --key multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:36.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:36.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:35.758" endtime="20200717 22:28:36.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:36.274" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:36.273" endtime="20200717 22:28:36.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:36.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:36.274" endtime="20200717 22:28:36.275"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:35.757" endtime="20200717 22:28:36.275"></status>
</kw>
<msg timestamp="20200717 22:28:36.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:35.757" endtime="20200717 22:28:36.275"></status>
</kw>
<msg timestamp="20200717 22:28:36.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:35.756" endtime="20200717 22:28:36.276"></status>
</kw>
<msg timestamp="20200717 22:28:36.276" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:35.756" endtime="20200717 22:28:36.276"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key multidelete/f3 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:36.280" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-44434 --key multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:36.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:36.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:36.278" endtime="20200717 22:28:36.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:36.780" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:36.779" endtime="20200717 22:28:36.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:36.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:36.780" endtime="20200717 22:28:36.780"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:36.277" endtime="20200717 22:28:36.781"></status>
</kw>
<msg timestamp="20200717 22:28:36.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:36.277" endtime="20200717 22:28:36.781"></status>
</kw>
<msg timestamp="20200717 22:28:36.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:36.277" endtime="20200717 22:28:36.781"></status>
</kw>
<msg timestamp="20200717 22:28:36.781" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:36.276" endtime="20200717 22:28:36.781"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:36.787" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-44434 --prefix multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:37.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:37.262" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:35.704Z", 
            "ETag": "2020-07-17T22:28:35.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "mul...</msg>
<status status="PASS" starttime="20200717 22:28:36.783" endtime="20200717 22:28:37.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:37.263" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:35.704Z", 
            "ETag": "2020-07-17T22:28:35.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2020-07-17T22:28:36.227Z", 
            "ETag": "2020-07-17T22:28:36.227Z", 
            "StorageClass": "STANDARD", 
            "Key": "multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2020-07-17T22:28:36.736Z", 
            "ETag": "2020-07-17T22:28:36.736Z", 
            "StorageClass": "STANDARD", 
            "Key": "multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:37.262" endtime="20200717 22:28:37.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:37.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:37.263" endtime="20200717 22:28:37.264"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:36.783" endtime="20200717 22:28:37.264"></status>
</kw>
<msg timestamp="20200717 22:28:37.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:36.783" endtime="20200717 22:28:37.264"></status>
</kw>
<msg timestamp="20200717 22:28:37.264" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:35.704Z", 
            "ETag": "2020-07-17T22:28:35.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "mul...</msg>
<status status="PASS" starttime="20200717 22:28:36.782" endtime="20200717 22:28:37.264"></status>
</kw>
<msg timestamp="20200717 22:28:37.265" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:35.704Z", 
            "ETag": "2020-07-17T22:28:35.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "mul...</msg>
<status status="PASS" starttime="20200717 22:28:36.782" endtime="20200717 22:28:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multidelete/f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:37.265" endtime="20200717 22:28:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multidelete/f2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:37.265" endtime="20200717 22:28:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multidelete/f3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:37.266" endtime="20200717 22:28:37.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:37.266" endtime="20200717 22:28:37.266"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:37.267" endtime="20200717 22:28:37.267"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=multidelete/f1},{Key=multidelete/f2},{Key=multidelete/f4}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:37.276" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket bucket-44434 --delete 'Objects=[{Key=multidelete/f1},{Key=multidelete/f2},{Key=multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:37.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:37.739" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "multidelete/f1"
        }, 
        {
            "Key": "multidelete/f2"
        }, 
        {
            "Key": "multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:37.271" endtime="20200717 22:28:37.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:37.740" level="INFO">{
    "Deleted": [
        {
            "Key": "multidelete/f1"
        }, 
        {
            "Key": "multidelete/f2"
        }, 
        {
            "Key": "multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:37.739" endtime="20200717 22:28:37.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:37.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:37.740" endtime="20200717 22:28:37.741"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:37.270" endtime="20200717 22:28:37.741"></status>
</kw>
<msg timestamp="20200717 22:28:37.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:37.269" endtime="20200717 22:28:37.741"></status>
</kw>
<msg timestamp="20200717 22:28:37.742" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "multidelete/f1"
        }, 
        {
            "Key": "multidelete/f2"
        }, 
        {
            "Key": "multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:37.268" endtime="20200717 22:28:37.742"></status>
</kw>
<msg timestamp="20200717 22:28:37.742" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "multidelete/f1"
        }, 
        {
            "Key": "multidelete/f2"
        }, 
        {
            "Key": "multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:37.267" endtime="20200717 22:28:37.742"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Error</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:37.742" endtime="20200717 22:28:37.743"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:37.747" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-44434 --prefix multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:38.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:38.200" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:36.736Z", 
            "ETag": "2020-07-17T22:28:36.736Z", 
            "StorageClass": "STANDARD", 
            "Key": "mul...</msg>
<status status="PASS" starttime="20200717 22:28:37.745" endtime="20200717 22:28:38.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.201" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:36.736Z", 
            "ETag": "2020-07-17T22:28:36.736Z", 
            "StorageClass": "STANDARD", 
            "Key": "multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:38.200" endtime="20200717 22:28:38.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:38.201" endtime="20200717 22:28:38.202"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:37.744" endtime="20200717 22:28:38.202"></status>
</kw>
<msg timestamp="20200717 22:28:38.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:37.744" endtime="20200717 22:28:38.202"></status>
</kw>
<msg timestamp="20200717 22:28:38.203" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:36.736Z", 
            "ETag": "2020-07-17T22:28:36.736Z", 
            "StorageClass": "STANDARD", 
            "Key": "mul...</msg>
<status status="PASS" starttime="20200717 22:28:37.743" endtime="20200717 22:28:38.203"></status>
</kw>
<msg timestamp="20200717 22:28:38.203" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:36.736Z", 
            "ETag": "2020-07-17T22:28:36.736Z", 
            "StorageClass": "STANDARD", 
            "Key": "mul...</msg>
<status status="PASS" starttime="20200717 22:28:37.743" endtime="20200717 22:28:38.203"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multidelete/f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:38.203" endtime="20200717 22:28:38.204"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multidelete/f2</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:38.204" endtime="20200717 22:28:38.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>multidelete/f3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:38.204" endtime="20200717 22:28:38.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:38.205" endtime="20200717 22:28:38.205"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:38.205" endtime="20200717 22:28:38.206"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:35.211" endtime="20200717 22:28:38.206" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:28:26.879" endtime="20200717 22:28:38.207"></status>
</suite>
<suite id="s1-s10" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:38.220" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:38.223" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:28:38.223" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:28:38.218" endtime="20200717 22:28:38.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:38.223" endtime="20200717 22:28:38.223"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:38.226" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:38.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:38.358" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:28:38.224" endtime="20200717 22:28:38.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:38.365" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:38.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:38.730" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:28:38.362" endtime="20200717 22:28:38.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.731" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:28:38.731" endtime="20200717 22:28:38.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:38.731" endtime="20200717 22:28:38.732"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.361" endtime="20200717 22:28:38.732"></status>
</kw>
<msg timestamp="20200717 22:28:38.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:38.360" endtime="20200717 22:28:38.732"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.360" endtime="20200717 22:28:38.733"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.359" endtime="20200717 22:28:38.733"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.359" endtime="20200717 22:28:38.733"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.217" endtime="20200717 22:28:38.733"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.217" endtime="20200717 22:28:38.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:38.738" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:38.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:38.740" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:38.736" endtime="20200717 22:28:38.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.741" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:28:38.740" endtime="20200717 22:28:38.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:38.741" endtime="20200717 22:28:38.741"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.735" endtime="20200717 22:28:38.742"></status>
</kw>
<msg timestamp="20200717 22:28:38.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:38.735" endtime="20200717 22:28:38.742"></status>
</kw>
<msg timestamp="20200717 22:28:38.742" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:38.735" endtime="20200717 22:28:38.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:28:38.743" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:38.742" endtime="20200717 22:28:38.743"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:38.748" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:38.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:38.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:38.745" endtime="20200717 22:28:38.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.759" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:38.758" endtime="20200717 22:28:38.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:38.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:38.759" endtime="20200717 22:28:38.759"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.745" endtime="20200717 22:28:38.760"></status>
</kw>
<msg timestamp="20200717 22:28:38.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:38.744" endtime="20200717 22:28:38.760"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.744" endtime="20200717 22:28:38.760"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.743" endtime="20200717 22:28:38.760"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.734" endtime="20200717 22:28:38.760"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.734" endtime="20200717 22:28:38.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:38.765" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:41.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:41.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:38.762" endtime="20200717 22:28:41.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:41.611" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:41.611" endtime="20200717 22:28:41.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:41.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:41.611" endtime="20200717 22:28:41.612"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.762" endtime="20200717 22:28:41.612"></status>
</kw>
<msg timestamp="20200717 22:28:41.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:38.762" endtime="20200717 22:28:41.612"></status>
</kw>
<msg timestamp="20200717 22:28:41.613" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:38.761" endtime="20200717 22:28:41.613"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:41.613" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:41.613" endtime="20200717 22:28:41.613"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:41.614" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:41.613" endtime="20200717 22:28:41.614"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:41.614" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:28:41.614" endtime="20200717 22:28:41.614"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:41.615" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:41.614" endtime="20200717 22:28:41.615"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:41.615" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:41.615" endtime="20200717 22:28:41.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:41.619" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:41.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:41.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:41.616" endtime="20200717 22:28:41.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:41.951" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:41.951" endtime="20200717 22:28:41.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:41.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:41.952" endtime="20200717 22:28:41.952"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:41.616" endtime="20200717 22:28:41.953"></status>
</kw>
<msg timestamp="20200717 22:28:41.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:41.616" endtime="20200717 22:28:41.953"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:41.615" endtime="20200717 22:28:41.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:41.957" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:42.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:42.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:41.954" endtime="20200717 22:28:42.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:42.279" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:42.279" endtime="20200717 22:28:42.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:42.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:42.279" endtime="20200717 22:28:42.280"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:41.954" endtime="20200717 22:28:42.280"></status>
</kw>
<msg timestamp="20200717 22:28:42.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:41.954" endtime="20200717 22:28:42.280"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:41.953" endtime="20200717 22:28:42.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:42.285" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:42.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:42.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:42.282" endtime="20200717 22:28:42.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:42.599" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:42.598" endtime="20200717 22:28:42.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:42.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:42.599" endtime="20200717 22:28:42.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:42.282" endtime="20200717 22:28:42.600"></status>
</kw>
<msg timestamp="20200717 22:28:42.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:42.281" endtime="20200717 22:28:42.600"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:42.281" endtime="20200717 22:28:42.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:42.604" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:42.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:42.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:42.602" endtime="20200717 22:28:42.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:42.922" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:42.921" endtime="20200717 22:28:42.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:42.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:42.922" endtime="20200717 22:28:42.922"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:42.601" endtime="20200717 22:28:42.923"></status>
</kw>
<msg timestamp="20200717 22:28:42.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:42.601" endtime="20200717 22:28:42.923"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:42.600" endtime="20200717 22:28:42.923"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.761" endtime="20200717 22:28:42.923"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.760" endtime="20200717 22:28:42.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:42.924" endtime="20200717 22:28:42.924"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.734" endtime="20200717 22:28:42.924"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.733" endtime="20200717 22:28:42.925"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:42.927" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:45.853" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:45.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:42.925" endtime="20200717 22:28:45.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:45.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:28:45.854" endtime="20200717 22:28:45.855"></status>
</kw>
<msg timestamp="20200717 22:28:45.855" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:42.925" endtime="20200717 22:28:45.855"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:45.855" endtime="20200717 22:28:45.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:28:45.857" level="INFO">${postfix} = 32202</msg>
<status status="PASS" starttime="20200717 22:28:45.856" endtime="20200717 22:28:45.857"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:28:45.857" level="INFO">${bucket} = bucket-32202</msg>
<status status="PASS" starttime="20200717 22:28:45.857" endtime="20200717 22:28:45.857"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:45.863" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-32202 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:46.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:46.320" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-32202"
}</msg>
<status status="PASS" starttime="20200717 22:28:45.859" endtime="20200717 22:28:46.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.321" level="INFO">{
    "Location": "http://s3g:9878/bucket-32202"
}</msg>
<status status="PASS" starttime="20200717 22:28:46.320" endtime="20200717 22:28:46.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:46.321" endtime="20200717 22:28:46.322"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:45.859" endtime="20200717 22:28:46.322"></status>
</kw>
<msg timestamp="20200717 22:28:46.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:45.859" endtime="20200717 22:28:46.322"></status>
</kw>
<msg timestamp="20200717 22:28:46.322" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-32202"
}</msg>
<status status="PASS" starttime="20200717 22:28:45.858" endtime="20200717 22:28:46.322"></status>
</kw>
<msg timestamp="20200717 22:28:46.323" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-32202"
}</msg>
<status status="PASS" starttime="20200717 22:28:45.858" endtime="20200717 22:28:46.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:46.323" endtime="20200717 22:28:46.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:46.323" endtime="20200717 22:28:46.323"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:45.857" endtime="20200717 22:28:46.324"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:45.856" endtime="20200717 22:28:46.324"></status>
</kw>
<msg timestamp="20200717 22:28:46.324" level="INFO">${BUCKET} = bucket-32202</msg>
<status status="PASS" starttime="20200717 22:28:45.856" endtime="20200717 22:28:46.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.324" level="INFO">${BUCKET} = bucket-32202</msg>
<status status="PASS" starttime="20200717 22:28:46.324" endtime="20200717 22:28:46.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:46.325" endtime="20200717 22:28:46.325"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:38.217" endtime="20200717 22:28:46.325"></status>
</kw>
<test id="s1-s10-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arguments>
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:46.330" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20200717 22:28:46.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:46.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:46.328" endtime="20200717 22:28:46.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.333" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:46.333" endtime="20200717 22:28:46.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:46.334" endtime="20200717 22:28:46.334"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:46.327" endtime="20200717 22:28:46.334"></status>
</kw>
<msg timestamp="20200717 22:28:46.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:46.327" endtime="20200717 22:28:46.335"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:46.327" endtime="20200717 22:28:46.335"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key putobject/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:46.339" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-32202 --key putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:46.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:46.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:46.337" endtime="20200717 22:28:46.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.893" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:46.892" endtime="20200717 22:28:46.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:46.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:46.893" endtime="20200717 22:28:46.894"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:46.336" endtime="20200717 22:28:46.894"></status>
</kw>
<msg timestamp="20200717 22:28:46.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:46.336" endtime="20200717 22:28:46.894"></status>
</kw>
<msg timestamp="20200717 22:28:46.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:46.335" endtime="20200717 22:28:46.895"></status>
</kw>
<msg timestamp="20200717 22:28:46.895" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:46.335" endtime="20200717 22:28:46.895"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:46.899" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-32202 --prefix putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:47.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:47.365" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "put...</msg>
<status status="PASS" starttime="20200717 22:28:46.897" endtime="20200717 22:28:47.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:47.366" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:47.365" endtime="20200717 22:28:47.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:47.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:47.367" endtime="20200717 22:28:47.367"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:46.896" endtime="20200717 22:28:47.368"></status>
</kw>
<msg timestamp="20200717 22:28:47.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:46.896" endtime="20200717 22:28:47.368"></status>
</kw>
<msg timestamp="20200717 22:28:47.368" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "put...</msg>
<status status="PASS" starttime="20200717 22:28:46.896" endtime="20200717 22:28:47.368"></status>
</kw>
<msg timestamp="20200717 22:28:47.368" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "put...</msg>
<status status="PASS" starttime="20200717 22:28:46.895" endtime="20200717 22:28:47.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:47.369" endtime="20200717 22:28:47.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>touch -f /tmp/zerobyte</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:47.374" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:47.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:47.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:47.370" endtime="20200717 22:28:47.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:47.376" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:47.375" endtime="20200717 22:28:47.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:47.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:47.376" endtime="20200717 22:28:47.376"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:47.370" endtime="20200717 22:28:47.377"></status>
</kw>
<msg timestamp="20200717 22:28:47.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:47.370" endtime="20200717 22:28:47.377"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:47.369" endtime="20200717 22:28:47.377"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key putobject/zerobyte --body /tmp/zerobyte</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:47.381" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-32202 --key putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:47.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:47.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:47.379" endtime="20200717 22:28:47.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:47.837" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:47.836" endtime="20200717 22:28:47.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:47.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:47.837" endtime="20200717 22:28:47.838"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:47.379" endtime="20200717 22:28:47.838"></status>
</kw>
<msg timestamp="20200717 22:28:47.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:47.378" endtime="20200717 22:28:47.838"></status>
</kw>
<msg timestamp="20200717 22:28:47.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:47.378" endtime="20200717 22:28:47.838"></status>
</kw>
<msg timestamp="20200717 22:28:47.839" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200717 22:28:47.377" endtime="20200717 22:28:47.839"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:47.844" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-32202 --prefix putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:48.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:48.286" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "put...</msg>
<status status="PASS" starttime="20200717 22:28:47.841" endtime="20200717 22:28:48.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.287" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2020-07-17T22:28:47.790Z", 
            "ETag": "2020-07-17T22:28:47.790Z", 
            "StorageClass": "STANDARD", 
            "Key": "putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" starttime="20200717 22:28:48.286" endtime="20200717 22:28:48.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:48.287" endtime="20200717 22:28:48.288"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:47.840" endtime="20200717 22:28:48.288"></status>
</kw>
<msg timestamp="20200717 22:28:48.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:47.840" endtime="20200717 22:28:48.288"></status>
</kw>
<msg timestamp="20200717 22:28:48.289" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "put...</msg>
<status status="PASS" starttime="20200717 22:28:47.839" endtime="20200717 22:28:48.289"></status>
</kw>
<msg timestamp="20200717 22:28:48.289" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2020-07-17T22:28:46.839Z", 
            "ETag": "2020-07-17T22:28:46.839Z", 
            "StorageClass": "STANDARD", 
            "Key": "put...</msg>
<status status="PASS" starttime="20200717 22:28:47.839" endtime="20200717 22:28:48.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>zerobyte</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:48.289" endtime="20200717 22:28:48.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:46.326" endtime="20200717 22:28:48.290" critical="yes"></status>
</test>
<test id="s1-s10-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 /tmp/testfile.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:48.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:48.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:48.785" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:4...</msg>
<status status="PASS" starttime="20200717 22:28:48.293" endtime="20200717 22:28:48.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.786" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:48 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:48.786" endtime="20200717 22:28:48.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:48.786" endtime="20200717 22:28:48.787"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:48.293" endtime="20200717 22:28:48.787"></status>
</kw>
<msg timestamp="20200717 22:28:48.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:48.293" endtime="20200717 22:28:48.787"></status>
</kw>
<msg timestamp="20200717 22:28:48.788" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:4...</msg>
<status status="PASS" starttime="20200717 22:28:48.292" endtime="20200717 22:28:48.788"></status>
</kw>
<msg timestamp="20200717 22:28:48.788" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:4...</msg>
<status status="PASS" starttime="20200717 22:28:48.291" endtime="20200717 22:28:48.788"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:48.792" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:48.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:48.795" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20200717 22:28:48.790" endtime="20200717 22:28:48.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.796" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20200717 22:28:48.796" endtime="20200717 22:28:48.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:48.796" endtime="20200717 22:28:48.797"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:48.790" endtime="20200717 22:28:48.797"></status>
</kw>
<msg timestamp="20200717 22:28:48.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:48.789" endtime="20200717 22:28:48.797"></status>
</kw>
<msg timestamp="20200717 22:28:48.798" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20200717 22:28:48.789" endtime="20200717 22:28:48.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:48.803" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:48.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:48.804" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20200717 22:28:48.799" endtime="20200717 22:28:48.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.805" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20200717 22:28:48.805" endtime="20200717 22:28:48.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:48.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:48.806" endtime="20200717 22:28:48.806"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:48.799" endtime="20200717 22:28:48.806"></status>
</kw>
<msg timestamp="20200717 22:28:48.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:48.799" endtime="20200717 22:28:48.807"></status>
</kw>
<msg timestamp="20200717 22:28:48.807" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20200717 22:28:48.798" endtime="20200717 22:28:48.807"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:48.807" endtime="20200717 22:28:48.807"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:48.788" endtime="20200717 22:28:48.807"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:48.290" endtime="20200717 22:28:48.808" critical="yes"></status>
</test>
<test id="s1-s10-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:48.816" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:49.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:49.287" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:48.813" endtime="20200717 22:28:49.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.288" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:49 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:49.287" endtime="20200717 22:28:49.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:49.288" endtime="20200717 22:28:49.289"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:48.812" endtime="20200717 22:28:49.289"></status>
</kw>
<msg timestamp="20200717 22:28:49.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:48.812" endtime="20200717 22:28:49.289"></status>
</kw>
<msg timestamp="20200717 22:28:49.289" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:48.810" endtime="20200717 22:28:49.290"></status>
</kw>
<msg timestamp="20200717 22:28:49.290" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:48.809" endtime="20200717 22:28:49.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.290" endtime="20200717 22:28:49.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.290" endtime="20200717 22:28:49.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.291" endtime="20200717 22:28:49.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:49.296" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20200717 22:28:49.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:49.298" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20200717 22:28:49.293" endtime="20200717 22:28:49.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.299" level="INFO">Rando</msg>
<status status="PASS" starttime="20200717 22:28:49.298" endtime="20200717 22:28:49.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:49.299" endtime="20200717 22:28:49.299"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:49.292" endtime="20200717 22:28:49.300"></status>
</kw>
<msg timestamp="20200717 22:28:49.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:49.292" endtime="20200717 22:28:49.300"></status>
</kw>
<msg timestamp="20200717 22:28:49.300" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20200717 22:28:49.291" endtime="20200717 22:28:49.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:49.304" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:49.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:49.306" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20200717 22:28:49.302" endtime="20200717 22:28:49.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.307" level="INFO">Rando</msg>
<status status="PASS" starttime="20200717 22:28:49.307" endtime="20200717 22:28:49.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:49.308" endtime="20200717 22:28:49.308"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:49.301" endtime="20200717 22:28:49.308"></status>
</kw>
<msg timestamp="20200717 22:28:49.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:49.301" endtime="20200717 22:28:49.309"></status>
</kw>
<msg timestamp="20200717 22:28:49.309" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20200717 22:28:49.300" endtime="20200717 22:28:49.309"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.309" endtime="20200717 22:28:49.309"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:49.315" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:49.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:49.775" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:49.312" endtime="20200717 22:28:49.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.777" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:49 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:49.776" endtime="20200717 22:28:49.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:49.777" endtime="20200717 22:28:49.777"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:49.311" endtime="20200717 22:28:49.778"></status>
</kw>
<msg timestamp="20200717 22:28:49.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:49.311" endtime="20200717 22:28:49.778"></status>
</kw>
<msg timestamp="20200717 22:28:49.778" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:49.310" endtime="20200717 22:28:49.778"></status>
</kw>
<msg timestamp="20200717 22:28:49.778" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:49.310" endtime="20200717 22:28:49.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.779" endtime="20200717 22:28:49.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.779" endtime="20200717 22:28:49.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.780" endtime="20200717 22:28:49.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:49.784" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20200717 22:28:49.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:49.787" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20200717 22:28:49.781" endtime="20200717 22:28:49.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.787" level="INFO">ndo</msg>
<status status="PASS" starttime="20200717 22:28:49.787" endtime="20200717 22:28:49.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:49.788" endtime="20200717 22:28:49.788"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:49.781" endtime="20200717 22:28:49.788"></status>
</kw>
<msg timestamp="20200717 22:28:49.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:49.781" endtime="20200717 22:28:49.789"></status>
</kw>
<msg timestamp="20200717 22:28:49.789" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20200717 22:28:49.780" endtime="20200717 22:28:49.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:49.792" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:49.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:49.795" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20200717 22:28:49.790" endtime="20200717 22:28:49.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.796" level="INFO">ndo</msg>
<status status="PASS" starttime="20200717 22:28:49.795" endtime="20200717 22:28:49.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:49.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:49.796" endtime="20200717 22:28:49.797"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:49.790" endtime="20200717 22:28:49.797"></status>
</kw>
<msg timestamp="20200717 22:28:49.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:49.790" endtime="20200717 22:28:49.797"></status>
</kw>
<msg timestamp="20200717 22:28:49.797" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20200717 22:28:49.789" endtime="20200717 22:28:49.797"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:49.797" endtime="20200717 22:28:49.798"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:49.803" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:50.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:50.262" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:49.800" endtime="20200717 22:28:50.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.263" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:50 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:50.262" endtime="20200717 22:28:50.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:50.263" endtime="20200717 22:28:50.266"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:49.800" endtime="20200717 22:28:50.266"></status>
</kw>
<msg timestamp="20200717 22:28:50.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:49.799" endtime="20200717 22:28:50.267"></status>
</kw>
<msg timestamp="20200717 22:28:50.267" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:49.799" endtime="20200717 22:28:50.267"></status>
</kw>
<msg timestamp="20200717 22:28:50.267" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:49.798" endtime="20200717 22:28:50.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:50.267" endtime="20200717 22:28:50.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:50.268" endtime="20200717 22:28:50.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:50.268" endtime="20200717 22:28:50.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:50.274" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20200717 22:28:50.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:50.276" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20200717 22:28:50.272" endtime="20200717 22:28:50.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.277" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20200717 22:28:50.277" endtime="20200717 22:28:50.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:50.278" endtime="20200717 22:28:50.278"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:50.271" endtime="20200717 22:28:50.278"></status>
</kw>
<msg timestamp="20200717 22:28:50.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:50.271" endtime="20200717 22:28:50.278"></status>
</kw>
<msg timestamp="20200717 22:28:50.279" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20200717 22:28:50.269" endtime="20200717 22:28:50.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:50.282" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:50.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:50.285" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20200717 22:28:50.280" endtime="20200717 22:28:50.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.287" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20200717 22:28:50.286" endtime="20200717 22:28:50.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:50.287" endtime="20200717 22:28:50.288"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:50.280" endtime="20200717 22:28:50.289"></status>
</kw>
<msg timestamp="20200717 22:28:50.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:50.279" endtime="20200717 22:28:50.289"></status>
</kw>
<msg timestamp="20200717 22:28:50.289" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20200717 22:28:50.279" endtime="20200717 22:28:50.289"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:50.289" endtime="20200717 22:28:50.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:48.809" endtime="20200717 22:28:50.290" critical="yes"></status>
</test>
<test id="s1-s10-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:50.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:50.735" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:50.735" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:50.293" endtime="20200717 22:28:50.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.736" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:50.735" endtime="20200717 22:28:50.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:50.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:50.736" endtime="20200717 22:28:50.737"></status>
</kw>
<msg timestamp="20200717 22:28:50.737" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:50.292" endtime="20200717 22:28:50.737"></status>
</kw>
<msg timestamp="20200717 22:28:50.738" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:50.292" endtime="20200717 22:28:50.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:50.738" endtime="20200717 22:28:50.738"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:50.291" endtime="20200717 22:28:50.738" critical="yes"></status>
</test>
<test id="s1-s10-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:50.746" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:51.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:51.201" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:50.742" endtime="20200717 22:28:51.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.202" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:51 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:51.201" endtime="20200717 22:28:51.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:51.202" endtime="20200717 22:28:51.203"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:50.742" endtime="20200717 22:28:51.203"></status>
</kw>
<msg timestamp="20200717 22:28:51.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:50.742" endtime="20200717 22:28:51.203"></status>
</kw>
<msg timestamp="20200717 22:28:51.203" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:50.741" endtime="20200717 22:28:51.203"></status>
</kw>
<msg timestamp="20200717 22:28:51.204" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:50.740" endtime="20200717 22:28:51.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.204" endtime="20200717 22:28:51.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.204" endtime="20200717 22:28:51.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.205" endtime="20200717 22:28:51.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:51.210" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:51.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:51.211" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.206" endtime="20200717 22:28:51.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.212" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.212" endtime="20200717 22:28:51.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:51.213" endtime="20200717 22:28:51.213"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:51.206" endtime="20200717 22:28:51.213"></status>
</kw>
<msg timestamp="20200717 22:28:51.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:51.206" endtime="20200717 22:28:51.213"></status>
</kw>
<msg timestamp="20200717 22:28:51.214" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.205" endtime="20200717 22:28:51.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:51.217" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:51.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:51.219" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.215" endtime="20200717 22:28:51.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.220" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.220" endtime="20200717 22:28:51.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:51.221" endtime="20200717 22:28:51.221"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:51.214" endtime="20200717 22:28:51.221"></status>
</kw>
<msg timestamp="20200717 22:28:51.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:51.214" endtime="20200717 22:28:51.222"></status>
</kw>
<msg timestamp="20200717 22:28:51.222" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.214" endtime="20200717 22:28:51.222"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.222" endtime="20200717 22:28:51.223"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:50.739" endtime="20200717 22:28:51.223" critical="yes"></status>
</test>
<test id="s1-s10-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:51.229" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:51.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:51.680" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:51.227" endtime="20200717 22:28:51.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.681" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:51 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:51.680" endtime="20200717 22:28:51.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:51.681" endtime="20200717 22:28:51.682"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:51.226" endtime="20200717 22:28:51.682"></status>
</kw>
<msg timestamp="20200717 22:28:51.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:51.226" endtime="20200717 22:28:51.682"></status>
</kw>
<msg timestamp="20200717 22:28:51.682" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:51.225" endtime="20200717 22:28:51.682"></status>
</kw>
<msg timestamp="20200717 22:28:51.683" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:51.225" endtime="20200717 22:28:51.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.683" endtime="20200717 22:28:51.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.683" endtime="20200717 22:28:51.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.684" endtime="20200717 22:28:51.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:51.689" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:51.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:51.691" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.686" endtime="20200717 22:28:51.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.692" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.691" endtime="20200717 22:28:51.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:51.692" endtime="20200717 22:28:51.692"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:51.685" endtime="20200717 22:28:51.693"></status>
</kw>
<msg timestamp="20200717 22:28:51.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:51.685" endtime="20200717 22:28:51.693"></status>
</kw>
<msg timestamp="20200717 22:28:51.693" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.684" endtime="20200717 22:28:51.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:51.697" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:51.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:51.698" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.694" endtime="20200717 22:28:51.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.699" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.699" endtime="20200717 22:28:51.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:51.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:51.700" endtime="20200717 22:28:51.700"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:51.694" endtime="20200717 22:28:51.701"></status>
</kw>
<msg timestamp="20200717 22:28:51.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:51.694" endtime="20200717 22:28:51.701"></status>
</kw>
<msg timestamp="20200717 22:28:51.701" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:51.693" endtime="20200717 22:28:51.701"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:51.701" endtime="20200717 22:28:51.702"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:51.224" endtime="20200717 22:28:51.702" critical="yes"></status>
</test>
<test id="s1-s10-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:51.709" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:52.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:52.185" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:51.705" endtime="20200717 22:28:52.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.187" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:52 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:52.186" endtime="20200717 22:28:52.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:52.187" endtime="20200717 22:28:52.188"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:51.705" endtime="20200717 22:28:52.188"></status>
</kw>
<msg timestamp="20200717 22:28:52.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:51.705" endtime="20200717 22:28:52.188"></status>
</kw>
<msg timestamp="20200717 22:28:52.189" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:51.704" endtime="20200717 22:28:52.189"></status>
</kw>
<msg timestamp="20200717 22:28:52.189" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:51.704" endtime="20200717 22:28:52.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.189" endtime="20200717 22:28:52.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.190" endtime="20200717 22:28:52.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.191" endtime="20200717 22:28:52.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:52.196" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20200717 22:28:52.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:52.198" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20200717 22:28:52.193" endtime="20200717 22:28:52.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.199" level="INFO">R</msg>
<status status="PASS" starttime="20200717 22:28:52.198" endtime="20200717 22:28:52.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:52.199" endtime="20200717 22:28:52.200"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:52.192" endtime="20200717 22:28:52.200"></status>
</kw>
<msg timestamp="20200717 22:28:52.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:52.192" endtime="20200717 22:28:52.200"></status>
</kw>
<msg timestamp="20200717 22:28:52.201" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20200717 22:28:52.192" endtime="20200717 22:28:52.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:52.205" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:52.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:52.207" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20200717 22:28:52.202" endtime="20200717 22:28:52.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.208" level="INFO">R</msg>
<status status="PASS" starttime="20200717 22:28:52.207" endtime="20200717 22:28:52.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:52.208" endtime="20200717 22:28:52.209"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:52.202" endtime="20200717 22:28:52.209"></status>
</kw>
<msg timestamp="20200717 22:28:52.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:52.202" endtime="20200717 22:28:52.209"></status>
</kw>
<msg timestamp="20200717 22:28:52.209" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20200717 22:28:52.201" endtime="20200717 22:28:52.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.210" endtime="20200717 22:28:52.210"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:52.215" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:52.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:52.703" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:52.212" endtime="20200717 22:28:52.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.705" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:52 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:52.704" endtime="20200717 22:28:52.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:52.705" endtime="20200717 22:28:52.705"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:52.212" endtime="20200717 22:28:52.706"></status>
</kw>
<msg timestamp="20200717 22:28:52.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:52.211" endtime="20200717 22:28:52.706"></status>
</kw>
<msg timestamp="20200717 22:28:52.706" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:52.211" endtime="20200717 22:28:52.706"></status>
</kw>
<msg timestamp="20200717 22:28:52.706" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Fri, 17 Jul 2...</msg>
<status status="PASS" starttime="20200717 22:28:52.210" endtime="20200717 22:28:52.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.707" endtime="20200717 22:28:52.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.707" endtime="20200717 22:28:52.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.708" endtime="20200717 22:28:52.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:52.712" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20200717 22:28:52.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:52.715" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20200717 22:28:52.710" endtime="20200717 22:28:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.716" level="INFO">o</msg>
<status status="PASS" starttime="20200717 22:28:52.715" endtime="20200717 22:28:52.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:52.716" endtime="20200717 22:28:52.717"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:52.709" endtime="20200717 22:28:52.717"></status>
</kw>
<msg timestamp="20200717 22:28:52.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:52.709" endtime="20200717 22:28:52.717"></status>
</kw>
<msg timestamp="20200717 22:28:52.717" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20200717 22:28:52.709" endtime="20200717 22:28:52.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:52.721" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:52.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:52.724" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20200717 22:28:52.719" endtime="20200717 22:28:52.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.725" level="INFO">o</msg>
<status status="PASS" starttime="20200717 22:28:52.724" endtime="20200717 22:28:52.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:52.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:52.725" endtime="20200717 22:28:52.725"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:52.718" endtime="20200717 22:28:52.726"></status>
</kw>
<msg timestamp="20200717 22:28:52.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:52.718" endtime="20200717 22:28:52.726"></status>
</kw>
<msg timestamp="20200717 22:28:52.726" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20200717 22:28:52.718" endtime="20200717 22:28:52.726"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:52.726" endtime="20200717 22:28:52.727"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:51.703" endtime="20200717 22:28:52.727" critical="yes"></status>
</test>
<test id="s1-s10-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:52.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:53.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:53.216" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:52.731" endtime="20200717 22:28:53.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.217" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:53 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:53.216" endtime="20200717 22:28:53.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:53.217" endtime="20200717 22:28:53.218"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:52.730" endtime="20200717 22:28:53.218"></status>
</kw>
<msg timestamp="20200717 22:28:53.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:52.730" endtime="20200717 22:28:53.218"></status>
</kw>
<msg timestamp="20200717 22:28:53.219" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:52.730" endtime="20200717 22:28:53.219"></status>
</kw>
<msg timestamp="20200717 22:28:53.219" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:52.729" endtime="20200717 22:28:53.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.219" endtime="20200717 22:28:53.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.220" endtime="20200717 22:28:53.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.221" endtime="20200717 22:28:53.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:53.225" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20200717 22:28:53.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:53.233" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20200717 22:28:53.223" endtime="20200717 22:28:53.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.234" level="INFO">ext</msg>
<status status="PASS" starttime="20200717 22:28:53.234" endtime="20200717 22:28:53.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:53.235" endtime="20200717 22:28:53.235"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:53.222" endtime="20200717 22:28:53.235"></status>
</kw>
<msg timestamp="20200717 22:28:53.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:53.222" endtime="20200717 22:28:53.236"></status>
</kw>
<msg timestamp="20200717 22:28:53.236" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20200717 22:28:53.221" endtime="20200717 22:28:53.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:53.240" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:53.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:53.242" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20200717 22:28:53.237" endtime="20200717 22:28:53.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.243" level="INFO">ext</msg>
<status status="PASS" starttime="20200717 22:28:53.242" endtime="20200717 22:28:53.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:53.244" endtime="20200717 22:28:53.244"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:53.237" endtime="20200717 22:28:53.244"></status>
</kw>
<msg timestamp="20200717 22:28:53.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:53.236" endtime="20200717 22:28:53.245"></status>
</kw>
<msg timestamp="20200717 22:28:53.245" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20200717 22:28:53.236" endtime="20200717 22:28:53.245"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.245" endtime="20200717 22:28:53.245"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:53.249" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:53.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:53.731" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:53.247" endtime="20200717 22:28:53.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.732" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul 2020 22:28:53 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:53.731" endtime="20200717 22:28:53.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:53.732" endtime="20200717 22:28:53.732"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:53.247" endtime="20200717 22:28:53.733"></status>
</kw>
<msg timestamp="20200717 22:28:53.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:53.247" endtime="20200717 22:28:53.733"></status>
</kw>
<msg timestamp="20200717 22:28:53.733" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:53.246" endtime="20200717 22:28:53.733"></status>
</kw>
<msg timestamp="20200717 22:28:53.734" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Fri, 17 Jul ...</msg>
<status status="PASS" starttime="20200717 22:28:53.246" endtime="20200717 22:28:53.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.734" endtime="20200717 22:28:53.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.734" endtime="20200717 22:28:53.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.735" endtime="20200717 22:28:53.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:53.739" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:53.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:53.742" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:53.737" endtime="20200717 22:28:53.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.743" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:53.742" endtime="20200717 22:28:53.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:53.743" endtime="20200717 22:28:53.743"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:53.736" endtime="20200717 22:28:53.744"></status>
</kw>
<msg timestamp="20200717 22:28:53.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:53.736" endtime="20200717 22:28:53.744"></status>
</kw>
<msg timestamp="20200717 22:28:53.744" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:53.735" endtime="20200717 22:28:53.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:53.748" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:53.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:53.751" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:53.746" endtime="20200717 22:28:53.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.752" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:53.751" endtime="20200717 22:28:53.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:53.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:53.752" endtime="20200717 22:28:53.752"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:53.745" endtime="20200717 22:28:53.753"></status>
</kw>
<msg timestamp="20200717 22:28:53.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:53.745" endtime="20200717 22:28:53.753"></status>
</kw>
<msg timestamp="20200717 22:28:53.753" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:53.744" endtime="20200717 22:28:53.753"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:53.753" endtime="20200717 22:28:53.754"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:52.728" endtime="20200717 22:28:53.754" critical="yes"></status>
</test>
<test id="s1-s10-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:53.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:54.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:54.232" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:5...</msg>
<status status="PASS" starttime="20200717 22:28:53.758" endtime="20200717 22:28:54.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.233" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:54 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:54.232" endtime="20200717 22:28:54.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:54.233" endtime="20200717 22:28:54.234"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:53.758" endtime="20200717 22:28:54.234"></status>
</kw>
<msg timestamp="20200717 22:28:54.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:53.757" endtime="20200717 22:28:54.234"></status>
</kw>
<msg timestamp="20200717 22:28:54.234" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:5...</msg>
<status status="PASS" starttime="20200717 22:28:53.757" endtime="20200717 22:28:54.235"></status>
</kw>
<msg timestamp="20200717 22:28:54.235" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:5...</msg>
<status status="PASS" starttime="20200717 22:28:53.756" endtime="20200717 22:28:54.235"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:54.235" endtime="20200717 22:28:54.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:54.235" endtime="20200717 22:28:54.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:54.240" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:54.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:54.242" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.237" endtime="20200717 22:28:54.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.244" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.243" endtime="20200717 22:28:54.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:54.244" endtime="20200717 22:28:54.245"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:54.237" endtime="20200717 22:28:54.245"></status>
</kw>
<msg timestamp="20200717 22:28:54.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:54.236" endtime="20200717 22:28:54.245"></status>
</kw>
<msg timestamp="20200717 22:28:54.245" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.236" endtime="20200717 22:28:54.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:54.248" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:54.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:54.251" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.247" endtime="20200717 22:28:54.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.252" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.251" endtime="20200717 22:28:54.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:54.252" endtime="20200717 22:28:54.252"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:54.246" endtime="20200717 22:28:54.252"></status>
</kw>
<msg timestamp="20200717 22:28:54.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:54.246" endtime="20200717 22:28:54.253"></status>
</kw>
<msg timestamp="20200717 22:28:54.253" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.245" endtime="20200717 22:28:54.253"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:54.253" endtime="20200717 22:28:54.254"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:54.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:54.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:54.723" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:5...</msg>
<status status="PASS" starttime="20200717 22:28:54.256" endtime="20200717 22:28:54.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.724" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:54 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20200717 22:28:54.724" endtime="20200717 22:28:54.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:54.724" endtime="20200717 22:28:54.725"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:54.255" endtime="20200717 22:28:54.725"></status>
</kw>
<msg timestamp="20200717 22:28:54.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:54.255" endtime="20200717 22:28:54.726"></status>
</kw>
<msg timestamp="20200717 22:28:54.726" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:5...</msg>
<status status="PASS" starttime="20200717 22:28:54.254" endtime="20200717 22:28:54.726"></status>
</kw>
<msg timestamp="20200717 22:28:54.726" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Fri, 17 Jul 2020 22:28:46 GMT", 
    "ContentLength": 11, 
    "Expires": "Fri, 17 Jul 2020 22:28:5...</msg>
<status status="PASS" starttime="20200717 22:28:54.254" endtime="20200717 22:28:54.726"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:54.726" endtime="20200717 22:28:54.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:54.727" endtime="20200717 22:28:54.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:54.731" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:54.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:54.734" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.729" endtime="20200717 22:28:54.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.735" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.734" endtime="20200717 22:28:54.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:54.735" endtime="20200717 22:28:54.735"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:54.728" endtime="20200717 22:28:54.736"></status>
</kw>
<msg timestamp="20200717 22:28:54.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:54.728" endtime="20200717 22:28:54.736"></status>
</kw>
<msg timestamp="20200717 22:28:54.736" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.727" endtime="20200717 22:28:54.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:54.740" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:54.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:54.742" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.738" endtime="20200717 22:28:54.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.743" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.743" endtime="20200717 22:28:54.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:54.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:54.744" endtime="20200717 22:28:54.744"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:54.737" endtime="20200717 22:28:54.744"></status>
</kw>
<msg timestamp="20200717 22:28:54.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:54.737" endtime="20200717 22:28:54.745"></status>
</kw>
<msg timestamp="20200717 22:28:54.745" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20200717 22:28:54.736" endtime="20200717 22:28:54.745"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:54.745" endtime="20200717 22:28:54.745"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:53.755" endtime="20200717 22:28:54.746" critical="yes"></status>
</test>
<test id="s1-s10-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:54.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:55.192" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:55.192" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:54.748" endtime="20200717 22:28:55.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:55.194" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.193" endtime="20200717 22:28:55.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:55.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:55.194" endtime="20200717 22:28:55.194"></status>
</kw>
<msg timestamp="20200717 22:28:55.195" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:54.748" endtime="20200717 22:28:55.195"></status>
</kw>
<msg timestamp="20200717 22:28:55.195" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:54.747" endtime="20200717 22:28:55.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:55.195" endtime="20200717 22:28:55.196"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:55.200" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:55.638" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:55.638" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.197" endtime="20200717 22:28:55.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:55.639" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.639" endtime="20200717 22:28:55.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:55.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:55.640" endtime="20200717 22:28:55.640"></status>
</kw>
<msg timestamp="20200717 22:28:55.640" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.196" endtime="20200717 22:28:55.640"></status>
</kw>
<msg timestamp="20200717 22:28:55.641" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.196" endtime="20200717 22:28:55.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:55.641" endtime="20200717 22:28:55.641"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:55.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-32202 --key putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:56.102" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:28:56.102" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.643" endtime="20200717 22:28:56.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.104" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:56.103" endtime="20200717 22:28:56.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:56.104" endtime="20200717 22:28:56.104"></status>
</kw>
<msg timestamp="20200717 22:28:56.105" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.643" endtime="20200717 22:28:56.105"></status>
</kw>
<msg timestamp="20200717 22:28:56.105" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20200717 22:28:55.642" endtime="20200717 22:28:56.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:56.105" endtime="20200717 22:28:56.105"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:28:54.746" endtime="20200717 22:28:56.106" critical="yes"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20200717 22:28:38.208" endtime="20200717 22:28:56.108"></status>
</suite>
<suite id="s1-s11" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="setup">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:56.123" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:56.126" level="INFO">${rc} = 1</msg>
<msg timestamp="20200717 22:28:56.126" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200717 22:28:56.121" endtime="20200717 22:28:56.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200717 22:28:56.127" endtime="20200717 22:28:56.127"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:56.129" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:56.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:56.262" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200717 22:28:56.127" endtime="20200717 22:28:56.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:56.269" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:56.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:56.632" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Packag...</msg>
<status status="PASS" starttime="20200717 22:28:56.266" endtime="20200717 22:28:56.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.633" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: reflector.westga.edu
 * epel: mirror.vcu.edu
 * extras: mirror.compevo.com
 * updates: mirror.lug.udel.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20200717 22:28:56.633" endtime="20200717 22:28:56.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:56.633" endtime="20200717 22:28:56.634"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.265" endtime="20200717 22:28:56.634"></status>
</kw>
<msg timestamp="20200717 22:28:56.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:56.265" endtime="20200717 22:28:56.634"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.265" endtime="20200717 22:28:56.635"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.263" endtime="20200717 22:28:56.635"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.262" endtime="20200717 22:28:56.635"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.121" endtime="20200717 22:28:56.635"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.121" endtime="20200717 22:28:56.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:56.640" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:56.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:56.642" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:56.638" endtime="20200717 22:28:56.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.643" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:28:56.642" endtime="20200717 22:28:56.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:56.643" endtime="20200717 22:28:56.643"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.637" endtime="20200717 22:28:56.643"></status>
</kw>
<msg timestamp="20200717 22:28:56.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:56.637" endtime="20200717 22:28:56.644"></status>
</kw>
<msg timestamp="20200717 22:28:56.644" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:28:56.637" endtime="20200717 22:28:56.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200717 22:28:56.646" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:56.644" endtime="20200717 22:28:56.646"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:56.651" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:56.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:56.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:56.648" endtime="20200717 22:28:56.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.669" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:56.669" endtime="20200717 22:28:56.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:56.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:56.670" endtime="20200717 22:28:56.670"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.648" endtime="20200717 22:28:56.670"></status>
</kw>
<msg timestamp="20200717 22:28:56.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:56.648" endtime="20200717 22:28:56.670"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.647" endtime="20200717 22:28:56.671"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.647" endtime="20200717 22:28:56.671"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.636" endtime="20200717 22:28:56.671"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.636" endtime="20200717 22:28:56.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:56.674" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:59.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:59.184" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:56.673" endtime="20200717 22:28:59.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:59.185" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:59.185" endtime="20200717 22:28:59.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:59.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:59.185" endtime="20200717 22:28:59.186"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.672" endtime="20200717 22:28:59.186"></status>
</kw>
<msg timestamp="20200717 22:28:59.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:56.672" endtime="20200717 22:28:59.186"></status>
</kw>
<msg timestamp="20200717 22:28:59.187" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:28:56.672" endtime="20200717 22:28:59.187"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:59.187" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:59.187" endtime="20200717 22:28:59.187"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:59.188" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200717 22:28:59.187" endtime="20200717 22:28:59.188"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:59.188" level="INFO">${secret} = ['3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0']</msg>
<status status="PASS" starttime="20200717 22:28:59.188" endtime="20200717 22:28:59.188"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200717 22:28:59.189" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200717 22:28:59.188" endtime="20200717 22:28:59.189"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200717 22:28:59.189" level="INFO">${secret} = 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0</msg>
<status status="PASS" starttime="20200717 22:28:59.189" endtime="20200717 22:28:59.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:59.193" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:59.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:59.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:59.191" endtime="20200717 22:28:59.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:59.513" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:59.513" endtime="20200717 22:28:59.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:59.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:59.514" endtime="20200717 22:28:59.514"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:59.190" endtime="20200717 22:28:59.514"></status>
</kw>
<msg timestamp="20200717 22:28:59.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:59.190" endtime="20200717 22:28:59.515"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:59.189" endtime="20200717 22:28:59.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:59.519" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:28:59.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:28:59.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:59.517" endtime="20200717 22:28:59.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:28:59.827" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:28:59.827" endtime="20200717 22:28:59.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:28:59.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:28:59.827" endtime="20200717 22:28:59.828"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:59.516" endtime="20200717 22:28:59.829"></status>
</kw>
<msg timestamp="20200717 22:28:59.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:59.516" endtime="20200717 22:28:59.829"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:59.515" endtime="20200717 22:28:59.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:28:59.834" level="INFO">Running command 'aws configure set aws_secret_access_key 3b4d98a3588b20d2d98c368653b2b5a10c365fdb03fddf56c89470e505a80ce0 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:00.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:00.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:28:59.831" endtime="20200717 22:29:00.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:00.149" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:00.148" endtime="20200717 22:29:00.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:00.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:00.149" endtime="20200717 22:29:00.149"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:59.830" endtime="20200717 22:29:00.149"></status>
</kw>
<msg timestamp="20200717 22:29:00.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:28:59.830" endtime="20200717 22:29:00.150"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:59.829" endtime="20200717 22:29:00.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:00.154" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:00.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:00.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:00.151" endtime="20200717 22:29:00.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:00.477" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:00.477" endtime="20200717 22:29:00.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:00.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:00.481" endtime="20200717 22:29:00.482"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:00.151" endtime="20200717 22:29:00.482"></status>
</kw>
<msg timestamp="20200717 22:29:00.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:00.150" endtime="20200717 22:29:00.482"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:00.150" endtime="20200717 22:29:00.483"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.671" endtime="20200717 22:29:00.483"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.671" endtime="20200717 22:29:00.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:00.483" endtime="20200717 22:29:00.484"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.636" endtime="20200717 22:29:00.484"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.635" endtime="20200717 22:29:00.484"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:00.491" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:03.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20200717 22:29:03.496" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:29:00.485" endtime="20200717 22:29:03.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.497" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20200717 22:29:03.496" endtime="20200717 22:29:03.497"></status>
</kw>
<msg timestamp="20200717 22:29:03.497" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200717 22:29:00.484" endtime="20200717 22:29:03.497"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:03.497" endtime="20200717 22:29:03.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200717 22:29:03.499" level="INFO">${postfix} = 00362</msg>
<status status="PASS" starttime="20200717 22:29:03.499" endtime="20200717 22:29:03.499"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200717 22:29:03.500" level="INFO">${bucket} = bucket-00362</msg>
<status status="PASS" starttime="20200717 22:29:03.499" endtime="20200717 22:29:03.500"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:03.505" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-00362 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:03.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:03.946" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-00362"
}</msg>
<status status="PASS" starttime="20200717 22:29:03.503" endtime="20200717 22:29:03.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.947" level="INFO">{
    "Location": "http://s3g:9878/bucket-00362"
}</msg>
<status status="PASS" starttime="20200717 22:29:03.947" endtime="20200717 22:29:03.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:03.947" endtime="20200717 22:29:03.948"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.502" endtime="20200717 22:29:03.948"></status>
</kw>
<msg timestamp="20200717 22:29:03.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:03.501" endtime="20200717 22:29:03.948"></status>
</kw>
<msg timestamp="20200717 22:29:03.949" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-00362"
}</msg>
<status status="PASS" starttime="20200717 22:29:03.501" endtime="20200717 22:29:03.949"></status>
</kw>
<msg timestamp="20200717 22:29:03.949" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-00362"
}</msg>
<status status="PASS" starttime="20200717 22:29:03.500" endtime="20200717 22:29:03.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:03.949" endtime="20200717 22:29:03.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:03.950" endtime="20200717 22:29:03.950"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.500" endtime="20200717 22:29:03.950"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.498" endtime="20200717 22:29:03.950"></status>
</kw>
<msg timestamp="20200717 22:29:03.951" level="INFO">${BUCKET} = bucket-00362</msg>
<status status="PASS" starttime="20200717 22:29:03.498" endtime="20200717 22:29:03.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.951" level="INFO">${BUCKET} = bucket-00362</msg>
<status status="PASS" starttime="20200717 22:29:03.951" endtime="20200717 22:29:03.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:03.951" endtime="20200717 22:29:03.952"></status>
</kw>
<status status="PASS" starttime="20200717 22:28:56.120" endtime="20200717 22:29:03.952"></status>
</kw>
<test id="s1-s11-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:03.958" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:03.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:03.960" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20200717 22:29:03.955" endtime="20200717 22:29:03.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.961" level="INFO">s3g</msg>
<status status="PASS" starttime="20200717 22:29:03.961" endtime="20200717 22:29:03.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:03.962" endtime="20200717 22:29:03.962"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.954" endtime="20200717 22:29:03.962"></status>
</kw>
<msg timestamp="20200717 22:29:03.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:03.954" endtime="20200717 22:29:03.962"></status>
</kw>
<msg timestamp="20200717 22:29:03.963" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20200717 22:29:03.954" endtime="20200717 22:29:03.963"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:03.967" level="INFO">Running command 'kinit -k HTTP/s3g@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:03.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:03.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200717 22:29:03.964" endtime="20200717 22:29:03.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.985" level="INFO"></msg>
<status status="PASS" starttime="20200717 22:29:03.984" endtime="20200717 22:29:03.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:03.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:03.985" endtime="20200717 22:29:03.986"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.964" endtime="20200717 22:29:03.986"></status>
</kw>
<msg timestamp="20200717 22:29:03.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:03.964" endtime="20200717 22:29:03.986"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.963" endtime="20200717 22:29:03.987"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.963" endtime="20200717 22:29:03.987"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.953" endtime="20200717 22:29:03.987"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.953" endtime="20200717 22:29:03.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:03.992" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:04.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:04.002" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200717 22:29:03.988" endtime="20200717 22:29:04.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:04.003" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.26.0.2...
* Connected to s3g (172.26.0.2) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Fri, 17 Jul 2020 22:29:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 17 Jul 2020 22:29:03 GMT
&lt; Date: Fri, 17 Jul 2020 22:29:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20200717 22:29:04.002" endtime="20200717 22:29:04.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:04.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:04.003" endtime="20200717 22:29:04.004"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:03.988" endtime="20200717 22:29:04.004"></status>
</kw>
<msg timestamp="20200717 22:29:04.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:03.987" endtime="20200717 22:29:04.004"></status>
</kw>
<msg timestamp="20200717 22:29:04.005" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200717 22:29:03.987" endtime="20200717 22:29:04.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:04.005" endtime="20200717 22:29:04.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>/static/</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:04.005" endtime="20200717 22:29:04.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 22:29:04.009" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 22:29:04.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 22:29:04.038" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200717 22:29:04.007" endtime="20200717 22:29:04.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 22:29:04.039" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.26.0.2...
* Connected to s3g (172.26.0.2) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 459
&lt; 
* Ignoring the response-body
{ [data not shown]

100   459  100   459    0     0  55819      0 --:--:-- --:--:-- --:--:-- 57375
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0xff9f50
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.26.0.2) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICYwYJKoZIhvcSAQICAQBuggJSMIICTqADAgEFoQMCAQ6iBwMFACAAAACjggFjYYIBXzCCAVugAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCASswggEnoAMCARKhAwIBAqKCARkEggEVUE1M4rzp4Cz/tenTtfahJNFT1Ph8juKf6Mi7XFLI45+1tph8EQU3kYGbz4ssjb3JW0WITyfM0lNX+XDYDNnPHZ5stEzRTm9GEZn6q4Kl3Om3kbpO36+FiFVR90S+JMzU87W90qwp+RpNH/5t4KEBO+J5WkP6v4wZEHr/WAKK4qSH4E2EonV7tFUfePLqLlEWOeKllTrn2LXEr67itroxgKJwcrCIFVZkfwZjFFAK0DSEzdqWni9j3VqnzNqFkcAZhJ8pbzf0KDlQij9beG0GwayGQahDGyL7Y0D1PCOwQLoibWDLkp62XOI3WsFJ+S1BV4JNVmOKxXrxst4XA4KUTRCJlT/jq499Wzj8wfPezGbV27T1BKSB0TCBzqADAgESooHGBIHDPbf+ItBbfGzo3APcfS0Zem/4bW010l7D1gD8rtlzsIje9PSXtjtgLtMA1bQrPfMpkPOVz6xOcK2F3GPhngMlVsRJ2hu95mDRQw27l8+n+28F1HUdZW2JHHV+Z6cQ9CKg9I4+ppQSSid9DMHEHnDHXpodjL4DPkUz3BgqjOzRisSxCztLhGJ+71c4TNMYAJjCXq+Mj3CZQZZriP9/DyXRd6b/r8u2Xuqte8SOwKrXNbRSZ+TaZeQ1jV6cyjfdccB53i55
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 17 Jul 2020 22:29:04 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBv9VKIe9PwdZPQhmsSZXm6nfXKDjKLxpA1zk62u1m/ijABKPRaWnSjWL0n/oLmzjLcNCn0lCEfq/6ZCC3o/IJu1c=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1595060944030&amp;s=uur8lCI/8N+Is3I8EcaPwDEyffiHyWmXJlYHbGhTlpA="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 17 Jul 2020 20:57:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3127
&lt; 
{ [data not shown]

100  3127  100  3127    0     0   129k      0 --:--:-- --:--:-- --:--:--  129k
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Hadoop Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Hadoop Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Hadoop Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20200717 22:29:04.039" endtime="20200717 22:29:04.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 22:29:04.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 22:29:04.040" endtime="20200717 22:29:04.040"></status>
</kw>
<status status="PASS" starttime="20200717 22:29:04.007" endtime="20200717 22:29:04.041"></status>
</kw>
<msg timestamp="20200717 22:29:04.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 22:29:04.006" endtime="20200717 22:29:04.041"></status>
</kw>
<msg timestamp="20200717 22:29:04.041" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200717 22:29:04.006" endtime="20200717 22:29:04.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Apache Hadoop Ozone S3</arg>
</arguments>
<status status="PASS" starttime="20200717 22:29:04.042" endtime="20200717 22:29:04.042"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 22:29:03.952" endtime="20200717 22:29:04.042" critical="yes"></status>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20200717 22:28:56.111" endtime="20200717 22:29:04.043"></status>
</suite>
<status status="PASS" starttime="20200717 22:26:17.895" endtime="20200717 22:29:04.049"></status>
</suite>
<statistics>
<total>
<stat pass="41" fail="0">Critical Tests</stat>
<stat pass="41" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="41" fail="0" id="s1" name="ozonesecure-s3">ozonesecure-s3</stat>
<stat pass="1" fail="0" id="s1-s1" name="Awss3">ozonesecure-s3.Awss3</stat>
<stat pass="3" fail="0" id="s1-s2" name="Bucketcreate">ozonesecure-s3.Bucketcreate</stat>
<stat pass="2" fail="0" id="s1-s3" name="Bucketdelete">ozonesecure-s3.Bucketdelete</stat>
<stat pass="1" fail="0" id="s1-s4" name="Buckethead">ozonesecure-s3.Buckethead</stat>
<stat pass="1" fail="0" id="s1-s5" name="Bucketlist">ozonesecure-s3.Bucketlist</stat>
<stat pass="12" fail="0" id="s1-s6" name="MultipartUpload">ozonesecure-s3.MultipartUpload</stat>
<stat pass="4" fail="0" id="s1-s7" name="Objectcopy">ozonesecure-s3.Objectcopy</stat>
<stat pass="5" fail="0" id="s1-s8" name="Objectdelete">ozonesecure-s3.Objectdelete</stat>
<stat pass="1" fail="0" id="s1-s9" name="Objectmultidelete">ozonesecure-s3.Objectmultidelete</stat>
<stat pass="10" fail="0" id="s1-s10" name="Objectputget">ozonesecure-s3.Objectputget</stat>
<stat pass="1" fail="0" id="s1-s11" name="Webui">ozonesecure-s3.Webui</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
