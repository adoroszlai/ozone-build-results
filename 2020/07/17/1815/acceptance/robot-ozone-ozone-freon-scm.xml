<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:47:24.517" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:24.571" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:32.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:32.746" level="INFO">${output} = 2020-07-17 21:47:25,843 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:26,061 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:24.566" endtime="20200717 21:47:32.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:32.748" level="INFO">2020-07-17 21:47:25,843 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:26,061 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:47:26,061 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:47:27,263 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-17 21:47:27,264 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-17 21:47:27,264 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-17 21:47:27,264 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-17 21:47:27,264 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-17 21:47:27,264 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 21:47:27,264 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-17 21:47:27,266 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 21:47:27,269 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:27,324 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-31264, with hadoop as owner.
2020-07-17 21:47:27,365 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31264/bucket-0-22129, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:47:27,928 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:47:28,273 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,082
Average Time spent in bucket creation: 00:00:00,015
Average Time spent in key creation: 00:00:00,071
Average Time spent in key write: 00:00:00,665
Total bytes written: 10240
Total Execution time: 00:00:06,148
***************************************************</msg>
<status status="PASS" starttime="20200717 21:47:32.747" endtime="20200717 21:47:32.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:32.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:32.748" endtime="20200717 21:47:32.748"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:24.566" endtime="20200717 21:47:32.749"></status>
</kw>
<msg timestamp="20200717 21:47:32.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:24.565" endtime="20200717 21:47:32.749"></status>
</kw>
<msg timestamp="20200717 21:47:32.749" level="INFO">${result} = 2020-07-17 21:47:25,843 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:26,061 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:24.565" endtime="20200717 21:47:32.749"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:32.750" endtime="20200717 21:47:32.750"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:32.749" endtime="20200717 21:47:32.750"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:24.564" endtime="20200717 21:47:32.750" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:32.755" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:37.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:37.913" level="INFO">${output} = 2020-07-17 21:47:34,086 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:34,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:32.753" endtime="20200717 21:47:37.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:37.915" level="INFO">2020-07-17 21:47:34,086 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:34,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:47:34,240 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:47:34,402 [main] INFO freon.BaseFreonGenerator: Executing test with prefix m0omqv6y0h
2020-07-17 21:47:34,416 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:35,386 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:47:35,417 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:35,885 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:47:36,418 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:37,418 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:47:37,545 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1309.219734, max=1309.219734, mean=1309.219734, stddev=0.0, median=1309.219734, p75=1309.219734, p95=1309.219734, p98=1309.219734, p99=1309.219734, p999=1309.219734, mean_rate=0.4704128671482109, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:47:37,557 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-17 21:47:37,557 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:47:37,557 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:47:37.913" endtime="20200717 21:47:37.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:37.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:37.916" endtime="20200717 21:47:37.916"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:32.753" endtime="20200717 21:47:37.916"></status>
</kw>
<msg timestamp="20200717 21:47:37.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:32.752" endtime="20200717 21:47:37.916"></status>
</kw>
<msg timestamp="20200717 21:47:37.917" level="INFO">${result} = 2020-07-17 21:47:34,086 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:34,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:32.752" endtime="20200717 21:47:37.917"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:37.917" endtime="20200717 21:47:37.918"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:37.917" endtime="20200717 21:47:37.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:32.751" endtime="20200717 21:47:37.918" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:37.923" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:41.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:41.662" level="INFO">${output} = 2020-07-17 21:47:39,250 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:39,429 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:37.921" endtime="20200717 21:47:41.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:41.663" level="INFO">2020-07-17 21:47:39,250 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:39,429 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:47:39,430 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:47:39,607 [main] INFO freon.BaseFreonGenerator: Executing test with prefix usozpogybf
2020-07-17 21:47:39,628 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:40,647 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:47:41,630 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=62.478201, max=62.478201, mean=62.478201, stddev=0.0, median=62.478201, p75=62.478201, p95=62.478201, p98=62.478201, p99=62.478201, p999=62.478201, mean_rate=0.8812732078342121, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:47:41,631 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-17 21:47:41,637 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:47:41,637 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:47:41.663" endtime="20200717 21:47:41.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:41.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:41.664" endtime="20200717 21:47:41.664"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:37.920" endtime="20200717 21:47:41.664"></status>
</kw>
<msg timestamp="20200717 21:47:41.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:37.920" endtime="20200717 21:47:41.665"></status>
</kw>
<msg timestamp="20200717 21:47:41.665" level="INFO">${result} = 2020-07-17 21:47:39,250 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:39,429 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:37.919" endtime="20200717 21:47:41.665"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:41.666" endtime="20200717 21:47:41.666"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:41.665" endtime="20200717 21:47:41.666"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:37.919" endtime="20200717 21:47:41.666" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:41.673" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:45.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:45.484" level="INFO">${output} = 2020-07-17 21:47:42,978 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:43,167 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:41.669" endtime="20200717 21:47:45.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:45.485" level="INFO">2020-07-17 21:47:42,978 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:43,167 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:47:43,167 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:47:43,304 [main] INFO freon.BaseFreonGenerator: Executing test with prefix czzwgpyifi
2020-07-17 21:47:43,319 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:44,324 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-17 21:47:45,326 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-17 21:47:45,457 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=29.214213, max=29.214213, mean=29.214213, stddev=0.0, median=29.214213, p75=29.214213, p95=29.214213, p98=29.214213, p99=29.214213, p999=29.214213, mean_rate=0.8843178053476116, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-17 21:47:45,458 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-17 21:47:45,458 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-17 21:47:45,458 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200717 21:47:45.485" endtime="20200717 21:47:45.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:45.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:45.486" endtime="20200717 21:47:45.486"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:41.668" endtime="20200717 21:47:45.487"></status>
</kw>
<msg timestamp="20200717 21:47:45.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:41.668" endtime="20200717 21:47:45.487"></status>
</kw>
<msg timestamp="20200717 21:47:45.487" level="INFO">${result} = 2020-07-17 21:47:42,978 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:47:43,167 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:47:41.667" endtime="20200717 21:47:45.487"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:45.488" endtime="20200717 21:47:45.488"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:45.487" endtime="20200717 21:47:45.488"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:41.667" endtime="20200717 21:47:45.488" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200717 21:47:24.542" endtime="20200717 21:47:45.489"></status>
</suite>
<status status="PASS" starttime="20200717 21:47:24.518" endtime="20200717 21:47:45.492"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
