<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200717 21:46:52.663" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200717 21:46:52.714" endtime="20200717 21:46:52.715"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:46:52.721" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:00.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:00.845" level="INFO">${output} = 2020-07-17 21:46:53,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:46:54,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200717 21:46:52.716" endtime="20200717 21:47:00.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:00.846" level="INFO">2020-07-17 21:46:53,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-17 21:46:54,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-17 21:46:54,057 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-17 21:46:55,260 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-17 21:46:55,260 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-17 21:46:55,260 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-17 21:46:55,261 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-17 21:46:55,261 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-17 21:46:55,261 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-17 21:46:55,261 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-17 21:46:55,284 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-17 21:46:55,286 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-17 21:46:55,348 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86834, with hadoop as owner.
2020-07-17 21:46:55,439 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-86834/bucket-0-03918, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-17 21:46:56,038 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-17 21:46:56,298 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,012
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,130
Average Time spent in key write: 00:00:00,543
Total bytes written: 10250
Total Execution time: 00:00:06,233
***************************************************</msg>
<status status="PASS" starttime="20200717 21:47:00.846" endtime="20200717 21:47:00.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:00.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:00.847" endtime="20200717 21:47:00.847"></status>
</kw>
<status status="PASS" starttime="20200717 21:46:52.716" endtime="20200717 21:47:00.847"></status>
</kw>
<msg timestamp="20200717 21:47:00.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:46:52.716" endtime="20200717 21:47:00.848"></status>
</kw>
<status status="PASS" starttime="20200717 21:46:52.715" endtime="20200717 21:47:00.848"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:46:52.714" endtime="20200717 21:47:00.848" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:00.850" endtime="20200717 21:47:00.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:00.856" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:01.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:01.077" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":165}]}}</msg>
<status status="PASS" starttime="20200717 21:47:00.852" endtime="20200717 21:47:01.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:01.078" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":165}]}}</msg>
<status status="PASS" starttime="20200717 21:47:01.078" endtime="20200717 21:47:01.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:01.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:01.079" endtime="20200717 21:47:01.079"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:00.852" endtime="20200717 21:47:01.080"></status>
</kw>
<msg timestamp="20200717 21:47:01.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:00.851" endtime="20200717 21:47:01.080"></status>
</kw>
<msg timestamp="20200717 21:47:01.080" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":165}]}}</msg>
<status status="PASS" starttime="20200717 21:47:00.851" endtime="20200717 21:47:01.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:01.080" endtime="20200717 21:47:01.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:01.086" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:01.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:01.126" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize...</msg>
<status status="PASS" starttime="20200717 21:47:01.082" endtime="20200717 21:47:01.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:01.127" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-1-70921","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-4-90619","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-0-01716","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-3-62105","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-3-16237","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-4-72037","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-2-21079","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-4-65460","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-1-80662","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-3-39506","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-1-41270","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-3-50273","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-2-18405","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-2-62587","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-0-68058","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-2-91590","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-4-80960","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-0-37226","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-0-81389","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-1-35968","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-2-80040","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-4-65905","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-1-58543","fileSize":16384,"count":5},{"volume":"34794-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"30263-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"30263-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"30263-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"qswvn","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-89143","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-73871","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-24025","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87903","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-87903","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09261","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200717 21:47:01.127" endtime="20200717 21:47:01.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:01.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:01.128" endtime="20200717 21:47:01.128"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:01.082" endtime="20200717 21:47:01.128"></status>
</kw>
<msg timestamp="20200717 21:47:01.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:01.081" endtime="20200717 21:47:01.129"></status>
</kw>
<msg timestamp="20200717 21:47:01.129" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize...</msg>
<status status="PASS" starttime="20200717 21:47:01.081" endtime="20200717 21:47:01.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200717 21:47:01.130" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-1-70921","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-4-90619","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-0-01716","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-3-62105","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-3-16237","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-4-72037","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-2-21079","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-4-65460","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-1-80662","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-3-39506","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-1-41270","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-3-50273","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-2-18405","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-2-62587","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-0-68058","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-2-91590","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-4-80960","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-0-37226","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-0-81389","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-1-35968","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-2-80040","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-4-65905","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-1-58543","fileSize":16384,"count":5},{"volume":"34794-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"30263-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"30263-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"30263-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"qswvn","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-89143","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-73871","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-24025","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87903","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-87903","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09261","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200717 21:47:01.129" endtime="20200717 21:47:01.130"></status>
</kw>
<status status="FAIL" starttime="20200717 21:47:00.850" endtime="20200717 21:47:01.130"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.131" endtime="20200717 21:47:11.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.136" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.154" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200717 21:47:11.133" endtime="20200717 21:47:11.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.155" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200717 21:47:11.154" endtime="20200717 21:47:11.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.155" endtime="20200717 21:47:11.155"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.133" endtime="20200717 21:47:11.156"></status>
</kw>
<msg timestamp="20200717 21:47:11.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.132" endtime="20200717 21:47:11.156"></status>
</kw>
<msg timestamp="20200717 21:47:11.156" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200717 21:47:11.132" endtime="20200717 21:47:11.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.156" endtime="20200717 21:47:11.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.160" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.179" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize...</msg>
<status status="PASS" starttime="20200717 21:47:11.158" endtime="20200717 21:47:11.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.180" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-1-70921","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-4-90619","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-0-01716","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-3-62105","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-3-16237","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-4-72037","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-2-21079","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-4-65460","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-1-80662","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-3-39506","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-1-41270","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-3-50273","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-2-18405","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-2-62587","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-0-68058","fileSize":16384,"count":5},{"volume":"vol-4-67226","bucket":"bucket-2-91590","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-4-80960","fileSize":16384,"count":5},{"volume":"vol-3-33139","bucket":"bucket-0-37226","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-0-81389","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-1-35968","fileSize":16384,"count":5},{"volume":"vol-0-84110","bucket":"bucket-2-80040","fileSize":16384,"count":5},{"volume":"vol-1-79240","bucket":"bucket-4-65905","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-1-58543","fileSize":16384,"count":5},{"volume":"34794-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"30263-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"30263-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"30263-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"qswvn","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-89143","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-73871","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-24025","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87903","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-87903","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-09261","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-35964","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02589","fileSize":1024,"count":2},{"volume":"vol-0-86834","bucket":"bucket-0-03918","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200717 21:47:11.179" endtime="20200717 21:47:11.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.181" endtime="20200717 21:47:11.182"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.157" endtime="20200717 21:47:11.182"></status>
</kw>
<msg timestamp="20200717 21:47:11.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.157" endtime="20200717 21:47:11.182"></status>
</kw>
<msg timestamp="20200717 21:47:11.183" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-1-79240","bucket":"bucket-3-86693","fileSize":16384,"count":5},{"volume":"vol-2-12468","bucket":"bucket-0-37239","fileSize...</msg>
<status status="PASS" starttime="20200717 21:47:11.157" endtime="20200717 21:47:11.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.183" endtime="20200717 21:47:11.183"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.131" endtime="20200717 21:47:11.183"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:00.850" endtime="20200717 21:47:11.183"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:00.849" endtime="20200717 21:47:11.183" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.189" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.220" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"29969353-c377-4175-8e0d-4f273ca02dc8","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1595022416984,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200717 21:47:11.186" endtime="20200717 21:47:11.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.221" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"29969353-c377-4175-8e0d-4f273ca02dc8","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1595022416984,"storageReport":{"capacity":89311358976,"used":8192,"remaining":26105987072},"pipelines":[{"pipelineID":"9a78844f-834d-48cf-b32e-f88dd3cd2558","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"23730a81-beb6-40c8-83e8-2ea92e860223","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595020835100},{"uuid":"2207afe6-e70f-4f1c-9a38-fa7497d2ab94","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1595022417032,"storageReport":{"capacity":89311358976,"used":8192,"remaining":26105987072},"pipelines":[{"pipelineID":"02d6c25e-478d-436d-aa4b-2726411e8ed3","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"23730a81-beb6-40c8-83e8-2ea92e860223","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1595020833595},{"uuid":"27ceba8a-06c1-44fe-9abb-d7b6b1757709","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595022417019,"storageReport":{"capacity":89311358976,"used":8192,"remaining":26131165184},"pipelines":[{"pipelineID":"23730a81-beb6-40c8-83e8-2ea92e860223","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"1e3fc9bf-5abf-426d-8ea6-2311e8291502","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595020836991}]}</msg>
<status status="PASS" starttime="20200717 21:47:11.221" endtime="20200717 21:47:11.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.221" endtime="20200717 21:47:11.222"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.186" endtime="20200717 21:47:11.222"></status>
</kw>
<msg timestamp="20200717 21:47:11.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.185" endtime="20200717 21:47:11.222"></status>
</kw>
<msg timestamp="20200717 21:47:11.223" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"29969353-c377-4175-8e0d-4f273ca02dc8","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1595022416984,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200717 21:47:11.185" endtime="20200717 21:47:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.223" endtime="20200717 21:47:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.223" endtime="20200717 21:47:11.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.224" endtime="20200717 21:47:11.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.224" endtime="20200717 21:47:11.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.230" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.252" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"9a78844f-834d-48cf-b32e-f88dd3cd2558","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLead...</msg>
<status status="PASS" starttime="20200717 21:47:11.226" endtime="20200717 21:47:11.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.253" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"9a78844f-834d-48cf-b32e-f88dd3cd2558","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1570712,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"02d6c25e-478d-436d-aa4b-2726411e8ed3","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1570928,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"23730a81-beb6-40c8-83e8-2ea92e860223","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_3.ozone_default","ozone_datanode_1.ozone_default","ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1570672,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"1e3fc9bf-5abf-426d-8ea6-2311e8291502","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1570709,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200717 21:47:11.253" endtime="20200717 21:47:11.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.254" endtime="20200717 21:47:11.254"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.225" endtime="20200717 21:47:11.254"></status>
</kw>
<msg timestamp="20200717 21:47:11.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.225" endtime="20200717 21:47:11.255"></status>
</kw>
<msg timestamp="20200717 21:47:11.255" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"9a78844f-834d-48cf-b32e-f88dd3cd2558","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLead...</msg>
<status status="PASS" starttime="20200717 21:47:11.225" endtime="20200717 21:47:11.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.255" endtime="20200717 21:47:11.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.255" endtime="20200717 21:47:11.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.256" endtime="20200717 21:47:11.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.256" endtime="20200717 21:47:11.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.257" endtime="20200717 21:47:11.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.257" endtime="20200717 21:47:11.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.261" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.277" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":78343139328},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200717 21:47:11.259" endtime="20200717 21:47:11.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.277" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":78343139328},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200717 21:47:11.277" endtime="20200717 21:47:11.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.278" endtime="20200717 21:47:11.278"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.258" endtime="20200717 21:47:11.278"></status>
</kw>
<msg timestamp="20200717 21:47:11.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.258" endtime="20200717 21:47:11.279"></status>
</kw>
<msg timestamp="20200717 21:47:11.279" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":78343139328},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200717 21:47:11.258" endtime="20200717 21:47:11.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.279" endtime="20200717 21:47:11.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.280" endtime="20200717 21:47:11.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.280" endtime="20200717 21:47:11.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.284" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.304" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595020912900,"lastReportTimestamp":1595022322587},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200717 21:47:11.282" endtime="20200717 21:47:11.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.304" level="INFO">[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595020912900,"lastReportTimestamp":1595022322587},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1595020913253,"lastReportTimestamp":1595022413259},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1595020913183,"lastReportTimestamp":1595022383174}]</msg>
<status status="PASS" starttime="20200717 21:47:11.304" endtime="20200717 21:47:11.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.305" endtime="20200717 21:47:11.305"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.281" endtime="20200717 21:47:11.305"></status>
</kw>
<msg timestamp="20200717 21:47:11.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.281" endtime="20200717 21:47:11.306"></status>
</kw>
<msg timestamp="20200717 21:47:11.306" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595020912900,"lastReportTimestamp":1595022322587},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200717 21:47:11.280" endtime="20200717 21:47:11.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.306" endtime="20200717 21:47:11.306"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:11.184" endtime="20200717 21:47:11.307" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.308" endtime="20200717 21:47:11.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200717 21:47:11.312" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200717 21:47:11.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200717 21:47:11.328" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200717 21:47:11.310" endtime="20200717 21:47:11.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.329" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.eeb92191.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2f7524a2.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.c0debea0.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.328" endtime="20200717 21:47:11.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200717 21:47:11.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200717 21:47:11.329" endtime="20200717 21:47:11.330"></status>
</kw>
<status status="PASS" starttime="20200717 21:47:11.309" endtime="20200717 21:47:11.330"></status>
</kw>
<msg timestamp="20200717 21:47:11.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200717 21:47:11.309" endtime="20200717 21:47:11.330"></status>
</kw>
<msg timestamp="20200717 21:47:11.330" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200717 21:47:11.308" endtime="20200717 21:47:11.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200717 21:47:11.331" endtime="20200717 21:47:11.331"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200717 21:47:11.307" endtime="20200717 21:47:11.331" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200717 21:46:52.689" endtime="20200717 21:47:11.332"></status>
</suite>
<status status="PASS" starttime="20200717 21:46:52.664" endtime="20200717 21:47:11.334"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
