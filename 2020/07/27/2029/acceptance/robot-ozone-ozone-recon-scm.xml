<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:41:37.999" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:41:38.062" endtime="20200727 01:41:38.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:41:38.069" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:41:46.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:41:46.251" level="INFO">${output} = 2020-07-27 01:41:39,298 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:41:39,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:41:38.064" endtime="20200727 01:41:46.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:41:46.252" level="INFO">2020-07-27 01:41:39,298 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:41:39,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:41:39,459 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:41:40,635 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-27 01:41:40,635 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 01:41:40,635 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 01:41:40,636 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-27 01:41:40,636 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-27 01:41:40,636 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 01:41:40,636 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 01:41:40,665 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 01:41:40,678 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-27 01:41:40,759 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-13453, with hadoop as owner.
2020-07-27 01:41:40,793 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-13453/bucket-0-35947, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:41:41,332 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:41:41,703 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,010
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,119
Average Time spent in key write: 00:00:00,495
Total bytes written: 10250
Total Execution time: 00:00:06,165
***************************************************</msg>
<status status="PASS" starttime="20200727 01:41:46.251" endtime="20200727 01:41:46.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:41:46.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:41:46.252" endtime="20200727 01:41:46.253"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:38.063" endtime="20200727 01:41:46.253"></status>
</kw>
<msg timestamp="20200727 01:41:46.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:41:38.063" endtime="20200727 01:41:46.254"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:38.062" endtime="20200727 01:41:46.254"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:41:38.061" endtime="20200727 01:41:46.254" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:41:46.257" endtime="20200727 01:41:46.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:41:46.263" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:41:46.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:41:46.460" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:41:46.259" endtime="20200727 01:41:46.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:41:46.461" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:41:46.460" endtime="20200727 01:41:46.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:41:46.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:41:46.462" endtime="20200727 01:41:46.462"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:46.259" endtime="20200727 01:41:46.463"></status>
</kw>
<msg timestamp="20200727 01:41:46.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:41:46.259" endtime="20200727 01:41:46.463"></status>
</kw>
<msg timestamp="20200727 01:41:46.463" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:41:46.258" endtime="20200727 01:41:46.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:41:46.463" endtime="20200727 01:41:46.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:41:46.467" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:41:46.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:41:46.506" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:41:46.465" endtime="20200727 01:41:46.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:41:46.507" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 01:41:46.507" endtime="20200727 01:41:46.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:41:46.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:41:46.507" endtime="20200727 01:41:46.508"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:46.465" endtime="20200727 01:41:46.509"></status>
</kw>
<msg timestamp="20200727 01:41:46.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:41:46.464" endtime="20200727 01:41:46.509"></status>
</kw>
<msg timestamp="20200727 01:41:46.509" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:41:46.464" endtime="20200727 01:41:46.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 01:41:46.510" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 01:41:46.509" endtime="20200727 01:41:46.510"></status>
</kw>
<status status="FAIL" starttime="20200727 01:41:46.256" endtime="20200727 01:41:46.510"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:41:56.512" endtime="20200727 01:41:56.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:41:56.516" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:41:56.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:41:56.531" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:41:56.513" endtime="20200727 01:41:56.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:41:56.532" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:41:56.532" endtime="20200727 01:41:56.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:41:56.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:41:56.532" endtime="20200727 01:41:56.533"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:56.513" endtime="20200727 01:41:56.533"></status>
</kw>
<msg timestamp="20200727 01:41:56.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:41:56.513" endtime="20200727 01:41:56.534"></status>
</kw>
<msg timestamp="20200727 01:41:56.534" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:41:56.512" endtime="20200727 01:41:56.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:41:56.534" endtime="20200727 01:41:56.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:41:56.538" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:41:56.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:41:56.554" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:41:56.536" endtime="20200727 01:41:56.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:41:56.556" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 01:41:56.555" endtime="20200727 01:41:56.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:41:56.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:41:56.556" endtime="20200727 01:41:56.556"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:56.535" endtime="20200727 01:41:56.557"></status>
</kw>
<msg timestamp="20200727 01:41:56.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:41:56.535" endtime="20200727 01:41:56.557"></status>
</kw>
<msg timestamp="20200727 01:41:56.557" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:41:56.535" endtime="20200727 01:41:56.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 01:41:56.558" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 01:41:56.557" endtime="20200727 01:41:56.558"></status>
</kw>
<status status="FAIL" starttime="20200727 01:41:56.511" endtime="20200727 01:41:56.559"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:06.560" endtime="20200727 01:42:06.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:06.565" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:06.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:06.587" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:42:06.563" endtime="20200727 01:42:06.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:06.589" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:42:06.588" endtime="20200727 01:42:06.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:06.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:06.589" endtime="20200727 01:42:06.590"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:06.562" endtime="20200727 01:42:06.590"></status>
</kw>
<msg timestamp="20200727 01:42:06.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:06.562" endtime="20200727 01:42:06.591"></status>
</kw>
<msg timestamp="20200727 01:42:06.591" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:42:06.561" endtime="20200727 01:42:06.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:06.591" endtime="20200727 01:42:06.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:06.597" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:06.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:06.615" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:42:06.594" endtime="20200727 01:42:06.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:06.617" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 01:42:06.616" endtime="20200727 01:42:06.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:06.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:06.617" endtime="20200727 01:42:06.618"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:06.593" endtime="20200727 01:42:06.618"></status>
</kw>
<msg timestamp="20200727 01:42:06.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:06.592" endtime="20200727 01:42:06.619"></status>
</kw>
<msg timestamp="20200727 01:42:06.619" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:42:06.592" endtime="20200727 01:42:06.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 01:42:06.620" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 01:42:06.619" endtime="20200727 01:42:06.621"></status>
</kw>
<status status="FAIL" starttime="20200727 01:42:06.559" endtime="20200727 01:42:06.621"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:16.623" endtime="20200727 01:42:16.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:16.628" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:16.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:16.646" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:42:16.626" endtime="20200727 01:42:16.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:16.648" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:42:16.647" endtime="20200727 01:42:16.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:16.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:16.648" endtime="20200727 01:42:16.649"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:16.625" endtime="20200727 01:42:16.649"></status>
</kw>
<msg timestamp="20200727 01:42:16.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:16.624" endtime="20200727 01:42:16.650"></status>
</kw>
<msg timestamp="20200727 01:42:16.650" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 01:42:16.623" endtime="20200727 01:42:16.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:16.650" endtime="20200727 01:42:16.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:16.656" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:16.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:16.688" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:42:16.654" endtime="20200727 01:42:16.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:16.689" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 01:42:16.688" endtime="20200727 01:42:16.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:16.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:16.690" endtime="20200727 01:42:16.690"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:16.652" endtime="20200727 01:42:16.691"></status>
</kw>
<msg timestamp="20200727 01:42:16.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:16.652" endtime="20200727 01:42:16.691"></status>
</kw>
<msg timestamp="20200727 01:42:16.691" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:42:16.651" endtime="20200727 01:42:16.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 01:42:16.692" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 01:42:16.691" endtime="20200727 01:42:16.692"></status>
</kw>
<status status="FAIL" starttime="20200727 01:42:16.622" endtime="20200727 01:42:16.692"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.694" endtime="20200727 01:42:26.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.699" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.717" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":1},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 01:42:26.697" endtime="20200727 01:42:26.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.718" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":1},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 01:42:26.717" endtime="20200727 01:42:26.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.718" endtime="20200727 01:42:26.719"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.696" endtime="20200727 01:42:26.720"></status>
</kw>
<msg timestamp="20200727 01:42:26.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.695" endtime="20200727 01:42:26.720"></status>
</kw>
<msg timestamp="20200727 01:42:26.720" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":1},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 01:42:26.695" endtime="20200727 01:42:26.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.721" endtime="20200727 01:42:26.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.726" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.743" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:42:26.723" endtime="20200727 01:42:26.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.747" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-1-75446","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-2-80440","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-2-89499","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-3-30430","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-1-67595","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-3-33568","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-4-80009","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-0-41239","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-3-92200","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-3-96476","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-3-27143","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-1-82971","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-0-04058","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-1-56961","fileSize":16384,"count":5},{"volume":"vol-3-14724","bucket":"bucket-4-92958","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-2-06724","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-0-96121","fileSize":16384,"count":5},{"volume":"vol-1-94810","bucket":"bucket-4-59951","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-4-59378","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-1-17212","fileSize":16384,"count":5},{"volume":"vol-2-32991","bucket":"bucket-0-57890","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-4-14401","fileSize":16384,"count":5},{"volume":"vol-0-57651","bucket":"bucket-0-12422","fileSize":16384,"count":5},{"volume":"99581-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"99581-source","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"71706-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"71706-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"ufxbv","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-63441","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93581","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14389","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-91292","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-14389","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-51922","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-74887","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-26181","fileSize":1024,"count":1},{"volume":"vol-0-13453","bucket":"bucket-0-35947","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200727 01:42:26.744" endtime="20200727 01:42:26.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.748" endtime="20200727 01:42:26.748"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.723" endtime="20200727 01:42:26.749"></status>
</kw>
<msg timestamp="20200727 01:42:26.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.722" endtime="20200727 01:42:26.749"></status>
</kw>
<msg timestamp="20200727 01:42:26.749" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-0-57651","bucket":"bucket-2-96108","fileSize":16384,"count":5},{"volume":"vol-4-10268","bucket":"bucket-2-24822","fileSize...</msg>
<status status="PASS" starttime="20200727 01:42:26.721" endtime="20200727 01:42:26.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.749" endtime="20200727 01:42:26.750"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.693" endtime="20200727 01:42:26.750"></status>
</kw>
<status status="PASS" starttime="20200727 01:41:46.256" endtime="20200727 01:42:26.750"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:41:46.255" endtime="20200727 01:42:26.751" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.756" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.790" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"fd0af4ce-9605-4cba-bb56-a16d05501772","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595814132338,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200727 01:42:26.755" endtime="20200727 01:42:26.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.791" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"fd0af4ce-9605-4cba-bb56-a16d05501772","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595814132338,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24925024256},"pipelines":[{"pipelineID":"57140d50-7eca-41c1-bb5e-021e176a3503","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"69ab0f71-979b-4f32-abe3-911a6c7098d3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595812501615,"revision":"093f5560c645c745e331e9e5ee3c47ff75015783","buildDate":"2020-07-27T00:48Z"},{"uuid":"d827362c-8092-4b3a-8ed7-ce1b50249841","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1595814132187,"storageReport":{"capacity":89311358976,"used":4096,"remaining":24925036544},"pipelines":[{"pipelineID":"173f92fc-7f52-4aed-8ff4-19d4c7579cb9","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"69ab0f71-979b-4f32-abe3-911a6c7098d3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1595812500586,"revision":"093f5560c645c745e331e9e5ee3c47ff75015783","buildDate":"2020-07-27T00:48Z"},{"uuid":"049cb58c-d205-4f90-a803-ee8758f93325","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1595814132261,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24925024256},"pipelines":[{"pipelineID":"70909638-f70e-424a-bc36-dc986645f542","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"69ab0f71-979b-4f32-abe3-911a6c7098d3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595812502296,"revision":"093f5560c645c745e331e9e5ee3c47ff75015783","buildDate":"2020-07-27T00:48Z"}]}</msg>
<status status="PASS" starttime="20200727 01:42:26.790" endtime="20200727 01:42:26.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.791" endtime="20200727 01:42:26.792"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.754" endtime="20200727 01:42:26.792"></status>
</kw>
<msg timestamp="20200727 01:42:26.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.754" endtime="20200727 01:42:26.792"></status>
</kw>
<msg timestamp="20200727 01:42:26.793" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"fd0af4ce-9605-4cba-bb56-a16d05501772","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595814132338,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200727 01:42:26.753" endtime="20200727 01:42:26.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.793" endtime="20200727 01:42:26.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.794" endtime="20200727 01:42:26.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.794" endtime="20200727 01:42:26.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.795" endtime="20200727 01:42:26.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.799" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.822" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"173f92fc-7f52-4aed-8ff4-19d4c7579cb9","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLead...</msg>
<status status="PASS" starttime="20200727 01:42:26.797" endtime="20200727 01:42:26.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.823" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"173f92fc-7f52-4aed-8ff4-19d4c7579cb9","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1568679,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"70909638-f70e-424a-bc36-dc986645f542","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1567927,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"57140d50-7eca-41c1-bb5e-021e176a3503","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1568206,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"69ab0f71-979b-4f32-abe3-911a6c7098d3","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_datanode_1.ozone_default","ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1567915,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200727 01:42:26.822" endtime="20200727 01:42:26.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.823" endtime="20200727 01:42:26.824"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.796" endtime="20200727 01:42:26.824"></status>
</kw>
<msg timestamp="20200727 01:42:26.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.796" endtime="20200727 01:42:26.824"></status>
</kw>
<msg timestamp="20200727 01:42:26.825" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"173f92fc-7f52-4aed-8ff4-19d4c7579cb9","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLead...</msg>
<status status="PASS" starttime="20200727 01:42:26.795" endtime="20200727 01:42:26.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.825" endtime="20200727 01:42:26.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.826" endtime="20200727 01:42:26.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.826" endtime="20200727 01:42:26.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.827" endtime="20200727 01:42:26.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.827" endtime="20200727 01:42:26.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.828" endtime="20200727 01:42:26.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.833" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.848" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":20480,"remaining":74775085056},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200727 01:42:26.831" endtime="20200727 01:42:26.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.849" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":20480,"remaining":74775085056},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200727 01:42:26.849" endtime="20200727 01:42:26.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.850" endtime="20200727 01:42:26.850"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.830" endtime="20200727 01:42:26.850"></status>
</kw>
<msg timestamp="20200727 01:42:26.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.830" endtime="20200727 01:42:26.851"></status>
</kw>
<msg timestamp="20200727 01:42:26.851" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":20480,"remaining":74775085056},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200727 01:42:26.828" endtime="20200727 01:42:26.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.851" endtime="20200727 01:42:26.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.852" endtime="20200727 01:42:26.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.853" endtime="20200727 01:42:26.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.859" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.882" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595812630310,"lastReportTimestamp":1595814132190},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200727 01:42:26.855" endtime="20200727 01:42:26.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.883" level="INFO">[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595812630310,"lastReportTimestamp":1595814132190},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1595812630742,"lastReportTimestamp":1595814100689},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1595812630722,"lastReportTimestamp":1595814132262}]</msg>
<status status="PASS" starttime="20200727 01:42:26.882" endtime="20200727 01:42:26.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.883" endtime="20200727 01:42:26.884"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.855" endtime="20200727 01:42:26.884"></status>
</kw>
<msg timestamp="20200727 01:42:26.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.855" endtime="20200727 01:42:26.884"></status>
</kw>
<msg timestamp="20200727 01:42:26.885" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595812630310,"lastReportTimestamp":1595814132190},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200727 01:42:26.854" endtime="20200727 01:42:26.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.885" endtime="20200727 01:42:26.885"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:42:26.752" endtime="20200727 01:42:26.886" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.889" endtime="20200727 01:42:26.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:26.893" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:26.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:26.909" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 01:42:26.891" endtime="20200727 01:42:26.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.910" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.de8738b4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.d84a7cfa.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2fc2e818.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.30b8d325.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.909" endtime="20200727 01:42:26.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:26.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:26.910" endtime="20200727 01:42:26.911"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:26.890" endtime="20200727 01:42:26.911"></status>
</kw>
<msg timestamp="20200727 01:42:26.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:26.890" endtime="20200727 01:42:26.911"></status>
</kw>
<msg timestamp="20200727 01:42:26.912" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 01:42:26.889" endtime="20200727 01:42:26.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:26.912" endtime="20200727 01:42:26.913"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:42:26.886" endtime="20200727 01:42:26.913" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 01:41:38.032" endtime="20200727 01:42:26.914"></status>
</suite>
<status status="PASS" starttime="20200727 01:41:38.001" endtime="20200727 01:42:26.917"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
