<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 02:02:46.332" rpa="false">
<suite id="s1" name="ozonesecure-security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s1" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="setup">
<kw name="Create Random Volume" library="shell">
<assign>
<var>${volume}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 02:02:46.392" level="INFO">${random} = zuumk</msg>
<status status="PASS" starttime="20200727 02:02:46.392" endtime="20200727 02:02:46.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:46.397" level="INFO">Running command 'ozone sh volume create o3://om/vol-zuumk 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:49.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:49.170" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:46.394" endtime="20200727 02:02:49.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:49.171" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:49.170" endtime="20200727 02:02:49.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:49.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:49.171" endtime="20200727 02:02:49.172"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:46.393" endtime="20200727 02:02:49.172"></status>
</kw>
<msg timestamp="20200727 02:02:49.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:46.393" endtime="20200727 02:02:49.172"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:46.392" endtime="20200727 02:02:49.172"></status>
</kw>
<msg timestamp="20200727 02:02:49.173" level="INFO">${volume} = vol-zuumk</msg>
<status status="PASS" starttime="20200727 02:02:46.391" endtime="20200727 02:02:49.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
</arguments>
<msg timestamp="20200727 02:02:49.173" level="INFO">${VOLUME} = vol-zuumk</msg>
<status status="PASS" starttime="20200727 02:02:49.173" endtime="20200727 02:02:49.173"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:46.391" endtime="20200727 02:02:49.174"></status>
</kw>
<test id="s1-s1-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:49.180" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-zuumk/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:52.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:52.256" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:49.176" endtime="20200727 02:02:52.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:52.257" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:52.256" endtime="20200727 02:02:52.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:52.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:52.257" endtime="20200727 02:02:52.258"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:49.176" endtime="20200727 02:02:52.258"></status>
</kw>
<msg timestamp="20200727 02:02:52.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:49.176" endtime="20200727 02:02:52.258"></status>
</kw>
<msg timestamp="20200727 02:02:52.259" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:49.175" endtime="20200727 02:02:52.259"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:52.259" endtime="20200727 02:02:52.259"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:52.262" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-zuumk/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:55.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:55.229" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:52.260" endtime="20200727 02:02:55.229"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:55.229" endtime="20200727 02:02:55.230"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:55.230" endtime="20200727 02:02:55.230"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:55.231" endtime="20200727 02:02:55.231"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:52.259" endtime="20200727 02:02:55.231"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:02:49.174" endtime="20200727 02:02:55.231" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20200727 02:02:55.233" level="INFO">${key} = o3://om/vol-zuumk/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20200727 02:02:55.233" endtime="20200727 02:02:55.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} /etc/passwd</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:55.237" level="INFO">Running command 'ozone sh key put o3://om/vol-zuumk/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:00.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:00.316" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:55.235" endtime="20200727 02:03:00.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:00.317" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:00.317" endtime="20200727 02:03:00.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:00.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:00.318" endtime="20200727 02:03:00.318"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:55.234" endtime="20200727 02:03:00.318"></status>
</kw>
<msg timestamp="20200727 02:03:00.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:55.234" endtime="20200727 02:03:00.319"></status>
</kw>
<msg timestamp="20200727 02:03:00.319" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:55.233" endtime="20200727 02:03:00.319"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 02:03:00.321" level="INFO">${postfix} = 98612</msg>
<status status="PASS" starttime="20200727 02:03:00.320" endtime="20200727 02:03:00.321"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 02:03:00.322" level="INFO">${tmpfile} = /tmp/tempkey-98612</msg>
<status status="PASS" starttime="20200727 02:03:00.321" endtime="20200727 02:03:00.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:00.327" level="INFO">Running command 'ozone sh key get -f o3://om/vol-zuumk/encrypted-bucket/passwd /tmp/tempkey-98612 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:04.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:04.940" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:00.324" endtime="20200727 02:03:04.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:04.941" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:04.941" endtime="20200727 02:03:04.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:04.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:04.942" endtime="20200727 02:03:04.942"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:00.323" endtime="20200727 02:03:04.942"></status>
</kw>
<msg timestamp="20200727 02:03:04.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:00.323" endtime="20200727 02:03:04.943"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:00.322" endtime="20200727 02:03:04.943"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 02:03:04.945" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-98612 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:04.948" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 02:03:04.943" endtime="20200727 02:03:04.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:04.952" level="INFO">Running command 'rm -f /tmp/tempkey-98612 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:04.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:04.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:03:04.950" endtime="20200727 02:03:04.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:04.956" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:03:04.955" endtime="20200727 02:03:04.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:04.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:04.956" endtime="20200727 02:03:04.957"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:04.949" endtime="20200727 02:03:04.957"></status>
</kw>
<msg timestamp="20200727 02:03:04.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:04.949" endtime="20200727 02:03:04.957"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:04.948" endtime="20200727 02:03:04.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 02:03:04.958" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 02:03:04.958" endtime="20200727 02:03:04.958"></status>
</kw>
<msg timestamp="20200727 02:03:04.958" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 02:03:00.320" endtime="20200727 02:03:04.958"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:04.959" endtime="20200727 02:03:04.959"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:00.319" endtime="20200727 02:03:04.959"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:02:55.232" endtime="20200727 02:03:04.959" critical="yes"></status>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20200727 02:02:46.361" endtime="20200727 02:03:04.961"></status>
</suite>
<suite id="s1-s2" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:04.974" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:04.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:04.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:03:04.973" endtime="20200727 02:03:04.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:04.979" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:03:04.978" endtime="20200727 02:03:04.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:04.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:04.979" endtime="20200727 02:03:04.980"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:04.972" endtime="20200727 02:03:04.980"></status>
</kw>
<msg timestamp="20200727 02:03:04.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:04.972" endtime="20200727 02:03:04.980"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:04.971" endtime="20200727 02:03:04.980"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ozone sh volume create o3://om/fstest</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:04.983" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:07.219" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:03:07.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:04.981" endtime="20200727 02:03:07.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:07.219" endtime="20200727 02:03:07.220"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:03:04.970" endtime="20200727 02:03:07.220" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:07.227" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:07.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:07.229" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:03:07.225" endtime="20200727 02:03:07.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:07.230" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:03:07.229" endtime="20200727 02:03:07.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:07.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:07.230" endtime="20200727 02:03:07.231"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:07.224" endtime="20200727 02:03:07.231"></status>
</kw>
<msg timestamp="20200727 02:03:07.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:07.224" endtime="20200727 02:03:07.231"></status>
</kw>
<msg timestamp="20200727 02:03:07.231" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:03:07.223" endtime="20200727 02:03:07.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:03:07.233" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:03:07.232" endtime="20200727 02:03:07.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:07.237" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:07.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:07.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:03:07.235" endtime="20200727 02:03:07.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:07.259" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:03:07.259" endtime="20200727 02:03:07.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:07.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:07.260" endtime="20200727 02:03:07.260"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:07.234" endtime="20200727 02:03:07.260"></status>
</kw>
<msg timestamp="20200727 02:03:07.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:07.234" endtime="20200727 02:03:07.261"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:07.233" endtime="20200727 02:03:07.261"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:07.233" endtime="20200727 02:03:07.261"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:07.223" endtime="20200727 02:03:07.261"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:07.222" endtime="20200727 02:03:07.261"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ozone sh volume create o3://om/fstest</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:07.263" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:10.191" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:03:10.191" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:07.261" endtime="20200727 02:03:10.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:10.192" endtime="20200727 02:03:10.193"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:03:07.221" endtime="20200727 02:03:10.193" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:10.198" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:10.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:10.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:03:10.197" endtime="20200727 02:03:10.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.201" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:03:10.201" endtime="20200727 02:03:10.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:10.202" endtime="20200727 02:03:10.202"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.196" endtime="20200727 02:03:10.203"></status>
</kw>
<msg timestamp="20200727 02:03:10.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:10.196" endtime="20200727 02:03:10.203"></status>
</kw>
<msg timestamp="20200727 02:03:10.203" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:03:10.196" endtime="20200727 02:03:10.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:03:10.204" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:03:10.203" endtime="20200727 02:03:10.204"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:10.208" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:10.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:10.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:03:10.206" endtime="20200727 02:03:10.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.230" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:03:10.230" endtime="20200727 02:03:10.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:10.230" endtime="20200727 02:03:10.231"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.205" endtime="20200727 02:03:10.231"></status>
</kw>
<msg timestamp="20200727 02:03:10.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:10.205" endtime="20200727 02:03:10.231"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.204" endtime="20200727 02:03:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.204" endtime="20200727 02:03:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.195" endtime="20200727 02:03:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.195" endtime="20200727 02:03:10.232"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup volume names</arg>
</arguments>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 02:03:10.233" level="INFO">${random} = 91</msg>
<status status="PASS" starttime="20200727 02:03:10.233" endtime="20200727 02:03:10.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.234" level="INFO">${volume1} = fstest91</msg>
<status status="PASS" starttime="20200727 02:03:10.233" endtime="20200727 02:03:10.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.235" level="INFO">${volume2} = fstest291</msg>
<status status="PASS" starttime="20200727 02:03:10.235" endtime="20200727 02:03:10.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
</arguments>
<msg timestamp="20200727 02:03:10.237" level="INFO">${volume3} = fstest391</msg>
<status status="PASS" starttime="20200727 02:03:10.236" endtime="20200727 02:03:10.237"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.232" endtime="20200727 02:03:10.237"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.232" endtime="20200727 02:03:10.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://om/${volume1}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:10.240" level="INFO">Running command 'ozone sh volume create o3://om/fstest91 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:12.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:12.810" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:10.238" endtime="20200727 02:03:12.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:12.811" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:12.810" endtime="20200727 02:03:12.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:12.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:12.811" endtime="20200727 02:03:12.811"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.238" endtime="20200727 02:03:12.812"></status>
</kw>
<msg timestamp="20200727 02:03:12.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:10.238" endtime="20200727 02:03:12.812"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:10.237" endtime="20200727 02:03:12.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://om/${volume2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:12.815" level="INFO">Running command 'ozone sh volume create o3://om/fstest291 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:15.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:15.568" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:12.814" endtime="20200727 02:03:15.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:15.569" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:15.568" endtime="20200727 02:03:15.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:15.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:15.569" endtime="20200727 02:03:15.570"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:12.813" endtime="20200727 02:03:15.570"></status>
</kw>
<msg timestamp="20200727 02:03:15.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:12.813" endtime="20200727 02:03:15.570"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:12.812" endtime="20200727 02:03:15.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://om/${volume1}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:15.574" level="INFO">Running command 'ozone sh bucket create o3://om/fstest91/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:18.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:18.389" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:15.572" endtime="20200727 02:03:18.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:18.390" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:18.389" endtime="20200727 02:03:18.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:18.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:18.390" endtime="20200727 02:03:18.391"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:15.572" endtime="20200727 02:03:18.391"></status>
</kw>
<msg timestamp="20200727 02:03:18.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:15.572" endtime="20200727 02:03:18.391"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:15.571" endtime="20200727 02:03:18.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://om/${volume1}/bucket2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:18.395" level="INFO">Running command 'ozone sh bucket create o3://om/fstest91/bucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:21.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:21.071" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:18.393" endtime="20200727 02:03:21.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:21.072" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:21.072" endtime="20200727 02:03:21.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:21.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:21.072" endtime="20200727 02:03:21.073"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:18.392" endtime="20200727 02:03:21.073"></status>
</kw>
<msg timestamp="20200727 02:03:21.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:18.392" endtime="20200727 02:03:21.074"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:18.392" endtime="20200727 02:03:21.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://om/${volume2}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:21.078" level="INFO">Running command 'ozone sh bucket create o3://om/fstest291/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:23.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:23.892" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:21.075" endtime="20200727 02:03:23.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:23.893" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:23.892" endtime="20200727 02:03:23.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:23.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:23.893" endtime="20200727 02:03:23.894"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:21.075" endtime="20200727 02:03:23.894"></status>
</kw>
<msg timestamp="20200727 02:03:23.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:21.074" endtime="20200727 02:03:23.894"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:21.074" endtime="20200727 02:03:23.895"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:03:10.194" endtime="20200727 02:03:23.895" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:23.899" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest91/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:27.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:27.067" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:23.897" endtime="20200727 02:03:27.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:27.069" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:27.068" endtime="20200727 02:03:27.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:27.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:27.069" endtime="20200727 02:03:27.070"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:23.897" endtime="20200727 02:03:27.070"></status>
</kw>
<msg timestamp="20200727 02:03:27.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:23.897" endtime="20200727 02:03:27.070"></status>
</kw>
<msg timestamp="20200727 02:03:27.071" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:23.896" endtime="20200727 02:03:27.071"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:03:23.895" endtime="20200727 02:03:27.071" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Test Volume Acls">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:27.076" level="INFO">Running command 'ozone sh volume create fstest391 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:30.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:30.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:27.074" endtime="20200727 02:03:30.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:30.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:30.092" endtime="20200727 02:03:30.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:30.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:30.093" endtime="20200727 02:03:30.094"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:27.074" endtime="20200727 02:03:30.094"></status>
</kw>
<msg timestamp="20200727 02:03:30.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:27.073" endtime="20200727 02:03:30.094"></status>
</kw>
<msg timestamp="20200727 02:03:30.094" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:27.073" endtime="20200727 02:03:30.094"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:30.095" endtime="20200727 02:03:30.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:30.100" level="INFO">Running command 'ozone sh volume getacl fstest391 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:32.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:32.918" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:30.096" endtime="20200727 02:03:32.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:32.919" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:03:32.919" endtime="20200727 02:03:32.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:32.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:32.919" endtime="20200727 02:03:32.920"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:30.096" endtime="20200727 02:03:32.920"></status>
</kw>
<msg timestamp="20200727 02:03:32.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:30.096" endtime="20200727 02:03:32.921"></status>
</kw>
<msg timestamp="20200727 02:03:32.921" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:30.095" endtime="20200727 02:03:32.921"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:32.921" endtime="20200727 02:03:32.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:32.925" level="INFO">Running command 'ozone sh volume addacl fstest391 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:35.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:35.621" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:32.924" endtime="20200727 02:03:35.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:35.623" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 02:03:35.622" endtime="20200727 02:03:35.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:35.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:35.623" endtime="20200727 02:03:35.623"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:32.923" endtime="20200727 02:03:35.624"></status>
</kw>
<msg timestamp="20200727 02:03:35.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:32.923" endtime="20200727 02:03:35.624"></status>
</kw>
<msg timestamp="20200727 02:03:35.624" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:32.922" endtime="20200727 02:03:35.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:35.629" level="INFO">Running command 'ozone sh volume getacl fstest391 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:38.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:38.766" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:35.626" endtime="20200727 02:03:38.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:38.767" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:03:38.767" endtime="20200727 02:03:38.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:38.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:38.768" endtime="20200727 02:03:38.768"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:35.625" endtime="20200727 02:03:38.769"></status>
</kw>
<msg timestamp="20200727 02:03:38.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:35.625" endtime="20200727 02:03:38.770"></status>
</kw>
<msg timestamp="20200727 02:03:38.770" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:35.624" endtime="20200727 02:03:38.770"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:38.770" endtime="20200727 02:03:38.771"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:38.775" level="INFO">Running command 'ozone sh volume removeacl fstest391 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:41.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:41.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:38.773" endtime="20200727 02:03:41.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:41.834" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 02:03:41.833" endtime="20200727 02:03:41.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:41.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:41.834" endtime="20200727 02:03:41.835"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:38.772" endtime="20200727 02:03:41.835"></status>
</kw>
<msg timestamp="20200727 02:03:41.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:38.772" endtime="20200727 02:03:41.835"></status>
</kw>
<msg timestamp="20200727 02:03:41.835" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:38.771" endtime="20200727 02:03:41.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:41.839" level="INFO">Running command 'ozone sh volume getacl fstest391 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:44.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:44.666" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:41.837" endtime="20200727 02:03:44.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:44.667" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:03:44.667" endtime="20200727 02:03:44.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:44.667" endtime="20200727 02:03:44.668"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:41.836" endtime="20200727 02:03:44.668"></status>
</kw>
<msg timestamp="20200727 02:03:44.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:41.836" endtime="20200727 02:03:44.668"></status>
</kw>
<msg timestamp="20200727 02:03:44.669" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:41.836" endtime="20200727 02:03:44.669"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:44.669" endtime="20200727 02:03:44.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:44.674" level="INFO">Running command 'ozone sh volume setacl fstest391 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:47.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:47.393" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:44.672" endtime="20200727 02:03:47.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:47.394" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 02:03:47.393" endtime="20200727 02:03:47.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:47.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:47.394" endtime="20200727 02:03:47.395"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:44.671" endtime="20200727 02:03:47.395"></status>
</kw>
<msg timestamp="20200727 02:03:47.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:44.671" endtime="20200727 02:03:47.395"></status>
</kw>
<msg timestamp="20200727 02:03:47.396" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:44.670" endtime="20200727 02:03:47.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:47.399" level="INFO">Running command 'ozone sh volume getacl fstest391 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:50.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:50.261" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:47.397" endtime="20200727 02:03:50.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:50.262" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:03:50.262" endtime="20200727 02:03:50.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:50.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:50.263" endtime="20200727 02:03:50.263"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:47.397" endtime="20200727 02:03:50.263"></status>
</kw>
<msg timestamp="20200727 02:03:50.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:47.396" endtime="20200727 02:03:50.264"></status>
</kw>
<msg timestamp="20200727 02:03:50.264" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:47.396" endtime="20200727 02:03:50.264"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:50.264" endtime="20200727 02:03:50.265"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:50.265" endtime="20200727 02:03:50.266"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:03:27.072" endtime="20200727 02:03:50.266" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Test Bucket Acls">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:50.271" level="INFO">Running command 'ozone sh bucket create fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:52.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:52.838" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:50.269" endtime="20200727 02:03:52.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:52.839" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:03:52.838" endtime="20200727 02:03:52.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:52.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:52.839" endtime="20200727 02:03:52.840"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:50.269" endtime="20200727 02:03:52.840"></status>
</kw>
<msg timestamp="20200727 02:03:52.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:50.268" endtime="20200727 02:03:52.840"></status>
</kw>
<msg timestamp="20200727 02:03:52.841" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:50.268" endtime="20200727 02:03:52.841"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:52.841" endtime="20200727 02:03:52.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:52.845" level="INFO">Running command 'ozone sh bucket getacl fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:55.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:55.844" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:52.843" endtime="20200727 02:03:55.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:55.845" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:03:55.844" endtime="20200727 02:03:55.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:55.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:55.845" endtime="20200727 02:03:55.846"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:52.842" endtime="20200727 02:03:55.846"></status>
</kw>
<msg timestamp="20200727 02:03:55.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:52.842" endtime="20200727 02:03:55.846"></status>
</kw>
<msg timestamp="20200727 02:03:55.847" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:52.842" endtime="20200727 02:03:55.847"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 02:03:55.847" endtime="20200727 02:03:55.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:55.851" level="INFO">Running command 'ozone sh bucket addacl fstest391/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:03:58.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:03:58.618" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:55.849" endtime="20200727 02:03:58.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:03:58.619" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 02:03:58.618" endtime="20200727 02:03:58.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:03:58.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:03:58.619" endtime="20200727 02:03:58.620"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:55.848" endtime="20200727 02:03:58.620"></status>
</kw>
<msg timestamp="20200727 02:03:58.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:55.848" endtime="20200727 02:03:58.620"></status>
</kw>
<msg timestamp="20200727 02:03:58.621" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:55.848" endtime="20200727 02:03:58.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:03:58.624" level="INFO">Running command 'ozone sh bucket getacl fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:01.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:01.459" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:58.622" endtime="20200727 02:04:01.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:01.460" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:01.460" endtime="20200727 02:04:01.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:01.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:01.461" endtime="20200727 02:04:01.461"></status>
</kw>
<status status="PASS" starttime="20200727 02:03:58.622" endtime="20200727 02:04:01.461"></status>
</kw>
<msg timestamp="20200727 02:04:01.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:03:58.621" endtime="20200727 02:04:01.462"></status>
</kw>
<msg timestamp="20200727 02:04:01.462" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:03:58.621" endtime="20200727 02:04:01.462"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:01.462" endtime="20200727 02:04:01.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:01.466" level="INFO">Running command 'ozone sh bucket removeacl fstest391/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:04.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:04.490" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:01.464" endtime="20200727 02:04:04.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:04.492" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 02:04:04.491" endtime="20200727 02:04:04.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:04.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:04.492" endtime="20200727 02:04:04.492"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:01.464" endtime="20200727 02:04:04.493"></status>
</kw>
<msg timestamp="20200727 02:04:04.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:01.464" endtime="20200727 02:04:04.493"></status>
</kw>
<msg timestamp="20200727 02:04:04.493" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:01.463" endtime="20200727 02:04:04.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:04.497" level="INFO">Running command 'ozone sh bucket getacl fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:07.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:07.401" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:04.495" endtime="20200727 02:04:07.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:07.402" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:07.402" endtime="20200727 02:04:07.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:07.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:07.403" endtime="20200727 02:04:07.403"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:04.494" endtime="20200727 02:04:07.403"></status>
</kw>
<msg timestamp="20200727 02:04:07.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:04.494" endtime="20200727 02:04:07.404"></status>
</kw>
<msg timestamp="20200727 02:04:07.404" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:04.493" endtime="20200727 02:04:07.404"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:07.404" endtime="20200727 02:04:07.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:07.408" level="INFO">Running command 'ozone sh bucket setacl fstest391/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:10.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:10.298" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:07.406" endtime="20200727 02:04:10.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:10.299" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 02:04:10.298" endtime="20200727 02:04:10.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:10.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:10.300" endtime="20200727 02:04:10.300"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:07.406" endtime="20200727 02:04:10.301"></status>
</kw>
<msg timestamp="20200727 02:04:10.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:07.406" endtime="20200727 02:04:10.301"></status>
</kw>
<msg timestamp="20200727 02:04:10.301" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:07.405" endtime="20200727 02:04:10.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:10.305" level="INFO">Running command 'ozone sh bucket getacl fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:13.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:13.203" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:10.303" endtime="20200727 02:04:13.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:13.204" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:13.203" endtime="20200727 02:04:13.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:13.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:13.204" endtime="20200727 02:04:13.205"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:10.302" endtime="20200727 02:04:13.205"></status>
</kw>
<msg timestamp="20200727 02:04:13.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:10.302" endtime="20200727 02:04:13.205"></status>
</kw>
<msg timestamp="20200727 02:04:13.206" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:10.301" endtime="20200727 02:04:13.206"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:13.206" endtime="20200727 02:04:13.206"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:13.206" endtime="20200727 02:04:13.207"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:03:50.267" endtime="20200727 02:04:13.207" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Test key Acls">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:13.213" level="INFO">Running command 'ozone sh key put fstest391/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:17.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:17.614" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:13.211" endtime="20200727 02:04:17.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:17.615" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:04:17.614" endtime="20200727 02:04:17.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:17.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:17.616" endtime="20200727 02:04:17.616"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:13.210" endtime="20200727 02:04:17.616"></status>
</kw>
<msg timestamp="20200727 02:04:17.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:13.210" endtime="20200727 02:04:17.617"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:13.209" endtime="20200727 02:04:17.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:17.621" level="INFO">Running command 'ozone sh key getacl fstest391/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:20.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:20.381" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:17.619" endtime="20200727 02:04:20.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:20.382" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:20.381" endtime="20200727 02:04:20.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:20.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:20.382" endtime="20200727 02:04:20.383"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:17.618" endtime="20200727 02:04:20.383"></status>
</kw>
<msg timestamp="20200727 02:04:20.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:17.618" endtime="20200727 02:04:20.383"></status>
</kw>
<msg timestamp="20200727 02:04:20.383" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:17.617" endtime="20200727 02:04:20.384"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:20.384" endtime="20200727 02:04:20.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:20.387" level="INFO">Running command 'ozone sh key addacl fstest391/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:23.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:23.034" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:20.386" endtime="20200727 02:04:23.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:23.035" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 02:04:23.034" endtime="20200727 02:04:23.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:23.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:23.035" endtime="20200727 02:04:23.036"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:20.385" endtime="20200727 02:04:23.036"></status>
</kw>
<msg timestamp="20200727 02:04:23.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:20.385" endtime="20200727 02:04:23.036"></status>
</kw>
<msg timestamp="20200727 02:04:23.037" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:20.384" endtime="20200727 02:04:23.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:23.040" level="INFO">Running command 'ozone sh key getacl fstest391/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:26.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:26.121" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:23.038" endtime="20200727 02:04:26.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:26.122" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:26.122" endtime="20200727 02:04:26.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:26.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:26.123" endtime="20200727 02:04:26.123"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:23.038" endtime="20200727 02:04:26.124"></status>
</kw>
<msg timestamp="20200727 02:04:26.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:23.038" endtime="20200727 02:04:26.124"></status>
</kw>
<msg timestamp="20200727 02:04:26.124" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:23.037" endtime="20200727 02:04:26.124"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:26.124" endtime="20200727 02:04:26.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:26.131" level="INFO">Running command 'ozone sh key removeacl fstest391/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:28.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:28.730" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:26.126" endtime="20200727 02:04:28.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:28.731" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 02:04:28.730" endtime="20200727 02:04:28.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:28.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:28.731" endtime="20200727 02:04:28.732"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:26.126" endtime="20200727 02:04:28.732"></status>
</kw>
<msg timestamp="20200727 02:04:28.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:26.126" endtime="20200727 02:04:28.732"></status>
</kw>
<msg timestamp="20200727 02:04:28.733" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:26.125" endtime="20200727 02:04:28.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:28.739" level="INFO">Running command 'ozone sh key getacl fstest391/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:31.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:31.575" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:28.735" endtime="20200727 02:04:31.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:31.576" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:31.576" endtime="20200727 02:04:31.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:31.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:31.577" endtime="20200727 02:04:31.577"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:28.734" endtime="20200727 02:04:31.578"></status>
</kw>
<msg timestamp="20200727 02:04:31.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:28.733" endtime="20200727 02:04:31.578"></status>
</kw>
<msg timestamp="20200727 02:04:31.578" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:28.733" endtime="20200727 02:04:31.578"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:31.578" endtime="20200727 02:04:31.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:31.584" level="INFO">Running command 'ozone sh key setacl fstest391/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:34.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:34.220" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:31.580" endtime="20200727 02:04:34.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:34.221" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 02:04:34.221" endtime="20200727 02:04:34.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:34.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:34.222" endtime="20200727 02:04:34.222"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:31.580" endtime="20200727 02:04:34.223"></status>
</kw>
<msg timestamp="20200727 02:04:34.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:31.580" endtime="20200727 02:04:34.223"></status>
</kw>
<msg timestamp="20200727 02:04:34.223" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:31.579" endtime="20200727 02:04:34.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:34.226" level="INFO">Running command 'ozone sh key getacl fstest391/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:37.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:37.105" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:34.225" endtime="20200727 02:04:37.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:37.106" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:04:37.105" endtime="20200727 02:04:37.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:37.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:37.106" endtime="20200727 02:04:37.107"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:34.224" endtime="20200727 02:04:37.107"></status>
</kw>
<msg timestamp="20200727 02:04:37.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:34.224" endtime="20200727 02:04:37.107"></status>
</kw>
<msg timestamp="20200727 02:04:37.108" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:34.223" endtime="20200727 02:04:37.108"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:37.108" endtime="20200727 02:04:37.108"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:37.108" endtime="20200727 02:04:37.109"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:04:13.208" endtime="20200727 02:04:37.109" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Test native authorizer">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:37.114" level="INFO">Running command 'ozone sh volume removeacl fstest391 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:39.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:39.852" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:37.112" endtime="20200727 02:04:39.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:root:a[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 02:04:39.852" endtime="20200727 02:04:39.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:39.853" endtime="20200727 02:04:39.855"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:37.111" endtime="20200727 02:04:39.855"></status>
</kw>
<msg timestamp="20200727 02:04:39.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:37.111" endtime="20200727 02:04:39.855"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:37.110" endtime="20200727 02:04:39.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:39.861" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:39.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:39.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:04:39.857" endtime="20200727 02:04:39.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.864" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:04:39.863" endtime="20200727 02:04:39.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:39.864" endtime="20200727 02:04:39.865"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.857" endtime="20200727 02:04:39.865"></status>
</kw>
<msg timestamp="20200727 02:04:39.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:39.856" endtime="20200727 02:04:39.866"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.856" endtime="20200727 02:04:39.866"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:39.871" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:39.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:39.872" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:04:39.868" endtime="20200727 02:04:39.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.873" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:04:39.873" endtime="20200727 02:04:39.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:39.873" endtime="20200727 02:04:39.874"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.868" endtime="20200727 02:04:39.874"></status>
</kw>
<msg timestamp="20200727 02:04:39.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:39.867" endtime="20200727 02:04:39.874"></status>
</kw>
<msg timestamp="20200727 02:04:39.875" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:04:39.867" endtime="20200727 02:04:39.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:04:39.875" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:04:39.875" endtime="20200727 02:04:39.875"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:39.881" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:39.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:39.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:04:39.878" endtime="20200727 02:04:39.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.897" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:04:39.897" endtime="20200727 02:04:39.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:39.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:39.898" endtime="20200727 02:04:39.898"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.877" endtime="20200727 02:04:39.898"></status>
</kw>
<msg timestamp="20200727 02:04:39.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:39.877" endtime="20200727 02:04:39.899"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.876" endtime="20200727 02:04:39.899"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.876" endtime="20200727 02:04:39.899"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.866" endtime="20200727 02:04:39.899"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:39.866" endtime="20200727 02:04:39.899"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:39.902" level="INFO">Running command 'ozone sh bucket list /fstest391/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:42.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:04:42.645" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:39.900" endtime="20200727 02:04:42.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:42.647" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume</msg>
<status status="PASS" starttime="20200727 02:04:42.646" endtime="20200727 02:04:42.647"></status>
</kw>
<msg timestamp="20200727 02:04:42.647" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:39.899" endtime="20200727 02:04:42.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:42.647" endtime="20200727 02:04:42.648"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:42.650" level="INFO">Running command 'ozone sh key list /fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:45.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:04:45.197" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:42.649" endtime="20200727 02:04:45.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:45.198" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume</msg>
<status status="PASS" starttime="20200727 02:04:45.197" endtime="20200727 02:04:45.198"></status>
</kw>
<msg timestamp="20200727 02:04:45.198" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:42.648" endtime="20200727 02:04:45.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:45.199" endtime="20200727 02:04:45.199"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:45.202" level="INFO">Running command 'ozone sh volume addacl fstest391 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:47.874" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:04:47.874" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:45.200" endtime="20200727 02:04:47.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.875" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</msg>
<status status="PASS" starttime="20200727 02:04:47.875" endtime="20200727 02:04:47.875"></status>
</kw>
<msg timestamp="20200727 02:04:47.876" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:45.199" endtime="20200727 02:04:47.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:47.876" endtime="20200727 02:04:47.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:47.880" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:47.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:47.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:04:47.878" endtime="20200727 02:04:47.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.884" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:04:47.883" endtime="20200727 02:04:47.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:47.884" endtime="20200727 02:04:47.885"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.877" endtime="20200727 02:04:47.885"></status>
</kw>
<msg timestamp="20200727 02:04:47.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:47.877" endtime="20200727 02:04:47.885"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.876" endtime="20200727 02:04:47.885"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:47.890" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:47.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:47.891" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:04:47.888" endtime="20200727 02:04:47.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.892" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:04:47.891" endtime="20200727 02:04:47.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:47.892" endtime="20200727 02:04:47.893"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.887" endtime="20200727 02:04:47.893"></status>
</kw>
<msg timestamp="20200727 02:04:47.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:47.887" endtime="20200727 02:04:47.893"></status>
</kw>
<msg timestamp="20200727 02:04:47.894" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:04:47.886" endtime="20200727 02:04:47.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:04:47.894" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:04:47.894" endtime="20200727 02:04:47.894"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:47.899" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:47.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:47.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:04:47.897" endtime="20200727 02:04:47.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.909" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:04:47.909" endtime="20200727 02:04:47.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:47.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:47.910" endtime="20200727 02:04:47.910"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.896" endtime="20200727 02:04:47.911"></status>
</kw>
<msg timestamp="20200727 02:04:47.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:47.896" endtime="20200727 02:04:47.911"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.895" endtime="20200727 02:04:47.911"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.895" endtime="20200727 02:04:47.911"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.886" endtime="20200727 02:04:47.911"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.886" endtime="20200727 02:04:47.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:47.915" level="INFO">Running command 'ozone sh volume addacl fstest391 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:50.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:50.670" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:47.913" endtime="20200727 02:04:50.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.672" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 02:04:50.671" endtime="20200727 02:04:50.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:50.672" endtime="20200727 02:04:50.672"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.912" endtime="20200727 02:04:50.673"></status>
</kw>
<msg timestamp="20200727 02:04:50.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:47.912" endtime="20200727 02:04:50.673"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:47.911" endtime="20200727 02:04:50.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:50.677" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:50.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:50.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:04:50.675" endtime="20200727 02:04:50.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.681" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:04:50.680" endtime="20200727 02:04:50.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:50.681" endtime="20200727 02:04:50.682"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.674" endtime="20200727 02:04:50.682"></status>
</kw>
<msg timestamp="20200727 02:04:50.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:50.674" endtime="20200727 02:04:50.682"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.673" endtime="20200727 02:04:50.682"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:50.687" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:50.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:50.688" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:04:50.685" endtime="20200727 02:04:50.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.689" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:04:50.689" endtime="20200727 02:04:50.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:50.689" endtime="20200727 02:04:50.690"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.684" endtime="20200727 02:04:50.690"></status>
</kw>
<msg timestamp="20200727 02:04:50.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:50.684" endtime="20200727 02:04:50.690"></status>
</kw>
<msg timestamp="20200727 02:04:50.691" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:04:50.683" endtime="20200727 02:04:50.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:04:50.691" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:04:50.691" endtime="20200727 02:04:50.691"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:50.696" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:50.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:50.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:04:50.693" endtime="20200727 02:04:50.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.711" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:04:50.710" endtime="20200727 02:04:50.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:50.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:50.711" endtime="20200727 02:04:50.712"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.693" endtime="20200727 02:04:50.712"></status>
</kw>
<msg timestamp="20200727 02:04:50.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:50.693" endtime="20200727 02:04:50.712"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.692" endtime="20200727 02:04:50.712"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.692" endtime="20200727 02:04:50.712"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.683" endtime="20200727 02:04:50.713"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:50.683" endtime="20200727 02:04:50.713"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:50.716" level="INFO">Running command 'ozone sh bucket list /fstest391/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:53.382" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:04:53.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:50.713" endtime="20200727 02:04:53.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:53.383" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</msg>
<status status="PASS" starttime="20200727 02:04:53.382" endtime="20200727 02:04:53.383"></status>
</kw>
<msg timestamp="20200727 02:04:53.383" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:50.713" endtime="20200727 02:04:53.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200727 02:04:53.384" endtime="20200727 02:04:53.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:53.387" level="INFO">Running command 'ozone sh volume addacl fstest391 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:55.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:55.979" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:53.385" endtime="20200727 02:04:55.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:55.980" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 02:04:55.979" endtime="20200727 02:04:55.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:55.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:55.980" endtime="20200727 02:04:55.980"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:53.385" endtime="20200727 02:04:55.981"></status>
</kw>
<msg timestamp="20200727 02:04:55.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:53.385" endtime="20200727 02:04:55.981"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:53.384" endtime="20200727 02:04:55.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:55.985" level="INFO">Running command 'ozone sh bucket list /fstest391/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:04:59.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:04:59.027" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:55.983" endtime="20200727 02:04:59.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:04:59.028" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "fstest391",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T02:03:52.786Z",
  "modificationTime" : "2020-07-27T02:03:52.786Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 02:04:59.027" endtime="20200727 02:04:59.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:04:59.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:04:59.028" endtime="20200727 02:04:59.029"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:55.983" endtime="20200727 02:04:59.029"></status>
</kw>
<msg timestamp="20200727 02:04:59.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:55.982" endtime="20200727 02:04:59.029"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:55.981" endtime="20200727 02:04:59.029"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl /${volume3}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:04:59.033" level="INFO">Running command 'ozone sh volume getacl /fstest391/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:01.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:01.871" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:04:59.031" endtime="20200727 02:05:01.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:01.872" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:05:01.871" endtime="20200727 02:05:01.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:01.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:01.872" endtime="20200727 02:05:01.873"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:59.031" endtime="20200727 02:05:01.873"></status>
</kw>
<msg timestamp="20200727 02:05:01.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:04:59.030" endtime="20200727 02:05:01.873"></status>
</kw>
<status status="PASS" starttime="20200727 02:04:59.030" endtime="20200727 02:05:01.874"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:01.877" level="INFO">Running command 'ozone sh key list /fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:04.475" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:05:04.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:01.874" endtime="20200727 02:05:04.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.476" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" starttime="20200727 02:05:04.475" endtime="20200727 02:05:04.476"></status>
</kw>
<msg timestamp="20200727 02:05:04.476" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:01.874" endtime="20200727 02:05:04.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:04.477" endtime="20200727 02:05:04.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:04.480" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:04.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:04.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:04.479" endtime="20200727 02:05:04.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.484" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:04.484" endtime="20200727 02:05:04.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:04.485" endtime="20200727 02:05:04.485"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.478" endtime="20200727 02:05:04.485"></status>
</kw>
<msg timestamp="20200727 02:05:04.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:04.478" endtime="20200727 02:05:04.486"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.477" endtime="20200727 02:05:04.486"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:04.491" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:04.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:04.492" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:05:04.488" endtime="20200727 02:05:04.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.493" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:05:04.492" endtime="20200727 02:05:04.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:04.493" endtime="20200727 02:05:04.493"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.487" endtime="20200727 02:05:04.494"></status>
</kw>
<msg timestamp="20200727 02:05:04.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:04.487" endtime="20200727 02:05:04.494"></status>
</kw>
<msg timestamp="20200727 02:05:04.494" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:05:04.487" endtime="20200727 02:05:04.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:05:04.495" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:05:04.494" endtime="20200727 02:05:04.495"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:04.499" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:04.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:04.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:04.497" endtime="20200727 02:05:04.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.510" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:04.509" endtime="20200727 02:05:04.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:04.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:04.510" endtime="20200727 02:05:04.511"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.496" endtime="20200727 02:05:04.511"></status>
</kw>
<msg timestamp="20200727 02:05:04.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:04.496" endtime="20200727 02:05:04.511"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.495" endtime="20200727 02:05:04.511"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.495" endtime="20200727 02:05:04.512"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.486" endtime="20200727 02:05:04.512"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.486" endtime="20200727 02:05:04.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:04.515" level="INFO">Running command 'ozone sh bucket addacl fstest391/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:07.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:07.149" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:04.513" endtime="20200727 02:05:07.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:07.150" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 02:05:07.150" endtime="20200727 02:05:07.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:07.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:07.150" endtime="20200727 02:05:07.151"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.513" endtime="20200727 02:05:07.151"></status>
</kw>
<msg timestamp="20200727 02:05:07.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:04.512" endtime="20200727 02:05:07.152"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:04.512" endtime="20200727 02:05:07.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:07.157" level="INFO">Running command 'ozone sh bucket getacl /fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:10.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:10.196" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:07.154" endtime="20200727 02:05:10.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.197" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:05:10.196" endtime="20200727 02:05:10.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:10.197" endtime="20200727 02:05:10.198"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:07.153" endtime="20200727 02:05:10.198"></status>
</kw>
<msg timestamp="20200727 02:05:10.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:07.153" endtime="20200727 02:05:10.198"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:07.152" endtime="20200727 02:05:10.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:10.201" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:10.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:10.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:10.200" endtime="20200727 02:05:10.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.205" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:10.205" endtime="20200727 02:05:10.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:10.206" endtime="20200727 02:05:10.206"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.199" endtime="20200727 02:05:10.206"></status>
</kw>
<msg timestamp="20200727 02:05:10.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:10.199" endtime="20200727 02:05:10.207"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.198" endtime="20200727 02:05:10.207"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:10.211" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:10.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:10.213" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:05:10.210" endtime="20200727 02:05:10.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.214" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:05:10.214" endtime="20200727 02:05:10.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:10.214" endtime="20200727 02:05:10.215"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.209" endtime="20200727 02:05:10.215"></status>
</kw>
<msg timestamp="20200727 02:05:10.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:10.209" endtime="20200727 02:05:10.215"></status>
</kw>
<msg timestamp="20200727 02:05:10.216" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:05:10.208" endtime="20200727 02:05:10.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:05:10.216" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:05:10.216" endtime="20200727 02:05:10.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:10.221" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:10.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:10.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:10.218" endtime="20200727 02:05:10.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.231" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:10.230" endtime="20200727 02:05:10.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:10.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:10.231" endtime="20200727 02:05:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.218" endtime="20200727 02:05:10.232"></status>
</kw>
<msg timestamp="20200727 02:05:10.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:10.217" endtime="20200727 02:05:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.217" endtime="20200727 02:05:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.216" endtime="20200727 02:05:10.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.208" endtime="20200727 02:05:10.233"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.207" endtime="20200727 02:05:10.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:10.237" level="INFO">Running command 'ozone sh bucket getacl /fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:13.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:13.113" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:10.234" endtime="20200727 02:05:13.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:13.114" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 02:05:13.114" endtime="20200727 02:05:13.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:13.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:13.114" endtime="20200727 02:05:13.115"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.234" endtime="20200727 02:05:13.115"></status>
</kw>
<msg timestamp="20200727 02:05:13.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:10.233" endtime="20200727 02:05:13.116"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:10.233" endtime="20200727 02:05:13.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:13.122" level="INFO">Running command 'ozone sh key list /fstest391/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:16.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:16.162" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:13.119" endtime="20200727 02:05:16.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.163" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "fstest391",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17540,
  "creationTime" : "2020-07-27T02:04:15.827Z",
  "modificationTime" : "2020-07-27T02:04:17.238Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20200727 02:05:16.162" endtime="20200727 02:05:16.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:16.163" endtime="20200727 02:05:16.164"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:13.117" endtime="20200727 02:05:16.164"></status>
</kw>
<msg timestamp="20200727 02:05:16.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:13.117" endtime="20200727 02:05:16.164"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:13.116" endtime="20200727 02:05:16.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:16.169" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:16.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:16.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:16.166" endtime="20200727 02:05:16.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.172" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:16.172" endtime="20200727 02:05:16.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:16.173" endtime="20200727 02:05:16.173"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.166" endtime="20200727 02:05:16.173"></status>
</kw>
<msg timestamp="20200727 02:05:16.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:16.165" endtime="20200727 02:05:16.174"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.165" endtime="20200727 02:05:16.174"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:16.180" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:16.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:16.181" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:05:16.176" endtime="20200727 02:05:16.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.182" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:05:16.182" endtime="20200727 02:05:16.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:16.182" endtime="20200727 02:05:16.183"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.175" endtime="20200727 02:05:16.183"></status>
</kw>
<msg timestamp="20200727 02:05:16.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:16.175" endtime="20200727 02:05:16.183"></status>
</kw>
<msg timestamp="20200727 02:05:16.184" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:05:16.175" endtime="20200727 02:05:16.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:05:16.185" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:05:16.184" endtime="20200727 02:05:16.185"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:16.189" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:16.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:16.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:16.187" endtime="20200727 02:05:16.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.211" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:16.211" endtime="20200727 02:05:16.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:16.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:16.211" endtime="20200727 02:05:16.212"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.186" endtime="20200727 02:05:16.213"></status>
</kw>
<msg timestamp="20200727 02:05:16.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:16.186" endtime="20200727 02:05:16.213"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.185" endtime="20200727 02:05:16.213"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.185" endtime="20200727 02:05:16.213"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.174" endtime="20200727 02:05:16.213"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.174" endtime="20200727 02:05:16.213"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:04:37.110" endtime="20200727 02:05:16.214" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 02:03:04.963" endtime="20200727 02:05:16.215"></status>
</suite>
<suite id="s1-s3" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s3-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup s3 tests</arg>
</arguments>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:16.240" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:16.242" level="INFO">${rc} = 1</msg>
<msg timestamp="20200727 02:05:16.242" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200727 02:05:16.238" endtime="20200727 02:05:16.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:16.242" endtime="20200727 02:05:16.243"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:16.245" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:16.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:16.392" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Triggername'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" starttime="20200727 02:05:16.243" endtime="20200727 02:05:16.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:16.398" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:44.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:44.506" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.ash.fastserv.com
 * epel: iad.mirror.rackspace.com
 * extras: reflector.westga.edu
 * updates: mirror.atl.genesisadaptive...</msg>
<status status="PASS" starttime="20200727 02:05:16.395" endtime="20200727 02:05:44.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:44.507" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.ash.fastserv.com
 * epel: iad.mirror.rackspace.com
 * extras: reflector.westga.edu
 * updates: mirror.atl.genesisadaptive.com
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7.0.1 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7.0.1.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-19.el7 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-19.el7 for package: 1:openssl-1.0.2k-19.el7.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-19.el7.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-32.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-32.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-7.el7 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-16.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-19.el7 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                         Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                          noarch 1.14.28-5.el7_5.1            base 1.0 M
Installing for dependencies:
 PyYAML                          x86_64 3.10-11.el7                  base 153 k
 jbigkit-libs                    x86_64 2.0-11.el7                   base  46 k
 libtiff                         x86_64 4.0.3-32.el7                 base 171 k
 libwebp                         x86_64 0.3.0-7.el7                  base 170 k
 libyaml                         x86_64 0.1.4-11.el7_0               base  55 k
 make                            x86_64 1:3.82-24.el7                base 421 k
 openssl                         x86_64 1:1.0.2k-19.el7              base 493 k
 python-backports                x86_64 1.0-8.el7                    base 5.8 k
 python-backports-ssl_match_hostname
                                 noarch 3.5.0.1-1.el7                base  13 k
 python-cffi                     x86_64 1.6.0-5.el7                  base 218 k
 python-dateutil                 noarch 1.5-7.el7                    base  85 k
 python-docutils                 noarch 0.11-0.3.20130715svn7687.el7 base 1.5 M
 python-enum34                   noarch 1.0.4-1.el7                  base  52 k
 python-idna                     noarch 2.4-1.el7                    base  94 k
 python-ipaddress                noarch 1.0.16-2.el7                 base  34 k
 python-pillow                   x86_64 2.0.0-20.gitd1c6db8.el7_7    base 439 k
 python-ply                      noarch 3.4-11.el7                   base 123 k
 python-pycparser                noarch 2.14-1.el7                   base 104 k
 python-s3transfer               noarch 0.1.13-1.el7.0.1             base 2.9 M
 python-setuptools               noarch 0.9.8-7.el7                  base 397 k
 python-six                      noarch 1.9.0-2.el7                  base  29 k
 python2-cryptography            x86_64 1.7.2-2.el7                  base 502 k
 python2-pyasn1                  noarch 0.1.9-7.el7                  base 100 k
Updating for dependencies:
 openssl-libs                    x86_64 1:1.0.2k-19.el7              base 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 10 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                              666 kB/s |  10 MB  00:15     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-19.el7.x86_64                         2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : python-backports-1.0-8.el7.x86_64                           6/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    7/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                        8/26 
  Installing : python-ply-3.4-11.el7.noarch                                9/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         10/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             11/26 
  Installing : python-idna-2.4-1.el7.noarch                               12/26 
  Installing : python-six-1.9.0-2.el7.noarch                              13/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  14/26 
  Installing : 1:openssl-1.0.2k-19.el7.x86_64                             15/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           16/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Installing : libtiff-4.0.3-32.el7.x86_64                                18/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           19/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    20/26 
  Installing : libwebp-0.3.0-7.el7.x86_64                                 21/26 
  Installing : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             22/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        23/26 
  Installing : python-s3transfer-0.1.13-1.el7.0.1.noarch                  24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : libwebp-0.3.0-7.el7.x86_64                                  2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        4/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         5/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                              6/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            7/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                   8/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                               9/26 
  Verifying  : python-s3transfer-0.1.13-1.el7.0.1.noarch                  10/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               11/26 
  Verifying  : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : 1:openssl-1.0.2k-19.el7.x86_64                             14/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          15/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             16/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            17/26 
  Verifying  : 1:openssl-libs-1.0.2k-19.el7.x86_64                        18/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         19/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              20/26 
  Verifying  : libtiff-4.0.3-32.el7.x86_64                                21/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       22/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          23/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-32.el7                                                 
  libwebp.x86_64 0:0.3.0-7.el7                                                  
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-19.el7                                                
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7                              
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7.0.1                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-19.el7                                           

Complete!</msg>
<status status="PASS" starttime="20200727 02:05:44.507" endtime="20200727 02:05:44.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:44.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:44.508" endtime="20200727 02:05:44.509"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.394" endtime="20200727 02:05:44.509"></status>
</kw>
<msg timestamp="20200727 02:05:44.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:16.394" endtime="20200727 02:05:44.509"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.393" endtime="20200727 02:05:44.510"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.393" endtime="20200727 02:05:44.510"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.392" endtime="20200727 02:05:44.510"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.238" endtime="20200727 02:05:44.510"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.237" endtime="20200727 02:05:44.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:44.516" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:44.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:44.519" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:05:44.514" endtime="20200727 02:05:44.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:44.520" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:05:44.520" endtime="20200727 02:05:44.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:44.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:44.520" endtime="20200727 02:05:44.521"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.513" endtime="20200727 02:05:44.521"></status>
</kw>
<msg timestamp="20200727 02:05:44.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:44.513" endtime="20200727 02:05:44.521"></status>
</kw>
<msg timestamp="20200727 02:05:44.522" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:05:44.513" endtime="20200727 02:05:44.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:05:44.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:05:44.522" endtime="20200727 02:05:44.523"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:44.528" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:44.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:44.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:44.525" endtime="20200727 02:05:44.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:44.540" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:44.539" endtime="20200727 02:05:44.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:44.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:44.541" endtime="20200727 02:05:44.541"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.525" endtime="20200727 02:05:44.542"></status>
</kw>
<msg timestamp="20200727 02:05:44.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:44.525" endtime="20200727 02:05:44.542"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.524" endtime="20200727 02:05:44.542"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.523" endtime="20200727 02:05:44.542"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.512" endtime="20200727 02:05:44.542"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.512" endtime="20200727 02:05:44.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:44.548" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:47.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:47.285" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:44.545" endtime="20200727 02:05:47.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:47.286" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cda1c072a3e34b7556efc1a4cefa964cbbcea512efd5dad9bb491e81405f4a4d</msg>
<status status="PASS" starttime="20200727 02:05:47.286" endtime="20200727 02:05:47.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:47.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:47.287" endtime="20200727 02:05:47.287"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.545" endtime="20200727 02:05:47.288"></status>
</kw>
<msg timestamp="20200727 02:05:47.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:44.544" endtime="20200727 02:05:47.288"></status>
</kw>
<msg timestamp="20200727 02:05:47.288" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:05:44.544" endtime="20200727 02:05:47.288"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200727 02:05:47.289" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200727 02:05:47.288" endtime="20200727 02:05:47.289"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200727 02:05:47.290" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200727 02:05:47.289" endtime="20200727 02:05:47.290"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200727 02:05:47.290" level="INFO">${secret} = ['cda1c072a3e34b7556efc1a4cefa964cbbcea512efd5dad9bb491e81405f4a4d']</msg>
<status status="PASS" starttime="20200727 02:05:47.290" endtime="20200727 02:05:47.290"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200727 02:05:47.291" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:05:47.291" endtime="20200727 02:05:47.291"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200727 02:05:47.292" level="INFO">${secret} = cda1c072a3e34b7556efc1a4cefa964cbbcea512efd5dad9bb491e81405f4a4d</msg>
<status status="PASS" starttime="20200727 02:05:47.291" endtime="20200727 02:05:47.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:47.295" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:47.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:47.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:47.294" endtime="20200727 02:05:47.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:47.616" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:47.616" endtime="20200727 02:05:47.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:47.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:47.617" endtime="20200727 02:05:47.617"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:47.293" endtime="20200727 02:05:47.617"></status>
</kw>
<msg timestamp="20200727 02:05:47.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:47.293" endtime="20200727 02:05:47.618"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:47.292" endtime="20200727 02:05:47.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:47.623" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:47.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:47.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:47.620" endtime="20200727 02:05:47.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:47.925" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:47.924" endtime="20200727 02:05:47.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:47.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:47.925" endtime="20200727 02:05:47.926"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:47.619" endtime="20200727 02:05:47.926"></status>
</kw>
<msg timestamp="20200727 02:05:47.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:47.619" endtime="20200727 02:05:47.926"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:47.618" endtime="20200727 02:05:47.927"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:47.930" level="INFO">Running command 'aws configure set aws_secret_access_key cda1c072a3e34b7556efc1a4cefa964cbbcea512efd5dad9bb491e81405f4a4d 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:48.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:48.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:47.929" endtime="20200727 02:05:48.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:48.231" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:48.230" endtime="20200727 02:05:48.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:48.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:48.231" endtime="20200727 02:05:48.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:47.928" endtime="20200727 02:05:48.232"></status>
</kw>
<msg timestamp="20200727 02:05:48.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:47.927" endtime="20200727 02:05:48.232"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:47.927" endtime="20200727 02:05:48.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:48.236" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:48.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:48.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:48.234" endtime="20200727 02:05:48.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:48.556" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:48.556" endtime="20200727 02:05:48.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:48.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:48.557" endtime="20200727 02:05:48.557"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:48.234" endtime="20200727 02:05:48.558"></status>
</kw>
<msg timestamp="20200727 02:05:48.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:48.233" endtime="20200727 02:05:48.558"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:48.233" endtime="20200727 02:05:48.558"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.543" endtime="20200727 02:05:48.558"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.543" endtime="20200727 02:05:48.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:48.558" endtime="20200727 02:05:48.559"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.511" endtime="20200727 02:05:48.559"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:44.511" endtime="20200727 02:05:48.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 02:05:48.561" level="INFO">${postfix} = 60541</msg>
<status status="PASS" starttime="20200727 02:05:48.560" endtime="20200727 02:05:48.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200727 02:05:48.561" level="INFO">${bucket} = bucket-60541</msg>
<status status="PASS" starttime="20200727 02:05:48.561" endtime="20200727 02:05:48.561"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:48.567" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-60541 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:50.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:50.308" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-60541"
}</msg>
<status status="PASS" starttime="20200727 02:05:48.564" endtime="20200727 02:05:50.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:50.309" level="INFO">{
    "Location": "http://s3g:9878/bucket-60541"
}</msg>
<status status="PASS" starttime="20200727 02:05:50.308" endtime="20200727 02:05:50.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:50.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:50.309" endtime="20200727 02:05:50.310"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:48.563" endtime="20200727 02:05:50.310"></status>
</kw>
<msg timestamp="20200727 02:05:50.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:48.563" endtime="20200727 02:05:50.310"></status>
</kw>
<msg timestamp="20200727 02:05:50.311" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-60541"
}</msg>
<status status="PASS" starttime="20200727 02:05:48.562" endtime="20200727 02:05:50.311"></status>
</kw>
<msg timestamp="20200727 02:05:50.311" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-60541"
}</msg>
<status status="PASS" starttime="20200727 02:05:48.562" endtime="20200727 02:05:50.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:50.311" endtime="20200727 02:05:50.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:50.312" endtime="20200727 02:05:50.312"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:48.561" endtime="20200727 02:05:50.313"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:48.560" endtime="20200727 02:05:50.313"></status>
</kw>
<msg timestamp="20200727 02:05:50.313" level="INFO">${BUCKET} = bucket-60541</msg>
<status status="PASS" starttime="20200727 02:05:48.559" endtime="20200727 02:05:50.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200727 02:05:50.314" level="INFO">${BUCKET} = bucket-60541</msg>
<status status="PASS" starttime="20200727 02:05:50.313" endtime="20200727 02:05:50.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:50.314" endtime="20200727 02:05:50.314"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.237" endtime="20200727 02:05:50.314"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:16.237" endtime="20200727 02:05:50.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:50.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:50.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:50.867" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200727 02:05:50.316" endtime="20200727 02:05:50.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:50.868" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200727 02:05:50.867" endtime="20200727 02:05:50.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:50.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:50.868" endtime="20200727 02:05:50.869"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:50.316" endtime="20200727 02:05:50.869"></status>
</kw>
<msg timestamp="20200727 02:05:50.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:50.315" endtime="20200727 02:05:50.869"></status>
</kw>
<msg timestamp="20200727 02:05:50.869" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200727 02:05:50.315" endtime="20200727 02:05:50.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:50.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:51.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:51.379" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2020-07-27T02:05:50.233Z", 
            "Name": "bucket-60541"
        }, 
        {
            "CreationDate": "2020-07-27T02:05:50.727Z", 
...</msg>
<status status="PASS" starttime="20200727 02:05:50.871" endtime="20200727 02:05:51.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:51.380" level="INFO">{
    "Buckets": [
        {
            "CreationDate": "2020-07-27T02:05:50.233Z", 
            "Name": "bucket-60541"
        }, 
        {
            "CreationDate": "2020-07-27T02:05:50.727Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 02:05:51.379" endtime="20200727 02:05:51.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:51.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:51.380" endtime="20200727 02:05:51.381"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:50.870" endtime="20200727 02:05:51.381"></status>
</kw>
<msg timestamp="20200727 02:05:51.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:50.870" endtime="20200727 02:05:51.382"></status>
</kw>
<msg timestamp="20200727 02:05:51.382" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2020-07-27T02:05:50.233Z", 
            "Name": "bucket-60541"
        }, 
        {
            "CreationDate": "2020-07-27T02:05:50.727Z", 
...</msg>
<status status="PASS" starttime="20200727 02:05:50.870" endtime="20200727 02:05:51.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>bucket-test123</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:51.382" endtime="20200727 02:05:51.382"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:05:16.236" endtime="20200727 02:05:51.383" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
</arguments>
<assign>
<var>${testFilePath}</var>
</assign>
<msg timestamp="20200727 02:05:51.385" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20200727 02:05:51.385" endtime="20200727 02:05:51.385"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
</arguments>
<msg timestamp="20200727 02:05:51.387" level="INFO" html="yes">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200727 02:05:51.385" endtime="20200727 02:05:51.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:51.392" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:53.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:53.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:51.389" endtime="20200727 02:05:53.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:53.156" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:53.156" endtime="20200727 02:05:53.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:53.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:53.157" endtime="20200727 02:05:53.157"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:51.388" endtime="20200727 02:05:53.157"></status>
</kw>
<msg timestamp="20200727 02:05:53.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:51.388" endtime="20200727 02:05:53.158"></status>
</kw>
<msg timestamp="20200727 02:05:53.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:51.387" endtime="20200727 02:05:53.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:53.162" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:53.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:53.674" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 02:05:53.160" endtime="20200727 02:05:53.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:53.675" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17540
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 02:05:53.674" endtime="20200727 02:05:53.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:53.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:53.675" endtime="20200727 02:05:53.676"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:53.159" endtime="20200727 02:05:53.677"></status>
</kw>
<msg timestamp="20200727 02:05:53.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:53.159" endtime="20200727 02:05:53.677"></status>
</kw>
<msg timestamp="20200727 02:05:53.677" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 02:05:53.158" endtime="20200727 02:05:53.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:53.677" endtime="20200727 02:05:53.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:53.682" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:54.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:54.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:53.680" endtime="20200727 02:05:54.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:54.303" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:54.302" endtime="20200727 02:05:54.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:54.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:54.303" endtime="20200727 02:05:54.304"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:53.679" endtime="20200727 02:05:54.304"></status>
</kw>
<msg timestamp="20200727 02:05:54.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:53.679" endtime="20200727 02:05:54.304"></status>
</kw>
<msg timestamp="20200727 02:05:54.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:53.678" endtime="20200727 02:05:54.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:54.309" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:54.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:54.760" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 02:05:54.306" endtime="20200727 02:05:54.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:54.761" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17540
        }, 
        {
            "LastModified": "2020-07-27T02:05:54.163Z", 
            "ETag": "2020-07-27T02:05:54.163Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17540
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 02:05:54.761" endtime="20200727 02:05:54.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:54.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:54.762" endtime="20200727 02:05:54.762"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:54.306" endtime="20200727 02:05:54.762"></status>
</kw>
<msg timestamp="20200727 02:05:54.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:54.305" endtime="20200727 02:05:54.763"></status>
</kw>
<msg timestamp="20200727 02:05:54.763" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 02:05:54.305" endtime="20200727 02:05:54.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:54.763" endtime="20200727 02:05:54.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:54.768" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:55.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:55.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:54.765" endtime="20200727 02:05:55.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:55.382" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:55.381" endtime="20200727 02:05:55.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:55.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:55.382" endtime="20200727 02:05:55.383"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:54.765" endtime="20200727 02:05:55.383"></status>
</kw>
<msg timestamp="20200727 02:05:55.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:54.764" endtime="20200727 02:05:55.383"></status>
</kw>
<msg timestamp="20200727 02:05:55.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:54.764" endtime="20200727 02:05:55.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:55.389" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:55.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:55.841" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:55.241Z", 
            "ETag": "2020-07-27T02:05:55.241Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20200727 02:05:55.386" endtime="20200727 02:05:55.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:55.842" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:55.241Z", 
            "ETag": "2020-07-27T02:05:55.241Z", 
            "StorageClass": "STANDARD", 
            "Key": "//tmp5/tmp6/NOTICE.txt", 
            "Size": 17540
        }, 
        {
            "LastModified": "2020-07-27T02:05:53.098Z", 
            "ETag": "2020-07-27T02:05:53.098Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17540
        }, 
        {
            "LastModified": "2020-07-27T02:05:54.163Z", 
            "ETag": "2020-07-27T02:05:54.163Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17540
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 02:05:55.842" endtime="20200727 02:05:55.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:55.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:55.843" endtime="20200727 02:05:55.843"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:55.385" endtime="20200727 02:05:55.843"></status>
</kw>
<msg timestamp="20200727 02:05:55.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:55.384" endtime="20200727 02:05:55.844"></status>
</kw>
<msg timestamp="20200727 02:05:55.844" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T02:05:55.241Z", 
            "ETag": "2020-07-27T02:05:55.241Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20200727 02:05:55.384" endtime="20200727 02:05:55.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
</arguments>
<status status="PASS" starttime="20200727 02:05:55.844" endtime="20200727 02:05:55.844"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:05:51.384" endtime="20200727 02:05:55.845" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:55.850" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:56.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:56.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:55.848" endtime="20200727 02:05:56.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:56.156" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:56.155" endtime="20200727 02:05:56.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:56.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:56.156" endtime="20200727 02:05:56.157"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:55.848" endtime="20200727 02:05:56.157"></status>
</kw>
<msg timestamp="20200727 02:05:56.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:55.847" endtime="20200727 02:05:56.158"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:55.847" endtime="20200727 02:05:56.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:56.161" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:56.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:56.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:56.160" endtime="20200727 02:05:56.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:56.470" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:56.470" endtime="20200727 02:05:56.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:56.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:56.471" endtime="20200727 02:05:56.471"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:56.159" endtime="20200727 02:05:56.471"></status>
</kw>
<msg timestamp="20200727 02:05:56.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:56.159" endtime="20200727 02:05:56.472"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:56.158" endtime="20200727 02:05:56.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:56.476" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:56.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:56.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:56.474" endtime="20200727 02:05:56.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:56.784" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:56.783" endtime="20200727 02:05:56.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:56.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:56.784" endtime="20200727 02:05:56.785"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:56.473" endtime="20200727 02:05:56.785"></status>
</kw>
<msg timestamp="20200727 02:05:56.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:56.473" endtime="20200727 02:05:56.786"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:56.472" endtime="20200727 02:05:56.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:05:56.790" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:05:57.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:05:57.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:05:56.788" endtime="20200727 02:05:57.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:05:57.086" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:05:57.085" endtime="20200727 02:05:57.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:05:57.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:05:57.086" endtime="20200727 02:05:57.087"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:56.787" endtime="20200727 02:05:57.087"></status>
</kw>
<msg timestamp="20200727 02:05:57.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:05:56.787" endtime="20200727 02:05:57.087"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:56.786" endtime="20200727 02:05:57.087"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:55.846" endtime="20200727 02:05:57.087"></status>
</kw>
<status status="PASS" starttime="20200727 02:05:55.846" endtime="20200727 02:05:57.088"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${result}</var>
</assign>
<msg timestamp="20200727 02:05:57.090" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:06:02.376" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:06:02.376" level="INFO">${result} = 
An error occurred (500) when calling the CreateBucket operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20200727 02:05:57.088" endtime="20200727 02:06:02.376"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rc} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20200727 02:06:02.376" endtime="20200727 02:06:02.377"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:05:55.845" endtime="20200727 02:06:02.377" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 02:05:16.220" endtime="20200727 02:06:02.379"></status>
</suite>
<suite id="s1-s4" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s4-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
</arguments>
<status status="PASS" starttime="20200727 02:06:02.392" endtime="20200727 02:06:02.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
</arguments>
<kw name="Token Test in Secure Cluster">
<kw name="Get Token in Secure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token get &gt; /tmp/token.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:06:02.397" level="INFO">Running command 'ozone sh token get &gt; /tmp/token.txt'.</msg>
<msg timestamp="20200727 02:06:05.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:06:05.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:06:02.394" endtime="20200727 02:06:05.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:06:05.298" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:06:05.297" endtime="20200727 02:06:05.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:06:05.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:06:05.298" endtime="20200727 02:06:05.298"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:02.394" endtime="20200727 02:06:05.299"></status>
</kw>
<msg timestamp="20200727 02:06:05.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:06:02.394" endtime="20200727 02:06:05.299"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:02.393" endtime="20200727 02:06:05.299"></status>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<doc>Fails if the specified directory is empty.</doc>
<arguments>
<arg>/tmp/token.txt</arg>
</arguments>
<msg timestamp="20200727 02:06:05.300" level="INFO" html="yes">File '&lt;a href="file:///tmp/token.txt"&gt;/tmp/token.txt&lt;/a&gt;' contains 505 bytes.</msg>
<status status="PASS" starttime="20200727 02:06:05.299" endtime="20200727 02:06:05.300"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:02.393" endtime="20200727 02:06:05.300"></status>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token print</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:06:05.305" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:06:06.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:06:06.781" level="INFO">${output} = {
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMICulPC4LjiAtsaQuy5AAUgBWg0zOTQ3NTI3NzIxNDM5ehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "A8mQc2m1z/3L23E1WtJJohniZNv6s0eWWKr/scYjH...</msg>
<status status="PASS" starttime="20200727 02:06:05.303" endtime="20200727 02:06:06.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:06:06.784" level="INFO">{
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMICulPC4LjiAtsaQuy5AAUgBWg0zOTQ3NTI3NzIxNDM5ehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "A8mQc2m1z/3L23E1WtJJohniZNv6s0eWWKr/scYjHyl6hu/Y/su609cCyaQ24tLHEiPCB/Fg1UlSx4JRezyGhzZy8A6cCWV+WGch7QrP+rB/XITcD8S+6hJGJoOKH8EjtBjm0136J8SAE/FHSkOBBlc2xpsvAmPlujvlv1OOe02JVmN1QFSrdRKlQmuVigFYqYuWZGL0KndlToJjY9lfT6VzcBu2nqBoeUaJEI3UKUdAPbKIbKrqIdNHRAGe3m4atI4Mw306HS3O/fhLnMMnfowB9u7rra4efzovGDPALD1un9AlwbUXBx3LiVBkwVBKPr8wD6D+WU0QjtFjunEOVA==",
  "kind" : {
    "bytes" : "T3pvbmVUb2tlbg==",
    "length" : 10
  },
  "service" : {
    "bytes" : "MTcyLjI2LjAuNTo5ODYy",
    "length" : 15
  },
  "private" : false,
  "managed" : true
}</msg>
<status status="PASS" starttime="20200727 02:06:06.782" endtime="20200727 02:06:06.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:06:06.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:06:06.784" endtime="20200727 02:06:06.785"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:05.302" endtime="20200727 02:06:06.785"></status>
</kw>
<msg timestamp="20200727 02:06:06.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:06:05.301" endtime="20200727 02:06:06.785"></status>
</kw>
<msg timestamp="20200727 02:06:06.786" level="INFO">${output} = {
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMICulPC4LjiAtsaQuy5AAUgBWg0zOTQ3NTI3NzIxNDM5ehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "A8mQc2m1z/3L23E1WtJJohniZNv6s0eWWKr/scYjH...</msg>
<status status="PASS" starttime="20200727 02:06:05.301" endtime="20200727 02:06:06.786"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:06:06.786" level="INFO">Length is 694</msg>
<status status="PASS" starttime="20200727 02:06:06.786" endtime="20200727 02:06:06.786"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:05.300" endtime="20200727 02:06:06.786"></status>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token renew</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:06:06.790" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:06:09.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:06:09.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:06:06.788" endtime="20200727 02:06:09.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:06:09.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Token renewed successfully, expiry time: 1595901969567.</msg>
<status status="PASS" starttime="20200727 02:06:09.675" endtime="20200727 02:06:09.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:06:09.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:06:09.676" endtime="20200727 02:06:09.677"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:06.788" endtime="20200727 02:06:09.677"></status>
</kw>
<msg timestamp="20200727 02:06:09.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:06:06.787" endtime="20200727 02:06:09.677"></status>
</kw>
<msg timestamp="20200727 02:06:09.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:06:06.787" endtime="20200727 02:06:09.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
</arguments>
<status status="PASS" starttime="20200727 02:06:09.678" endtime="20200727 02:06:09.678"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:06.786" endtime="20200727 02:06:09.678"></status>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token cancel</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:06:09.683" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:06:12.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:06:12.460" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:06:09.680" endtime="20200727 02:06:12.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:06:12.461" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Token canceled successfully.</msg>
<status status="PASS" starttime="20200727 02:06:12.460" endtime="20200727 02:06:12.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:06:12.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:06:12.461" endtime="20200727 02:06:12.462"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:09.680" endtime="20200727 02:06:12.462"></status>
</kw>
<msg timestamp="20200727 02:06:12.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:06:09.679" endtime="20200727 02:06:12.462"></status>
</kw>
<msg timestamp="20200727 02:06:12.463" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:06:09.679" endtime="20200727 02:06:12.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
</arguments>
<status status="PASS" starttime="20200727 02:06:12.463" endtime="20200727 02:06:12.463"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:09.678" endtime="20200727 02:06:12.463"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:02.392" endtime="20200727 02:06:12.463"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:02.392" endtime="20200727 02:06:12.464"></status>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token print -t /asdf</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:06:12.467" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:06:13.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:06:13.698" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200727 02:06:12.465" endtime="20200727 02:06:13.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:06:13.700" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200727 02:06:13.699" endtime="20200727 02:06:13.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:06:13.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:06:13.700" endtime="20200727 02:06:13.701"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:12.465" endtime="20200727 02:06:13.701"></status>
</kw>
<msg timestamp="20200727 02:06:13.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:06:12.465" endtime="20200727 02:06:13.702"></status>
</kw>
<msg timestamp="20200727 02:06:13.702" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200727 02:06:12.464" endtime="20200727 02:06:13.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
</arguments>
<status status="PASS" starttime="20200727 02:06:13.702" endtime="20200727 02:06:13.703"></status>
</kw>
<status status="PASS" starttime="20200727 02:06:12.464" endtime="20200727 02:06:13.703"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:06:02.391" endtime="20200727 02:06:13.703" critical="yes"></status>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20200727 02:06:02.383" endtime="20200727 02:06:13.704"></status>
</suite>
<status status="PASS" starttime="20200727 02:02:46.333" endtime="20200727 02:06:13.708"></status>
</suite>
<statistics>
<total>
<stat pass="14" fail="0">Critical Tests</stat>
<stat pass="14" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" id="s1" name="ozonesecure-security">ozonesecure-security</stat>
<stat pass="2" fail="0" id="s1-s1" name="Bucket-Encryption">ozonesecure-security.Bucket-Encryption</stat>
<stat pass="8" fail="0" id="s1-s2" name="Ozone-Secure-Fs">ozonesecure-security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" id="s1-s3" name="Ozone-Secure-S3">ozonesecure-security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" id="s1-s4" name="Ozone-Secure-Token">ozonesecure-security.Ozone-Secure-Token</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
