<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:05:18.554" rpa="false">
<suite id="s1" name="hadoop32-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:18.619" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:21.672" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:05:21.672" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 01:05:18.615" endtime="20200727 01:05:21.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:21.673" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 01:05:21.672" endtime="20200727 01:05:21.673"></status>
</kw>
<msg timestamp="20200727 01:05:21.674" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 01:05:18.614" endtime="20200727 01:05:21.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:21.679" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:24.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:05:24.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:05:21.676" endtime="20200727 01:05:24.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:24.439" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:05:24.438" endtime="20200727 01:05:24.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:05:24.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:05:24.439" endtime="20200727 01:05:24.439"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:21.676" endtime="20200727 01:05:24.440"></status>
</kw>
<msg timestamp="20200727 01:05:24.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:05:21.675" endtime="20200727 01:05:24.440"></status>
</kw>
<msg timestamp="20200727 01:05:24.440" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:05:21.675" endtime="20200727 01:05:24.440"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:05:24.440" endtime="20200727 01:05:24.441"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:21.674" endtime="20200727 01:05:24.441"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:21.674" endtime="20200727 01:05:24.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:24.446" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:27.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:05:27.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:05:24.444" endtime="20200727 01:05:27.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:27.354" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:05:27.353" endtime="20200727 01:05:27.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:05:27.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:05:27.354" endtime="20200727 01:05:27.355"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:24.444" endtime="20200727 01:05:27.355"></status>
</kw>
<msg timestamp="20200727 01:05:27.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:05:24.443" endtime="20200727 01:05:27.355"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:24.442" endtime="20200727 01:05:27.355"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:24.442" endtime="20200727 01:05:27.355"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:24.441" endtime="20200727 01:05:27.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 01:05:27.356" endtime="20200727 01:05:27.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:27.360" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:30.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:05:30.227" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:05:27.030Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 01:05:27.358" endtime="20200727 01:05:30.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:30.228" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:05:27.030Z",
  "modificationTime" : "2020-07-27T01:05:27.030Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 01:05:30.228" endtime="20200727 01:05:30.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:05:30.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:05:30.228" endtime="20200727 01:05:30.229"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:27.358" endtime="20200727 01:05:30.229"></status>
</kw>
<msg timestamp="20200727 01:05:30.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:05:27.357" endtime="20200727 01:05:30.229"></status>
</kw>
<msg timestamp="20200727 01:05:30.230" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:05:27.030Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 01:05:27.356" endtime="20200727 01:05:30.230"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:05:30.230" endtime="20200727 01:05:30.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:30.234" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:36.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:05:36.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:05:30.232" endtime="20200727 01:05:36.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:36.391" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:05:36.390" endtime="20200727 01:05:36.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:05:36.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:05:36.391" endtime="20200727 01:05:36.392"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:30.231" endtime="20200727 01:05:36.392"></status>
</kw>
<msg timestamp="20200727 01:05:36.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:05:30.231" endtime="20200727 01:05:36.392"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:30.230" endtime="20200727 01:05:36.393"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:05:18.613" endtime="20200727 01:05:36.393" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:36.398" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:39.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:05:39.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:05:36.396" endtime="20200727 01:05:39.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:39.362" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:05:39.362" endtime="20200727 01:05:39.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:05:39.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:05:39.363" endtime="20200727 01:05:39.363"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:36.395" endtime="20200727 01:05:39.363"></status>
</kw>
<msg timestamp="20200727 01:05:39.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:05:36.395" endtime="20200727 01:05:39.364"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:36.394" endtime="20200727 01:05:39.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:05:39.367" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:05:42.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:05:42.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:05:39.365" endtime="20200727 01:05:42.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:05:42.233" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:05:42.232" endtime="20200727 01:05:42.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:05:42.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:05:42.233" endtime="20200727 01:05:42.233"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:39.365" endtime="20200727 01:05:42.234"></status>
</kw>
<msg timestamp="20200727 01:05:42.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:05:39.364" endtime="20200727 01:05:42.234"></status>
</kw>
<status status="PASS" starttime="20200727 01:05:39.364" endtime="20200727 01:05:42.234"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:05:36.393" endtime="20200727 01:05:42.234" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200727 01:05:18.555" endtime="20200727 01:05:42.235"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop32-createmrenv">hadoop32-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
