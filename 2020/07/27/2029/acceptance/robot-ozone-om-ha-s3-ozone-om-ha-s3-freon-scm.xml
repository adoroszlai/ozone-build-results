<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:10:50.099" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:10:50.161" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:10:58.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:10:58.467" level="INFO">${output} = 2020-07-27 01:10:51,460 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:10:51,637 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:10:50.157" endtime="20200727 01:10:58.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:10:58.468" level="INFO">2020-07-27 01:10:51,460 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:10:51,637 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:10:51,637 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:10:52,808 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 01:10:52,810 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 01:10:52,810 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 01:10:52,810 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-27 01:10:52,810 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 01:10:52,810 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 01:10:52,810 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 01:10:52,813 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 01:10:52,821 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:10:52,896 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-36597, with hadoop as owner.
2020-07-27 01:10:52,971 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36597/bucket-0-07489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:10:53,504 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:10:53,822 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,122
Average Time spent in bucket creation: 00:00:00,061
Average Time spent in key creation: 00:00:00,100
Average Time spent in key write: 00:00:00,556
Total bytes written: 10240
Total Execution time: 00:00:06,164
***************************************************</msg>
<status status="PASS" starttime="20200727 01:10:58.467" endtime="20200727 01:10:58.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:10:58.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:10:58.468" endtime="20200727 01:10:58.469"></status>
</kw>
<status status="PASS" starttime="20200727 01:10:50.157" endtime="20200727 01:10:58.469"></status>
</kw>
<msg timestamp="20200727 01:10:58.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:10:50.156" endtime="20200727 01:10:58.469"></status>
</kw>
<msg timestamp="20200727 01:10:58.470" level="INFO">${result} = 2020-07-27 01:10:51,460 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:10:51,637 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:10:50.155" endtime="20200727 01:10:58.470"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:10:58.470" endtime="20200727 01:10:58.471"></status>
</kw>
<status status="PASS" starttime="20200727 01:10:58.470" endtime="20200727 01:10:58.471"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:10:50.154" endtime="20200727 01:10:58.471" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:10:58.477" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:11:04.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:11:04.015" level="INFO">${output} = 2020-07-27 01:10:59,816 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:00,088 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:10:58.474" endtime="20200727 01:11:04.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:11:04.017" level="INFO">2020-07-27 01:10:59,816 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:00,088 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:11:00,088 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:11:00,259 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wrvwumqinv
2020-07-27 01:11:00,275 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:01,279 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:01,440 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-27 01:11:01,497 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:11:02,009 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:11:02,279 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:03,280 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 01:11:03,658 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1342.714076, max=1342.714076, mean=1342.714076, stddev=0.0, median=1342.714076, p75=1342.714076, p95=1342.714076, p98=1342.714076, p99=1342.714076, p999=1342.714076, mean_rate=0.4688124285280216, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 01:11:03,662 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-27 01:11:03,666 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 01:11:03,666 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 01:11:04.015" endtime="20200727 01:11:04.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:11:04.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:11:04.018" endtime="20200727 01:11:04.018"></status>
</kw>
<status status="PASS" starttime="20200727 01:10:58.474" endtime="20200727 01:11:04.019"></status>
</kw>
<msg timestamp="20200727 01:11:04.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:10:58.474" endtime="20200727 01:11:04.019"></status>
</kw>
<msg timestamp="20200727 01:11:04.019" level="INFO">${result} = 2020-07-27 01:10:59,816 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:00,088 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:10:58.473" endtime="20200727 01:11:04.019"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:11:04.020" endtime="20200727 01:11:04.020"></status>
</kw>
<status status="PASS" starttime="20200727 01:11:04.019" endtime="20200727 01:11:04.020"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:10:58.472" endtime="20200727 01:11:04.020" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:11:04.025" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:11:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:11:08.015" level="INFO">${output} = 2020-07-27 01:11:05,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:05,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:11:04.023" endtime="20200727 01:11:08.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:11:08.017" level="INFO">2020-07-27 01:11:05,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:05,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:11:05,636 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:11:05,813 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mawsc4faxf
2020-07-27 01:11:05,834 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:06,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:07,852 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 01:11:07,974 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=91.105512, max=91.105512, mean=91.105512, stddev=0.0, median=91.105512, p75=91.105512, p95=91.105512, p98=91.105512, p99=91.105512, p999=91.105512, mean_rate=0.8903145951550789, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 01:11:07,974 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 01:11:07,975 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 01:11:07,975 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 01:11:08.016" endtime="20200727 01:11:08.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:11:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:11:08.017" endtime="20200727 01:11:08.017"></status>
</kw>
<status status="PASS" starttime="20200727 01:11:04.022" endtime="20200727 01:11:08.018"></status>
</kw>
<msg timestamp="20200727 01:11:08.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:11:04.022" endtime="20200727 01:11:08.018"></status>
</kw>
<msg timestamp="20200727 01:11:08.018" level="INFO">${result} = 2020-07-27 01:11:05,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:05,636 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:11:04.022" endtime="20200727 01:11:08.018"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:11:08.019" endtime="20200727 01:11:08.019"></status>
</kw>
<status status="PASS" starttime="20200727 01:11:08.018" endtime="20200727 01:11:08.019"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:11:04.021" endtime="20200727 01:11:08.020" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:11:08.024" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:11:11.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:11:11.832" level="INFO">${output} = 2020-07-27 01:11:09,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:09,472 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:11:08.022" endtime="20200727 01:11:11.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:11:11.833" level="INFO">2020-07-27 01:11:09,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:09,472 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:11:09,472 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:11:09,619 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1ws2gqnxtd
2020-07-27 01:11:09,630 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:10,636 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:11:11,638 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 01:11:11,797 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.43111, max=24.43111, mean=24.43111, stddev=0.0, median=24.43111, p75=24.43111, p95=24.43111, p98=24.43111, p99=24.43111, p999=24.43111, mean_rate=0.8480032726685021, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 01:11:11,801 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 01:11:11,807 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 01:11:11,807 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 01:11:11.832" endtime="20200727 01:11:11.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:11:11.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:11:11.833" endtime="20200727 01:11:11.834"></status>
</kw>
<status status="PASS" starttime="20200727 01:11:08.022" endtime="20200727 01:11:11.834"></status>
</kw>
<msg timestamp="20200727 01:11:11.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:11:08.022" endtime="20200727 01:11:11.834"></status>
</kw>
<msg timestamp="20200727 01:11:11.835" level="INFO">${result} = 2020-07-27 01:11:09,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:11:09,472 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:11:08.021" endtime="20200727 01:11:11.835"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:11:11.835" endtime="20200727 01:11:11.836"></status>
</kw>
<status status="PASS" starttime="20200727 01:11:11.835" endtime="20200727 01:11:11.836"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:11:08.020" endtime="20200727 01:11:11.836" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 01:10:50.127" endtime="20200727 01:11:11.838"></status>
</suite>
<status status="PASS" starttime="20200727 01:10:50.100" endtime="20200727 01:11:11.842"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
