<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:02:19.351" rpa="false">
<suite id="s1" name="hadoop31-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:19.408" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:21.381" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:02:21.381" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 01:02:19.403" endtime="20200727 01:02:21.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:21.383" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 01:02:21.382" endtime="20200727 01:02:21.383"></status>
</kw>
<msg timestamp="20200727 01:02:21.383" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 01:02:19.403" endtime="20200727 01:02:21.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:21.389" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:23.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:02:23.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:02:21.386" endtime="20200727 01:02:23.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:23.050" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:02:23.050" endtime="20200727 01:02:23.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:02:23.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:02:23.051" endtime="20200727 01:02:23.051"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:21.385" endtime="20200727 01:02:23.051"></status>
</kw>
<msg timestamp="20200727 01:02:23.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:02:21.385" endtime="20200727 01:02:23.052"></status>
</kw>
<msg timestamp="20200727 01:02:23.052" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:02:21.384" endtime="20200727 01:02:23.052"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:02:23.052" endtime="20200727 01:02:23.053"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:21.384" endtime="20200727 01:02:23.053"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:21.383" endtime="20200727 01:02:23.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:23.058" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:24.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:02:24.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:02:23.056" endtime="20200727 01:02:24.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:24.799" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:02:24.799" endtime="20200727 01:02:24.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:02:24.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:02:24.799" endtime="20200727 01:02:24.800"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:23.055" endtime="20200727 01:02:24.800"></status>
</kw>
<msg timestamp="20200727 01:02:24.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:02:23.054" endtime="20200727 01:02:24.801"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:23.054" endtime="20200727 01:02:24.801"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:23.053" endtime="20200727 01:02:24.801"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:23.053" endtime="20200727 01:02:24.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 01:02:24.801" endtime="20200727 01:02:24.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:24.805" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:26.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:02:26.627" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:02:24.680Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 01:02:24.803" endtime="20200727 01:02:26.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:26.628" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:02:24.680Z",
  "modificationTime" : "2020-07-27T01:02:24.680Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 01:02:26.628" endtime="20200727 01:02:26.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:02:26.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:02:26.629" endtime="20200727 01:02:26.629"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:24.803" endtime="20200727 01:02:26.629"></status>
</kw>
<msg timestamp="20200727 01:02:26.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:02:24.802" endtime="20200727 01:02:26.630"></status>
</kw>
<msg timestamp="20200727 01:02:26.630" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:02:24.680Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 01:02:24.802" endtime="20200727 01:02:26.630"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:02:26.630" endtime="20200727 01:02:26.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:26.635" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:31.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:02:31.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:02:26.632" endtime="20200727 01:02:31.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:31.088" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:02:31.087" endtime="20200727 01:02:31.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:02:31.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:02:31.088" endtime="20200727 01:02:31.089"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:26.631" endtime="20200727 01:02:31.089"></status>
</kw>
<msg timestamp="20200727 01:02:31.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:02:26.631" endtime="20200727 01:02:31.089"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:26.631" endtime="20200727 01:02:31.090"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:02:19.402" endtime="20200727 01:02:31.090" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:31.096" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:33.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:02:33.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:02:31.094" endtime="20200727 01:02:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:33.236" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:02:33.235" endtime="20200727 01:02:33.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:02:33.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:02:33.236" endtime="20200727 01:02:33.236"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:31.093" endtime="20200727 01:02:33.237"></status>
</kw>
<msg timestamp="20200727 01:02:33.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:02:31.093" endtime="20200727 01:02:33.237"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:31.092" endtime="20200727 01:02:33.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:02:33.241" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:02:35.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:02:35.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:02:33.238" endtime="20200727 01:02:35.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:02:35.342" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:02:35.341" endtime="20200727 01:02:35.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:02:35.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:02:35.342" endtime="20200727 01:02:35.343"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:33.238" endtime="20200727 01:02:35.343"></status>
</kw>
<msg timestamp="20200727 01:02:35.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:02:33.238" endtime="20200727 01:02:35.343"></status>
</kw>
<status status="PASS" starttime="20200727 01:02:33.237" endtime="20200727 01:02:35.344"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:02:31.091" endtime="20200727 01:02:35.344" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200727 01:02:19.352" endtime="20200727 01:02:35.346"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop31-createmrenv">hadoop31-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
