<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:42:41.247" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:41.309" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:49.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:49.321" level="INFO">${output} = 2020-07-27 01:42:42,645 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:42,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:41.304" endtime="20200727 01:42:49.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:49.322" level="INFO">2020-07-27 01:42:42,645 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:42,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:42:42,758 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:42:43,770 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 01:42:43,771 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 01:42:43,771 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 01:42:43,771 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-27 01:42:43,771 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 01:42:43,771 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 01:42:43,771 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 01:42:43,773 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 01:42:43,780 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:42:43,821 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-36431, with hadoop as owner.
2020-07-27 01:42:43,876 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36431/bucket-0-86974, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:42:44,427 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:42:44,785 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,085
Average Time spent in bucket creation: 00:00:00,018
Average Time spent in key creation: 00:00:00,083
Average Time spent in key write: 00:00:00,636
Total bytes written: 10240
Total Execution time: 00:00:06,016
***************************************************</msg>
<status status="PASS" starttime="20200727 01:42:49.322" endtime="20200727 01:42:49.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:49.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:49.323" endtime="20200727 01:42:49.323"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:41.304" endtime="20200727 01:42:49.324"></status>
</kw>
<msg timestamp="20200727 01:42:49.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:41.304" endtime="20200727 01:42:49.324"></status>
</kw>
<msg timestamp="20200727 01:42:49.324" level="INFO">${result} = 2020-07-27 01:42:42,645 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:42,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:41.303" endtime="20200727 01:42:49.324"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:49.325" endtime="20200727 01:42:49.325"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:49.324" endtime="20200727 01:42:49.325"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:42:41.302" endtime="20200727 01:42:49.326" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:49.331" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:54.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:54.511" level="INFO">${output} = 2020-07-27 01:42:50,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:50,782 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:49.329" endtime="20200727 01:42:54.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:54.513" level="INFO">2020-07-27 01:42:50,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:50,782 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:42:50,782 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:42:50,931 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xsin7vafng
2020-07-27 01:42:50,943 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:42:51,944 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:42:51,982 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:42:52,561 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:42:52,944 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:42:53,945 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 01:42:54,175 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1316.942046, max=1316.942046, mean=1316.942046, stddev=0.0, median=1316.942046, p75=1316.942046, p95=1316.942046, p98=1316.942046, p99=1316.942046, p999=1316.942046, mean_rate=0.46514202846708286, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 01:42:54,176 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-27 01:42:54,181 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 01:42:54,181 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 01:42:54.512" endtime="20200727 01:42:54.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:54.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:54.514" endtime="20200727 01:42:54.514"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:49.328" endtime="20200727 01:42:54.515"></status>
</kw>
<msg timestamp="20200727 01:42:54.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:49.328" endtime="20200727 01:42:54.515"></status>
</kw>
<msg timestamp="20200727 01:42:54.515" level="INFO">${result} = 2020-07-27 01:42:50,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:50,782 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:49.327" endtime="20200727 01:42:54.515"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:54.516" endtime="20200727 01:42:54.516"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:54.515" endtime="20200727 01:42:54.516"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:42:49.327" endtime="20200727 01:42:54.517" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:54.521" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:42:58.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:42:58.317" level="INFO">${output} = 2020-07-27 01:42:55,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:55,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:54.519" endtime="20200727 01:42:58.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:42:58.318" level="INFO">2020-07-27 01:42:55,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:55,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:42:55,920 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:42:56,109 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6nztn53pck
2020-07-27 01:42:56,135 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:42:57,138 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:42:58,140 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 01:42:58,262 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=74.585825, max=74.585825, mean=74.585825, stddev=0.0, median=74.585825, p75=74.585825, p95=74.585825, p98=74.585825, p99=74.585825, p999=74.585825, mean_rate=0.8199574218905629, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 01:42:58,269 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 01:42:58,270 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 01:42:58,270 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 01:42:58.317" endtime="20200727 01:42:58.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:42:58.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:42:58.318" endtime="20200727 01:42:58.319"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:54.519" endtime="20200727 01:42:58.319"></status>
</kw>
<msg timestamp="20200727 01:42:58.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:54.519" endtime="20200727 01:42:58.320"></status>
</kw>
<msg timestamp="20200727 01:42:58.320" level="INFO">${result} = 2020-07-27 01:42:55,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:55,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:54.518" endtime="20200727 01:42:58.320"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:42:58.321" endtime="20200727 01:42:58.321"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:58.320" endtime="20200727 01:42:58.321"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:42:54.517" endtime="20200727 01:42:58.322" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:42:58.329" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:43:02.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:43:02.040" level="INFO">${output} = 2020-07-27 01:42:59,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:59,709 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:58.325" endtime="20200727 01:43:02.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:43:02.041" level="INFO">2020-07-27 01:42:59,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:59,709 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:42:59,710 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:42:59,828 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hmotltcuun
2020-07-27 01:42:59,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:43:00,864 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 01:43:01,866 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 01:43:01,978 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=33.720647, max=33.720647, mean=33.720647, stddev=0.0, median=33.720647, p75=33.720647, p95=33.720647, p98=33.720647, p99=33.720647, p999=33.720647, mean_rate=0.8711281660041416, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 01:43:01,985 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 01:43:01,985 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 01:43:01,985 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 01:43:02.040" endtime="20200727 01:43:02.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:43:02.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:43:02.041" endtime="20200727 01:43:02.042"></status>
</kw>
<status status="PASS" starttime="20200727 01:42:58.325" endtime="20200727 01:43:02.042"></status>
</kw>
<msg timestamp="20200727 01:43:02.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:42:58.324" endtime="20200727 01:43:02.043"></status>
</kw>
<msg timestamp="20200727 01:43:02.043" level="INFO">${result} = 2020-07-27 01:42:59,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:42:59,709 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:42:58.324" endtime="20200727 01:43:02.043"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:43:02.044" endtime="20200727 01:43:02.044"></status>
</kw>
<status status="PASS" starttime="20200727 01:43:02.043" endtime="20200727 01:43:02.044"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:42:58.323" endtime="20200727 01:43:02.044" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 01:42:41.276" endtime="20200727 01:43:02.046"></status>
</suite>
<status status="PASS" starttime="20200727 01:42:41.248" endtime="20200727 01:43:02.049"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
