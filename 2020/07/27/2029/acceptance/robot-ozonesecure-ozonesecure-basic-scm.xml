<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:53:00.332" rpa="false">
<suite id="s1" name="ozonesecure-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:53:00.404" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:53:00.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:53:00.405" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:53:00.399" endtime="20200727 01:53:00.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.406" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:53:00.406" endtime="20200727 01:53:00.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:53:00.406" endtime="20200727 01:53:00.407"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.399" endtime="20200727 01:53:00.407"></status>
</kw>
<msg timestamp="20200727 01:53:00.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:53:00.398" endtime="20200727 01:53:00.408"></status>
</kw>
<msg timestamp="20200727 01:53:00.408" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:53:00.398" endtime="20200727 01:53:00.408"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:53:00.413" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:53:00.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:53:00.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:53:00.410" endtime="20200727 01:53:00.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.423" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:53:00.423" endtime="20200727 01:53:00.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:53:00.423" endtime="20200727 01:53:00.424"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.409" endtime="20200727 01:53:00.424"></status>
</kw>
<msg timestamp="20200727 01:53:00.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:53:00.409" endtime="20200727 01:53:00.425"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.408" endtime="20200727 01:53:00.425"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.408" endtime="20200727 01:53:00.425"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.397" endtime="20200727 01:53:00.425"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.397" endtime="20200727 01:53:00.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:53:00.429" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:53:00.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:53:00.540" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20200727 01:53:00.427" endtime="20200727 01:53:00.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.542" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 01:53:00 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCJap3/VmoxLPIHZDkd1zzmLe7sf2ydQeYiAc3w3RiDIi7hbp1zwTpsoro5RZMhl2eQsN5RuZmMqaVGYBmgHD5gJ8X
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595850780533&amp;s=94ls1Bj78rzWDi4MIrcu5gHicLfL9YvhtsxI/OToFdY="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 00:48:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200727 01:53:00.541" endtime="20200727 01:53:00.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:53:00.542" endtime="20200727 01:53:00.543"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.426" endtime="20200727 01:53:00.543"></status>
</kw>
<msg timestamp="20200727 01:53:00.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:53:00.426" endtime="20200727 01:53:00.543"></status>
</kw>
<msg timestamp="20200727 01:53:00.543" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20200727 01:53:00.425" endtime="20200727 01:53:00.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200727 01:53:00.544" endtime="20200727 01:53:00.544"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:53:00.396" endtime="20200727 01:53:00.544" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:53:00.551" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:53:00.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:53:00.554" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:53:00.548" endtime="20200727 01:53:00.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.555" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:53:00.555" endtime="20200727 01:53:00.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:53:00.555" endtime="20200727 01:53:00.556"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.548" endtime="20200727 01:53:00.556"></status>
</kw>
<msg timestamp="20200727 01:53:00.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:53:00.548" endtime="20200727 01:53:00.557"></status>
</kw>
<msg timestamp="20200727 01:53:00.557" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:53:00.547" endtime="20200727 01:53:00.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:53:00.558" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:53:00.557" endtime="20200727 01:53:00.558"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:53:00.562" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:53:00.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:53:00.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:53:00.560" endtime="20200727 01:53:00.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.573" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:53:00.572" endtime="20200727 01:53:00.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:53:00.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:53:00.573" endtime="20200727 01:53:00.573"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.560" endtime="20200727 01:53:00.574"></status>
</kw>
<msg timestamp="20200727 01:53:00.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:53:00.559" endtime="20200727 01:53:00.574"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.559" endtime="20200727 01:53:00.574"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.558" endtime="20200727 01:53:00.574"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.547" endtime="20200727 01:53:00.574"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.546" endtime="20200727 01:53:00.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:53:00.578" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:14.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:14.455" level="INFO">${output} = 2020-07-27 01:53:01,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:53:02,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:53:00.576" endtime="20200727 01:54:14.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:14.457" level="INFO">2020-07-27 01:53:01,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:53:02,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:53:02,135 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 01:53:04,579 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 01:53:04,579 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-27 01:53:04,580 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-27 01:53:04,580 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-27 01:53:04,580 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 01:53:04,580 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 01:53:04,580 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-27 01:53:04,588 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-27 01:53:04,590 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 01:53:04,596 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-27 01:53:04,650 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-26968, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 01:53:04,880 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-51520, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 01:53:04,887 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-72106, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 01:53:04,891 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-36360, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 01:53:04,897 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-83192, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 01:53:04,910 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26968/bucket-0-66956, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:04,998 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51520/bucket-0-00567, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,021 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72106/bucket-0-71362, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,038 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36360/bucket-0-06174, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,044 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-83192/bucket-0-09141, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,056 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26968/bucket-1-41556, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,060 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51520/bucket-1-27092, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,075 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72106/bucket-1-46556, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,087 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36360/bucket-1-20084, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,102 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-83192/bucket-1-77462, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,122 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26968/bucket-2-02437, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,137 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51520/bucket-2-93400, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,146 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72106/bucket-2-29587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,162 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36360/bucket-2-37327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,167 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-83192/bucket-2-43078, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,175 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26968/bucket-3-31510, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,180 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51520/bucket-3-75186, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,188 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72106/bucket-3-59231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,196 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36360/bucket-3-46608, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,202 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-83192/bucket-3-27796, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,205 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-26968/bucket-4-48781, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,210 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51520/bucket-4-90065, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,229 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72106/bucket-4-16671, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,238 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36360/bucket-4-18176, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,242 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-83192/bucket-4-29102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:53:05,607 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-27 01:53:06,171 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:53:06,607 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 01:53:07,608 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 01:53:08,608 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 01:53:09,609 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-07-27 01:53:10,609 [Thread-8] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-07-27 01:53:11,611 [Thread-8] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-27 01:53:12,611 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-27 01:53:13,612 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-27 01:53:14,613 [Thread-8] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-07-27 01:53:15,613 [Thread-8] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-27 01:53:16,614 [Thread-8] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-27 01:53:17,614 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-27 01:53:18,615 [Thread-8] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-07-27 01:53:19,616 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-27 01:53:20,616 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-27 01:53:21,617 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-27 01:53:22,617 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-27 01:53:23,618 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-27 01:53:24,618 [Thread-8] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-27 01:53:25,619 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 01:53:26,619 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 01:53:27,620 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 01:53:28,620 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-07-27 01:53:29,621 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-07-27 01:53:30,621 [Thread-8] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-27 01:53:31,622 [Thread-8] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-27 01:53:32,622 [Thread-8] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-27 01:53:33,623 [Thread-8] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-07-27 01:53:34,624 [Thread-8] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-27 01:53:35,625 [Thread-8] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-27 01:53:36,625 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-07-27 01:53:37,626 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-07-27 01:53:38,626 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-07-27 01:53:39,627 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 01:53:40,627 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 01:53:41,628 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 01:53:42,628 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-27 01:53:43,629 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-27 01:53:44,629 [Thread-8] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-27 01:53:45,630 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-27 01:53:46,630 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-27 01:53:47,631 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-27 01:53:48,631 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-27 01:53:49,632 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-27 01:53:50,632 [Thread-8] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-27 01:53:51,633 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-27 01:53:52,633 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-27 01:53:53,638 [Thread-8] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-27 01:53:54,639 [Thread-8] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-07-27 01:53:55,639 [Thread-8] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-07-27 01:53:56,640 [Thread-8] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-27 01:53:57,640 [Thread-8] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-27 01:53:58,641 [Thread-8] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-27 01:53:59,641 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-27 01:54:00,642 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-27 01:54:01,642 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-27 01:54:02,643 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-27 01:54:03,643 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-27 01:54:04,644 [Thread-8] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-27 01:54:05,644 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-07-27 01:54:06,645 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-07-27 01:54:07,645 [Thread-8] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-07-27 01:54:08,646 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-07-27 01:54:09,646 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,279
Average Time spent in bucket creation: 00:00:00,228
Average Time spent in key creation: 00:00:03,328
Average Time spent in key write: 00:00:00,709
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:11,782
***************************************************</msg>
<status status="PASS" starttime="20200727 01:54:14.456" endtime="20200727 01:54:14.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:14.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:14.458" endtime="20200727 01:54:14.459"></status>
</kw>
<status status="PASS" starttime="20200727 01:53:00.575" endtime="20200727 01:54:14.460"></status>
</kw>
<msg timestamp="20200727 01:54:14.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:53:00.575" endtime="20200727 01:54:14.460"></status>
</kw>
<msg timestamp="20200727 01:54:14.461" level="INFO">${result} = 2020-07-27 01:53:01,891 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:53:02,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:53:00.575" endtime="20200727 01:54:14.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200727 01:54:14.462" endtime="20200727 01:54:14.462"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:14.461" endtime="20200727 01:54:14.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200727 01:54:14.462" endtime="20200727 01:54:14.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:53:00.545" endtime="20200727 01:54:14.463" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 01:53:00.365" endtime="20200727 01:54:14.465"></status>
</suite>
<suite id="s1-s2" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 01:54:14.482" level="INFO">${random} = 39610</msg>
<status status="PASS" starttime="20200727 01:54:14.482" endtime="20200727 01:54:14.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200727 01:54:14.484" level="INFO">${source} = 39610-source</msg>
<status status="PASS" starttime="20200727 01:54:14.483" endtime="20200727 01:54:14.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200727 01:54:14.485" level="INFO">${target} = 39610-target</msg>
<status status="PASS" starttime="20200727 01:54:14.484" endtime="20200727 01:54:14.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:14.491" level="INFO">Running command 'ozone sh volume create 39610-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:17.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:17.362" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:14.487" endtime="20200727 01:54:17.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:17.363" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:17.363" endtime="20200727 01:54:17.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:17.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:17.364" endtime="20200727 01:54:17.364"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:14.487" endtime="20200727 01:54:17.364"></status>
</kw>
<msg timestamp="20200727 01:54:17.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:14.486" endtime="20200727 01:54:17.365"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:14.486" endtime="20200727 01:54:17.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:17.369" level="INFO">Running command 'ozone sh volume create 39610-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:20.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:20.438" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:17.366" endtime="20200727 01:54:20.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:20.439" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:20.439" endtime="20200727 01:54:20.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:20.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:20.440" endtime="20200727 01:54:20.440"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:17.366" endtime="20200727 01:54:20.441"></status>
</kw>
<msg timestamp="20200727 01:54:20.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:17.366" endtime="20200727 01:54:20.441"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:17.365" endtime="20200727 01:54:20.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:20.447" level="INFO">Running command 'ozone sh bucket create 39610-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:23.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:23.326" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:20.444" endtime="20200727 01:54:23.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:23.327" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:23.326" endtime="20200727 01:54:23.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:23.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:23.327" endtime="20200727 01:54:23.328"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:20.443" endtime="20200727 01:54:23.328"></status>
</kw>
<msg timestamp="20200727 01:54:23.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:20.443" endtime="20200727 01:54:23.329"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:20.442" endtime="20200727 01:54:23.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:23.333" level="INFO">Running command 'ozone sh key put 39610-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:27.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:27.960" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:23.331" endtime="20200727 01:54:27.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:27.961" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:27.960" endtime="20200727 01:54:27.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:27.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:27.961" endtime="20200727 01:54:27.961"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:23.330" endtime="20200727 01:54:27.962"></status>
</kw>
<msg timestamp="20200727 01:54:27.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:23.330" endtime="20200727 01:54:27.962"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:23.329" endtime="20200727 01:54:27.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:27.966" level="INFO">Running command 'ozone sh bucket create 39610-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:30.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:30.850" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:27.964" endtime="20200727 01:54:30.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:30.851" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:30.851" endtime="20200727 01:54:30.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:30.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:30.851" endtime="20200727 01:54:30.852"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:27.964" endtime="20200727 01:54:30.852"></status>
</kw>
<msg timestamp="20200727 01:54:30.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:27.963" endtime="20200727 01:54:30.853"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:27.962" endtime="20200727 01:54:30.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:30.857" level="INFO">Running command 'ozone sh bucket link 39610-source/readable-bucket 39610-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:33.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:33.625" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:30.854" endtime="20200727 01:54:33.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:33.627" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:33.626" endtime="20200727 01:54:33.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:33.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:33.627" endtime="20200727 01:54:33.627"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:30.854" endtime="20200727 01:54:33.628"></status>
</kw>
<msg timestamp="20200727 01:54:33.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:30.854" endtime="20200727 01:54:33.628"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:30.853" endtime="20200727 01:54:33.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:33.631" level="INFO">Running command 'ozone sh bucket link 39610-source/readable-bucket 39610-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:36.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:36.435" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:33.630" endtime="20200727 01:54:36.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:36.436" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:36.436" endtime="20200727 01:54:36.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:36.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:36.437" endtime="20200727 01:54:36.437"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:33.629" endtime="20200727 01:54:36.438"></status>
</kw>
<msg timestamp="20200727 01:54:36.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:33.629" endtime="20200727 01:54:36.438"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:33.628" endtime="20200727 01:54:36.438"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:36.444" level="INFO">Running command 'ozone sh bucket link 39610-source/unreadable-bucket 39610-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:39.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:39.567" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:36.440" endtime="20200727 01:54:39.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:39.568" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:39.567" endtime="20200727 01:54:39.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:39.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:39.568" endtime="20200727 01:54:39.569"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:36.439" endtime="20200727 01:54:39.569"></status>
</kw>
<msg timestamp="20200727 01:54:39.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:36.439" endtime="20200727 01:54:39.570"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:36.438" endtime="20200727 01:54:39.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:39.576" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39610-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:42.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:42.928" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:39.571" endtime="20200727 01:54:42.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:42.929" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:54:42.928" endtime="20200727 01:54:42.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:42.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:42.929" endtime="20200727 01:54:42.930"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:39.571" endtime="20200727 01:54:42.930"></status>
</kw>
<msg timestamp="20200727 01:54:42.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:39.571" endtime="20200727 01:54:42.930"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:39.570" endtime="20200727 01:54:42.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:42.934" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 39610-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:45.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:45.688" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:42.932" endtime="20200727 01:54:45.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:45.690" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:54:45.689" endtime="20200727 01:54:45.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:45.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:45.690" endtime="20200727 01:54:45.690"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:42.931" endtime="20200727 01:54:45.691"></status>
</kw>
<msg timestamp="20200727 01:54:45.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:42.931" endtime="20200727 01:54:45.691"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:42.931" endtime="20200727 01:54:45.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:45.694" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 39610-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:48.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:48.571" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:45.693" endtime="20200727 01:54:48.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:48.572" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:54:48.571" endtime="20200727 01:54:48.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:48.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:48.572" endtime="20200727 01:54:48.573"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:45.692" endtime="20200727 01:54:48.573"></status>
</kw>
<msg timestamp="20200727 01:54:48.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:45.692" endtime="20200727 01:54:48.573"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:45.691" endtime="20200727 01:54:48.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:48.578" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39610-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:51.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:51.504" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:48.575" endtime="20200727 01:54:51.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:51.505" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:54:51.505" endtime="20200727 01:54:51.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:51.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:51.506" endtime="20200727 01:54:51.506"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:48.574" endtime="20200727 01:54:51.507"></status>
</kw>
<msg timestamp="20200727 01:54:51.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:48.574" endtime="20200727 01:54:51.507"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:48.574" endtime="20200727 01:54:51.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:51.511" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39610-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:54.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:54.381" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:51.509" endtime="20200727 01:54:54.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:54.382" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:54:54.381" endtime="20200727 01:54:54.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:54.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:54.382" endtime="20200727 01:54:54.383"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:51.508" endtime="20200727 01:54:54.383"></status>
</kw>
<msg timestamp="20200727 01:54:54.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:51.508" endtime="20200727 01:54:54.383"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:51.507" endtime="20200727 01:54:54.384"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:20.442" endtime="20200727 01:54:54.384"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:20.441" endtime="20200727 01:54:54.384"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:14.482" endtime="20200727 01:54:54.384"></status>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:54.390" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:54.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:54.392" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:54:54.388" endtime="20200727 01:54:54.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:54.393" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:54:54.393" endtime="20200727 01:54:54.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:54.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:54.394" endtime="20200727 01:54:54.394"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.387" endtime="20200727 01:54:54.395"></status>
</kw>
<msg timestamp="20200727 01:54:54.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:54.387" endtime="20200727 01:54:54.395"></status>
</kw>
<msg timestamp="20200727 01:54:54.395" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:54:54.386" endtime="20200727 01:54:54.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:54:54.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:54:54.395" endtime="20200727 01:54:54.397"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:54.403" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:54.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:54.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:54:54.399" endtime="20200727 01:54:54.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:54.433" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:54:54.432" endtime="20200727 01:54:54.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:54.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:54.433" endtime="20200727 01:54:54.434"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.399" endtime="20200727 01:54:54.434"></status>
</kw>
<msg timestamp="20200727 01:54:54.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:54.398" endtime="20200727 01:54:54.434"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.398" endtime="20200727 01:54:54.434"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.397" endtime="20200727 01:54:54.434"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.386" endtime="20200727 01:54:54.435"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.385" endtime="20200727 01:54:54.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:54.439" level="INFO">Running command 'ozone sh bucket link 39610-source/no-such-bucket 39610-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:54:57.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:54:57.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:54.437" endtime="20200727 01:54:57.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:54:57.237" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:54:57.236" endtime="20200727 01:54:57.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:54:57.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:54:57.237" endtime="20200727 01:54:57.238"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.436" endtime="20200727 01:54:57.238"></status>
</kw>
<msg timestamp="20200727 01:54:57.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:54:54.436" endtime="20200727 01:54:57.238"></status>
</kw>
<status status="PASS" starttime="20200727 01:54:54.435" endtime="20200727 01:54:57.238"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:54:57.241" level="INFO">Running command 'ozone sh key list 39610-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:00.191" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:55:00.191" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:57.239" endtime="20200727 01:55:00.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:00.192" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 01:55:00.192" endtime="20200727 01:55:00.192"></status>
</kw>
<msg timestamp="20200727 01:55:00.193" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:54:57.239" endtime="20200727 01:55:00.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:00.193" endtime="20200727 01:55:00.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:54:54.384" endtime="20200727 01:55:00.194" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:00.204" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:00.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:00.206" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:00.201" endtime="20200727 01:55:00.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:00.207" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:00.207" endtime="20200727 01:55:00.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:00.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:00.208" endtime="20200727 01:55:00.208"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.201" endtime="20200727 01:55:00.208"></status>
</kw>
<msg timestamp="20200727 01:55:00.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:00.200" endtime="20200727 01:55:00.208"></status>
</kw>
<msg timestamp="20200727 01:55:00.209" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:00.199" endtime="20200727 01:55:00.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:00.209" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:00.209" endtime="20200727 01:55:00.209"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:00.214" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:00.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:00.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:00.211" endtime="20200727 01:55:00.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:00.231" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:00.230" endtime="20200727 01:55:00.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:00.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:00.231" endtime="20200727 01:55:00.232"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.211" endtime="20200727 01:55:00.232"></status>
</kw>
<msg timestamp="20200727 01:55:00.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:00.211" endtime="20200727 01:55:00.232"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.210" endtime="20200727 01:55:00.232"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.210" endtime="20200727 01:55:00.232"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.198" endtime="20200727 01:55:00.233"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.198" endtime="20200727 01:55:00.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:00.237" level="INFO">Running command 'ozone sh bucket link 39610-source/bucket1 39610-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:03.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:03.026" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:00.235" endtime="20200727 01:55:03.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:03.027" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:03.026" endtime="20200727 01:55:03.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:03.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:03.027" endtime="20200727 01:55:03.028"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.234" endtime="20200727 01:55:03.028"></status>
</kw>
<msg timestamp="20200727 01:55:03.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:00.234" endtime="20200727 01:55:03.028"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:00.233" endtime="20200727 01:55:03.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:03.032" level="INFO">Running command 'ozone sh bucket create 39610-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:05.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:05.984" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:03.030" endtime="20200727 01:55:05.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:05.985" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:05.985" endtime="20200727 01:55:05.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:05.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:05.986" endtime="20200727 01:55:05.987"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:03.029" endtime="20200727 01:55:05.987"></status>
</kw>
<msg timestamp="20200727 01:55:05.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:03.029" endtime="20200727 01:55:05.987"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:03.029" endtime="20200727 01:55:05.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:05.991" level="INFO">Running command 'ozone sh key put 39610-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:10.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:10.882" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:05.989" endtime="20200727 01:55:10.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:10.884" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:10.883" endtime="20200727 01:55:10.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:10.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:10.884" endtime="20200727 01:55:10.884"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:05.989" endtime="20200727 01:55:10.885"></status>
</kw>
<msg timestamp="20200727 01:55:10.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:05.988" endtime="20200727 01:55:10.885"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:05.988" endtime="20200727 01:55:10.885"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:55:10.887" level="INFO">${postfix} = 85979</msg>
<status status="PASS" starttime="20200727 01:55:10.887" endtime="20200727 01:55:10.887"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:55:10.888" level="INFO">${tmpfile} = /tmp/tempkey-85979</msg>
<status status="PASS" starttime="20200727 01:55:10.887" endtime="20200727 01:55:10.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:10.891" level="INFO">Running command 'ozone sh key get -f 39610-target/link1/key1 /tmp/tempkey-85979 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:15.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:15.563" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:10.889" endtime="20200727 01:55:15.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.565" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:15.564" endtime="20200727 01:55:15.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:15.565" endtime="20200727 01:55:15.566"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:10.889" endtime="20200727 01:55:15.566"></status>
</kw>
<msg timestamp="20200727 01:55:15.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:10.888" endtime="20200727 01:55:15.566"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:10.888" endtime="20200727 01:55:15.567"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:55:15.569" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-85979 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:15.571" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:55:15.567" endtime="20200727 01:55:15.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:15.575" level="INFO">Running command 'rm -f /tmp/tempkey-85979 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:15.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:15.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:15.574" endtime="20200727 01:55:15.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.580" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:15.579" endtime="20200727 01:55:15.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:15.580" endtime="20200727 01:55:15.581"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.573" endtime="20200727 01:55:15.581"></status>
</kw>
<msg timestamp="20200727 01:55:15.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:15.573" endtime="20200727 01:55:15.581"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.572" endtime="20200727 01:55:15.581"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:55:15.582" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:55:15.582" endtime="20200727 01:55:15.582"></status>
</kw>
<msg timestamp="20200727 01:55:15.582" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:55:10.886" endtime="20200727 01:55:15.582"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:15.583" endtime="20200727 01:55:15.583"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:10.885" endtime="20200727 01:55:15.583"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:00.197" endtime="20200727 01:55:15.583" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:15.589" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:15.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:15.591" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:15.587" endtime="20200727 01:55:15.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.592" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:15.591" endtime="20200727 01:55:15.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:15.592" endtime="20200727 01:55:15.593"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.587" endtime="20200727 01:55:15.593"></status>
</kw>
<msg timestamp="20200727 01:55:15.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:15.586" endtime="20200727 01:55:15.594"></status>
</kw>
<msg timestamp="20200727 01:55:15.594" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:15.586" endtime="20200727 01:55:15.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:15.594" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:15.594" endtime="20200727 01:55:15.595"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:15.599" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:15.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:15.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:15.597" endtime="20200727 01:55:15.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.616" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:15.615" endtime="20200727 01:55:15.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:15.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:15.616" endtime="20200727 01:55:15.616"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.596" endtime="20200727 01:55:15.617"></status>
</kw>
<msg timestamp="20200727 01:55:15.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:15.596" endtime="20200727 01:55:15.617"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.595" endtime="20200727 01:55:15.617"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.595" endtime="20200727 01:55:15.617"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.585" endtime="20200727 01:55:15.617"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.585" endtime="20200727 01:55:15.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:15.621" level="INFO">Running command 'ozone sh key put 39610-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:20.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:20.345" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:15.619" endtime="20200727 01:55:20.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:20.346" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:20.345" endtime="20200727 01:55:20.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:20.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:20.346" endtime="20200727 01:55:20.347"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.619" endtime="20200727 01:55:20.348"></status>
</kw>
<msg timestamp="20200727 01:55:20.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:15.618" endtime="20200727 01:55:20.348"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:15.618" endtime="20200727 01:55:20.348"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:55:20.350" level="INFO">${postfix} = 83164</msg>
<status status="PASS" starttime="20200727 01:55:20.350" endtime="20200727 01:55:20.350"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:55:20.351" level="INFO">${tmpfile} = /tmp/tempkey-83164</msg>
<status status="PASS" starttime="20200727 01:55:20.350" endtime="20200727 01:55:20.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:20.355" level="INFO">Running command 'ozone sh key get -f 39610-source/bucket1/key2 /tmp/tempkey-83164 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:24.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:24.765" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:20.353" endtime="20200727 01:55:24.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.767" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:24.766" endtime="20200727 01:55:24.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:24.767" endtime="20200727 01:55:24.768"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:20.352" endtime="20200727 01:55:24.768"></status>
</kw>
<msg timestamp="20200727 01:55:24.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:20.352" endtime="20200727 01:55:24.769"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:20.351" endtime="20200727 01:55:24.769"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:55:24.771" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-83164 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:24.774" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:55:24.769" endtime="20200727 01:55:24.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:24.778" level="INFO">Running command 'rm -f /tmp/tempkey-83164 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:24.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:24.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:24.776" endtime="20200727 01:55:24.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.782" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:24.782" endtime="20200727 01:55:24.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:24.783" endtime="20200727 01:55:24.783"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.776" endtime="20200727 01:55:24.784"></status>
</kw>
<msg timestamp="20200727 01:55:24.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:24.775" endtime="20200727 01:55:24.784"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.775" endtime="20200727 01:55:24.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:55:24.785" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:55:24.784" endtime="20200727 01:55:24.785"></status>
</kw>
<msg timestamp="20200727 01:55:24.785" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:55:20.349" endtime="20200727 01:55:24.785"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:24.786" endtime="20200727 01:55:24.786"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:20.348" endtime="20200727 01:55:24.786"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:15.584" endtime="20200727 01:55:24.787" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:24.793" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:24.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:24.796" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:24.791" endtime="20200727 01:55:24.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.797" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:24.796" endtime="20200727 01:55:24.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:24.798" endtime="20200727 01:55:24.798"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.790" endtime="20200727 01:55:24.799"></status>
</kw>
<msg timestamp="20200727 01:55:24.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:24.790" endtime="20200727 01:55:24.799"></status>
</kw>
<msg timestamp="20200727 01:55:24.799" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:24.789" endtime="20200727 01:55:24.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:24.800" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:24.799" endtime="20200727 01:55:24.800"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:24.805" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:24.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:24.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:24.802" endtime="20200727 01:55:24.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.817" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:24.816" endtime="20200727 01:55:24.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:24.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:24.817" endtime="20200727 01:55:24.818"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.802" endtime="20200727 01:55:24.818"></status>
</kw>
<msg timestamp="20200727 01:55:24.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:24.801" endtime="20200727 01:55:24.818"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.801" endtime="20200727 01:55:24.818"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.800" endtime="20200727 01:55:24.819"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.789" endtime="20200727 01:55:24.819"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.788" endtime="20200727 01:55:24.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:24.823" level="INFO">Running command 'ozone sh key list 39610-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:27.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:27.992" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:55:24.821" endtime="20200727 01:55:27.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:27.993" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 01:55:27.992" endtime="20200727 01:55:27.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:27.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:27.993" endtime="20200727 01:55:27.994"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:24.820" endtime="20200727 01:55:27.994"></status>
</kw>
<msg timestamp="20200727 01:55:27.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:24.820" endtime="20200727 01:55:27.994"></status>
</kw>
<msg timestamp="20200727 01:55:27.994" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:55:24.819" endtime="20200727 01:55:27.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:27.999" level="INFO">Running command 'ozone sh key list 39610-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:31.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:31.402" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:55:27.996" endtime="20200727 01:55:31.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:31.403" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 01:55:31.402" endtime="20200727 01:55:31.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:31.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:31.403" endtime="20200727 01:55:31.404"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:27.996" endtime="20200727 01:55:31.404"></status>
</kw>
<msg timestamp="20200727 01:55:31.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:27.995" endtime="20200727 01:55:31.404"></status>
</kw>
<msg timestamp="20200727 01:55:31.405" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:55:27.995" endtime="20200727 01:55:31.405"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:31.405" endtime="20200727 01:55:31.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:31.406" endtime="20200727 01:55:31.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:31.406" endtime="20200727 01:55:31.407"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:24.787" endtime="20200727 01:55:31.407" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:31.415" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:31.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:31.417" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:31.412" endtime="20200727 01:55:31.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:31.418" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:31.417" endtime="20200727 01:55:31.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:31.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:31.418" endtime="20200727 01:55:31.419"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.411" endtime="20200727 01:55:31.419"></status>
</kw>
<msg timestamp="20200727 01:55:31.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:31.411" endtime="20200727 01:55:31.419"></status>
</kw>
<msg timestamp="20200727 01:55:31.419" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:31.411" endtime="20200727 01:55:31.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:31.420" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:31.419" endtime="20200727 01:55:31.420"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:31.425" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:31.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:31.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:31.423" endtime="20200727 01:55:31.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:31.436" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:31.436" endtime="20200727 01:55:31.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:31.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:31.437" endtime="20200727 01:55:31.437"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.421" endtime="20200727 01:55:31.438"></status>
</kw>
<msg timestamp="20200727 01:55:31.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:31.421" endtime="20200727 01:55:31.438"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.421" endtime="20200727 01:55:31.438"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.420" endtime="20200727 01:55:31.438"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.410" endtime="20200727 01:55:31.439"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.409" endtime="20200727 01:55:31.439"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:31.443" level="INFO">Running command 'ozone sh key delete 39610-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:34.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:34.333" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:31.440" endtime="20200727 01:55:34.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:34.334" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:55:34.333" endtime="20200727 01:55:34.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:34.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:34.334" endtime="20200727 01:55:34.335"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.440" endtime="20200727 01:55:34.335"></status>
</kw>
<msg timestamp="20200727 01:55:34.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:31.439" endtime="20200727 01:55:34.335"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:31.439" endtime="20200727 01:55:34.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:34.340" level="INFO">Running command 'ozone sh key list 39610-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:37.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:37.380" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 01:55:34.338" endtime="20200727 01:55:37.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:37.381" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 01:55:37.381" endtime="20200727 01:55:37.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:37.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:37.382" endtime="20200727 01:55:37.382"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:34.337" endtime="20200727 01:55:37.383"></status>
</kw>
<msg timestamp="20200727 01:55:37.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:34.336" endtime="20200727 01:55:37.383"></status>
</kw>
<msg timestamp="20200727 01:55:37.383" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20200727 01:55:34.336" endtime="20200727 01:55:37.383"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:37.383" endtime="20200727 01:55:37.384"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:31.408" endtime="20200727 01:55:37.384" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:37.390" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:37.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:37.392" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:37.388" endtime="20200727 01:55:37.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:37.393" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:37.392" endtime="20200727 01:55:37.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:37.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:37.393" endtime="20200727 01:55:37.394"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.387" endtime="20200727 01:55:37.394"></status>
</kw>
<msg timestamp="20200727 01:55:37.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:37.387" endtime="20200727 01:55:37.394"></status>
</kw>
<msg timestamp="20200727 01:55:37.395" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:37.386" endtime="20200727 01:55:37.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:37.395" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:37.395" endtime="20200727 01:55:37.395"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:37.400" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:37.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:37.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:37.398" endtime="20200727 01:55:37.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:37.419" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:37.418" endtime="20200727 01:55:37.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:37.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:37.419" endtime="20200727 01:55:37.419"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.397" endtime="20200727 01:55:37.420"></status>
</kw>
<msg timestamp="20200727 01:55:37.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:37.397" endtime="20200727 01:55:37.420"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.396" endtime="20200727 01:55:37.420"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.396" endtime="20200727 01:55:37.420"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.386" endtime="20200727 01:55:37.420"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.385" endtime="20200727 01:55:37.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:37.425" level="INFO">Running command 'ozone sh bucket list 39610-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:40.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:40.880" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:37.423" endtime="20200727 01:55:40.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:40.881" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:57.124Z",
  "modificationTime" : "2020-07-27T01:54:57.124Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:39.361Z",
  "modificationTime" : "2020-07-27T01:54:39.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:55:02.964Z",
  "modificationTime" : "2020-07-27T01:55:02.964Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:33.581Z",
  "modificationTime" : "2020-07-27T01:54:33.581Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:36.287Z",
  "modificationTime" : "2020-07-27T01:54:36.287Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" starttime="20200727 01:55:40.880" endtime="20200727 01:55:40.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:40.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:40.881" endtime="20200727 01:55:40.882"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:37.422" endtime="20200727 01:55:40.882"></status>
</kw>
<msg timestamp="20200727 01:55:40.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:37.421" endtime="20200727 01:55:40.882"></status>
</kw>
<msg timestamp="20200727 01:55:40.883" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:37.421" endtime="20200727 01:55:40.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:40.883" endtime="20200727 01:55:40.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:40.883" endtime="20200727 01:55:40.884"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:37.385" endtime="20200727 01:55:40.884" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:40.890" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:40.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:40.892" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:40.888" endtime="20200727 01:55:40.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:40.893" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:40.893" endtime="20200727 01:55:40.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:40.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:40.893" endtime="20200727 01:55:40.894"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.887" endtime="20200727 01:55:40.894"></status>
</kw>
<msg timestamp="20200727 01:55:40.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:40.887" endtime="20200727 01:55:40.894"></status>
</kw>
<msg timestamp="20200727 01:55:40.895" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:40.887" endtime="20200727 01:55:40.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:40.895" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:40.895" endtime="20200727 01:55:40.895"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:40.899" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:40.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:40.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:40.897" endtime="20200727 01:55:40.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:40.916" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:40.916" endtime="20200727 01:55:40.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:40.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:40.917" endtime="20200727 01:55:40.917"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.897" endtime="20200727 01:55:40.917"></status>
</kw>
<msg timestamp="20200727 01:55:40.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:40.896" endtime="20200727 01:55:40.918"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.896" endtime="20200727 01:55:40.918"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.896" endtime="20200727 01:55:40.918"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.886" endtime="20200727 01:55:40.918"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.886" endtime="20200727 01:55:40.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:40.921" level="INFO">Running command 'ozone sh bucket info 39610-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:44.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:44.054" level="INFO">${output} = 39610-source bucket1</msg>
<status status="PASS" starttime="20200727 01:55:40.920" endtime="20200727 01:55:44.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:44.055" level="INFO">39610-source bucket1</msg>
<status status="PASS" starttime="20200727 01:55:44.055" endtime="20200727 01:55:44.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:44.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:44.056" endtime="20200727 01:55:44.056"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:40.919" endtime="20200727 01:55:44.056"></status>
</kw>
<msg timestamp="20200727 01:55:44.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:40.919" endtime="20200727 01:55:44.057"></status>
</kw>
<msg timestamp="20200727 01:55:44.057" level="INFO">${result} = 39610-source bucket1</msg>
<status status="PASS" starttime="20200727 01:55:40.918" endtime="20200727 01:55:44.057"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:44.057" endtime="20200727 01:55:44.058"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:40.885" endtime="20200727 01:55:44.058" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:44.068" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:44.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:44.069" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:55:44.062" endtime="20200727 01:55:44.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:44.070" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:55:44.070" endtime="20200727 01:55:44.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:44.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:44.071" endtime="20200727 01:55:44.071"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.061" endtime="20200727 01:55:44.071"></status>
</kw>
<msg timestamp="20200727 01:55:44.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:44.061" endtime="20200727 01:55:44.072"></status>
</kw>
<msg timestamp="20200727 01:55:44.072" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:55:44.061" endtime="20200727 01:55:44.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:55:44.073" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:55:44.072" endtime="20200727 01:55:44.073"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:44.078" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:44.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:44.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:44.075" endtime="20200727 01:55:44.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:44.088" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:44.087" endtime="20200727 01:55:44.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:44.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:44.088" endtime="20200727 01:55:44.089"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.074" endtime="20200727 01:55:44.089"></status>
</kw>
<msg timestamp="20200727 01:55:44.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:44.074" endtime="20200727 01:55:44.089"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.073" endtime="20200727 01:55:44.089"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.073" endtime="20200727 01:55:44.090"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.060" endtime="20200727 01:55:44.090"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.060" endtime="20200727 01:55:44.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:44.095" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 39610-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:46.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:46.742" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:44.092" endtime="20200727 01:55:46.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:46.743" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:55:46.743" endtime="20200727 01:55:46.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:46.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:46.744" endtime="20200727 01:55:46.744"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.091" endtime="20200727 01:55:46.744"></status>
</kw>
<msg timestamp="20200727 01:55:46.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:44.091" endtime="20200727 01:55:46.745"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:44.090" endtime="20200727 01:55:46.745"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:46.749" level="INFO">Running command 'ozone sh bucket getacl 39610-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:49.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:49.805" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 01:55:46.747" endtime="20200727 01:55:49.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:49.806" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 01:55:49.805" endtime="20200727 01:55:49.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:49.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:49.806" endtime="20200727 01:55:49.807"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:46.747" endtime="20200727 01:55:49.807"></status>
</kw>
<msg timestamp="20200727 01:55:49.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:46.746" endtime="20200727 01:55:49.807"></status>
</kw>
<msg timestamp="20200727 01:55:49.807" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 01:55:46.746" endtime="20200727 01:55:49.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:49.808" endtime="20200727 01:55:49.808"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:46.745" endtime="20200727 01:55:49.808"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:49.814" level="INFO">Running command 'ozone sh bucket getacl 39610-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:52.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:52.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:49.811" endtime="20200727 01:55:52.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:52.629" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:52.628" endtime="20200727 01:55:52.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:52.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:52.629" endtime="20200727 01:55:52.630"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:49.810" endtime="20200727 01:55:52.630"></status>
</kw>
<msg timestamp="20200727 01:55:52.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:49.810" endtime="20200727 01:55:52.630"></status>
</kw>
<msg timestamp="20200727 01:55:52.630" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 01:55:49.809" endtime="20200727 01:55:52.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:52.631" endtime="20200727 01:55:52.631"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:49.809" endtime="20200727 01:55:52.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:52.635" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 39610-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:55.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:55.443" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:55:52.633" endtime="20200727 01:55:55.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:55.445" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:55:55.443" endtime="20200727 01:55:55.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:55.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:55.445" endtime="20200727 01:55:55.445"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:52.632" endtime="20200727 01:55:55.446"></status>
</kw>
<msg timestamp="20200727 01:55:55.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:52.632" endtime="20200727 01:55:55.446"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:52.631" endtime="20200727 01:55:55.446"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:55.450" level="INFO">Running command 'ozone sh bucket getacl 39610-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:55:58.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:55:58.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:55:55.448" endtime="20200727 01:55:58.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:55:58.422" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:55:58.421" endtime="20200727 01:55:58.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:55:58.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:55:58.422" endtime="20200727 01:55:58.423"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:55.448" endtime="20200727 01:55:58.423"></status>
</kw>
<msg timestamp="20200727 01:55:58.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:55.447" endtime="20200727 01:55:58.423"></status>
</kw>
<msg timestamp="20200727 01:55:58.423" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 01:55:55.447" endtime="20200727 01:55:58.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:55:58.424" endtime="20200727 01:55:58.424"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:55.446" endtime="20200727 01:55:58.424"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:55:58.430" level="INFO">Running command 'ozone sh bucket getacl 39610-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:01.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:01.272" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20200727 01:55:58.427" endtime="20200727 01:56:01.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:01.273" level="INFO">READ</msg>
<status status="PASS" starttime="20200727 01:56:01.272" endtime="20200727 01:56:01.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:01.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:01.273" endtime="20200727 01:56:01.274"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:58.426" endtime="20200727 01:56:01.274"></status>
</kw>
<msg timestamp="20200727 01:56:01.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:55:58.426" endtime="20200727 01:56:01.274"></status>
</kw>
<msg timestamp="20200727 01:56:01.275" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20200727 01:55:58.425" endtime="20200727 01:56:01.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:01.275" endtime="20200727 01:56:01.275"></status>
</kw>
<status status="PASS" starttime="20200727 01:55:58.425" endtime="20200727 01:56:01.276"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:55:44.059" endtime="20200727 01:56:01.276" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:01.283" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:01.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:01.285" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:01.281" endtime="20200727 01:56:01.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:01.286" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:01.286" endtime="20200727 01:56:01.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:01.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:01.287" endtime="20200727 01:56:01.287"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.280" endtime="20200727 01:56:01.288"></status>
</kw>
<msg timestamp="20200727 01:56:01.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:01.280" endtime="20200727 01:56:01.288"></status>
</kw>
<msg timestamp="20200727 01:56:01.288" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:01.279" endtime="20200727 01:56:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:01.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:01.288" endtime="20200727 01:56:01.289"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:01.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:01.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:01.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:01.291" endtime="20200727 01:56:01.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:01.311" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:01.311" endtime="20200727 01:56:01.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:01.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:01.312" endtime="20200727 01:56:01.312"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.290" endtime="20200727 01:56:01.313"></status>
</kw>
<msg timestamp="20200727 01:56:01.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:01.290" endtime="20200727 01:56:01.313"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.289" endtime="20200727 01:56:01.313"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.289" endtime="20200727 01:56:01.313"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.279" endtime="20200727 01:56:01.314"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.278" endtime="20200727 01:56:01.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:01.318" level="INFO">Running command 'ozone sh bucket link 39610-source/bucket2 39610-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:04.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:04.199" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:01.316" endtime="20200727 01:56:04.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:04.200" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:04.199" endtime="20200727 01:56:04.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:04.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:04.200" endtime="20200727 01:56:04.201"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.315" endtime="20200727 01:56:04.201"></status>
</kw>
<msg timestamp="20200727 01:56:04.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:01.315" endtime="20200727 01:56:04.202"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:01.314" endtime="20200727 01:56:04.202"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:04.205" level="INFO">Running command 'ozone sh bucket create 39610-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:07.041" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:56:07.041" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:04.203" endtime="20200727 01:56:07.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:07.042" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:56:07.042" endtime="20200727 01:56:07.043"></status>
</kw>
<msg timestamp="20200727 01:56:07.043" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:04.202" endtime="20200727 01:56:07.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:07.043" endtime="20200727 01:56:07.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:07.048" level="INFO">Running command 'ozone sh bucket create 39610-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:09.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:09.989" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:07.045" endtime="20200727 01:56:09.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:09.990" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:09.989" endtime="20200727 01:56:09.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:09.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:09.990" endtime="20200727 01:56:09.991"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:07.045" endtime="20200727 01:56:09.991"></status>
</kw>
<msg timestamp="20200727 01:56:09.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:07.044" endtime="20200727 01:56:09.991"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:07.044" endtime="20200727 01:56:09.991"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:09.994" level="INFO">Running command 'ozone sh bucket link 39610-source/bucket1 39610-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:12.926" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:56:12.926" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:09.992" endtime="20200727 01:56:12.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.927" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:56:12.927" endtime="20200727 01:56:12.927"></status>
</kw>
<msg timestamp="20200727 01:56:12.928" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:09.992" endtime="20200727 01:56:12.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:12.928" endtime="20200727 01:56:12.928"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:01.277" endtime="20200727 01:56:12.929" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:12.935" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:12.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:12.937" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:12.933" endtime="20200727 01:56:12.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.938" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:12.937" endtime="20200727 01:56:12.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:12.938" endtime="20200727 01:56:12.938"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.932" endtime="20200727 01:56:12.939"></status>
</kw>
<msg timestamp="20200727 01:56:12.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:12.932" endtime="20200727 01:56:12.939"></status>
</kw>
<msg timestamp="20200727 01:56:12.939" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:12.931" endtime="20200727 01:56:12.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:12.940" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:12.939" endtime="20200727 01:56:12.940"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:12.944" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:12.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:12.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:12.942" endtime="20200727 01:56:12.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.955" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:12.954" endtime="20200727 01:56:12.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:12.955" endtime="20200727 01:56:12.955"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.941" endtime="20200727 01:56:12.956"></status>
</kw>
<msg timestamp="20200727 01:56:12.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:12.941" endtime="20200727 01:56:12.956"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.940" endtime="20200727 01:56:12.956"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.940" endtime="20200727 01:56:12.956"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.931" endtime="20200727 01:56:12.957"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.930" endtime="20200727 01:56:12.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:12.961" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:12.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:12.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:12.959" endtime="20200727 01:56:12.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.965" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:12.964" endtime="20200727 01:56:12.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:12.965" endtime="20200727 01:56:12.966"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.959" endtime="20200727 01:56:12.966"></status>
</kw>
<msg timestamp="20200727 01:56:12.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:12.958" endtime="20200727 01:56:12.966"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.958" endtime="20200727 01:56:12.966"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:12.970" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:12.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:12.972" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:12.968" endtime="20200727 01:56:12.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.973" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:12.972" endtime="20200727 01:56:12.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:12.974" endtime="20200727 01:56:12.974"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.968" endtime="20200727 01:56:12.975"></status>
</kw>
<msg timestamp="20200727 01:56:12.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:12.967" endtime="20200727 01:56:12.975"></status>
</kw>
<msg timestamp="20200727 01:56:12.975" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:12.967" endtime="20200727 01:56:12.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:12.976" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:12.975" endtime="20200727 01:56:12.976"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:12.980" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:12.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:12.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:12.978" endtime="20200727 01:56:12.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.989" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:12.989" endtime="20200727 01:56:12.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:12.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:12.989" endtime="20200727 01:56:12.990"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.977" endtime="20200727 01:56:12.990"></status>
</kw>
<msg timestamp="20200727 01:56:12.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:12.977" endtime="20200727 01:56:12.990"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.976" endtime="20200727 01:56:12.990"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.976" endtime="20200727 01:56:12.991"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.967" endtime="20200727 01:56:12.991"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.966" endtime="20200727 01:56:12.991"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:12.993" level="INFO">Running command 'ozone sh key list 39610-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:15.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:15.889" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:12.991" endtime="20200727 01:56:15.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.890" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "39610-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-07-27T01:54:25.950Z",
  "modificationTime" : "2020-07-27T01:54:27.468Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20200727 01:56:15.889" endtime="20200727 01:56:15.890"></status>
</kw>
<msg timestamp="20200727 01:56:15.890" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:12.991" endtime="20200727 01:56:15.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:15.891" endtime="20200727 01:56:15.891"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.957" endtime="20200727 01:56:15.891"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:12.957" endtime="20200727 01:56:15.892"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:12.930" endtime="20200727 01:56:15.892" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:15.897" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:15.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:15.900" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:15.896" endtime="20200727 01:56:15.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.900" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:15.900" endtime="20200727 01:56:15.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:15.901" endtime="20200727 01:56:15.901"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.895" endtime="20200727 01:56:15.902"></status>
</kw>
<msg timestamp="20200727 01:56:15.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:15.895" endtime="20200727 01:56:15.902"></status>
</kw>
<msg timestamp="20200727 01:56:15.902" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:15.895" endtime="20200727 01:56:15.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:15.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:15.902" endtime="20200727 01:56:15.903"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:15.906" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:15.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:15.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:15.905" endtime="20200727 01:56:15.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.917" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:15.917" endtime="20200727 01:56:15.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:15.918" endtime="20200727 01:56:15.918"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.904" endtime="20200727 01:56:15.918"></status>
</kw>
<msg timestamp="20200727 01:56:15.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:15.904" endtime="20200727 01:56:15.919"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.903" endtime="20200727 01:56:15.919"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.903" endtime="20200727 01:56:15.919"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.894" endtime="20200727 01:56:15.919"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.893" endtime="20200727 01:56:15.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:15.924" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:15.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:15.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:15.921" endtime="20200727 01:56:15.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.927" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:15.927" endtime="20200727 01:56:15.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:15.927" endtime="20200727 01:56:15.928"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.921" endtime="20200727 01:56:15.928"></status>
</kw>
<msg timestamp="20200727 01:56:15.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:15.921" endtime="20200727 01:56:15.928"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.920" endtime="20200727 01:56:15.928"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:15.933" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:15.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:15.934" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:15.931" endtime="20200727 01:56:15.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.935" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:15.935" endtime="20200727 01:56:15.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:15.935" endtime="20200727 01:56:15.936"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.930" endtime="20200727 01:56:15.936"></status>
</kw>
<msg timestamp="20200727 01:56:15.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:15.930" endtime="20200727 01:56:15.936"></status>
</kw>
<msg timestamp="20200727 01:56:15.937" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:15.930" endtime="20200727 01:56:15.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:15.937" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:15.937" endtime="20200727 01:56:15.937"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:15.941" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:15.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:15.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:15.939" endtime="20200727 01:56:15.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.951" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:15.950" endtime="20200727 01:56:15.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:15.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:15.951" endtime="20200727 01:56:15.951"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.939" endtime="20200727 01:56:15.952"></status>
</kw>
<msg timestamp="20200727 01:56:15.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:15.939" endtime="20200727 01:56:15.952"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.938" endtime="20200727 01:56:15.952"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.938" endtime="20200727 01:56:15.952"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.929" endtime="20200727 01:56:15.952"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.929" endtime="20200727 01:56:15.952"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:15.956" level="INFO">Running command 'ozone sh key list 39610-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:18.571" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:56:18.571" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:15.953" endtime="20200727 01:56:18.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.573" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" starttime="20200727 01:56:18.572" endtime="20200727 01:56:18.573"></status>
</kw>
<msg timestamp="20200727 01:56:18.573" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:15.952" endtime="20200727 01:56:18.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:18.573" endtime="20200727 01:56:18.574"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.920" endtime="20200727 01:56:18.574"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:15.919" endtime="20200727 01:56:18.574"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:15.892" endtime="20200727 01:56:18.574" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:18.580" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:18.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:18.583" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:18.579" endtime="20200727 01:56:18.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.584" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:18.583" endtime="20200727 01:56:18.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:18.585" endtime="20200727 01:56:18.585"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.578" endtime="20200727 01:56:18.586"></status>
</kw>
<msg timestamp="20200727 01:56:18.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:18.577" endtime="20200727 01:56:18.586"></status>
</kw>
<msg timestamp="20200727 01:56:18.586" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:18.577" endtime="20200727 01:56:18.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:18.587" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:18.586" endtime="20200727 01:56:18.587"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:18.591" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:18.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:18.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:18.589" endtime="20200727 01:56:18.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.602" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:18.601" endtime="20200727 01:56:18.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:18.602" endtime="20200727 01:56:18.603"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.588" endtime="20200727 01:56:18.603"></status>
</kw>
<msg timestamp="20200727 01:56:18.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:18.588" endtime="20200727 01:56:18.603"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.587" endtime="20200727 01:56:18.603"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.587" endtime="20200727 01:56:18.603"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.576" endtime="20200727 01:56:18.604"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.576" endtime="20200727 01:56:18.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:18.608" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:18.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:18.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:18.606" endtime="20200727 01:56:18.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.612" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:18.611" endtime="20200727 01:56:18.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:18.612" endtime="20200727 01:56:18.613"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.605" endtime="20200727 01:56:18.613"></status>
</kw>
<msg timestamp="20200727 01:56:18.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:18.605" endtime="20200727 01:56:18.613"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.605" endtime="20200727 01:56:18.613"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:18.618" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:18.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:18.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:18.616" endtime="20200727 01:56:18.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.620" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:18.620" endtime="20200727 01:56:18.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:18.620" endtime="20200727 01:56:18.621"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.615" endtime="20200727 01:56:18.621"></status>
</kw>
<msg timestamp="20200727 01:56:18.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:18.615" endtime="20200727 01:56:18.621"></status>
</kw>
<msg timestamp="20200727 01:56:18.622" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:18.614" endtime="20200727 01:56:18.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:18.622" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:18.622" endtime="20200727 01:56:18.622"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:18.627" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:18.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:18.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:18.624" endtime="20200727 01:56:18.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.635" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:18.635" endtime="20200727 01:56:18.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:18.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:18.636" endtime="20200727 01:56:18.636"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.624" endtime="20200727 01:56:18.637"></status>
</kw>
<msg timestamp="20200727 01:56:18.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:18.623" endtime="20200727 01:56:18.637"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.623" endtime="20200727 01:56:18.637"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.622" endtime="20200727 01:56:18.637"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.614" endtime="20200727 01:56:18.637"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.613" endtime="20200727 01:56:18.637"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:18.641" level="INFO">Running command 'ozone sh bucket info 39610-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:21.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:21.848" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:18.639" endtime="20200727 01:56:21.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:21.850" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:39.361Z",
  "modificationTime" : "2020-07-27T01:54:39.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" starttime="20200727 01:56:21.849" endtime="20200727 01:56:21.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:21.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:21.850" endtime="20200727 01:56:21.850"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.638" endtime="20200727 01:56:21.851"></status>
</kw>
<msg timestamp="20200727 01:56:21.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:18.638" endtime="20200727 01:56:21.851"></status>
</kw>
<msg timestamp="20200727 01:56:21.851" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:18.637" endtime="20200727 01:56:21.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:21.851" endtime="20200727 01:56:21.852"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:21.852" endtime="20200727 01:56:21.852"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:21.855" level="INFO">Running command 'ozone sh key list 39610-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:24.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:56:24.554" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:21.853" endtime="20200727 01:56:24.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:24.555" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" starttime="20200727 01:56:24.554" endtime="20200727 01:56:24.555"></status>
</kw>
<msg timestamp="20200727 01:56:24.555" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:21.852" endtime="20200727 01:56:24.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:24.556" endtime="20200727 01:56:24.556"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.604" endtime="20200727 01:56:24.556"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:18.604" endtime="20200727 01:56:24.556"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:18.575" endtime="20200727 01:56:24.557" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:24.563" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:24.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:24.565" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:24.561" endtime="20200727 01:56:24.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:24.566" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:24.566" endtime="20200727 01:56:24.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:24.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:24.566" endtime="20200727 01:56:24.567"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.561" endtime="20200727 01:56:24.567"></status>
</kw>
<msg timestamp="20200727 01:56:24.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:24.560" endtime="20200727 01:56:24.568"></status>
</kw>
<msg timestamp="20200727 01:56:24.568" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:24.559" endtime="20200727 01:56:24.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:24.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:24.568" endtime="20200727 01:56:24.569"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:24.574" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:24.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:24.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:24.571" endtime="20200727 01:56:24.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:24.585" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:24.584" endtime="20200727 01:56:24.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:24.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:24.585" endtime="20200727 01:56:24.586"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.570" endtime="20200727 01:56:24.586"></status>
</kw>
<msg timestamp="20200727 01:56:24.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:24.570" endtime="20200727 01:56:24.586"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.569" endtime="20200727 01:56:24.586"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.569" endtime="20200727 01:56:24.586"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.559" endtime="20200727 01:56:24.587"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.558" endtime="20200727 01:56:24.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:24.590" level="INFO">Running command 'ozone sh bucket link 39610-target/loop1 39610-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:27.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:27.348" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:24.588" endtime="20200727 01:56:27.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:27.349" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:27.348" endtime="20200727 01:56:27.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:27.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:27.350" endtime="20200727 01:56:27.350"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.588" endtime="20200727 01:56:27.350"></status>
</kw>
<msg timestamp="20200727 01:56:27.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:24.587" endtime="20200727 01:56:27.351"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:24.587" endtime="20200727 01:56:27.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:27.355" level="INFO">Running command 'ozone sh bucket link 39610-target/loop2 39610-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:30.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:30.166" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:27.352" endtime="20200727 01:56:30.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:30.167" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:30.167" endtime="20200727 01:56:30.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:30.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:30.168" endtime="20200727 01:56:30.168"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:27.352" endtime="20200727 01:56:30.168"></status>
</kw>
<msg timestamp="20200727 01:56:30.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:27.352" endtime="20200727 01:56:30.169"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:27.351" endtime="20200727 01:56:30.169"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:30.173" level="INFO">Running command 'ozone sh bucket link 39610-target/loop3 39610-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:33.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:33.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:30.171" endtime="20200727 01:56:33.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:33.237" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:33.236" endtime="20200727 01:56:33.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:33.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:33.237" endtime="20200727 01:56:33.238"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:30.170" endtime="20200727 01:56:33.238"></status>
</kw>
<msg timestamp="20200727 01:56:33.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:30.170" endtime="20200727 01:56:33.239"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:30.169" endtime="20200727 01:56:33.239"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:33.241" level="INFO">Running command 'ozone sh key list 39610-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:36.113" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:56:36.113" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:33.240" endtime="20200727 01:56:36.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:36.114" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 01:56:36.113" endtime="20200727 01:56:36.114"></status>
</kw>
<msg timestamp="20200727 01:56:36.115" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:33.239" endtime="20200727 01:56:36.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:36.115" endtime="20200727 01:56:36.115"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:24.557" endtime="20200727 01:56:36.116" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:36.121" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:36.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:36.124" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:36.119" endtime="20200727 01:56:36.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:36.125" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:36.124" endtime="20200727 01:56:36.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:36.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:36.125" endtime="20200727 01:56:36.126"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.119" endtime="20200727 01:56:36.126"></status>
</kw>
<msg timestamp="20200727 01:56:36.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:36.119" endtime="20200727 01:56:36.126"></status>
</kw>
<msg timestamp="20200727 01:56:36.126" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:36.118" endtime="20200727 01:56:36.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:36.127" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:36.127" endtime="20200727 01:56:36.127"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:36.131" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:36.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:36.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:36.129" endtime="20200727 01:56:36.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:36.143" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:36.142" endtime="20200727 01:56:36.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:36.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:36.143" endtime="20200727 01:56:36.144"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.129" endtime="20200727 01:56:36.144"></status>
</kw>
<msg timestamp="20200727 01:56:36.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:36.128" endtime="20200727 01:56:36.145"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.128" endtime="20200727 01:56:36.145"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.127" endtime="20200727 01:56:36.145"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.118" endtime="20200727 01:56:36.145"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.117" endtime="20200727 01:56:36.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:36.149" level="INFO">Running command 'ozone sh bucket link 39610-source/bucket1 39610-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:39.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:39.180" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:36.147" endtime="20200727 01:56:39.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:39.181" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:39.181" endtime="20200727 01:56:39.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:39.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:39.181" endtime="20200727 01:56:39.182"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.147" endtime="20200727 01:56:39.182"></status>
</kw>
<msg timestamp="20200727 01:56:39.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:36.146" endtime="20200727 01:56:39.182"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:36.145" endtime="20200727 01:56:39.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:39.187" level="INFO">Running command 'ozone sh key put 39610-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:43.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:43.708" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:39.184" endtime="20200727 01:56:43.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:43.711" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:43.710" endtime="20200727 01:56:43.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:43.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:43.712" endtime="20200727 01:56:43.712"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:39.184" endtime="20200727 01:56:43.713"></status>
</kw>
<msg timestamp="20200727 01:56:43.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:39.183" endtime="20200727 01:56:43.713"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:39.183" endtime="20200727 01:56:43.713"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:56:43.715" level="INFO">${postfix} = 19645</msg>
<status status="PASS" starttime="20200727 01:56:43.715" endtime="20200727 01:56:43.715"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:56:43.716" level="INFO">${tmpfile} = /tmp/tempkey-19645</msg>
<status status="PASS" starttime="20200727 01:56:43.716" endtime="20200727 01:56:43.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:43.721" level="INFO">Running command 'ozone sh key get -f 39610-target/link1/key3 /tmp/tempkey-19645 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:48.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:48.390" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:43.718" endtime="20200727 01:56:48.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.392" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:48.391" endtime="20200727 01:56:48.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:48.392" endtime="20200727 01:56:48.393"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:43.717" endtime="20200727 01:56:48.393"></status>
</kw>
<msg timestamp="20200727 01:56:48.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:43.717" endtime="20200727 01:56:48.394"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:43.716" endtime="20200727 01:56:48.394"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:56:48.397" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-19645 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:48.399" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:56:48.394" endtime="20200727 01:56:48.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:48.404" level="INFO">Running command 'rm -f /tmp/tempkey-19645 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:48.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:48.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:48.402" endtime="20200727 01:56:48.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.408" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:48.407" endtime="20200727 01:56:48.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:48.408" endtime="20200727 01:56:48.409"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.401" endtime="20200727 01:56:48.409"></status>
</kw>
<msg timestamp="20200727 01:56:48.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:48.400" endtime="20200727 01:56:48.410"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.400" endtime="20200727 01:56:48.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:56:48.411" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:56:48.410" endtime="20200727 01:56:48.411"></status>
</kw>
<msg timestamp="20200727 01:56:48.411" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:56:43.714" endtime="20200727 01:56:48.411"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:48.411" endtime="20200727 01:56:48.412"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:43.713" endtime="20200727 01:56:48.412"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:36.116" endtime="20200727 01:56:48.412" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:48.420" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:48.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:48.421" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:48.417" endtime="20200727 01:56:48.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.422" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:48.422" endtime="20200727 01:56:48.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:48.423" endtime="20200727 01:56:48.423"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.416" endtime="20200727 01:56:48.424"></status>
</kw>
<msg timestamp="20200727 01:56:48.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:48.416" endtime="20200727 01:56:48.424"></status>
</kw>
<msg timestamp="20200727 01:56:48.424" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:48.415" endtime="20200727 01:56:48.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:48.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:48.425" endtime="20200727 01:56:48.425"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:48.431" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:48.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:48.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:48.428" endtime="20200727 01:56:48.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.444" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:48.443" endtime="20200727 01:56:48.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:48.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:48.444" endtime="20200727 01:56:48.445"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.428" endtime="20200727 01:56:48.445"></status>
</kw>
<msg timestamp="20200727 01:56:48.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:48.427" endtime="20200727 01:56:48.445"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.426" endtime="20200727 01:56:48.445"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.426" endtime="20200727 01:56:48.445"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.415" endtime="20200727 01:56:48.446"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.414" endtime="20200727 01:56:48.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:48.450" level="INFO">Running command 'ozone sh bucket delete 39610-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:51.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:51.227" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:48.447" endtime="20200727 01:56:51.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:51.228" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:56:51.228" endtime="20200727 01:56:51.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:51.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:51.228" endtime="20200727 01:56:51.229"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.447" endtime="20200727 01:56:51.229"></status>
</kw>
<msg timestamp="20200727 01:56:51.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:48.447" endtime="20200727 01:56:51.229"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:48.446" endtime="20200727 01:56:51.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:51.233" level="INFO">Running command 'ozone sh bucket list 39610-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:54.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:54.181" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:51.231" endtime="20200727 01:56:54.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:54.182" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:56:09.824Z",
  "modificationTime" : "2020-07-27T01:56:09.824Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:57.124Z",
  "modificationTime" : "2020-07-27T01:54:57.124Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:39.361Z",
  "modificationTime" : "2020-07-27T01:54:39.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:56:04.041Z",
  "modificationTime" : "2020-07-27T01:56:04.041Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:56:39.021Z",
  "modificationTime" : "2020-07-27T01:56:39.021Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:56:33.092Z",
  "modificationTime" : "2020-07-27T01:56:33.092Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:56:27.219Z",
  "modificationTime" : "2020-07-27T01:56:27.219Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:56:30.035Z",
  "modificationTime" : "2020-07-27T01:56:30.035Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:33.581Z",
  "modificationTime" : "2020-07-27T01:54:33.581Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "39610-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:54:36.287Z",
  "modificationTime" : "2020-07-27T01:54:36.287Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39610-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" starttime="20200727 01:56:54.181" endtime="20200727 01:56:54.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:54.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:54.182" endtime="20200727 01:56:54.183"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:51.231" endtime="20200727 01:56:54.183"></status>
</kw>
<msg timestamp="20200727 01:56:54.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:51.230" endtime="20200727 01:56:54.184"></status>
</kw>
<msg timestamp="20200727 01:56:54.184" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:51.230" endtime="20200727 01:56:54.184"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:54.184" endtime="20200727 01:56:54.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:54.188" level="INFO">Running command 'ozone sh key list 39610-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:57.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:57.260" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20200727 01:56:54.186" endtime="20200727 01:56:57.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.261" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20200727 01:56:57.260" endtime="20200727 01:56:57.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:57.261" endtime="20200727 01:56:57.262"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:54.186" endtime="20200727 01:56:57.262"></status>
</kw>
<msg timestamp="20200727 01:56:57.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:54.185" endtime="20200727 01:56:57.262"></status>
</kw>
<msg timestamp="20200727 01:56:57.262" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20200727 01:56:54.185" endtime="20200727 01:56:57.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:57.263" endtime="20200727 01:56:57.263"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:48.413" endtime="20200727 01:56:57.263" critical="yes"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20200727 01:54:14.467" endtime="20200727 01:56:57.266"></status>
</suite>
<suite id="s1-s3" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 01:56:57.281" level="INFO">${random} = 35163</msg>
<status status="PASS" starttime="20200727 01:56:57.280" endtime="20200727 01:56:57.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.281" level="INFO">${prefix} = 35163</msg>
<status status="PASS" starttime="20200727 01:56:57.281" endtime="20200727 01:56:57.282"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.280" endtime="20200727 01:56:57.282"></status>
</kw>
<test id="s1-s3-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:57.288" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:57.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:57.290" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:56:57.285" endtime="20200727 01:56:57.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.290" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:56:57.290" endtime="20200727 01:56:57.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:57.291" endtime="20200727 01:56:57.291"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.284" endtime="20200727 01:56:57.291"></status>
</kw>
<msg timestamp="20200727 01:56:57.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:57.284" endtime="20200727 01:56:57.292"></status>
</kw>
<msg timestamp="20200727 01:56:57.292" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:56:57.284" endtime="20200727 01:56:57.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:56:57.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:56:57.292" endtime="20200727 01:56:57.293"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:57.297" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:57.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:56:57.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:56:57.295" endtime="20200727 01:56:57.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.308" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:56:57.307" endtime="20200727 01:56:57.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:56:57.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:56:57.308" endtime="20200727 01:56:57.309"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.295" endtime="20200727 01:56:57.309"></status>
</kw>
<msg timestamp="20200727 01:56:57.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:57.294" endtime="20200727 01:56:57.309"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.294" endtime="20200727 01:56:57.309"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.293" endtime="20200727 01:56:57.309"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.283" endtime="20200727 01:56:57.310"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.283" endtime="20200727 01:56:57.310"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:57.315" level="INFO">Running command 'ozone sh volume info o3://om:9862/35163-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:56:59.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:56:59.969" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:57.311" endtime="20200727 01:56:59.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:56:59.970" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 35163-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 01:56:59.970" endtime="20200727 01:56:59.970"></status>
</kw>
<msg timestamp="20200727 01:56:59.971" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:57.310" endtime="20200727 01:56:59.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:56:59.971" endtime="20200727 01:56:59.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:56:59.974" level="INFO">Running command 'ozone sh volume create o3://om:9862/35163-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:02.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:02.753" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:59.973" endtime="20200727 01:57:02.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:02.754" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:02.754" endtime="20200727 01:57:02.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:02.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:02.755" endtime="20200727 01:57:02.755"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:59.972" endtime="20200727 01:57:02.756"></status>
</kw>
<msg timestamp="20200727 01:57:02.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:56:59.972" endtime="20200727 01:57:02.756"></status>
</kw>
<msg timestamp="20200727 01:57:02.756" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:56:59.971" endtime="20200727 01:57:02.756"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:02.756" endtime="20200727 01:57:02.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:02.762" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="35163-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:05.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:05.822" level="INFO">${output} = {
  "metadata": {},
  "name": "35163-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:57:02.619Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 01:57:02.759" endtime="20200727 01:57:05.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:05.823" level="INFO">{
  "metadata": {},
  "name": "35163-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:57:02.619Z",
  "modificationTime": "2020-07-27T01:57:02.619Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:57:05.822" endtime="20200727 01:57:05.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:05.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:05.823" endtime="20200727 01:57:05.824"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:02.758" endtime="20200727 01:57:05.824"></status>
</kw>
<msg timestamp="20200727 01:57:05.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:02.758" endtime="20200727 01:57:05.824"></status>
</kw>
<msg timestamp="20200727 01:57:05.824" level="INFO">${result} = {
  "metadata": {},
  "name": "35163-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:57:02.619Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 01:57:02.757" endtime="20200727 01:57:05.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:05.824" endtime="20200727 01:57:05.825"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:05.828" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="35163-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:09.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:09.065" level="INFO">${output} = {
  "metadata": {},
  "name": "35163-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:57:02.619Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 01:57:05.826" endtime="20200727 01:57:09.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:09.066" level="INFO">{
  "metadata": {},
  "name": "35163-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:57:02.619Z",
  "modificationTime": "2020-07-27T01:57:02.619Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:57:09.065" endtime="20200727 01:57:09.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:09.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:09.066" endtime="20200727 01:57:09.067"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:05.826" endtime="20200727 01:57:09.067"></status>
</kw>
<msg timestamp="20200727 01:57:09.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:05.826" endtime="20200727 01:57:09.067"></status>
</kw>
<msg timestamp="20200727 01:57:09.068" level="INFO">${result} = {
  "metadata": {},
  "name": "35163-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:57:02.619Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 01:57:05.825" endtime="20200727 01:57:09.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:09.068" endtime="20200727 01:57:09.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:09.072" level="INFO">Running command 'ozone sh volume update o3://om:9862/35163-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:12.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:12.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:09.070" endtime="20200727 01:57:12.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:12.055" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "35163-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-07-27T01:57:02.619Z",
  "modificationTime" : "2020-07-27T01:57:11.756Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 01:57:12.054" endtime="20200727 01:57:12.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:12.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:12.055" endtime="20200727 01:57:12.056"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:09.069" endtime="20200727 01:57:12.056"></status>
</kw>
<msg timestamp="20200727 01:57:12.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:09.069" endtime="20200727 01:57:12.056"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:09.068" endtime="20200727 01:57:12.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:12.061" level="INFO">Running command 'ozone sh volume info o3://om:9862/35163-rpcwoport | jq -r '. | select(.name=="35163-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:14.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:14.860" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:57:12.058" endtime="20200727 01:57:14.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:14.861" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 01:57:14.860" endtime="20200727 01:57:14.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:14.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:14.861" endtime="20200727 01:57:14.862"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:12.058" endtime="20200727 01:57:14.862"></status>
</kw>
<msg timestamp="20200727 01:57:14.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:12.058" endtime="20200727 01:57:14.862"></status>
</kw>
<msg timestamp="20200727 01:57:14.863" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:57:12.057" endtime="20200727 01:57:14.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:14.863" endtime="20200727 01:57:14.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:14.868" level="INFO">Running command 'ozone sh bucket create o3://om:9862/35163-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:17.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:17.495" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:14.865" endtime="20200727 01:57:17.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:17.496" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:17.496" endtime="20200727 01:57:17.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:17.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:17.497" endtime="20200727 01:57:17.497"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:14.864" endtime="20200727 01:57:17.498"></status>
</kw>
<msg timestamp="20200727 01:57:17.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:14.864" endtime="20200727 01:57:17.498"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:14.863" endtime="20200727 01:57:17.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:17.503" level="INFO">Running command 'ozone sh bucket info o3://om:9862/35163-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:20.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:20.645" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 01:57:17.500" endtime="20200727 01:57:20.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:20.646" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 01:57:20.645" endtime="20200727 01:57:20.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:20.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:20.646" endtime="20200727 01:57:20.647"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:17.499" endtime="20200727 01:57:20.647"></status>
</kw>
<msg timestamp="20200727 01:57:20.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:17.499" endtime="20200727 01:57:20.647"></status>
</kw>
<msg timestamp="20200727 01:57:20.647" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 01:57:17.498" endtime="20200727 01:57:20.647"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:20.648" endtime="20200727 01:57:20.648"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:20.652" level="INFO">Running command 'ozone sh bucket list o3://om:9862/35163-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:23.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:23.781" level="INFO">${output} = 35163-rpcwoport</msg>
<status status="PASS" starttime="20200727 01:57:20.650" endtime="20200727 01:57:23.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:23.782" level="INFO">35163-rpcwoport</msg>
<status status="PASS" starttime="20200727 01:57:23.781" endtime="20200727 01:57:23.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:23.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:23.782" endtime="20200727 01:57:23.783"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:20.649" endtime="20200727 01:57:23.783"></status>
</kw>
<msg timestamp="20200727 01:57:23.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:20.649" endtime="20200727 01:57:23.784"></status>
</kw>
<msg timestamp="20200727 01:57:23.784" level="INFO">${result} = 35163-rpcwoport</msg>
<status status="PASS" starttime="20200727 01:57:20.648" endtime="20200727 01:57:23.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:23.784" endtime="20200727 01:57:23.785"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:23.789" level="INFO">Running command 'ozone sh key put o3://om:9862/35163-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:28.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:28.581" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:23.787" endtime="20200727 01:57:28.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:28.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:28.581" endtime="20200727 01:57:28.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:28.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:28.583" endtime="20200727 01:57:28.584"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:23.787" endtime="20200727 01:57:28.584"></status>
</kw>
<msg timestamp="20200727 01:57:28.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:23.786" endtime="20200727 01:57:28.584"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:23.786" endtime="20200727 01:57:28.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:28.588" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:28.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:28.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:57:28.586" endtime="20200727 01:57:28.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:28.592" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:57:28.591" endtime="20200727 01:57:28.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:28.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:28.592" endtime="20200727 01:57:28.593"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:28.585" endtime="20200727 01:57:28.593"></status>
</kw>
<msg timestamp="20200727 01:57:28.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:28.585" endtime="20200727 01:57:28.593"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:28.584" endtime="20200727 01:57:28.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:28.598" level="INFO">Running command 'ozone sh key get o3://om:9862/35163-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:32.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:32.918" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:28.596" endtime="20200727 01:57:32.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:32.919" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:32.918" endtime="20200727 01:57:32.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:32.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:32.919" endtime="20200727 01:57:32.920"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:28.595" endtime="20200727 01:57:32.920"></status>
</kw>
<msg timestamp="20200727 01:57:32.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:28.595" endtime="20200727 01:57:32.920"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:28.594" endtime="20200727 01:57:32.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:32.925" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:32.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:32.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:57:32.923" endtime="20200727 01:57:32.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:32.929" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:57:32.928" endtime="20200727 01:57:32.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:32.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:32.929" endtime="20200727 01:57:32.930"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:32.922" endtime="20200727 01:57:32.930"></status>
</kw>
<msg timestamp="20200727 01:57:32.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:32.921" endtime="20200727 01:57:32.930"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:32.921" endtime="20200727 01:57:32.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:32.934" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/35163-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:37.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:37.728" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:32.932" endtime="20200727 01:57:37.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:37.729" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:37.728" endtime="20200727 01:57:37.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:37.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:37.730" endtime="20200727 01:57:37.730"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:32.932" endtime="20200727 01:57:37.730"></status>
</kw>
<msg timestamp="20200727 01:57:37.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:32.931" endtime="20200727 01:57:37.731"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:32.931" endtime="20200727 01:57:37.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:37.735" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:37.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:37.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:57:37.732" endtime="20200727 01:57:37.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:37.738" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:57:37.738" endtime="20200727 01:57:37.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:37.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:37.738" endtime="20200727 01:57:37.739"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:37.732" endtime="20200727 01:57:37.739"></status>
</kw>
<msg timestamp="20200727 01:57:37.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:37.732" endtime="20200727 01:57:37.739"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:37.731" endtime="20200727 01:57:37.740"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:37.744" level="INFO">Running command 'ozone sh key get o3://om:9862/35163-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:42.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:42.300" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:37.742" endtime="20200727 01:57:42.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:42.302" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:42.301" endtime="20200727 01:57:42.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:42.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:42.302" endtime="20200727 01:57:42.303"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:37.741" endtime="20200727 01:57:42.303"></status>
</kw>
<msg timestamp="20200727 01:57:42.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:37.740" endtime="20200727 01:57:42.303"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:37.740" endtime="20200727 01:57:42.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:42.307" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:42.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:42.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:57:42.305" endtime="20200727 01:57:42.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:42.311" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:57:42.310" endtime="20200727 01:57:42.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:42.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:42.311" endtime="20200727 01:57:42.312"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:42.305" endtime="20200727 01:57:42.312"></status>
</kw>
<msg timestamp="20200727 01:57:42.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:42.304" endtime="20200727 01:57:42.312"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:42.304" endtime="20200727 01:57:42.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:42.318" level="INFO">Running command 'ozone sh key info o3://om:9862/35163-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:45.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:45.586" level="INFO">${output} = {
  "volumeName": "35163-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:57:35.675Z",
  "modificationTime": "2020-07-27T01:57:37.210Z",...</msg>
<status status="PASS" starttime="20200727 01:57:42.315" endtime="20200727 01:57:45.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:45.588" level="INFO">{
  "volumeName": "35163-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:57:35.675Z",
  "modificationTime": "2020-07-27T01:57:37.210Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583335488520320,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:57:45.587" endtime="20200727 01:57:45.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:45.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:45.588" endtime="20200727 01:57:45.589"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:42.314" endtime="20200727 01:57:45.589"></status>
</kw>
<msg timestamp="20200727 01:57:45.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:42.314" endtime="20200727 01:57:45.589"></status>
</kw>
<msg timestamp="20200727 01:57:45.590" level="INFO">${result} = {
  "volumeName": "35163-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:57:35.675Z",
  "modificationTime": "2020-07-27T01:57:37.210Z",...</msg>
<status status="PASS" starttime="20200727 01:57:42.313" endtime="20200727 01:57:45.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:57:45.590" endtime="20200727 01:57:45.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:45.593" level="INFO">Running command 'ozone sh key delete o3://om:9862/35163-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:48.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:48.224" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:45.592" endtime="20200727 01:57:48.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:48.226" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:48.225" endtime="20200727 01:57:48.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:48.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:48.226" endtime="20200727 01:57:48.226"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:45.591" endtime="20200727 01:57:48.227"></status>
</kw>
<msg timestamp="20200727 01:57:48.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:45.591" endtime="20200727 01:57:48.227"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:45.590" endtime="20200727 01:57:48.227"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:48.230" level="INFO">Running command 'ozone sh key cp o3://om:9862/35163-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:53.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:53.040" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:48.229" endtime="20200727 01:57:53.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:53.041" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:53.040" endtime="20200727 01:57:53.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:53.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:53.041" endtime="20200727 01:57:53.042"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:48.228" endtime="20200727 01:57:53.042"></status>
</kw>
<msg timestamp="20200727 01:57:53.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:48.228" endtime="20200727 01:57:53.042"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:48.227" endtime="20200727 01:57:53.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:53.047" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:53.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:53.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:57:53.044" endtime="20200727 01:57:53.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:53.049" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:57:53.049" endtime="20200727 01:57:53.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:53.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:53.049" endtime="20200727 01:57:53.050"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:53.043" endtime="20200727 01:57:53.050"></status>
</kw>
<msg timestamp="20200727 01:57:53.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:53.043" endtime="20200727 01:57:53.050"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:53.043" endtime="20200727 01:57:53.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:53.055" level="INFO">Running command 'ozone sh key get o3://om:9862/35163-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:57.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:57.419" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:53.052" endtime="20200727 01:57:57.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:57.420" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:57:57.419" endtime="20200727 01:57:57.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:57.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:57.421" endtime="20200727 01:57:57.421"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:53.052" endtime="20200727 01:57:57.422"></status>
</kw>
<msg timestamp="20200727 01:57:57.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:53.051" endtime="20200727 01:57:57.422"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:53.051" endtime="20200727 01:57:57.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:57.427" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:57:57.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:57:57.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:57:57.424" endtime="20200727 01:57:57.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:57:57.431" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:57:57.430" endtime="20200727 01:57:57.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:57:57.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:57:57.431" endtime="20200727 01:57:57.432"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:57.424" endtime="20200727 01:57:57.432"></status>
</kw>
<msg timestamp="20200727 01:57:57.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:57.423" endtime="20200727 01:57:57.432"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:57.422" endtime="20200727 01:57:57.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:57:57.437" level="INFO">Running command 'ozone sh key delete o3://om:9862/35163-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:00.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:00.284" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:57:57.434" endtime="20200727 01:58:00.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:00.285" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:00.284" endtime="20200727 01:58:00.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:00.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:00.285" endtime="20200727 01:58:00.286"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:57.434" endtime="20200727 01:58:00.286"></status>
</kw>
<msg timestamp="20200727 01:58:00.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:57:57.434" endtime="20200727 01:58:00.286"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:57.433" endtime="20200727 01:58:00.286"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:00.290" level="INFO">Running command 'ozone sh key get o3://om:9862/35163-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:02.886" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:58:02.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:00.287" endtime="20200727 01:58:02.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:02.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:58:02.886" endtime="20200727 01:58:02.887"></status>
</kw>
<msg timestamp="20200727 01:58:02.888" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:00.286" endtime="20200727 01:58:02.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:02.888" endtime="20200727 01:58:02.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:02.893" level="INFO">Running command 'ozone sh key get --force o3://om:9862/35163-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:07.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:07.374" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:02.890" endtime="20200727 01:58:07.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:07.375" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:07.374" endtime="20200727 01:58:07.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:07.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:07.375" endtime="20200727 01:58:07.376"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:02.889" endtime="20200727 01:58:07.376"></status>
</kw>
<msg timestamp="20200727 01:58:07.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:02.889" endtime="20200727 01:58:07.377"></status>
</kw>
<msg timestamp="20200727 01:58:07.377" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:02.888" endtime="20200727 01:58:07.377"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:07.377" endtime="20200727 01:58:07.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:07.382" level="INFO">Running command 'ozone sh key info o3://om:9862/35163-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:10.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:10.757" level="INFO">${output} = {
  "volumeName": "35163-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:57:26.528Z",
  "modificationTime": "2020-07-27T01:57:28.205Z",
  "re...</msg>
<status status="PASS" starttime="20200727 01:58:07.380" endtime="20200727 01:58:10.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:10.759" level="INFO">{
  "volumeName": "35163-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:57:26.528Z",
  "modificationTime": "2020-07-27T01:57:28.205Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583334889062530,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:58:10.758" endtime="20200727 01:58:10.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:10.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:10.759" endtime="20200727 01:58:10.759"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:07.379" endtime="20200727 01:58:10.760"></status>
</kw>
<msg timestamp="20200727 01:58:10.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:07.379" endtime="20200727 01:58:10.760"></status>
</kw>
<msg timestamp="20200727 01:58:10.760" level="INFO">${result} = {
  "volumeName": "35163-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:57:26.528Z",
  "modificationTime": "2020-07-27T01:57:28.205Z",
  "re...</msg>
<status status="PASS" starttime="20200727 01:58:07.378" endtime="20200727 01:58:10.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:10.760" endtime="20200727 01:58:10.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:10.765" level="INFO">Running command 'ozone sh key list o3://om:9862/35163-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:13.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:13.915" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 01:58:10.763" endtime="20200727 01:58:13.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:13.916" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 01:58:13.915" endtime="20200727 01:58:13.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:13.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:13.917" endtime="20200727 01:58:13.917"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:10.762" endtime="20200727 01:58:13.917"></status>
</kw>
<msg timestamp="20200727 01:58:13.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:10.762" endtime="20200727 01:58:13.918"></status>
</kw>
<msg timestamp="20200727 01:58:13.918" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 01:58:10.761" endtime="20200727 01:58:13.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:13.918" endtime="20200727 01:58:13.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:13.922" level="INFO">Running command 'ozone sh key rename o3://om:9862/35163-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:16.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:16.951" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:13.920" endtime="20200727 01:58:16.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:16.952" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:16.951" endtime="20200727 01:58:16.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:16.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:16.952" endtime="20200727 01:58:16.953"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:13.920" endtime="20200727 01:58:16.953"></status>
</kw>
<msg timestamp="20200727 01:58:16.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:13.920" endtime="20200727 01:58:16.953"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:13.919" endtime="20200727 01:58:16.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:16.958" level="INFO">Running command 'ozone sh key list o3://om:9862/35163-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:19.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:19.764" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 01:58:16.955" endtime="20200727 01:58:19.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:19.765" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 01:58:19.765" endtime="20200727 01:58:19.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:19.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:19.765" endtime="20200727 01:58:19.766"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:16.955" endtime="20200727 01:58:19.766"></status>
</kw>
<msg timestamp="20200727 01:58:19.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:16.954" endtime="20200727 01:58:19.766"></status>
</kw>
<msg timestamp="20200727 01:58:19.767" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 01:58:16.953" endtime="20200727 01:58:19.767"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:19.767" endtime="20200727 01:58:19.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:19.771" level="INFO">Running command 'ozone sh key delete o3://om:9862/35163-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:22.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:22.408" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:19.769" endtime="20200727 01:58:22.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:22.409" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:22.409" endtime="20200727 01:58:22.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:22.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:22.409" endtime="20200727 01:58:22.410"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:19.769" endtime="20200727 01:58:22.410"></status>
</kw>
<msg timestamp="20200727 01:58:22.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:19.768" endtime="20200727 01:58:22.411"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:19.768" endtime="20200727 01:58:22.411"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:23.785" endtime="20200727 01:58:22.411"></status>
</kw>
<status status="PASS" starttime="20200727 01:57:23.785" endtime="20200727 01:58:22.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:22.414" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/35163-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:25.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:25.091" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:22.413" endtime="20200727 01:58:25.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:25.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:25.092" endtime="20200727 01:58:25.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:25.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:25.093" endtime="20200727 01:58:25.093"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:22.412" endtime="20200727 01:58:25.093"></status>
</kw>
<msg timestamp="20200727 01:58:25.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:22.412" endtime="20200727 01:58:25.094"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:22.411" endtime="20200727 01:58:25.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:25.098" level="INFO">Running command 'ozone sh volume delete o3://om:9862/35163-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:27.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:27.786" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:25.096" endtime="20200727 01:58:27.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:27.787" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 35163-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200727 01:58:27.786" endtime="20200727 01:58:27.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:27.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:27.787" endtime="20200727 01:58:27.788"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:25.095" endtime="20200727 01:58:27.788"></status>
</kw>
<msg timestamp="20200727 01:58:27.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:25.095" endtime="20200727 01:58:27.788"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:25.094" endtime="20200727 01:58:27.788"></status>
</kw>
<status status="PASS" starttime="20200727 01:56:57.310" endtime="20200727 01:58:27.789"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:56:57.282" endtime="20200727 01:58:27.789" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:27.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:27.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:27.796" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:58:27.793" endtime="20200727 01:58:27.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:27.798" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:58:27.797" endtime="20200727 01:58:27.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:27.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:27.798" endtime="20200727 01:58:27.799"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.792" endtime="20200727 01:58:27.799"></status>
</kw>
<msg timestamp="20200727 01:58:27.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:27.792" endtime="20200727 01:58:27.799"></status>
</kw>
<msg timestamp="20200727 01:58:27.799" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:58:27.791" endtime="20200727 01:58:27.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:58:27.800" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:58:27.799" endtime="20200727 01:58:27.800"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:27.805" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:27.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:27.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:58:27.802" endtime="20200727 01:58:27.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:27.815" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:58:27.815" endtime="20200727 01:58:27.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:27.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:27.815" endtime="20200727 01:58:27.816"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.802" endtime="20200727 01:58:27.816"></status>
</kw>
<msg timestamp="20200727 01:58:27.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:27.801" endtime="20200727 01:58:27.816"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.801" endtime="20200727 01:58:27.817"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.800" endtime="20200727 01:58:27.817"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.791" endtime="20200727 01:58:27.817"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.790" endtime="20200727 01:58:27.817"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:27.821" level="INFO">Running command 'ozone sh volume create o3://om:9862/35163-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:31.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:31.202" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:27.819" endtime="20200727 01:58:31.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:31.203" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:31.202" endtime="20200727 01:58:31.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:31.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:31.203" endtime="20200727 01:58:31.204"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.819" endtime="20200727 01:58:31.205"></status>
</kw>
<msg timestamp="20200727 01:58:31.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:27.818" endtime="20200727 01:58:31.205"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.818" endtime="20200727 01:58:31.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:31.211" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/35163-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:34.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:34.049" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:31.207" endtime="20200727 01:58:34.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:34.050" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:58:34.049" endtime="20200727 01:58:34.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:34.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:34.050" endtime="20200727 01:58:34.050"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:31.206" endtime="20200727 01:58:34.051"></status>
</kw>
<msg timestamp="20200727 01:58:34.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:31.206" endtime="20200727 01:58:34.051"></status>
</kw>
<msg timestamp="20200727 01:58:34.051" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:31.205" endtime="20200727 01:58:34.051"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:34.052" endtime="20200727 01:58:34.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:34.057" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/35163-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:36.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:36.774" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:34.054" endtime="20200727 01:58:36.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:36.775" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 01:58:36.775" endtime="20200727 01:58:36.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:36.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:36.776" endtime="20200727 01:58:36.776"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:34.054" endtime="20200727 01:58:36.776"></status>
</kw>
<msg timestamp="20200727 01:58:36.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:34.053" endtime="20200727 01:58:36.777"></status>
</kw>
<msg timestamp="20200727 01:58:36.777" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:34.053" endtime="20200727 01:58:36.777"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:36.781" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/35163-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:39.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:39.890" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:36.779" endtime="20200727 01:58:39.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:39.891" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:58:39.890" endtime="20200727 01:58:39.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:39.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:39.891" endtime="20200727 01:58:39.891"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:36.778" endtime="20200727 01:58:39.892"></status>
</kw>
<msg timestamp="20200727 01:58:39.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:36.778" endtime="20200727 01:58:39.892"></status>
</kw>
<msg timestamp="20200727 01:58:39.892" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:36.777" endtime="20200727 01:58:39.892"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:39.893" endtime="20200727 01:58:39.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:39.897" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/35163-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:42.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:42.693" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:39.895" endtime="20200727 01:58:42.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:42.694" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 01:58:42.694" endtime="20200727 01:58:42.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:42.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:42.695" endtime="20200727 01:58:42.695"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:39.895" endtime="20200727 01:58:42.696"></status>
</kw>
<msg timestamp="20200727 01:58:42.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:39.894" endtime="20200727 01:58:42.696"></status>
</kw>
<msg timestamp="20200727 01:58:42.696" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:39.894" endtime="20200727 01:58:42.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:42.700" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/35163-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:45.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:45.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:42.698" endtime="20200727 01:58:45.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:45.872" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:58:45.871" endtime="20200727 01:58:45.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:45.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:45.872" endtime="20200727 01:58:45.872"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:42.697" endtime="20200727 01:58:45.873"></status>
</kw>
<msg timestamp="20200727 01:58:45.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:42.697" endtime="20200727 01:58:45.873"></status>
</kw>
<msg timestamp="20200727 01:58:45.873" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:42.696" endtime="20200727 01:58:45.873"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:45.873" endtime="20200727 01:58:45.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:45.878" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/35163-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:48.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:48.526" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:45.876" endtime="20200727 01:58:48.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:48.527" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:58:48.526" endtime="20200727 01:58:48.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:48.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:48.527" endtime="20200727 01:58:48.528"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:45.875" endtime="20200727 01:58:48.528"></status>
</kw>
<msg timestamp="20200727 01:58:48.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:45.875" endtime="20200727 01:58:48.528"></status>
</kw>
<msg timestamp="20200727 01:58:48.528" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:45.874" endtime="20200727 01:58:48.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:48.532" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/35163-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:51.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:51.389" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:48.530" endtime="20200727 01:58:51.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:51.390" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:58:51.389" endtime="20200727 01:58:51.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:51.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:51.390" endtime="20200727 01:58:51.391"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:48.530" endtime="20200727 01:58:51.391"></status>
</kw>
<msg timestamp="20200727 01:58:51.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:48.529" endtime="20200727 01:58:51.391"></status>
</kw>
<msg timestamp="20200727 01:58:51.392" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:48.529" endtime="20200727 01:58:51.392"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:51.392" endtime="20200727 01:58:51.392"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:51.392" endtime="20200727 01:58:51.393"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:27.817" endtime="20200727 01:58:51.394"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:58:27.790" endtime="20200727 01:58:51.394" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:51.402" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:51.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:51.403" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:58:51.398" endtime="20200727 01:58:51.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:51.404" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:58:51.403" endtime="20200727 01:58:51.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:51.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:51.404" endtime="20200727 01:58:51.404"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.397" endtime="20200727 01:58:51.405"></status>
</kw>
<msg timestamp="20200727 01:58:51.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:51.397" endtime="20200727 01:58:51.405"></status>
</kw>
<msg timestamp="20200727 01:58:51.405" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:58:51.396" endtime="20200727 01:58:51.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:58:51.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:58:51.405" endtime="20200727 01:58:51.406"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:51.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:51.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:51.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:58:51.408" endtime="20200727 01:58:51.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:51.420" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:58:51.420" endtime="20200727 01:58:51.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:51.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:51.421" endtime="20200727 01:58:51.421"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.407" endtime="20200727 01:58:51.422"></status>
</kw>
<msg timestamp="20200727 01:58:51.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:51.407" endtime="20200727 01:58:51.422"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.406" endtime="20200727 01:58:51.422"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.406" endtime="20200727 01:58:51.422"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.396" endtime="20200727 01:58:51.422"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.395" endtime="20200727 01:58:51.422"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:51.427" level="INFO">Running command 'ozone sh bucket create o3://om:9862/35163-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:54.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:54.228" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:51.425" endtime="20200727 01:58:54.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:54.230" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:58:54.229" endtime="20200727 01:58:54.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:54.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:54.230" endtime="20200727 01:58:54.230"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.424" endtime="20200727 01:58:54.231"></status>
</kw>
<msg timestamp="20200727 01:58:54.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:51.424" endtime="20200727 01:58:54.231"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.423" endtime="20200727 01:58:54.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:54.235" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/35163-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:57.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:57.187" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:54.233" endtime="20200727 01:58:57.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:57.189" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:58:57.188" endtime="20200727 01:58:57.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:57.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:57.189" endtime="20200727 01:58:57.190"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:54.232" endtime="20200727 01:58:57.190"></status>
</kw>
<msg timestamp="20200727 01:58:57.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:54.232" endtime="20200727 01:58:57.190"></status>
</kw>
<msg timestamp="20200727 01:58:57.191" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:54.231" endtime="20200727 01:58:57.191"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:58:57.191" endtime="20200727 01:58:57.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:57.203" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/35163-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:58:59.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:58:59.932" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:57.201" endtime="20200727 01:58:59.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:58:59.933" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 01:58:59.932" endtime="20200727 01:58:59.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:58:59.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:58:59.933" endtime="20200727 01:58:59.934"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:57.200" endtime="20200727 01:58:59.934"></status>
</kw>
<msg timestamp="20200727 01:58:59.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:57.192" endtime="20200727 01:58:59.934"></status>
</kw>
<msg timestamp="20200727 01:58:59.935" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:57.191" endtime="20200727 01:58:59.935"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:58:59.938" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/35163-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:02.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:02.748" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:59.936" endtime="20200727 01:59:02.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:02.749" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:02.748" endtime="20200727 01:59:02.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:02.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:02.749" endtime="20200727 01:59:02.750"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:59.936" endtime="20200727 01:59:02.750"></status>
</kw>
<msg timestamp="20200727 01:59:02.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:58:59.935" endtime="20200727 01:59:02.750"></status>
</kw>
<msg timestamp="20200727 01:59:02.750" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:58:59.935" endtime="20200727 01:59:02.750"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:02.751" endtime="20200727 01:59:02.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:02.755" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/35163-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:05.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:05.494" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:02.753" endtime="20200727 01:59:05.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:05.495" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:59:05.495" endtime="20200727 01:59:05.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:05.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:05.496" endtime="20200727 01:59:05.496"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:02.753" endtime="20200727 01:59:05.496"></status>
</kw>
<msg timestamp="20200727 01:59:05.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:02.752" endtime="20200727 01:59:05.497"></status>
</kw>
<msg timestamp="20200727 01:59:05.497" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:02.752" endtime="20200727 01:59:05.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:05.501" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/35163-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:08.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:08.371" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:05.499" endtime="20200727 01:59:08.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:08.372" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:08.372" endtime="20200727 01:59:08.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:08.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:08.373" endtime="20200727 01:59:08.374"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:05.498" endtime="20200727 01:59:08.374"></status>
</kw>
<msg timestamp="20200727 01:59:08.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:05.498" endtime="20200727 01:59:08.375"></status>
</kw>
<msg timestamp="20200727 01:59:08.375" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:05.497" endtime="20200727 01:59:08.375"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:08.375" endtime="20200727 01:59:08.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:08.380" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/35163-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:11.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:11.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:08.378" endtime="20200727 01:59:11.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:11.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:59:11.059" endtime="20200727 01:59:11.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:11.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:11.060" endtime="20200727 01:59:11.060"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:08.377" endtime="20200727 01:59:11.060"></status>
</kw>
<msg timestamp="20200727 01:59:11.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:08.377" endtime="20200727 01:59:11.061"></status>
</kw>
<msg timestamp="20200727 01:59:11.061" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:08.376" endtime="20200727 01:59:11.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:11.066" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/35163-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:13.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:13.946" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:11.063" endtime="20200727 01:59:13.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:13.947" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:13.946" endtime="20200727 01:59:13.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:13.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:13.947" endtime="20200727 01:59:13.948"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:11.062" endtime="20200727 01:59:13.948"></status>
</kw>
<msg timestamp="20200727 01:59:13.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:11.062" endtime="20200727 01:59:13.948"></status>
</kw>
<msg timestamp="20200727 01:59:13.949" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:11.061" endtime="20200727 01:59:13.949"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:13.949" endtime="20200727 01:59:13.949"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:13.950" endtime="20200727 01:59:13.950"></status>
</kw>
<status status="PASS" starttime="20200727 01:58:51.422" endtime="20200727 01:59:13.950"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:58:51.395" endtime="20200727 01:59:13.950" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:13.957" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:13.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:13.959" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:59:13.954" endtime="20200727 01:59:13.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:13.960" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:59:13.959" endtime="20200727 01:59:13.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:13.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:13.960" endtime="20200727 01:59:13.961"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.954" endtime="20200727 01:59:13.961"></status>
</kw>
<msg timestamp="20200727 01:59:13.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:13.954" endtime="20200727 01:59:13.961"></status>
</kw>
<msg timestamp="20200727 01:59:13.962" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:59:13.953" endtime="20200727 01:59:13.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:59:13.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:59:13.962" endtime="20200727 01:59:13.962"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:13.966" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:13.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:13.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:59:13.964" endtime="20200727 01:59:13.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:13.985" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:59:13.984" endtime="20200727 01:59:13.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:13.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:13.985" endtime="20200727 01:59:13.985"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.964" endtime="20200727 01:59:13.986"></status>
</kw>
<msg timestamp="20200727 01:59:13.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:13.964" endtime="20200727 01:59:13.986"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.963" endtime="20200727 01:59:13.986"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.963" endtime="20200727 01:59:13.986"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.953" endtime="20200727 01:59:13.986"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.952" endtime="20200727 01:59:13.986"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:13.991" level="INFO">Running command 'ozone sh key put o3://om:9862/35163-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:18.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:18.733" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:13.989" endtime="20200727 01:59:18.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:18.735" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:59:18.733" endtime="20200727 01:59:18.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:18.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:18.736" endtime="20200727 01:59:18.737"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.988" endtime="20200727 01:59:18.737"></status>
</kw>
<msg timestamp="20200727 01:59:18.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:13.988" endtime="20200727 01:59:18.738"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.987" endtime="20200727 01:59:18.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:18.742" level="INFO">Running command 'ozone sh key getacl o3://om:9862/35163-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:21.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:21.620" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:18.740" endtime="20200727 01:59:21.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:21.622" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:21.621" endtime="20200727 01:59:21.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:21.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:21.622" endtime="20200727 01:59:21.623"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:18.739" endtime="20200727 01:59:21.623"></status>
</kw>
<msg timestamp="20200727 01:59:21.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:18.739" endtime="20200727 01:59:21.623"></status>
</kw>
<msg timestamp="20200727 01:59:21.623" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:18.738" endtime="20200727 01:59:21.623"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:21.623" endtime="20200727 01:59:21.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:21.628" level="INFO">Running command 'ozone sh key addacl o3://om:9862/35163-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:24.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:24.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:21.626" endtime="20200727 01:59:24.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:24.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:59:24.441" endtime="20200727 01:59:24.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:24.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:24.442" endtime="20200727 01:59:24.442"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:21.625" endtime="20200727 01:59:24.443"></status>
</kw>
<msg timestamp="20200727 01:59:24.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:21.625" endtime="20200727 01:59:24.443"></status>
</kw>
<msg timestamp="20200727 01:59:24.443" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:21.624" endtime="20200727 01:59:24.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:24.446" level="INFO">Running command 'ozone sh key getacl o3://om:9862/35163-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:27.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:27.373" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:24.445" endtime="20200727 01:59:27.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:27.375" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:27.374" endtime="20200727 01:59:27.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:27.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:27.375" endtime="20200727 01:59:27.375"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:24.444" endtime="20200727 01:59:27.376"></status>
</kw>
<msg timestamp="20200727 01:59:27.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:24.444" endtime="20200727 01:59:27.376"></status>
</kw>
<msg timestamp="20200727 01:59:27.376" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:24.443" endtime="20200727 01:59:27.376"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:27.376" endtime="20200727 01:59:27.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:27.381" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/35163-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:30.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:30.226" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:27.379" endtime="20200727 01:59:30.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:30.227" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:59:30.226" endtime="20200727 01:59:30.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:30.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:30.227" endtime="20200727 01:59:30.228"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:27.378" endtime="20200727 01:59:30.228"></status>
</kw>
<msg timestamp="20200727 01:59:30.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:27.378" endtime="20200727 01:59:30.228"></status>
</kw>
<msg timestamp="20200727 01:59:30.228" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:27.378" endtime="20200727 01:59:30.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:30.233" level="INFO">Running command 'ozone sh key getacl o3://om:9862/35163-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:33.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:33.148" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:30.230" endtime="20200727 01:59:33.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:33.154" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:33.149" endtime="20200727 01:59:33.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:33.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:33.154" endtime="20200727 01:59:33.154"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:30.230" endtime="20200727 01:59:33.155"></status>
</kw>
<msg timestamp="20200727 01:59:33.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:30.229" endtime="20200727 01:59:33.155"></status>
</kw>
<msg timestamp="20200727 01:59:33.155" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:30.229" endtime="20200727 01:59:33.155"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:33.155" endtime="20200727 01:59:33.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:33.161" level="INFO">Running command 'ozone sh key setacl o3://om:9862/35163-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:35.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:35.897" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:33.158" endtime="20200727 01:59:35.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:35.898" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:59:35.897" endtime="20200727 01:59:35.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:35.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:35.898" endtime="20200727 01:59:35.899"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:33.157" endtime="20200727 01:59:35.899"></status>
</kw>
<msg timestamp="20200727 01:59:35.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:33.157" endtime="20200727 01:59:35.899"></status>
</kw>
<msg timestamp="20200727 01:59:35.899" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:33.156" endtime="20200727 01:59:35.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:35.903" level="INFO">Running command 'ozone sh key getacl o3://om:9862/35163-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:39.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:39.079" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:35.901" endtime="20200727 01:59:39.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:39.080" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:59:39.079" endtime="20200727 01:59:39.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:39.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:39.081" endtime="20200727 01:59:39.081"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:35.901" endtime="20200727 01:59:39.082"></status>
</kw>
<msg timestamp="20200727 01:59:39.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:35.900" endtime="20200727 01:59:39.082"></status>
</kw>
<msg timestamp="20200727 01:59:39.082" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:35.900" endtime="20200727 01:59:39.082"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:39.082" endtime="20200727 01:59:39.083"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:39.083" endtime="20200727 01:59:39.084"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:13.987" endtime="20200727 01:59:39.084"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:59:13.951" endtime="20200727 01:59:39.084" critical="yes"></status>
</test>
<test id="s1-s3-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:39.090" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:39.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:39.093" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 01:59:39.088" endtime="20200727 01:59:39.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:39.094" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 01:59:39.093" endtime="20200727 01:59:39.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:39.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:39.094" endtime="20200727 01:59:39.094"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.088" endtime="20200727 01:59:39.095"></status>
</kw>
<msg timestamp="20200727 01:59:39.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:39.087" endtime="20200727 01:59:39.095"></status>
</kw>
<msg timestamp="20200727 01:59:39.095" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 01:59:39.087" endtime="20200727 01:59:39.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 01:59:39.096" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 01:59:39.096" endtime="20200727 01:59:39.096"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:39.101" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:39.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:39.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:59:39.098" endtime="20200727 01:59:39.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:39.117" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:59:39.116" endtime="20200727 01:59:39.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:39.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:39.117" endtime="20200727 01:59:39.118"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.098" endtime="20200727 01:59:39.118"></status>
</kw>
<msg timestamp="20200727 01:59:39.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:39.098" endtime="20200727 01:59:39.118"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.097" endtime="20200727 01:59:39.119"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.096" endtime="20200727 01:59:39.119"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.086" endtime="20200727 01:59:39.119"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.086" endtime="20200727 01:59:39.119"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:39.123" level="INFO">Running command 'ozone sh volume info o3:///35163-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:41.880" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:59:41.880" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:39.120" endtime="20200727 01:59:41.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:41.881" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 35163-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 01:59:41.881" endtime="20200727 01:59:41.882"></status>
</kw>
<msg timestamp="20200727 01:59:41.882" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:39.120" endtime="20200727 01:59:41.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:41.882" endtime="20200727 01:59:41.882"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:41.886" level="INFO">Running command 'ozone sh volume create o3:///35163-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:44.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:44.574" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:41.884" endtime="20200727 01:59:44.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:44.575" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:59:44.574" endtime="20200727 01:59:44.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:44.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:44.575" endtime="20200727 01:59:44.576"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:41.884" endtime="20200727 01:59:44.576"></status>
</kw>
<msg timestamp="20200727 01:59:44.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:41.883" endtime="20200727 01:59:44.576"></status>
</kw>
<msg timestamp="20200727 01:59:44.577" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:41.883" endtime="20200727 01:59:44.577"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:44.577" endtime="20200727 01:59:44.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:44.581" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="35163-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:47.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:47.613" level="INFO">${output} = {
  "metadata": {},
  "name": "35163-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:59:44.520Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 01:59:44.579" endtime="20200727 01:59:47.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:47.614" level="INFO">{
  "metadata": {},
  "name": "35163-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:59:44.520Z",
  "modificationTime": "2020-07-27T01:59:44.520Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:59:47.613" endtime="20200727 01:59:47.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:47.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:47.614" endtime="20200727 01:59:47.615"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:44.578" endtime="20200727 01:59:47.615"></status>
</kw>
<msg timestamp="20200727 01:59:47.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:44.578" endtime="20200727 01:59:47.615"></status>
</kw>
<msg timestamp="20200727 01:59:47.616" level="INFO">${result} = {
  "metadata": {},
  "name": "35163-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:59:44.520Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 01:59:44.577" endtime="20200727 01:59:47.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:47.616" endtime="20200727 01:59:47.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:47.621" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="35163-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:50.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:50.743" level="INFO">${output} = {
  "metadata": {},
  "name": "35163-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:59:44.520Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 01:59:47.618" endtime="20200727 01:59:50.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:50.744" level="INFO">{
  "metadata": {},
  "name": "35163-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:59:44.520Z",
  "modificationTime": "2020-07-27T01:59:44.520Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:59:50.744" endtime="20200727 01:59:50.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:50.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:50.745" endtime="20200727 01:59:50.745"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:47.617" endtime="20200727 01:59:50.746"></status>
</kw>
<msg timestamp="20200727 01:59:50.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:47.617" endtime="20200727 01:59:50.746"></status>
</kw>
<msg timestamp="20200727 01:59:50.746" level="INFO">${result} = {
  "metadata": {},
  "name": "35163-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T01:59:44.520Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 01:59:47.616" endtime="20200727 01:59:50.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:50.746" endtime="20200727 01:59:50.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:50.750" level="INFO">Running command 'ozone sh volume update o3:///35163-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:53.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:53.582" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:50.748" endtime="20200727 01:59:53.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:53.583" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "35163-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-07-27T01:59:44.520Z",
  "modificationTime" : "2020-07-27T01:59:53.272Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 01:59:53.582" endtime="20200727 01:59:53.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:53.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:53.583" endtime="20200727 01:59:53.584"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:50.748" endtime="20200727 01:59:53.584"></status>
</kw>
<msg timestamp="20200727 01:59:53.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:50.747" endtime="20200727 01:59:53.584"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:50.747" endtime="20200727 01:59:53.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:53.590" level="INFO">Running command 'ozone sh volume info o3:///35163-rpcwport | jq -r '. | select(.name=="35163-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:56.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:56.515" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:59:53.587" endtime="20200727 01:59:56.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:56.516" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 01:59:56.515" endtime="20200727 01:59:56.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:56.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:56.517" endtime="20200727 01:59:56.517"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:53.586" endtime="20200727 01:59:56.518"></status>
</kw>
<msg timestamp="20200727 01:59:56.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:53.586" endtime="20200727 01:59:56.518"></status>
</kw>
<msg timestamp="20200727 01:59:56.518" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:59:53.585" endtime="20200727 01:59:56.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 01:59:56.518" endtime="20200727 01:59:56.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:56.523" level="INFO">Running command 'ozone sh bucket create o3:///35163-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:59:59.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:59:59.364" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 01:59:56.520" endtime="20200727 01:59:59.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:59:59.365" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 01:59:59.365" endtime="20200727 01:59:59.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:59:59.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:59:59.366" endtime="20200727 01:59:59.366"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:56.520" endtime="20200727 01:59:59.367"></status>
</kw>
<msg timestamp="20200727 01:59:59.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:56.520" endtime="20200727 01:59:59.367"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:56.519" endtime="20200727 01:59:59.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:59:59.372" level="INFO">Running command 'ozone sh bucket info o3:///35163-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:02.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:02.399" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 01:59:59.369" endtime="20200727 02:00:02.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:02.400" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 02:00:02.400" endtime="20200727 02:00:02.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:02.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:02.401" endtime="20200727 02:00:02.401"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:59.368" endtime="20200727 02:00:02.401"></status>
</kw>
<msg timestamp="20200727 02:00:02.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:59:59.368" endtime="20200727 02:00:02.402"></status>
</kw>
<msg timestamp="20200727 02:00:02.402" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 01:59:59.367" endtime="20200727 02:00:02.402"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:02.402" endtime="20200727 02:00:02.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:02.406" level="INFO">Running command 'ozone sh bucket list o3:///35163-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:05.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:05.379" level="INFO">${output} = 35163-rpcwport</msg>
<status status="PASS" starttime="20200727 02:00:02.404" endtime="20200727 02:00:05.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:05.380" level="INFO">35163-rpcwport</msg>
<status status="PASS" starttime="20200727 02:00:05.380" endtime="20200727 02:00:05.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:05.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:05.381" endtime="20200727 02:00:05.381"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:02.404" endtime="20200727 02:00:05.381"></status>
</kw>
<msg timestamp="20200727 02:00:05.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:02.404" endtime="20200727 02:00:05.382"></status>
</kw>
<msg timestamp="20200727 02:00:05.382" level="INFO">${result} = 35163-rpcwport</msg>
<status status="PASS" starttime="20200727 02:00:02.403" endtime="20200727 02:00:05.382"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:05.382" endtime="20200727 02:00:05.382"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:05.389" level="INFO">Running command 'ozone sh key put o3:///35163-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:10.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:10.109" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:05.386" endtime="20200727 02:00:10.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:10.111" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:10.110" endtime="20200727 02:00:10.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:10.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:10.111" endtime="20200727 02:00:10.112"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:05.385" endtime="20200727 02:00:10.112"></status>
</kw>
<msg timestamp="20200727 02:00:10.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:05.385" endtime="20200727 02:00:10.112"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:05.384" endtime="20200727 02:00:10.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:10.117" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:10.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:10.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:00:10.114" endtime="20200727 02:00:10.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:10.120" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:00:10.119" endtime="20200727 02:00:10.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:10.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:10.120" endtime="20200727 02:00:10.121"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:10.114" endtime="20200727 02:00:10.121"></status>
</kw>
<msg timestamp="20200727 02:00:10.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:10.113" endtime="20200727 02:00:10.122"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:10.113" endtime="20200727 02:00:10.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:10.126" level="INFO">Running command 'ozone sh key get o3:///35163-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:14.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:14.463" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:10.124" endtime="20200727 02:00:14.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:14.465" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:14.464" endtime="20200727 02:00:14.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:14.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:14.465" endtime="20200727 02:00:14.466"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:10.123" endtime="20200727 02:00:14.466"></status>
</kw>
<msg timestamp="20200727 02:00:14.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:10.123" endtime="20200727 02:00:14.466"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:10.122" endtime="20200727 02:00:14.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:14.471" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:14.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:14.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:00:14.469" endtime="20200727 02:00:14.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:14.475" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:00:14.474" endtime="20200727 02:00:14.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:14.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:14.476" endtime="20200727 02:00:14.476"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:14.468" endtime="20200727 02:00:14.476"></status>
</kw>
<msg timestamp="20200727 02:00:14.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:14.468" endtime="20200727 02:00:14.477"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:14.467" endtime="20200727 02:00:14.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:14.482" level="INFO">Running command 'ozone sh key put -t RATIS o3:///35163-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:19.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:19.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:14.479" endtime="20200727 02:00:19.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:19.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:19.059" endtime="20200727 02:00:19.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:19.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:19.060" endtime="20200727 02:00:19.060"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:14.478" endtime="20200727 02:00:19.061"></status>
</kw>
<msg timestamp="20200727 02:00:19.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:14.478" endtime="20200727 02:00:19.061"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:14.477" endtime="20200727 02:00:19.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:19.066" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:19.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:19.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:00:19.063" endtime="20200727 02:00:19.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:19.069" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:00:19.068" endtime="20200727 02:00:19.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:19.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:19.069" endtime="20200727 02:00:19.070"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:19.062" endtime="20200727 02:00:19.070"></status>
</kw>
<msg timestamp="20200727 02:00:19.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:19.062" endtime="20200727 02:00:19.070"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:19.061" endtime="20200727 02:00:19.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:19.075" level="INFO">Running command 'ozone sh key get o3:///35163-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:23.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:23.588" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:19.072" endtime="20200727 02:00:23.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:23.590" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:23.589" endtime="20200727 02:00:23.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:23.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:23.590" endtime="20200727 02:00:23.590"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:19.071" endtime="20200727 02:00:23.591"></status>
</kw>
<msg timestamp="20200727 02:00:23.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:19.071" endtime="20200727 02:00:23.591"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:19.070" endtime="20200727 02:00:23.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:23.595" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:23.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:23.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:00:23.593" endtime="20200727 02:00:23.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:23.598" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:00:23.598" endtime="20200727 02:00:23.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:23.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:23.599" endtime="20200727 02:00:23.599"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:23.592" endtime="20200727 02:00:23.599"></status>
</kw>
<msg timestamp="20200727 02:00:23.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:23.592" endtime="20200727 02:00:23.600"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:23.591" endtime="20200727 02:00:23.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:23.604" level="INFO">Running command 'ozone sh key info o3:///35163-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:26.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:26.615" level="INFO">${output} = {
  "volumeName": "35163-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:00:17.145Z",
  "modificationTime": "2020-07-27T02:00:18.544Z",
...</msg>
<status status="PASS" starttime="20200727 02:00:23.602" endtime="20200727 02:00:26.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:26.616" level="INFO">{
  "volumeName": "35163-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:00:17.145Z",
  "modificationTime": "2020-07-27T02:00:18.544Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583346070618240,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 02:00:26.616" endtime="20200727 02:00:26.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:26.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:26.617" endtime="20200727 02:00:26.617"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:23.601" endtime="20200727 02:00:26.618"></status>
</kw>
<msg timestamp="20200727 02:00:26.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:23.601" endtime="20200727 02:00:26.618"></status>
</kw>
<msg timestamp="20200727 02:00:26.618" level="INFO">${result} = {
  "volumeName": "35163-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:00:17.145Z",
  "modificationTime": "2020-07-27T02:00:18.544Z",
...</msg>
<status status="PASS" starttime="20200727 02:00:23.600" endtime="20200727 02:00:26.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:26.618" endtime="20200727 02:00:26.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:26.623" level="INFO">Running command 'ozone sh key delete o3:///35163-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:29.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:29.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:26.620" endtime="20200727 02:00:29.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:29.352" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:29.352" endtime="20200727 02:00:29.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:29.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:29.353" endtime="20200727 02:00:29.353"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:26.620" endtime="20200727 02:00:29.354"></status>
</kw>
<msg timestamp="20200727 02:00:29.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:26.619" endtime="20200727 02:00:29.354"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:26.619" endtime="20200727 02:00:29.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:29.357" level="INFO">Running command 'ozone sh key cp o3:///35163-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:34.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:34.535" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:29.356" endtime="20200727 02:00:34.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:34.536" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:34.535" endtime="20200727 02:00:34.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:34.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:34.536" endtime="20200727 02:00:34.537"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:29.355" endtime="20200727 02:00:34.537"></status>
</kw>
<msg timestamp="20200727 02:00:34.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:29.355" endtime="20200727 02:00:34.537"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:29.354" endtime="20200727 02:00:34.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:34.541" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:34.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:34.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:00:34.539" endtime="20200727 02:00:34.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:34.544" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:00:34.544" endtime="20200727 02:00:34.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:34.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:34.544" endtime="20200727 02:00:34.545"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:34.538" endtime="20200727 02:00:34.545"></status>
</kw>
<msg timestamp="20200727 02:00:34.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:34.538" endtime="20200727 02:00:34.545"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:34.537" endtime="20200727 02:00:34.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:34.550" level="INFO">Running command 'ozone sh key get o3:///35163-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:39.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:39.112" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:34.547" endtime="20200727 02:00:39.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:39.113" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:39.113" endtime="20200727 02:00:39.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:39.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:39.114" endtime="20200727 02:00:39.114"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:34.547" endtime="20200727 02:00:39.115"></status>
</kw>
<msg timestamp="20200727 02:00:39.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:34.546" endtime="20200727 02:00:39.115"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:34.546" endtime="20200727 02:00:39.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:39.119" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:39.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:39.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:00:39.117" endtime="20200727 02:00:39.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:39.123" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:00:39.122" endtime="20200727 02:00:39.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:39.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:39.123" endtime="20200727 02:00:39.123"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:39.116" endtime="20200727 02:00:39.124"></status>
</kw>
<msg timestamp="20200727 02:00:39.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:39.116" endtime="20200727 02:00:39.124"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:39.115" endtime="20200727 02:00:39.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:39.128" level="INFO">Running command 'ozone sh key delete o3:///35163-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:42.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:42.425" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:39.126" endtime="20200727 02:00:42.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:42.427" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:42.426" endtime="20200727 02:00:42.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:42.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:42.427" endtime="20200727 02:00:42.427"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:39.125" endtime="20200727 02:00:42.428"></status>
</kw>
<msg timestamp="20200727 02:00:42.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:39.125" endtime="20200727 02:00:42.428"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:39.124" endtime="20200727 02:00:42.428"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:42.431" level="INFO">Running command 'ozone sh key get o3:///35163-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:45.236" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:00:45.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:42.429" endtime="20200727 02:00:45.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:45.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 02:00:45.237" endtime="20200727 02:00:45.238"></status>
</kw>
<msg timestamp="20200727 02:00:45.238" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:42.428" endtime="20200727 02:00:45.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:45.239" endtime="20200727 02:00:45.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:45.244" level="INFO">Running command 'ozone sh key get --force o3:///35163-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:49.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:49.964" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:45.242" endtime="20200727 02:00:49.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:49.965" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:49.964" endtime="20200727 02:00:49.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:49.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:49.965" endtime="20200727 02:00:49.966"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:45.240" endtime="20200727 02:00:49.966"></status>
</kw>
<msg timestamp="20200727 02:00:49.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:45.240" endtime="20200727 02:00:49.967"></status>
</kw>
<msg timestamp="20200727 02:00:49.967" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:45.239" endtime="20200727 02:00:49.967"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:49.967" endtime="20200727 02:00:49.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:49.972" level="INFO">Running command 'ozone sh key info o3:///35163-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:52.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:52.981" level="INFO">${output} = {
  "volumeName": "35163-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:00:08.013Z",
  "modificationTime": "2020-07-27T02:00:09.658Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 02:00:49.970" endtime="20200727 02:00:52.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:52.983" level="INFO">{
  "volumeName": "35163-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:00:08.013Z",
  "modificationTime": "2020-07-27T02:00:09.658Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583345472077950,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 02:00:52.982" endtime="20200727 02:00:52.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:52.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:52.983" endtime="20200727 02:00:52.983"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:49.969" endtime="20200727 02:00:52.984"></status>
</kw>
<msg timestamp="20200727 02:00:52.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:49.969" endtime="20200727 02:00:52.984"></status>
</kw>
<msg timestamp="20200727 02:00:52.984" level="INFO">${result} = {
  "volumeName": "35163-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:00:08.013Z",
  "modificationTime": "2020-07-27T02:00:09.658Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 02:00:49.968" endtime="20200727 02:00:52.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:52.984" endtime="20200727 02:00:52.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:52.989" level="INFO">Running command 'ozone sh key list o3:///35163-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:55.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:55.905" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 02:00:52.987" endtime="20200727 02:00:55.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:55.906" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 02:00:55.905" endtime="20200727 02:00:55.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:55.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:55.906" endtime="20200727 02:00:55.907"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:52.986" endtime="20200727 02:00:55.907"></status>
</kw>
<msg timestamp="20200727 02:00:55.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:52.986" endtime="20200727 02:00:55.907"></status>
</kw>
<msg timestamp="20200727 02:00:55.907" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 02:00:52.985" endtime="20200727 02:00:55.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:00:55.908" endtime="20200727 02:00:55.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:55.911" level="INFO">Running command 'ozone sh key rename o3:///35163-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:00:58.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:00:58.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:00:55.910" endtime="20200727 02:00:58.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:00:58.779" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:00:58.778" endtime="20200727 02:00:58.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:00:58.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:00:58.779" endtime="20200727 02:00:58.780"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:55.909" endtime="20200727 02:00:58.780"></status>
</kw>
<msg timestamp="20200727 02:00:58.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:55.909" endtime="20200727 02:00:58.780"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:55.908" endtime="20200727 02:00:58.781"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:00:58.785" level="INFO">Running command 'ozone sh key list o3:///35163-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:01.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:01.835" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 02:00:58.782" endtime="20200727 02:01:01.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:01.836" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 02:01:01.835" endtime="20200727 02:01:01.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:01.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:01.836" endtime="20200727 02:01:01.837"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:58.782" endtime="20200727 02:01:01.837"></status>
</kw>
<msg timestamp="20200727 02:01:01.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:00:58.781" endtime="20200727 02:01:01.837"></status>
</kw>
<msg timestamp="20200727 02:01:01.837" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 02:00:58.781" endtime="20200727 02:01:01.837"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:01.838" endtime="20200727 02:01:01.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:01.841" level="INFO">Running command 'ozone sh key delete o3:///35163-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:04.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:04.622" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:01.840" endtime="20200727 02:01:04.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:04.623" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:04.622" endtime="20200727 02:01:04.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:04.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:04.623" endtime="20200727 02:01:04.624"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:01.839" endtime="20200727 02:01:04.624"></status>
</kw>
<msg timestamp="20200727 02:01:04.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:01.839" endtime="20200727 02:01:04.624"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:01.838" endtime="20200727 02:01:04.625"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:05.383" endtime="20200727 02:01:04.625"></status>
</kw>
<status status="PASS" starttime="20200727 02:00:05.383" endtime="20200727 02:01:04.625"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:04.629" level="INFO">Running command 'ozone sh bucket delete o3:///35163-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:07.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:07.508" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:04.627" endtime="20200727 02:01:07.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:07.509" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:07.508" endtime="20200727 02:01:07.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:07.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:07.509" endtime="20200727 02:01:07.510"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:04.626" endtime="20200727 02:01:07.510"></status>
</kw>
<msg timestamp="20200727 02:01:07.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:04.626" endtime="20200727 02:01:07.510"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:04.625" endtime="20200727 02:01:07.511"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:07.515" level="INFO">Running command 'ozone sh volume delete o3:///35163-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:10.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:10.449" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:07.512" endtime="20200727 02:01:10.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:10.450" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 35163-rpcwport is deleted</msg>
<status status="PASS" starttime="20200727 02:01:10.449" endtime="20200727 02:01:10.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:10.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:10.450" endtime="20200727 02:01:10.451"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:07.512" endtime="20200727 02:01:10.451"></status>
</kw>
<msg timestamp="20200727 02:01:10.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:07.512" endtime="20200727 02:01:10.451"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:07.511" endtime="20200727 02:01:10.451"></status>
</kw>
<status status="PASS" starttime="20200727 01:59:39.119" endtime="20200727 02:01:10.452"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:59:39.085" endtime="20200727 02:01:10.452" critical="yes"></status>
</test>
<test id="s1-s3-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:10.458" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:10.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:10.460" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:01:10.456" endtime="20200727 02:01:10.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:10.461" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:01:10.460" endtime="20200727 02:01:10.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:10.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:10.461" endtime="20200727 02:01:10.462"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.455" endtime="20200727 02:01:10.462"></status>
</kw>
<msg timestamp="20200727 02:01:10.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:10.455" endtime="20200727 02:01:10.462"></status>
</kw>
<msg timestamp="20200727 02:01:10.463" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:01:10.454" endtime="20200727 02:01:10.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:01:10.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:01:10.463" endtime="20200727 02:01:10.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:10.468" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:10.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:10.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:01:10.465" endtime="20200727 02:01:10.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:10.490" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:01:10.490" endtime="20200727 02:01:10.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:10.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:10.490" endtime="20200727 02:01:10.491"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.465" endtime="20200727 02:01:10.492"></status>
</kw>
<msg timestamp="20200727 02:01:10.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:10.464" endtime="20200727 02:01:10.492"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.464" endtime="20200727 02:01:10.492"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.463" endtime="20200727 02:01:10.493"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.454" endtime="20200727 02:01:10.493"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.453" endtime="20200727 02:01:10.493"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:10.496" level="INFO">Running command 'ozone sh volume info /35163-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:13.079" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:01:13.079" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:10.495" endtime="20200727 02:01:13.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:13.080" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 35163-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 02:01:13.079" endtime="20200727 02:01:13.080"></status>
</kw>
<msg timestamp="20200727 02:01:13.081" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:10.494" endtime="20200727 02:01:13.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:13.081" endtime="20200727 02:01:13.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:13.086" level="INFO">Running command 'ozone sh volume create /35163-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:15.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:15.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:13.083" endtime="20200727 02:01:15.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:15.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:15.870" endtime="20200727 02:01:15.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:15.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:15.872" endtime="20200727 02:01:15.872"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:13.083" endtime="20200727 02:01:15.872"></status>
</kw>
<msg timestamp="20200727 02:01:15.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:13.082" endtime="20200727 02:01:15.872"></status>
</kw>
<msg timestamp="20200727 02:01:15.873" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:13.082" endtime="20200727 02:01:15.873"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:15.873" endtime="20200727 02:01:15.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:15.877" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="35163-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:18.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:18.606" level="INFO">${output} = {
  "metadata": {},
  "name": "35163-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T02:01:15.696Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 02:01:15.875" endtime="20200727 02:01:18.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:18.607" level="INFO">{
  "metadata": {},
  "name": "35163-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T02:01:15.696Z",
  "modificationTime": "2020-07-27T02:01:15.696Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 02:01:18.606" endtime="20200727 02:01:18.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:18.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:18.607" endtime="20200727 02:01:18.608"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:15.874" endtime="20200727 02:01:18.608"></status>
</kw>
<msg timestamp="20200727 02:01:18.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:15.874" endtime="20200727 02:01:18.608"></status>
</kw>
<msg timestamp="20200727 02:01:18.608" level="INFO">${result} = {
  "metadata": {},
  "name": "35163-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T02:01:15.696Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 02:01:15.873" endtime="20200727 02:01:18.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:18.609" endtime="20200727 02:01:18.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:18.613" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="35163-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:21.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:21.555" level="INFO">${output} = {
  "metadata": {},
  "name": "35163-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T02:01:15.696Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 02:01:18.611" endtime="20200727 02:01:21.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:21.557" level="INFO">{
  "metadata": {},
  "name": "35163-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T02:01:15.696Z",
  "modificationTime": "2020-07-27T02:01:15.696Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 02:01:21.556" endtime="20200727 02:01:21.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:21.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:21.557" endtime="20200727 02:01:21.558"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:18.610" endtime="20200727 02:01:21.558"></status>
</kw>
<msg timestamp="20200727 02:01:21.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:18.610" endtime="20200727 02:01:21.558"></status>
</kw>
<msg timestamp="20200727 02:01:21.558" level="INFO">${result} = {
  "metadata": {},
  "name": "35163-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T02:01:15.696Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 02:01:18.609" endtime="20200727 02:01:21.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:21.559" endtime="20200727 02:01:21.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:21.564" level="INFO">Running command 'ozone sh volume update /35163-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:24.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:24.519" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:21.561" endtime="20200727 02:01:24.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:24.520" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "35163-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-07-27T02:01:15.696Z",
  "modificationTime" : "2020-07-27T02:01:24.199Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 02:01:24.520" endtime="20200727 02:01:24.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:24.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:24.521" endtime="20200727 02:01:24.521"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:21.560" endtime="20200727 02:01:24.522"></status>
</kw>
<msg timestamp="20200727 02:01:24.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:21.560" endtime="20200727 02:01:24.522"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:21.559" endtime="20200727 02:01:24.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:24.526" level="INFO">Running command 'ozone sh volume info /35163-rpcwoscheme | jq -r '. | select(.name=="35163-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:27.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:27.464" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 02:01:24.524" endtime="20200727 02:01:27.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:27.466" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 02:01:27.465" endtime="20200727 02:01:27.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:27.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:27.466" endtime="20200727 02:01:27.466"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:24.523" endtime="20200727 02:01:27.467"></status>
</kw>
<msg timestamp="20200727 02:01:27.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:24.523" endtime="20200727 02:01:27.467"></status>
</kw>
<msg timestamp="20200727 02:01:27.467" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 02:01:24.522" endtime="20200727 02:01:27.467"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:27.467" endtime="20200727 02:01:27.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:27.473" level="INFO">Running command 'ozone sh bucket create /35163-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:30.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:30.554" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:27.470" endtime="20200727 02:01:30.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:30.555" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:30.554" endtime="20200727 02:01:30.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:30.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:30.555" endtime="20200727 02:01:30.556"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:27.469" endtime="20200727 02:01:30.556"></status>
</kw>
<msg timestamp="20200727 02:01:30.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:27.469" endtime="20200727 02:01:30.557"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:27.468" endtime="20200727 02:01:30.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:30.562" level="INFO">Running command 'ozone sh bucket info /35163-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:33.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:33.388" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 02:01:30.559" endtime="20200727 02:01:33.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:33.389" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 02:01:33.388" endtime="20200727 02:01:33.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:33.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:33.389" endtime="20200727 02:01:33.390"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:30.558" endtime="20200727 02:01:33.390"></status>
</kw>
<msg timestamp="20200727 02:01:33.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:30.558" endtime="20200727 02:01:33.390"></status>
</kw>
<msg timestamp="20200727 02:01:33.390" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 02:01:30.557" endtime="20200727 02:01:33.390"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:33.390" endtime="20200727 02:01:33.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:33.395" level="INFO">Running command 'ozone sh bucket list /35163-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:36.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:36.272" level="INFO">${output} = 35163-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 02:01:33.393" endtime="20200727 02:01:36.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:36.273" level="INFO">35163-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 02:01:36.272" endtime="20200727 02:01:36.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:36.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:36.273" endtime="20200727 02:01:36.274"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:33.392" endtime="20200727 02:01:36.274"></status>
</kw>
<msg timestamp="20200727 02:01:36.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:33.392" endtime="20200727 02:01:36.274"></status>
</kw>
<msg timestamp="20200727 02:01:36.274" level="INFO">${result} = 35163-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 02:01:33.391" endtime="20200727 02:01:36.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:36.275" endtime="20200727 02:01:36.275"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:36.281" level="INFO">Running command 'ozone sh key put /35163-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:40.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:40.962" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:36.278" endtime="20200727 02:01:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:40.963" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:40.963" endtime="20200727 02:01:40.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:40.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:40.964" endtime="20200727 02:01:40.964"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:36.277" endtime="20200727 02:01:40.965"></status>
</kw>
<msg timestamp="20200727 02:01:40.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:36.277" endtime="20200727 02:01:40.965"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:36.276" endtime="20200727 02:01:40.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:40.969" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:40.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:40.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:01:40.967" endtime="20200727 02:01:40.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:40.972" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:01:40.972" endtime="20200727 02:01:40.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:40.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:40.972" endtime="20200727 02:01:40.973"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:40.966" endtime="20200727 02:01:40.973"></status>
</kw>
<msg timestamp="20200727 02:01:40.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:40.966" endtime="20200727 02:01:40.973"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:40.965" endtime="20200727 02:01:40.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:40.977" level="INFO">Running command 'ozone sh key get /35163-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:45.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:45.342" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:40.975" endtime="20200727 02:01:45.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:45.343" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:45.342" endtime="20200727 02:01:45.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:45.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:45.343" endtime="20200727 02:01:45.344"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:40.975" endtime="20200727 02:01:45.344"></status>
</kw>
<msg timestamp="20200727 02:01:45.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:40.974" endtime="20200727 02:01:45.344"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:40.974" endtime="20200727 02:01:45.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:45.349" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:45.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:45.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:01:45.347" endtime="20200727 02:01:45.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:45.352" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:01:45.352" endtime="20200727 02:01:45.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:45.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:45.353" endtime="20200727 02:01:45.353"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:45.346" endtime="20200727 02:01:45.354"></status>
</kw>
<msg timestamp="20200727 02:01:45.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:45.346" endtime="20200727 02:01:45.354"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:45.345" endtime="20200727 02:01:45.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:45.358" level="INFO">Running command 'ozone sh key put -t RATIS /35163-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:50.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:50.034" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:45.356" endtime="20200727 02:01:50.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:50.035" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:50.035" endtime="20200727 02:01:50.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:50.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:50.036" endtime="20200727 02:01:50.036"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:45.356" endtime="20200727 02:01:50.036"></status>
</kw>
<msg timestamp="20200727 02:01:50.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:45.355" endtime="20200727 02:01:50.037"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:45.354" endtime="20200727 02:01:50.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:50.041" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:50.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:50.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:01:50.039" endtime="20200727 02:01:50.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:50.044" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:01:50.044" endtime="20200727 02:01:50.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:50.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:50.045" endtime="20200727 02:01:50.045"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:50.038" endtime="20200727 02:01:50.046"></status>
</kw>
<msg timestamp="20200727 02:01:50.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:50.038" endtime="20200727 02:01:50.046"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:50.037" endtime="20200727 02:01:50.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:50.050" level="INFO">Running command 'ozone sh key get /35163-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:54.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:54.236" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:50.048" endtime="20200727 02:01:54.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:54.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:01:54.237" endtime="20200727 02:01:54.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:54.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:54.238" endtime="20200727 02:01:54.239"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:50.047" endtime="20200727 02:01:54.239"></status>
</kw>
<msg timestamp="20200727 02:01:54.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:50.047" endtime="20200727 02:01:54.239"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:50.046" endtime="20200727 02:01:54.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:54.243" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:54.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:54.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:01:54.241" endtime="20200727 02:01:54.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:54.247" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:01:54.246" endtime="20200727 02:01:54.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:54.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:54.247" endtime="20200727 02:01:54.247"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:54.240" endtime="20200727 02:01:54.248"></status>
</kw>
<msg timestamp="20200727 02:01:54.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:54.240" endtime="20200727 02:01:54.248"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:54.240" endtime="20200727 02:01:54.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:54.254" level="INFO">Running command 'ozone sh key info /35163-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:01:57.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:01:57.354" level="INFO">${output} = {
  "volumeName": "35163-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:01:47.985Z",
  "modificationTime": "2020-07-27T02:01:49.499Z...</msg>
<status status="PASS" starttime="20200727 02:01:54.250" endtime="20200727 02:01:57.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:01:57.356" level="INFO">{
  "volumeName": "35163-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:01:47.985Z",
  "modificationTime": "2020-07-27T02:01:49.499Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583352023908500,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 02:01:57.355" endtime="20200727 02:01:57.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:01:57.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:01:57.356" endtime="20200727 02:01:57.356"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:54.250" endtime="20200727 02:01:57.357"></status>
</kw>
<msg timestamp="20200727 02:01:57.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:54.249" endtime="20200727 02:01:57.357"></status>
</kw>
<msg timestamp="20200727 02:01:57.357" level="INFO">${result} = {
  "volumeName": "35163-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:01:47.985Z",
  "modificationTime": "2020-07-27T02:01:49.499Z...</msg>
<status status="PASS" starttime="20200727 02:01:54.248" endtime="20200727 02:01:57.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 02:01:57.357" endtime="20200727 02:01:57.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:01:57.362" level="INFO">Running command 'ozone sh key delete /35163-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:00.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:00.118" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:01:57.359" endtime="20200727 02:02:00.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:00.119" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:00.119" endtime="20200727 02:02:00.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:00.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:00.120" endtime="20200727 02:02:00.120"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:57.359" endtime="20200727 02:02:00.121"></status>
</kw>
<msg timestamp="20200727 02:02:00.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:01:57.359" endtime="20200727 02:02:00.121"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:57.358" endtime="20200727 02:02:00.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:00.124" level="INFO">Running command 'ozone sh key cp /35163-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:04.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:04.864" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:00.123" endtime="20200727 02:02:04.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:04.866" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:04.865" endtime="20200727 02:02:04.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:04.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:04.866" endtime="20200727 02:02:04.867"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:00.122" endtime="20200727 02:02:04.867"></status>
</kw>
<msg timestamp="20200727 02:02:04.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:00.122" endtime="20200727 02:02:04.867"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:00.121" endtime="20200727 02:02:04.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:04.872" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:04.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:04.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:02:04.870" endtime="20200727 02:02:04.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:04.876" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:02:04.875" endtime="20200727 02:02:04.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:04.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:04.876" endtime="20200727 02:02:04.877"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:04.869" endtime="20200727 02:02:04.877"></status>
</kw>
<msg timestamp="20200727 02:02:04.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:04.869" endtime="20200727 02:02:04.877"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:04.868" endtime="20200727 02:02:04.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:04.882" level="INFO">Running command 'ozone sh key get /35163-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:09.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:09.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:04.880" endtime="20200727 02:02:09.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:09.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:09.360" endtime="20200727 02:02:09.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:09.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:09.361" endtime="20200727 02:02:09.362"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:04.879" endtime="20200727 02:02:09.362"></status>
</kw>
<msg timestamp="20200727 02:02:09.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:04.879" endtime="20200727 02:02:09.362"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:04.878" endtime="20200727 02:02:09.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:09.366" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:09.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:09.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:02:09.364" endtime="20200727 02:02:09.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:09.370" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:02:09.369" endtime="20200727 02:02:09.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:09.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:09.370" endtime="20200727 02:02:09.370"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:09.364" endtime="20200727 02:02:09.371"></status>
</kw>
<msg timestamp="20200727 02:02:09.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:09.363" endtime="20200727 02:02:09.371"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:09.363" endtime="20200727 02:02:09.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:09.375" level="INFO">Running command 'ozone sh key delete /35163-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:12.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:12.158" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:09.373" endtime="20200727 02:02:12.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:12.159" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:12.158" endtime="20200727 02:02:12.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:12.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:12.159" endtime="20200727 02:02:12.160"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:09.372" endtime="20200727 02:02:12.160"></status>
</kw>
<msg timestamp="20200727 02:02:12.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:09.372" endtime="20200727 02:02:12.160"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:09.371" endtime="20200727 02:02:12.161"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:12.163" level="INFO">Running command 'ozone sh key get /35163-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:14.676" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 02:02:14.676" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:12.162" endtime="20200727 02:02:14.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:14.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 02:02:14.677" endtime="20200727 02:02:14.677"></status>
</kw>
<msg timestamp="20200727 02:02:14.678" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:12.161" endtime="20200727 02:02:14.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:14.678" endtime="20200727 02:02:14.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:14.682" level="INFO">Running command 'ozone sh key get --force /35163-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:18.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:18.981" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:14.680" endtime="20200727 02:02:18.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:18.983" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:18.982" endtime="20200727 02:02:18.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:18.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:18.983" endtime="20200727 02:02:18.984"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:14.679" endtime="20200727 02:02:18.984"></status>
</kw>
<msg timestamp="20200727 02:02:18.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:14.679" endtime="20200727 02:02:18.984"></status>
</kw>
<msg timestamp="20200727 02:02:18.985" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:14.678" endtime="20200727 02:02:18.985"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:18.985" endtime="20200727 02:02:18.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:18.991" level="INFO">Running command 'ozone sh key info /35163-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:21.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:21.995" level="INFO">${output} = {
  "volumeName": "35163-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:01:39.138Z",
  "modificationTime": "2020-07-27T02:01:40.549Z",
  "...</msg>
<status status="PASS" starttime="20200727 02:02:18.988" endtime="20200727 02:02:21.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:21.996" level="INFO">{
  "volumeName": "35163-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:01:39.138Z",
  "modificationTime": "2020-07-27T02:01:40.549Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583351444045950,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 02:02:21.996" endtime="20200727 02:02:21.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:21.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:21.996" endtime="20200727 02:02:21.997"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:18.987" endtime="20200727 02:02:21.997"></status>
</kw>
<msg timestamp="20200727 02:02:21.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:18.987" endtime="20200727 02:02:21.998"></status>
</kw>
<msg timestamp="20200727 02:02:21.998" level="INFO">${result} = {
  "volumeName": "35163-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T02:01:39.138Z",
  "modificationTime": "2020-07-27T02:01:40.549Z",
  "...</msg>
<status status="PASS" starttime="20200727 02:02:18.985" endtime="20200727 02:02:21.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:21.998" endtime="20200727 02:02:21.999"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:22.002" level="INFO">Running command 'ozone sh key list /35163-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:25.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:25.013" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 02:02:22.000" endtime="20200727 02:02:25.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:25.014" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 02:02:25.014" endtime="20200727 02:02:25.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:25.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:25.015" endtime="20200727 02:02:25.015"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:22.000" endtime="20200727 02:02:25.015"></status>
</kw>
<msg timestamp="20200727 02:02:25.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:22.000" endtime="20200727 02:02:25.016"></status>
</kw>
<msg timestamp="20200727 02:02:25.016" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 02:02:21.999" endtime="20200727 02:02:25.016"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:25.016" endtime="20200727 02:02:25.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:25.020" level="INFO">Running command 'ozone sh key rename /35163-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:27.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:27.923" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:25.018" endtime="20200727 02:02:27.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:27.925" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:27.924" endtime="20200727 02:02:27.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:27.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:27.925" endtime="20200727 02:02:27.926"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:25.018" endtime="20200727 02:02:27.926"></status>
</kw>
<msg timestamp="20200727 02:02:27.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:25.017" endtime="20200727 02:02:27.926"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:25.017" endtime="20200727 02:02:27.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:27.930" level="INFO">Running command 'ozone sh key list /35163-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:30.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:30.918" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 02:02:27.928" endtime="20200727 02:02:30.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:30.920" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 02:02:30.919" endtime="20200727 02:02:30.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:30.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:30.920" endtime="20200727 02:02:30.921"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:27.927" endtime="20200727 02:02:30.921"></status>
</kw>
<msg timestamp="20200727 02:02:30.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:27.927" endtime="20200727 02:02:30.921"></status>
</kw>
<msg timestamp="20200727 02:02:30.922" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 02:02:27.926" endtime="20200727 02:02:30.922"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 02:02:30.922" endtime="20200727 02:02:30.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:30.927" level="INFO">Running command 'ozone sh key delete /35163-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:33.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:33.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:30.924" endtime="20200727 02:02:33.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:33.611" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:33.611" endtime="20200727 02:02:33.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:33.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:33.612" endtime="20200727 02:02:33.612"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:30.924" endtime="20200727 02:02:33.613"></status>
</kw>
<msg timestamp="20200727 02:02:33.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:30.923" endtime="20200727 02:02:33.613"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:30.923" endtime="20200727 02:02:33.613"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:36.276" endtime="20200727 02:02:33.613"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:36.275" endtime="20200727 02:02:33.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:33.617" level="INFO">Running command 'ozone sh bucket delete /35163-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:36.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:36.181" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:33.615" endtime="20200727 02:02:36.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:36.182" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 02:02:36.181" endtime="20200727 02:02:36.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:36.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:36.182" endtime="20200727 02:02:36.183"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:33.615" endtime="20200727 02:02:36.183"></status>
</kw>
<msg timestamp="20200727 02:02:36.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:33.614" endtime="20200727 02:02:36.183"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:33.614" endtime="20200727 02:02:36.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:02:36.187" level="INFO">Running command 'ozone sh volume delete /35163-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:02:38.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:02:38.940" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 02:02:36.185" endtime="20200727 02:02:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:02:38.941" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 35163-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200727 02:02:38.940" endtime="20200727 02:02:38.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:02:38.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:02:38.941" endtime="20200727 02:02:38.942"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:36.185" endtime="20200727 02:02:38.942"></status>
</kw>
<msg timestamp="20200727 02:02:38.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:02:36.185" endtime="20200727 02:02:38.942"></status>
</kw>
<status status="PASS" starttime="20200727 02:02:36.184" endtime="20200727 02:02:38.942"></status>
</kw>
<status status="PASS" starttime="20200727 02:01:10.493" endtime="20200727 02:02:38.943"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 02:01:10.452" endtime="20200727 02:02:38.943" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200727 01:56:57.273" endtime="20200727 02:02:38.944"></status>
</suite>
<status status="PASS" starttime="20200727 01:53:00.334" endtime="20200727 02:02:38.951"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="ozonesecure-basic">ozonesecure-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozonesecure-basic.Basic</stat>
<stat pass="15" fail="0" id="s1-s2" name="Links">ozonesecure-basic.Links</stat>
<stat pass="6" fail="0" id="s1-s3" name="Ozone-Shell">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
