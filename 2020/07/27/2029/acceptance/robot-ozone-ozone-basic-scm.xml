<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:17:31.353" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:31.411" endtime="20200727 01:17:31.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:31.417" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:31.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:31.483" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 01:17:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Jul 2020 00:48:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200727 01:17:31.413" endtime="20200727 01:17:31.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:31.485" level="INFO">HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 01:17:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Jul 2020 00:48:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200727 01:17:31.484" endtime="20200727 01:17:31.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:31.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:31.485" endtime="20200727 01:17:31.485"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:31.412" endtime="20200727 01:17:31.486"></status>
</kw>
<msg timestamp="20200727 01:17:31.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:31.412" endtime="20200727 01:17:31.486"></status>
</kw>
<msg timestamp="20200727 01:17:31.486" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 01:17:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Jul 2020 00:48:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200727 01:17:31.412" endtime="20200727 01:17:31.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:31.487" endtime="20200727 01:17:31.487"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:17:31.410" endtime="20200727 01:17:31.487" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:31.490" endtime="20200727 01:17:31.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:31.493" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:18:49.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:18:49.146" level="INFO">${output} = 2020-07-27 01:17:32,785 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:17:32,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:17:31.491" endtime="20200727 01:18:49.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:18:49.147" level="INFO">2020-07-27 01:17:32,785 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:17:32,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 01:17:32,933 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 01:17:33,998 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 01:17:33,999 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-27 01:17:33,999 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-27 01:17:33,999 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-27 01:17:33,999 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 01:17:33,999 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 01:17:33,999 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-27 01:17:34,002 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-27 01:17:34,007 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 01:17:34,015 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-27 01:17:34,070 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-57651, with hadoop as owner.
2020-07-27 01:17:34,112 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-94810, with hadoop as owner.
2020-07-27 01:17:34,116 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-32991, with hadoop as owner.
2020-07-27 01:17:34,120 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-14724, with hadoop as owner.
2020-07-27 01:17:34,126 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-10268, with hadoop as owner.
2020-07-27 01:17:34,135 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57651/bucket-0-12422, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,154 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94810/bucket-0-96121, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,158 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-32991/bucket-0-57890, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,163 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-14724/bucket-0-41239, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,167 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10268/bucket-0-04058, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,171 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57651/bucket-1-67595, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,181 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94810/bucket-1-56961, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-32991/bucket-1-17212, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,190 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-14724/bucket-1-75446, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,195 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10268/bucket-1-82971, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,211 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57651/bucket-2-96108, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,220 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94810/bucket-2-06724, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,225 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-32991/bucket-2-80440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,229 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-14724/bucket-2-89499, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,236 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10268/bucket-2-24822, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,240 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57651/bucket-3-30430, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,245 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94810/bucket-3-96476, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,250 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-32991/bucket-3-33568, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,254 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-14724/bucket-3-92200, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,257 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10268/bucket-3-27143, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,265 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57651/bucket-4-80009, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,269 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94810/bucket-4-59951, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,276 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-32991/bucket-4-59378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,280 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-14724/bucket-4-92958, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,284 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-10268/bucket-4-14401, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 01:17:34,813 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 01:17:35,021 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 01:17:36,021 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-27 01:17:37,021 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-27 01:17:38,023 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-27 01:17:39,023 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-07-27 01:17:40,024 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-07-27 01:17:41,024 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-07-27 01:17:42,025 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-27 01:17:43,025 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-27 01:17:44,030 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-27 01:17:45,031 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-27 01:17:46,032 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-27 01:17:47,032 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-27 01:17:48,033 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-27 01:17:49,033 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-27 01:17:50,034 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-07-27 01:17:51,034 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-07-27 01:17:52,035 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-07-27 01:17:53,036 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 01:17:54,036 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 01:17:55,037 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 01:17:56,038 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-07-27 01:17:57,038 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-07-27 01:17:58,039 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-07-27 01:17:59,039 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-27 01:18:00,040 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-27 01:18:01,040 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-27 01:18:02,041 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-27 01:18:03,041 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-27 01:18:04,047 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 01:18:05,048 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 01:18:06,049 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 01:18:07,049 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-07-27 01:18:08,050 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-07-27 01:18:09,050 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-07-27 01:18:10,051 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-27 01:18:11,051 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-27 01:18:12,052 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-27 01:18:13,052 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-27 01:18:14,053 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-27 01:18:15,060 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-27 01:18:16,061 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-07-27 01:18:17,062 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-07-27 01:18:18,062 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 01:18:19,063 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 01:18:20,063 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 01:18:21,066 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-27 01:18:22,067 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-27 01:18:23,067 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-27 01:18:24,067 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-27 01:18:25,068 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-27 01:18:26,069 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-27 01:18:27,069 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-27 01:18:28,070 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-27 01:18:29,070 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-07-27 01:18:30,071 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-07-27 01:18:31,072 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-07-27 01:18:32,072 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-27 01:18:33,072 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-27 01:18:34,073 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-27 01:18:35,073 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-07-27 01:18:36,074 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-07-27 01:18:37,074 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-07-27 01:18:38,075 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-07-27 01:18:39,075 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-07-27 01:18:40,076 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-07-27 01:18:41,076 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-27 01:18:42,076 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-27 01:18:43,077 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-27 01:18:44,077 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,108
Average Time spent in bucket creation: 00:00:00,083
Average Time spent in key creation: 00:00:01,594
Average Time spent in key write: 00:00:00,718
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:15,683
***************************************************</msg>
<status status="PASS" starttime="20200727 01:18:49.147" endtime="20200727 01:18:49.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:18:49.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:18:49.148" endtime="20200727 01:18:49.148"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:31.491" endtime="20200727 01:18:49.149"></status>
</kw>
<msg timestamp="20200727 01:18:49.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:31.490" endtime="20200727 01:18:49.149"></status>
</kw>
<msg timestamp="20200727 01:18:49.149" level="INFO">${result} = 2020-07-27 01:17:32,785 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 01:17:32,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 01:17:31.490" endtime="20200727 01:18:49.149"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200727 01:18:49.150" endtime="20200727 01:18:49.150"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:49.149" endtime="20200727 01:18:49.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200727 01:18:49.150" endtime="20200727 01:18:49.151"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 01:17:31.489" endtime="20200727 01:18:49.151" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 01:17:31.383" endtime="20200727 01:18:49.152"></status>
</suite>
<suite id="s1-s2" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 01:18:49.165" level="INFO">${random} = 99581</msg>
<status status="PASS" starttime="20200727 01:18:49.165" endtime="20200727 01:18:49.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200727 01:18:49.166" level="INFO">${source} = 99581-source</msg>
<status status="PASS" starttime="20200727 01:18:49.165" endtime="20200727 01:18:49.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200727 01:18:49.168" level="INFO">${target} = 99581-target</msg>
<status status="PASS" starttime="20200727 01:18:49.167" endtime="20200727 01:18:49.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:18:49.172" level="INFO">Running command 'ozone sh volume create 99581-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:18:51.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:18:51.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:18:49.169" endtime="20200727 01:18:51.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:18:51.407" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:18:51.407" endtime="20200727 01:18:51.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:18:51.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:18:51.408" endtime="20200727 01:18:51.408"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:49.168" endtime="20200727 01:18:51.408"></status>
</kw>
<msg timestamp="20200727 01:18:51.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:18:49.168" endtime="20200727 01:18:51.409"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:49.168" endtime="20200727 01:18:51.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:18:51.412" level="INFO">Running command 'ozone sh volume create 99581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:18:53.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:18:53.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:18:51.410" endtime="20200727 01:18:53.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:18:53.885" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:18:53.885" endtime="20200727 01:18:53.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:18:53.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:18:53.886" endtime="20200727 01:18:53.886"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:51.410" endtime="20200727 01:18:53.887"></status>
</kw>
<msg timestamp="20200727 01:18:53.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:18:51.410" endtime="20200727 01:18:53.887"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:51.409" endtime="20200727 01:18:53.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<status status="PASS" starttime="20200727 01:18:53.887" endtime="20200727 01:18:53.888"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:49.165" endtime="20200727 01:18:53.888"></status>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:18:53.889" endtime="20200727 01:18:53.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:18:53.898" level="INFO">Running command 'ozone sh bucket link 99581-source/no-such-bucket 99581-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:18:56.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:18:56.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:18:53.892" endtime="20200727 01:18:56.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:18:56.220" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:18:56.220" endtime="20200727 01:18:56.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:18:56.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:18:56.220" endtime="20200727 01:18:56.221"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:53.891" endtime="20200727 01:18:56.222"></status>
</kw>
<msg timestamp="20200727 01:18:56.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:18:53.891" endtime="20200727 01:18:56.222"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:53.890" endtime="20200727 01:18:56.222"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:18:56.226" level="INFO">Running command 'ozone sh key list 99581-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:18:58.654" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:18:58.654" level="INFO">${output} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 01:18:56.223" endtime="20200727 01:18:58.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:18:58.655" level="INFO">BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 01:18:58.654" endtime="20200727 01:18:58.655"></status>
</kw>
<msg timestamp="20200727 01:18:58.656" level="INFO">${result} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 01:18:56.222" endtime="20200727 01:18:58.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:18:58.656" endtime="20200727 01:18:58.656"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:18:53.888" endtime="20200727 01:18:58.656" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:18:58.658" endtime="20200727 01:18:58.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:18:58.663" level="INFO">Running command 'ozone sh bucket link 99581-source/bucket1 99581-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:00.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:00.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:18:58.660" endtime="20200727 01:19:00.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:00.946" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:00.945" endtime="20200727 01:19:00.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:00.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:00.946" endtime="20200727 01:19:00.946"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:58.659" endtime="20200727 01:19:00.947"></status>
</kw>
<msg timestamp="20200727 01:19:00.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:18:58.659" endtime="20200727 01:19:00.947"></status>
</kw>
<status status="PASS" starttime="20200727 01:18:58.659" endtime="20200727 01:19:00.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:00.970" level="INFO">Running command 'ozone sh bucket create 99581-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:03.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:03.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:00.949" endtime="20200727 01:19:03.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:03.341" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:03.340" endtime="20200727 01:19:03.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:03.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:03.341" endtime="20200727 01:19:03.341"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:00.948" endtime="20200727 01:19:03.342"></status>
</kw>
<msg timestamp="20200727 01:19:03.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:00.948" endtime="20200727 01:19:03.342"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:00.947" endtime="20200727 01:19:03.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:03.347" level="INFO">Running command 'ozone sh key put 99581-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:07.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:07.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:03.344" endtime="20200727 01:19:07.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:07.716" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:07.715" endtime="20200727 01:19:07.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:07.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:07.716" endtime="20200727 01:19:07.717"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:03.343" endtime="20200727 01:19:07.717"></status>
</kw>
<msg timestamp="20200727 01:19:07.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:03.343" endtime="20200727 01:19:07.718"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:03.342" endtime="20200727 01:19:07.718"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:19:07.720" level="INFO">${postfix} = 74764</msg>
<status status="PASS" starttime="20200727 01:19:07.719" endtime="20200727 01:19:07.720"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:19:07.721" level="INFO">${tmpfile} = /tmp/tempkey-74764</msg>
<status status="PASS" starttime="20200727 01:19:07.720" endtime="20200727 01:19:07.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:07.726" level="INFO">Running command 'ozone sh key get -f 99581-target/link1/key1 /tmp/tempkey-74764 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:11.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:11.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:07.723" endtime="20200727 01:19:11.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:11.725" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:11.725" endtime="20200727 01:19:11.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:11.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:11.726" endtime="20200727 01:19:11.726"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:07.722" endtime="20200727 01:19:11.727"></status>
</kw>
<msg timestamp="20200727 01:19:11.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:07.722" endtime="20200727 01:19:11.727"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:07.721" endtime="20200727 01:19:11.727"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:19:11.729" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-74764 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:11.732" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:19:11.727" endtime="20200727 01:19:11.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:11.736" level="INFO">Running command 'rm -f /tmp/tempkey-74764 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:11.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:11.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:11.734" endtime="20200727 01:19:11.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:11.740" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:11.739" endtime="20200727 01:19:11.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:11.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:11.740" endtime="20200727 01:19:11.741"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:11.733" endtime="20200727 01:19:11.741"></status>
</kw>
<msg timestamp="20200727 01:19:11.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:11.733" endtime="20200727 01:19:11.741"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:11.732" endtime="20200727 01:19:11.741"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:19:11.742" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:19:11.741" endtime="20200727 01:19:11.742"></status>
</kw>
<msg timestamp="20200727 01:19:11.742" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:19:07.719" endtime="20200727 01:19:11.742"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:11.743" endtime="20200727 01:19:11.743"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:07.718" endtime="20200727 01:19:11.743"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:18:58.657" endtime="20200727 01:19:11.743" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:11.745" endtime="20200727 01:19:11.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:11.749" level="INFO">Running command 'ozone sh key put 99581-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:15.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:15.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:11.747" endtime="20200727 01:19:15.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:15.997" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:15.996" endtime="20200727 01:19:15.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:15.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:15.998" endtime="20200727 01:19:15.998"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:11.746" endtime="20200727 01:19:15.999"></status>
</kw>
<msg timestamp="20200727 01:19:15.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:11.746" endtime="20200727 01:19:15.999"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:11.745" endtime="20200727 01:19:15.999"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:19:16.001" level="INFO">${postfix} = 37678</msg>
<status status="PASS" starttime="20200727 01:19:16.001" endtime="20200727 01:19:16.001"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:19:16.002" level="INFO">${tmpfile} = /tmp/tempkey-37678</msg>
<status status="PASS" starttime="20200727 01:19:16.001" endtime="20200727 01:19:16.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:16.006" level="INFO">Running command 'ozone sh key get -f 99581-source/bucket1/key2 /tmp/tempkey-37678 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:20.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:20.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:16.004" endtime="20200727 01:19:20.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:20.084" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:20.083" endtime="20200727 01:19:20.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:20.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:20.084" endtime="20200727 01:19:20.085"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:16.003" endtime="20200727 01:19:20.085"></status>
</kw>
<msg timestamp="20200727 01:19:20.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:16.003" endtime="20200727 01:19:20.085"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:16.003" endtime="20200727 01:19:20.086"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:19:20.088" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-37678 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:20.090" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:19:20.086" endtime="20200727 01:19:20.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:20.094" level="INFO">Running command 'rm -f /tmp/tempkey-37678 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:20.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:20.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:20.092" endtime="20200727 01:19:20.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:20.098" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:20.097" endtime="20200727 01:19:20.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:20.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:20.098" endtime="20200727 01:19:20.099"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:20.092" endtime="20200727 01:19:20.099"></status>
</kw>
<msg timestamp="20200727 01:19:20.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:20.091" endtime="20200727 01:19:20.099"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:20.090" endtime="20200727 01:19:20.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:19:20.100" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:19:20.099" endtime="20200727 01:19:20.100"></status>
</kw>
<msg timestamp="20200727 01:19:20.100" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:19:16.000" endtime="20200727 01:19:20.100"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:20.100" endtime="20200727 01:19:20.101"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:15.999" endtime="20200727 01:19:20.101"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:11.744" endtime="20200727 01:19:20.101" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:20.106" endtime="20200727 01:19:20.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:20.110" level="INFO">Running command 'ozone sh key list 99581-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:22.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:22.690" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:19:20.108" endtime="20200727 01:19:22.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:22.691" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 01:19:22.691" endtime="20200727 01:19:22.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:22.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:22.692" endtime="20200727 01:19:22.692"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:20.107" endtime="20200727 01:19:22.692"></status>
</kw>
<msg timestamp="20200727 01:19:22.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:20.107" endtime="20200727 01:19:22.693"></status>
</kw>
<msg timestamp="20200727 01:19:22.693" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:19:20.106" endtime="20200727 01:19:22.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:22.698" level="INFO">Running command 'ozone sh key list 99581-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:25.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:25.408" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:19:22.695" endtime="20200727 01:19:25.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:25.410" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 01:19:25.409" endtime="20200727 01:19:25.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:25.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:25.410" endtime="20200727 01:19:25.411"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:22.694" endtime="20200727 01:19:25.411"></status>
</kw>
<msg timestamp="20200727 01:19:25.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:22.694" endtime="20200727 01:19:25.411"></status>
</kw>
<msg timestamp="20200727 01:19:25.412" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 01:19:22.693" endtime="20200727 01:19:25.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:25.412" endtime="20200727 01:19:25.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:25.412" endtime="20200727 01:19:25.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:25.413" endtime="20200727 01:19:25.413"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:20.105" endtime="20200727 01:19:25.414" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:25.416" endtime="20200727 01:19:25.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:25.421" level="INFO">Running command 'ozone sh key delete 99581-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:27.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:27.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:25.418" endtime="20200727 01:19:27.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:27.992" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:27.991" endtime="20200727 01:19:27.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:27.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:27.992" endtime="20200727 01:19:27.992"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:25.417" endtime="20200727 01:19:27.993"></status>
</kw>
<msg timestamp="20200727 01:19:27.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:25.417" endtime="20200727 01:19:27.993"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:25.416" endtime="20200727 01:19:27.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:27.998" level="INFO">Running command 'ozone sh key list 99581-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:30.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:30.821" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 01:19:27.995" endtime="20200727 01:19:30.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:30.822" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 01:19:30.821" endtime="20200727 01:19:30.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:30.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:30.822" endtime="20200727 01:19:30.823"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:27.994" endtime="20200727 01:19:30.823"></status>
</kw>
<msg timestamp="20200727 01:19:30.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:27.994" endtime="20200727 01:19:30.823"></status>
</kw>
<msg timestamp="20200727 01:19:30.824" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20200727 01:19:27.993" endtime="20200727 01:19:30.824"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:30.824" endtime="20200727 01:19:30.824"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:25.415" endtime="20200727 01:19:30.824" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:30.826" endtime="20200727 01:19:30.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:30.831" level="INFO">Running command 'ozone sh bucket list 99581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:33.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:33.377" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:18:56.183Z",
  "modificationTime"...</msg>
<status status="PASS" starttime="20200727 01:19:30.828" endtime="20200727 01:19:33.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:33.378" level="INFO">{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:18:56.183Z",
  "modificationTime" : "2020-07-27T01:18:56.183Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:19:00.745Z",
  "modificationTime" : "2020-07-27T01:19:00.745Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-source",
  "sourceBucket" : "bucket1"
}</msg>
<status status="PASS" starttime="20200727 01:19:33.377" endtime="20200727 01:19:33.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:33.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:33.378" endtime="20200727 01:19:33.379"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:30.828" endtime="20200727 01:19:33.379"></status>
</kw>
<msg timestamp="20200727 01:19:33.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:30.827" endtime="20200727 01:19:33.379"></status>
</kw>
<msg timestamp="20200727 01:19:33.380" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:18:56.183Z",
  "modificationTime"...</msg>
<status status="PASS" starttime="20200727 01:19:30.827" endtime="20200727 01:19:33.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:33.380" endtime="20200727 01:19:33.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:33.380" endtime="20200727 01:19:33.381"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:30.825" endtime="20200727 01:19:33.381" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:33.382" endtime="20200727 01:19:33.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:33.386" level="INFO">Running command 'ozone sh bucket info 99581-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:35.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:35.968" level="INFO">${output} = 99581-source bucket1</msg>
<status status="PASS" starttime="20200727 01:19:33.384" endtime="20200727 01:19:35.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:35.969" level="INFO">99581-source bucket1</msg>
<status status="PASS" starttime="20200727 01:19:35.968" endtime="20200727 01:19:35.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:35.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:35.969" endtime="20200727 01:19:35.970"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:33.384" endtime="20200727 01:19:35.970"></status>
</kw>
<msg timestamp="20200727 01:19:35.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:33.383" endtime="20200727 01:19:35.971"></status>
</kw>
<msg timestamp="20200727 01:19:35.971" level="INFO">${result} = 99581-source bucket1</msg>
<status status="PASS" starttime="20200727 01:19:33.383" endtime="20200727 01:19:35.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:35.971" endtime="20200727 01:19:35.972"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:33.382" endtime="20200727 01:19:35.972" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:35.973" endtime="20200727 01:19:35.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:35.978" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 99581-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:38.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:38.255" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:19:35.975" endtime="20200727 01:19:38.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:38.256" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:19:38.255" endtime="20200727 01:19:38.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:38.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:38.256" endtime="20200727 01:19:38.257"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:35.975" endtime="20200727 01:19:38.257"></status>
</kw>
<msg timestamp="20200727 01:19:38.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:35.975" endtime="20200727 01:19:38.257"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:35.974" endtime="20200727 01:19:38.258"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:38.263" level="INFO">Running command 'ozone sh bucket getacl 99581-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:40.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:40.709" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 01:19:38.261" endtime="20200727 01:19:40.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:40.711" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 01:19:40.710" endtime="20200727 01:19:40.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:40.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:40.711" endtime="20200727 01:19:40.711"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:38.261" endtime="20200727 01:19:40.712"></status>
</kw>
<msg timestamp="20200727 01:19:40.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:38.259" endtime="20200727 01:19:40.712"></status>
</kw>
<msg timestamp="20200727 01:19:40.712" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 01:19:38.258" endtime="20200727 01:19:40.712"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:40.712" endtime="20200727 01:19:40.714"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:38.258" endtime="20200727 01:19:40.714"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:40.719" level="INFO">Running command 'ozone sh bucket getacl 99581-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:43.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:43.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:40.717" endtime="20200727 01:19:43.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:43.546" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:43.545" endtime="20200727 01:19:43.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:43.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:43.546" endtime="20200727 01:19:43.547"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:40.716" endtime="20200727 01:19:43.547"></status>
</kw>
<msg timestamp="20200727 01:19:43.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:40.716" endtime="20200727 01:19:43.547"></status>
</kw>
<msg timestamp="20200727 01:19:43.547" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 01:19:40.715" endtime="20200727 01:19:43.548"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:43.548" endtime="20200727 01:19:43.548"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:40.714" endtime="20200727 01:19:43.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:43.553" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 99581-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:45.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:45.927" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:19:43.550" endtime="20200727 01:19:45.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:45.928" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:19:45.928" endtime="20200727 01:19:45.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:45.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:45.929" endtime="20200727 01:19:45.929"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:43.550" endtime="20200727 01:19:45.930"></status>
</kw>
<msg timestamp="20200727 01:19:45.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:43.549" endtime="20200727 01:19:45.930"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:43.549" endtime="20200727 01:19:45.930"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:45.935" level="INFO">Running command 'ozone sh bucket getacl 99581-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:48.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:48.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:45.933" endtime="20200727 01:19:48.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:48.829" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:48.828" endtime="20200727 01:19:48.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:48.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:48.829" endtime="20200727 01:19:48.830"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:45.932" endtime="20200727 01:19:48.834"></status>
</kw>
<msg timestamp="20200727 01:19:48.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:45.932" endtime="20200727 01:19:48.834"></status>
</kw>
<msg timestamp="20200727 01:19:48.834" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 01:19:45.931" endtime="20200727 01:19:48.834"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:48.834" endtime="20200727 01:19:48.835"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:45.930" endtime="20200727 01:19:48.835"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:48.839" level="INFO">Running command 'ozone sh bucket getacl 99581-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:51.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:51.436" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20200727 01:19:48.838" endtime="20200727 01:19:51.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:51.438" level="INFO">READ</msg>
<status status="PASS" starttime="20200727 01:19:51.437" endtime="20200727 01:19:51.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:51.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:51.438" endtime="20200727 01:19:51.438"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:48.837" endtime="20200727 01:19:51.439"></status>
</kw>
<msg timestamp="20200727 01:19:51.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:48.837" endtime="20200727 01:19:51.439"></status>
</kw>
<msg timestamp="20200727 01:19:51.439" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20200727 01:19:48.836" endtime="20200727 01:19:51.439"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:51.439" endtime="20200727 01:19:51.440"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:48.835" endtime="20200727 01:19:51.440"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:35.972" endtime="20200727 01:19:51.440" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:51.442" endtime="20200727 01:19:51.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:51.446" level="INFO">Running command 'ozone sh bucket link 99581-source/bucket2 99581-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:53.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:53.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:51.444" endtime="20200727 01:19:53.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:53.810" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:53.809" endtime="20200727 01:19:53.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:53.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:53.810" endtime="20200727 01:19:53.811"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:51.443" endtime="20200727 01:19:53.811"></status>
</kw>
<msg timestamp="20200727 01:19:53.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:51.443" endtime="20200727 01:19:53.811"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:51.442" endtime="20200727 01:19:53.811"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:53.814" level="INFO">Running command 'ozone sh bucket create 99581-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:56.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:19:56.125" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:19:53.812" endtime="20200727 01:19:56.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:56.126" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:19:56.125" endtime="20200727 01:19:56.126"></status>
</kw>
<msg timestamp="20200727 01:19:56.126" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:19:53.812" endtime="20200727 01:19:56.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:19:56.127" endtime="20200727 01:19:56.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:56.132" level="INFO">Running command 'ozone sh bucket create 99581-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:19:58.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:19:58.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:19:56.129" endtime="20200727 01:19:58.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:19:58.475" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:19:58.474" endtime="20200727 01:19:58.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:19:58.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:19:58.475" endtime="20200727 01:19:58.476"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:56.128" endtime="20200727 01:19:58.476"></status>
</kw>
<msg timestamp="20200727 01:19:58.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:19:56.128" endtime="20200727 01:19:58.476"></status>
</kw>
<status status="PASS" starttime="20200727 01:19:56.127" endtime="20200727 01:19:58.477"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:19:58.479" level="INFO">Running command 'ozone sh bucket link 99581-source/bucket1 99581-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:00.807" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:20:00.807" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:19:58.477" endtime="20200727 01:20:00.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:00.808" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:20:00.808" endtime="20200727 01:20:00.809"></status>
</kw>
<msg timestamp="20200727 01:20:00.809" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 01:19:58.477" endtime="20200727 01:20:00.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.809" endtime="20200727 01:20:00.810"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:19:51.441" endtime="20200727 01:20:00.810" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.811" endtime="20200727 01:20:00.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.812" endtime="20200727 01:20:00.812"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:00.810" endtime="20200727 01:20:00.812" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.813" endtime="20200727 01:20:00.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.814" endtime="20200727 01:20:00.814"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:00.813" endtime="20200727 01:20:00.814" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.815" endtime="20200727 01:20:00.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.816" endtime="20200727 01:20:00.816"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:00.814" endtime="20200727 01:20:00.816" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:00.817" endtime="20200727 01:20:00.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:00.821" level="INFO">Running command 'ozone sh bucket link 99581-target/loop1 99581-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:03.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:03.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:00.819" endtime="20200727 01:20:03.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:03.292" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:03.292" endtime="20200727 01:20:03.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:03.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:03.293" endtime="20200727 01:20:03.293"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:00.818" endtime="20200727 01:20:03.294"></status>
</kw>
<msg timestamp="20200727 01:20:03.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:00.818" endtime="20200727 01:20:03.294"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:00.818" endtime="20200727 01:20:03.294"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:03.298" level="INFO">Running command 'ozone sh bucket link 99581-target/loop2 99581-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:05.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:05.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:03.296" endtime="20200727 01:20:05.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:05.658" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:05.657" endtime="20200727 01:20:05.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:05.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:05.659" endtime="20200727 01:20:05.659"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:03.295" endtime="20200727 01:20:05.660"></status>
</kw>
<msg timestamp="20200727 01:20:05.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:03.295" endtime="20200727 01:20:05.660"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:03.294" endtime="20200727 01:20:05.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:05.665" level="INFO">Running command 'ozone sh bucket link 99581-target/loop3 99581-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:07.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:07.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:05.663" endtime="20200727 01:20:07.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:07.973" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:07.972" endtime="20200727 01:20:07.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:07.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:07.973" endtime="20200727 01:20:07.974"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:05.662" endtime="20200727 01:20:07.974"></status>
</kw>
<msg timestamp="20200727 01:20:07.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:05.661" endtime="20200727 01:20:07.974"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:05.660" endtime="20200727 01:20:07.974"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:07.977" level="INFO">Running command 'ozone sh key list 99581-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:10.381" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:20:10.381" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 01:20:07.975" endtime="20200727 01:20:10.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:10.382" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 01:20:10.381" endtime="20200727 01:20:10.382"></status>
</kw>
<msg timestamp="20200727 01:20:10.383" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 01:20:07.975" endtime="20200727 01:20:10.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:10.383" endtime="20200727 01:20:10.383"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:00.816" endtime="20200727 01:20:10.384" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:10.385" endtime="20200727 01:20:10.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:10.389" level="INFO">Running command 'ozone sh bucket link 99581-source/bucket1 99581-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:12.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:12.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:10.387" endtime="20200727 01:20:12.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:12.736" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:12.735" endtime="20200727 01:20:12.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:12.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:12.736" endtime="20200727 01:20:12.738"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:10.386" endtime="20200727 01:20:12.738"></status>
</kw>
<msg timestamp="20200727 01:20:12.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:10.386" endtime="20200727 01:20:12.738"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:10.386" endtime="20200727 01:20:12.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:12.743" level="INFO">Running command 'ozone sh key put 99581-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:17.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:17.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:12.740" endtime="20200727 01:20:17.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:17.056" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:17.055" endtime="20200727 01:20:17.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:17.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:17.056" endtime="20200727 01:20:17.057"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:12.740" endtime="20200727 01:20:17.057"></status>
</kw>
<msg timestamp="20200727 01:20:17.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:12.739" endtime="20200727 01:20:17.057"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:12.739" endtime="20200727 01:20:17.057"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:20:17.060" level="INFO">${postfix} = 78893</msg>
<status status="PASS" starttime="20200727 01:20:17.059" endtime="20200727 01:20:17.060"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:20:17.060" level="INFO">${tmpfile} = /tmp/tempkey-78893</msg>
<status status="PASS" starttime="20200727 01:20:17.060" endtime="20200727 01:20:17.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:17.064" level="INFO">Running command 'ozone sh key get -f 99581-target/link1/key3 /tmp/tempkey-78893 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:21.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:21.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:17.062" endtime="20200727 01:20:21.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:21.099" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:21.099" endtime="20200727 01:20:21.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:21.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:21.100" endtime="20200727 01:20:21.100"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:17.061" endtime="20200727 01:20:21.100"></status>
</kw>
<msg timestamp="20200727 01:20:21.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:17.061" endtime="20200727 01:20:21.101"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:17.060" endtime="20200727 01:20:21.101"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:20:21.104" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-78893 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:21.106" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:20:21.101" endtime="20200727 01:20:21.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:21.111" level="INFO">Running command 'rm -f /tmp/tempkey-78893 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:21.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:21.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:21.108" endtime="20200727 01:20:21.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:21.114" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:21.113" endtime="20200727 01:20:21.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:21.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:21.114" endtime="20200727 01:20:21.114"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:21.107" endtime="20200727 01:20:21.115"></status>
</kw>
<msg timestamp="20200727 01:20:21.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:21.107" endtime="20200727 01:20:21.115"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:21.106" endtime="20200727 01:20:21.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:20:21.116" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:20:21.115" endtime="20200727 01:20:21.116"></status>
</kw>
<msg timestamp="20200727 01:20:21.116" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:20:17.058" endtime="20200727 01:20:21.116"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:21.116" endtime="20200727 01:20:21.117"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:17.058" endtime="20200727 01:20:21.117"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:10.384" endtime="20200727 01:20:21.117" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:21.119" endtime="20200727 01:20:21.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:21.123" level="INFO">Running command 'ozone sh bucket delete 99581-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:23.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:23.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:21.120" endtime="20200727 01:20:23.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:23.485" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:23.484" endtime="20200727 01:20:23.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:23.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:23.485" endtime="20200727 01:20:23.485"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:21.120" endtime="20200727 01:20:23.486"></status>
</kw>
<msg timestamp="20200727 01:20:23.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:21.120" endtime="20200727 01:20:23.486"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:21.119" endtime="20200727 01:20:23.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:23.491" level="INFO">Running command 'ozone sh bucket list 99581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:26.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:26.020" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:19:58.374Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20200727 01:20:23.488" endtime="20200727 01:20:26.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:26.021" level="INFO">{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:19:58.374Z",
  "modificationTime" : "2020-07-27T01:19:58.374Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:18:56.183Z",
  "modificationTime" : "2020-07-27T01:18:56.183Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:19:53.669Z",
  "modificationTime" : "2020-07-27T01:19:53.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:20:12.682Z",
  "modificationTime" : "2020-07-27T01:20:12.682Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:20:07.857Z",
  "modificationTime" : "2020-07-27T01:20:07.857Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:20:03.212Z",
  "modificationTime" : "2020-07-27T01:20:03.212Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:20:05.453Z",
  "modificationTime" : "2020-07-27T01:20:05.453Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "99581-target",
  "sourceBucket" : "loop2"
}</msg>
<status status="PASS" starttime="20200727 01:20:26.020" endtime="20200727 01:20:26.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:26.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:26.021" endtime="20200727 01:20:26.022"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:23.487" endtime="20200727 01:20:26.022"></status>
</kw>
<msg timestamp="20200727 01:20:26.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:23.487" endtime="20200727 01:20:26.022"></status>
</kw>
<msg timestamp="20200727 01:20:26.023" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "99581-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:19:58.374Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20200727 01:20:23.486" endtime="20200727 01:20:26.023"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:26.023" endtime="20200727 01:20:26.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:26.028" level="INFO">Running command 'ozone sh key list 99581-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:28.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:28.594" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20200727 01:20:26.025" endtime="20200727 01:20:28.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:28.595" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20200727 01:20:28.594" endtime="20200727 01:20:28.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:28.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:28.595" endtime="20200727 01:20:28.596"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:26.024" endtime="20200727 01:20:28.596"></status>
</kw>
<msg timestamp="20200727 01:20:28.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:26.024" endtime="20200727 01:20:28.596"></status>
</kw>
<msg timestamp="20200727 01:20:28.597" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20200727 01:20:26.023" endtime="20200727 01:20:28.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:28.597" endtime="20200727 01:20:28.597"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:21.118" endtime="20200727 01:20:28.597" critical="yes"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20200727 01:18:49.154" endtime="20200727 01:20:28.600"></status>
</suite>
<suite id="s1-s3" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 01:20:28.619" level="INFO">${random} = 71706</msg>
<status status="PASS" starttime="20200727 01:20:28.619" endtime="20200727 01:20:28.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200727 01:20:28.620" level="INFO">${prefix} = 71706</msg>
<status status="PASS" starttime="20200727 01:20:28.619" endtime="20200727 01:20:28.620"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:28.618" endtime="20200727 01:20:28.620"></status>
</kw>
<test id="s1-s3-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:28.621" endtime="20200727 01:20:28.621"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:28.625" level="INFO">Running command 'ozone sh volume info o3://om:9862/71706-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:30.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:20:30.993" level="INFO">${output} = VOLUME_NOT_FOUND Volume 71706-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 01:20:28.622" endtime="20200727 01:20:30.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:30.995" level="INFO">VOLUME_NOT_FOUND Volume 71706-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 01:20:30.994" endtime="20200727 01:20:30.995"></status>
</kw>
<msg timestamp="20200727 01:20:30.995" level="INFO">${result} = VOLUME_NOT_FOUND Volume 71706-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 01:20:28.622" endtime="20200727 01:20:30.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:30.995" endtime="20200727 01:20:30.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:30.999" level="INFO">Running command 'ozone sh volume create o3://om:9862/71706-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:33.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:33.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:30.998" endtime="20200727 01:20:33.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:33.455" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:33.454" endtime="20200727 01:20:33.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:33.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:33.455" endtime="20200727 01:20:33.456"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:30.997" endtime="20200727 01:20:33.456"></status>
</kw>
<msg timestamp="20200727 01:20:33.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:30.997" endtime="20200727 01:20:33.457"></status>
</kw>
<msg timestamp="20200727 01:20:33.457" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:20:30.996" endtime="20200727 01:20:33.457"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:33.457" endtime="20200727 01:20:33.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:33.464" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="71706-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:35.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:35.974" level="INFO">${output} = {
  "metadata": {},
  "name": "71706-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:20:33.282Z",
  "modificationTime": "2020-07-27T01:20:33.282Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 01:20:33.459" endtime="20200727 01:20:35.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:35.975" level="INFO">{
  "metadata": {},
  "name": "71706-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:20:33.282Z",
  "modificationTime": "2020-07-27T01:20:33.282Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:20:35.975" endtime="20200727 01:20:35.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:35.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:35.976" endtime="20200727 01:20:35.976"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:33.459" endtime="20200727 01:20:35.976"></status>
</kw>
<msg timestamp="20200727 01:20:35.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:33.459" endtime="20200727 01:20:35.977"></status>
</kw>
<msg timestamp="20200727 01:20:35.977" level="INFO">${result} = {
  "metadata": {},
  "name": "71706-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:20:33.282Z",
  "modificationTime": "2020-07-27T01:20:33.282Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 01:20:33.458" endtime="20200727 01:20:35.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:35.977" endtime="20200727 01:20:35.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:35.982" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="71706-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:38.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:38.479" level="INFO">${output} = {
  "metadata": {},
  "name": "71706-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:20:33.282Z",
  "modificationTime": "2020-07-27T01:20:33.282Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 01:20:35.979" endtime="20200727 01:20:38.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:38.480" level="INFO">{
  "metadata": {},
  "name": "71706-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:20:33.282Z",
  "modificationTime": "2020-07-27T01:20:33.282Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:20:38.480" endtime="20200727 01:20:38.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:38.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:38.481" endtime="20200727 01:20:38.481"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:35.979" endtime="20200727 01:20:38.481"></status>
</kw>
<msg timestamp="20200727 01:20:38.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:35.979" endtime="20200727 01:20:38.482"></status>
</kw>
<msg timestamp="20200727 01:20:38.482" level="INFO">${result} = {
  "metadata": {},
  "name": "71706-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:20:33.282Z",
  "modificationTime": "2020-07-27T01:20:33.282Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 01:20:35.978" endtime="20200727 01:20:38.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:38.482" endtime="20200727 01:20:38.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:38.486" level="INFO">Running command 'ozone sh volume update o3://om:9862/71706-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:40.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:40.920" level="INFO">${output} = {
  "metadata" : { },
  "name" : "71706-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T01:20:33.282Z",
  "modificationTime" : "2020-07-27T01:20:40.577Z",
  "acl...</msg>
<status status="PASS" starttime="20200727 01:20:38.484" endtime="20200727 01:20:40.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:40.921" level="INFO">{
  "metadata" : { },
  "name" : "71706-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T01:20:33.282Z",
  "modificationTime" : "2020-07-27T01:20:40.577Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 01:20:40.920" endtime="20200727 01:20:40.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:40.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:40.922" endtime="20200727 01:20:40.922"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:38.484" endtime="20200727 01:20:40.922"></status>
</kw>
<msg timestamp="20200727 01:20:40.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:38.483" endtime="20200727 01:20:40.923"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:38.483" endtime="20200727 01:20:40.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:40.928" level="INFO">Running command 'ozone sh volume info o3://om:9862/71706-rpcwoport | jq -r '. | select(.name=="71706-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:43.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:43.584" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:20:40.925" endtime="20200727 01:20:43.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:43.585" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 01:20:43.584" endtime="20200727 01:20:43.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:43.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:43.585" endtime="20200727 01:20:43.586"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:40.924" endtime="20200727 01:20:43.586"></status>
</kw>
<msg timestamp="20200727 01:20:43.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:40.924" endtime="20200727 01:20:43.586"></status>
</kw>
<msg timestamp="20200727 01:20:43.587" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:20:40.923" endtime="20200727 01:20:43.587"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:43.587" endtime="20200727 01:20:43.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:43.592" level="INFO">Running command 'ozone sh bucket create o3://om:9862/71706-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:45.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:45.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:43.589" endtime="20200727 01:20:45.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:45.848" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:45.847" endtime="20200727 01:20:45.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:45.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:45.848" endtime="20200727 01:20:45.848"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:43.588" endtime="20200727 01:20:45.849"></status>
</kw>
<msg timestamp="20200727 01:20:45.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:43.588" endtime="20200727 01:20:45.849"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:43.587" endtime="20200727 01:20:45.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:45.854" level="INFO">Running command 'ozone sh bucket info o3://om:9862/71706-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:48.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:48.258" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 01:20:45.851" endtime="20200727 01:20:48.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:48.260" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 01:20:48.259" endtime="20200727 01:20:48.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:48.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:48.260" endtime="20200727 01:20:48.260"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:45.851" endtime="20200727 01:20:48.261"></status>
</kw>
<msg timestamp="20200727 01:20:48.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:45.850" endtime="20200727 01:20:48.261"></status>
</kw>
<msg timestamp="20200727 01:20:48.261" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 01:20:45.849" endtime="20200727 01:20:48.261"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:48.261" endtime="20200727 01:20:48.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:48.265" level="INFO">Running command 'ozone sh bucket list o3://om:9862/71706-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:50.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:50.904" level="INFO">${output} = 71706-rpcwoport</msg>
<status status="PASS" starttime="20200727 01:20:48.263" endtime="20200727 01:20:50.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:50.906" level="INFO">71706-rpcwoport</msg>
<status status="PASS" starttime="20200727 01:20:50.905" endtime="20200727 01:20:50.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:50.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:50.906" endtime="20200727 01:20:50.907"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:48.263" endtime="20200727 01:20:50.907"></status>
</kw>
<msg timestamp="20200727 01:20:50.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:48.263" endtime="20200727 01:20:50.907"></status>
</kw>
<msg timestamp="20200727 01:20:50.907" level="INFO">${result} = 71706-rpcwoport</msg>
<status status="PASS" starttime="20200727 01:20:48.262" endtime="20200727 01:20:50.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:20:50.908" endtime="20200727 01:20:50.908"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:50.914" level="INFO">Running command 'ozone sh key put o3://om:9862/71706-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:55.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:55.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:50.911" endtime="20200727 01:20:55.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:55.169" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:55.168" endtime="20200727 01:20:55.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:55.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:55.169" endtime="20200727 01:20:55.170"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:50.910" endtime="20200727 01:20:55.171"></status>
</kw>
<msg timestamp="20200727 01:20:55.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:50.910" endtime="20200727 01:20:55.171"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:50.909" endtime="20200727 01:20:55.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:55.176" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:55.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:55.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:55.173" endtime="20200727 01:20:55.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:55.180" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:55.179" endtime="20200727 01:20:55.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:55.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:55.180" endtime="20200727 01:20:55.181"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:55.172" endtime="20200727 01:20:55.181"></status>
</kw>
<msg timestamp="20200727 01:20:55.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:55.172" endtime="20200727 01:20:55.181"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:55.171" endtime="20200727 01:20:55.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:55.187" level="INFO">Running command 'ozone sh key get o3://om:9862/71706-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:59.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:59.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:55.184" endtime="20200727 01:20:59.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:59.107" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:59.106" endtime="20200727 01:20:59.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:59.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:59.107" endtime="20200727 01:20:59.108"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:55.183" endtime="20200727 01:20:59.108"></status>
</kw>
<msg timestamp="20200727 01:20:59.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:55.183" endtime="20200727 01:20:59.108"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:55.182" endtime="20200727 01:20:59.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:59.112" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:20:59.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:20:59.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:59.110" endtime="20200727 01:20:59.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:20:59.115" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:20:59.115" endtime="20200727 01:20:59.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:20:59.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:20:59.115" endtime="20200727 01:20:59.116"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:59.110" endtime="20200727 01:20:59.116"></status>
</kw>
<msg timestamp="20200727 01:20:59.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:59.109" endtime="20200727 01:20:59.116"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:59.109" endtime="20200727 01:20:59.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:20:59.121" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/71706-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:03.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:03.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:20:59.118" endtime="20200727 01:21:03.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:03.497" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:03.496" endtime="20200727 01:21:03.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:03.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:03.497" endtime="20200727 01:21:03.498"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:59.118" endtime="20200727 01:21:03.499"></status>
</kw>
<msg timestamp="20200727 01:21:03.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:20:59.118" endtime="20200727 01:21:03.499"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:59.117" endtime="20200727 01:21:03.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:03.505" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:03.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:03.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:03.501" endtime="20200727 01:21:03.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:03.507" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:03.507" endtime="20200727 01:21:03.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:03.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:03.508" endtime="20200727 01:21:03.508"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:03.500" endtime="20200727 01:21:03.509"></status>
</kw>
<msg timestamp="20200727 01:21:03.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:03.500" endtime="20200727 01:21:03.509"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:03.499" endtime="20200727 01:21:03.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:03.514" level="INFO">Running command 'ozone sh key get o3://om:9862/71706-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:07.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:07.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:03.511" endtime="20200727 01:21:07.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:07.577" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:07.577" endtime="20200727 01:21:07.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:07.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:07.578" endtime="20200727 01:21:07.578"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:03.510" endtime="20200727 01:21:07.579"></status>
</kw>
<msg timestamp="20200727 01:21:07.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:03.510" endtime="20200727 01:21:07.579"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:03.509" endtime="20200727 01:21:07.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:07.583" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:07.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:07.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:07.581" endtime="20200727 01:21:07.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:07.586" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:07.586" endtime="20200727 01:21:07.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:07.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:07.587" endtime="20200727 01:21:07.587"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:07.580" endtime="20200727 01:21:07.587"></status>
</kw>
<msg timestamp="20200727 01:21:07.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:07.580" endtime="20200727 01:21:07.588"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:07.579" endtime="20200727 01:21:07.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:07.593" level="INFO">Running command 'ozone sh key info o3://om:9862/71706-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:10.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:10.274" level="INFO">${output} = {
  "volumeName": "71706-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:21:01.364Z",
  "modificationTime": "2020-07-27T01:21:02.976Z",...</msg>
<status status="PASS" starttime="20200727 01:21:07.590" endtime="20200727 01:21:10.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:10.275" level="INFO">{
  "volumeName": "71706-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:21:01.364Z",
  "modificationTime": "2020-07-27T01:21:02.976Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583191682220160,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:21:10.274" endtime="20200727 01:21:10.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:10.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:10.275" endtime="20200727 01:21:10.276"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:07.589" endtime="20200727 01:21:10.276"></status>
</kw>
<msg timestamp="20200727 01:21:10.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:07.589" endtime="20200727 01:21:10.277"></status>
</kw>
<msg timestamp="20200727 01:21:10.277" level="INFO">${result} = {
  "volumeName": "71706-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:21:01.364Z",
  "modificationTime": "2020-07-27T01:21:02.976Z",...</msg>
<status status="PASS" starttime="20200727 01:21:07.588" endtime="20200727 01:21:10.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:10.277" endtime="20200727 01:21:10.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:10.281" level="INFO">Running command 'ozone sh key delete o3://om:9862/71706-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:12.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:12.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:10.279" endtime="20200727 01:21:12.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:12.749" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:12.748" endtime="20200727 01:21:12.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:12.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:12.749" endtime="20200727 01:21:12.750"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:10.279" endtime="20200727 01:21:12.750"></status>
</kw>
<msg timestamp="20200727 01:21:12.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:10.278" endtime="20200727 01:21:12.750"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:10.278" endtime="20200727 01:21:12.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:12.754" level="INFO">Running command 'ozone sh key cp o3://om:9862/71706-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:17.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:17.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:12.752" endtime="20200727 01:21:17.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:17.156" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:17.155" endtime="20200727 01:21:17.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:17.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:17.156" endtime="20200727 01:21:17.157"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:12.751" endtime="20200727 01:21:17.158"></status>
</kw>
<msg timestamp="20200727 01:21:17.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:12.751" endtime="20200727 01:21:17.158"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:12.750" endtime="20200727 01:21:17.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:17.162" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:17.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:17.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:17.160" endtime="20200727 01:21:17.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:17.166" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:17.166" endtime="20200727 01:21:17.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:17.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:17.167" endtime="20200727 01:21:17.167"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:17.160" endtime="20200727 01:21:17.168"></status>
</kw>
<msg timestamp="20200727 01:21:17.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:17.159" endtime="20200727 01:21:17.168"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:17.158" endtime="20200727 01:21:17.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:17.173" level="INFO">Running command 'ozone sh key get o3://om:9862/71706-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:21.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:21.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:17.170" endtime="20200727 01:21:21.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:21.151" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:21.150" endtime="20200727 01:21:21.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:21.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:21.151" endtime="20200727 01:21:21.152"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:17.170" endtime="20200727 01:21:21.152"></status>
</kw>
<msg timestamp="20200727 01:21:21.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:17.169" endtime="20200727 01:21:21.152"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:17.168" endtime="20200727 01:21:21.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:21.156" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:21.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:21.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:21.154" endtime="20200727 01:21:21.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:21.160" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:21.159" endtime="20200727 01:21:21.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:21.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:21.160" endtime="20200727 01:21:21.161"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:21.154" endtime="20200727 01:21:21.161"></status>
</kw>
<msg timestamp="20200727 01:21:21.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:21.153" endtime="20200727 01:21:21.161"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:21.153" endtime="20200727 01:21:21.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:21.166" level="INFO">Running command 'ozone sh key delete o3://om:9862/71706-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:23.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:23.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:21.163" endtime="20200727 01:21:23.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:23.604" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:23.603" endtime="20200727 01:21:23.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:23.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:23.604" endtime="20200727 01:21:23.605"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:21.163" endtime="20200727 01:21:23.605"></status>
</kw>
<msg timestamp="20200727 01:21:23.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:21.163" endtime="20200727 01:21:23.605"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:21.162" endtime="20200727 01:21:23.605"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:23.609" level="INFO">Running command 'ozone sh key get o3://om:9862/71706-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:25.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:21:25.883" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:21:23.606" endtime="20200727 01:21:25.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:25.884" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:21:25.883" endtime="20200727 01:21:25.884"></status>
</kw>
<msg timestamp="20200727 01:21:25.884" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:21:23.606" endtime="20200727 01:21:25.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:25.884" endtime="20200727 01:21:25.885"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:25.888" level="INFO">Running command 'ozone sh key get --force o3://om:9862/71706-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:30.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:30.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:25.886" endtime="20200727 01:21:30.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:30.005" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:30.005" endtime="20200727 01:21:30.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:30.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:30.006" endtime="20200727 01:21:30.006"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:25.886" endtime="20200727 01:21:30.007"></status>
</kw>
<msg timestamp="20200727 01:21:30.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:25.886" endtime="20200727 01:21:30.007"></status>
</kw>
<msg timestamp="20200727 01:21:30.007" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:21:25.885" endtime="20200727 01:21:30.007"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:30.008" endtime="20200727 01:21:30.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:30.014" level="INFO">Running command 'ozone sh key info o3://om:9862/71706-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:32.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:32.580" level="INFO">${output} = {
  "volumeName": "71706-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:20:53.115Z",
  "modificationTime": "2020-07-27T01:20:54.659Z",
  "re...</msg>
<status status="PASS" starttime="20200727 01:21:30.011" endtime="20200727 01:21:32.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:32.581" level="INFO">{
  "volumeName": "71706-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:20:53.115Z",
  "modificationTime": "2020-07-27T01:20:54.659Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583191141679230,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:21:32.581" endtime="20200727 01:21:32.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:32.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:32.582" endtime="20200727 01:21:32.582"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:30.010" endtime="20200727 01:21:32.583"></status>
</kw>
<msg timestamp="20200727 01:21:32.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:30.009" endtime="20200727 01:21:32.583"></status>
</kw>
<msg timestamp="20200727 01:21:32.583" level="INFO">${result} = {
  "volumeName": "71706-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:20:53.115Z",
  "modificationTime": "2020-07-27T01:20:54.659Z",
  "re...</msg>
<status status="PASS" starttime="20200727 01:21:30.008" endtime="20200727 01:21:32.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:32.583" endtime="20200727 01:21:32.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:32.587" level="INFO">Running command 'ozone sh key list o3://om:9862/71706-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:35.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:35.194" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 01:21:32.586" endtime="20200727 01:21:35.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:35.195" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 01:21:35.195" endtime="20200727 01:21:35.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:35.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:35.196" endtime="20200727 01:21:35.196"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:32.585" endtime="20200727 01:21:35.196"></status>
</kw>
<msg timestamp="20200727 01:21:35.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:32.585" endtime="20200727 01:21:35.197"></status>
</kw>
<msg timestamp="20200727 01:21:35.197" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 01:21:32.584" endtime="20200727 01:21:35.197"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:35.197" endtime="20200727 01:21:35.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:35.202" level="INFO">Running command 'ozone sh key rename o3://om:9862/71706-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:37.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:37.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:35.199" endtime="20200727 01:21:37.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:37.697" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:37.697" endtime="20200727 01:21:37.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:37.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:37.698" endtime="20200727 01:21:37.698"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:35.198" endtime="20200727 01:21:37.699"></status>
</kw>
<msg timestamp="20200727 01:21:37.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:35.198" endtime="20200727 01:21:37.699"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:35.198" endtime="20200727 01:21:37.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:37.704" level="INFO">Running command 'ozone sh key list o3://om:9862/71706-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:40.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:40.320" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 01:21:37.701" endtime="20200727 01:21:40.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:40.322" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 01:21:40.321" endtime="20200727 01:21:40.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:40.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:40.322" endtime="20200727 01:21:40.322"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:37.700" endtime="20200727 01:21:40.323"></status>
</kw>
<msg timestamp="20200727 01:21:40.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:37.700" endtime="20200727 01:21:40.323"></status>
</kw>
<msg timestamp="20200727 01:21:40.323" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 01:21:37.699" endtime="20200727 01:21:40.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:40.323" endtime="20200727 01:21:40.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:40.329" level="INFO">Running command 'ozone sh key delete o3://om:9862/71706-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:42.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:42.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:40.326" endtime="20200727 01:21:42.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:42.729" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:42.729" endtime="20200727 01:21:42.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:42.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:42.730" endtime="20200727 01:21:42.730"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:40.325" endtime="20200727 01:21:42.731"></status>
</kw>
<msg timestamp="20200727 01:21:42.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:40.325" endtime="20200727 01:21:42.731"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:40.324" endtime="20200727 01:21:42.731"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:50.908" endtime="20200727 01:21:42.731"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:50.908" endtime="20200727 01:21:42.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:42.736" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/71706-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:45.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:45.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:42.733" endtime="20200727 01:21:45.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:45.007" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:45.006" endtime="20200727 01:21:45.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:45.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:45.007" endtime="20200727 01:21:45.008"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:42.732" endtime="20200727 01:21:45.008"></status>
</kw>
<msg timestamp="20200727 01:21:45.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:42.732" endtime="20200727 01:21:45.008"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:42.731" endtime="20200727 01:21:45.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:45.013" level="INFO">Running command 'ozone sh volume delete o3://om:9862/71706-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:47.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:47.402" level="INFO">${output} = Volume 71706-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200727 01:21:45.010" endtime="20200727 01:21:47.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:47.403" level="INFO">Volume 71706-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200727 01:21:47.403" endtime="20200727 01:21:47.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:47.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:47.404" endtime="20200727 01:21:47.404"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:45.009" endtime="20200727 01:21:47.405"></status>
</kw>
<msg timestamp="20200727 01:21:47.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:45.009" endtime="20200727 01:21:47.405"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:45.008" endtime="20200727 01:21:47.405"></status>
</kw>
<status status="PASS" starttime="20200727 01:20:28.621" endtime="20200727 01:21:47.405"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:20:28.620" endtime="20200727 01:21:47.406" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:47.407" endtime="20200727 01:21:47.408"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:47.412" level="INFO">Running command 'ozone sh volume create o3://om:9862/71706-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:49.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:49.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:21:47.410" endtime="20200727 01:21:49.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:49.764" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:21:49.763" endtime="20200727 01:21:49.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:49.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:49.764" endtime="20200727 01:21:49.765"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:47.409" endtime="20200727 01:21:49.766"></status>
</kw>
<msg timestamp="20200727 01:21:49.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:47.409" endtime="20200727 01:21:49.766"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:47.408" endtime="20200727 01:21:49.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:49.769" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/71706-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:52.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:52.339" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:21:49.767" endtime="20200727 01:21:52.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:52.340" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:21:52.339" endtime="20200727 01:21:52.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:52.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:52.340" endtime="20200727 01:21:52.341"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:49.767" endtime="20200727 01:21:52.341"></status>
</kw>
<msg timestamp="20200727 01:21:52.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:49.767" endtime="20200727 01:21:52.341"></status>
</kw>
<msg timestamp="20200727 01:21:52.341" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:21:49.766" endtime="20200727 01:21:52.341"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:52.342" endtime="20200727 01:21:52.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:52.346" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/71706-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:54.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:54.608" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 01:21:52.344" endtime="20200727 01:21:54.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:54.609" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 01:21:54.609" endtime="20200727 01:21:54.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:54.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:54.610" endtime="20200727 01:21:54.610"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:52.343" endtime="20200727 01:21:54.610"></status>
</kw>
<msg timestamp="20200727 01:21:54.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:52.343" endtime="20200727 01:21:54.611"></status>
</kw>
<msg timestamp="20200727 01:21:54.611" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 01:21:52.342" endtime="20200727 01:21:54.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:54.615" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/71706-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:56.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:56.910" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:21:54.613" endtime="20200727 01:21:56.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:56.912" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:21:56.911" endtime="20200727 01:21:56.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:56.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:56.912" endtime="20200727 01:21:56.913"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:54.612" endtime="20200727 01:21:56.913"></status>
</kw>
<msg timestamp="20200727 01:21:56.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:54.612" endtime="20200727 01:21:56.913"></status>
</kw>
<msg timestamp="20200727 01:21:56.913" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:21:54.611" endtime="20200727 01:21:56.913"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:21:56.914" endtime="20200727 01:21:56.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:56.919" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/71706-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:21:59.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:21:59.216" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 01:21:56.916" endtime="20200727 01:21:59.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:21:59.217" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 01:21:59.216" endtime="20200727 01:21:59.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:21:59.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:21:59.217" endtime="20200727 01:21:59.218"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:56.916" endtime="20200727 01:21:59.218"></status>
</kw>
<msg timestamp="20200727 01:21:59.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:56.915" endtime="20200727 01:21:59.218"></status>
</kw>
<msg timestamp="20200727 01:21:59.218" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 01:21:56.915" endtime="20200727 01:21:59.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:21:59.223" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/71706-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:02.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:02.186" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:21:59.220" endtime="20200727 01:22:02.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:02.187" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:02.187" endtime="20200727 01:22:02.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:02.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:02.187" endtime="20200727 01:22:02.188"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:59.220" endtime="20200727 01:22:02.188"></status>
</kw>
<msg timestamp="20200727 01:22:02.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:21:59.219" endtime="20200727 01:22:02.189"></status>
</kw>
<msg timestamp="20200727 01:22:02.189" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:21:59.219" endtime="20200727 01:22:02.189"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:02.189" endtime="20200727 01:22:02.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:02.194" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/71706-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:04.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:04.553" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:02.192" endtime="20200727 01:22:04.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:04.554" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:04.554" endtime="20200727 01:22:04.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:04.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:04.555" endtime="20200727 01:22:04.555"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:02.192" endtime="20200727 01:22:04.556"></status>
</kw>
<msg timestamp="20200727 01:22:04.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:02.191" endtime="20200727 01:22:04.556"></status>
</kw>
<msg timestamp="20200727 01:22:04.556" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:02.190" endtime="20200727 01:22:04.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:04.560" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/71706-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:07.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:07.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200727 01:22:04.558" endtime="20200727 01:22:07.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:07.091" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:07.090" endtime="20200727 01:22:07.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:07.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:07.091" endtime="20200727 01:22:07.092"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:04.557" endtime="20200727 01:22:07.092"></status>
</kw>
<msg timestamp="20200727 01:22:07.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:04.557" endtime="20200727 01:22:07.092"></status>
</kw>
<msg timestamp="20200727 01:22:07.093" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200727 01:22:04.556" endtime="20200727 01:22:07.093"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:07.093" endtime="20200727 01:22:07.093"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:07.093" endtime="20200727 01:22:07.094"></status>
</kw>
<status status="PASS" starttime="20200727 01:21:47.408" endtime="20200727 01:22:07.095"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:21:47.406" endtime="20200727 01:22:07.095" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:07.096" endtime="20200727 01:22:07.097"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:07.102" level="INFO">Running command 'ozone sh bucket create o3://om:9862/71706-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:09.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:09.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:22:07.100" endtime="20200727 01:22:09.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:09.620" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:22:09.620" endtime="20200727 01:22:09.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:09.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:09.620" endtime="20200727 01:22:09.621"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:07.099" endtime="20200727 01:22:09.621"></status>
</kw>
<msg timestamp="20200727 01:22:09.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:07.099" endtime="20200727 01:22:09.621"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:07.098" endtime="20200727 01:22:09.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:09.625" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/71706-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:12.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:12.530" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:09.623" endtime="20200727 01:22:12.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:12.531" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:12.530" endtime="20200727 01:22:12.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:12.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:12.531" endtime="20200727 01:22:12.532"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:09.623" endtime="20200727 01:22:12.532"></status>
</kw>
<msg timestamp="20200727 01:22:12.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:09.622" endtime="20200727 01:22:12.532"></status>
</kw>
<msg timestamp="20200727 01:22:12.533" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:09.622" endtime="20200727 01:22:12.533"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:12.533" endtime="20200727 01:22:12.533"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:12.538" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/71706-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:14.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:14.819" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 01:22:12.535" endtime="20200727 01:22:14.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:14.820" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 01:22:14.819" endtime="20200727 01:22:14.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:14.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:14.820" endtime="20200727 01:22:14.821"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:12.534" endtime="20200727 01:22:14.821"></status>
</kw>
<msg timestamp="20200727 01:22:14.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:12.534" endtime="20200727 01:22:14.821"></status>
</kw>
<msg timestamp="20200727 01:22:14.822" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 01:22:12.533" endtime="20200727 01:22:14.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:14.826" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/71706-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:17.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:17.321" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:14.824" endtime="20200727 01:22:17.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:17.322" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:17.321" endtime="20200727 01:22:17.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:17.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:17.322" endtime="20200727 01:22:17.323"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:14.823" endtime="20200727 01:22:17.323"></status>
</kw>
<msg timestamp="20200727 01:22:17.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:14.823" endtime="20200727 01:22:17.323"></status>
</kw>
<msg timestamp="20200727 01:22:17.323" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:14.822" endtime="20200727 01:22:17.323"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:17.323" endtime="20200727 01:22:17.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:17.329" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/71706-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:19.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:19.725" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:22:17.326" endtime="20200727 01:22:19.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:19.726" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:22:19.725" endtime="20200727 01:22:19.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:19.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:19.726" endtime="20200727 01:22:19.726"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:17.325" endtime="20200727 01:22:19.727"></status>
</kw>
<msg timestamp="20200727 01:22:19.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:17.325" endtime="20200727 01:22:19.727"></status>
</kw>
<msg timestamp="20200727 01:22:19.727" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:22:17.324" endtime="20200727 01:22:19.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:19.732" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/71706-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:22.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:22.293" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:19.729" endtime="20200727 01:22:22.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:22.294" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:22.293" endtime="20200727 01:22:22.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:22.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:22.294" endtime="20200727 01:22:22.295"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:19.728" endtime="20200727 01:22:22.295"></status>
</kw>
<msg timestamp="20200727 01:22:22.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:19.728" endtime="20200727 01:22:22.295"></status>
</kw>
<msg timestamp="20200727 01:22:22.296" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:19.727" endtime="20200727 01:22:22.296"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:22.296" endtime="20200727 01:22:22.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:22.301" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/71706-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:24.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:24.542" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:22.298" endtime="20200727 01:22:24.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:24.543" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:24.542" endtime="20200727 01:22:24.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:24.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:24.543" endtime="20200727 01:22:24.543"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:22.298" endtime="20200727 01:22:24.544"></status>
</kw>
<msg timestamp="20200727 01:22:24.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:22.297" endtime="20200727 01:22:24.544"></status>
</kw>
<msg timestamp="20200727 01:22:24.544" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:22.297" endtime="20200727 01:22:24.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:24.548" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/71706-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:27.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:27.227" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 01:22:24.546" endtime="20200727 01:22:27.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:27.228" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:27.227" endtime="20200727 01:22:27.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:27.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:27.228" endtime="20200727 01:22:27.228"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:24.545" endtime="20200727 01:22:27.229"></status>
</kw>
<msg timestamp="20200727 01:22:27.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:24.545" endtime="20200727 01:22:27.229"></status>
</kw>
<msg timestamp="20200727 01:22:27.229" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 01:22:24.544" endtime="20200727 01:22:27.229"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:27.229" endtime="20200727 01:22:27.230"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:27.230" endtime="20200727 01:22:27.230"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:07.098" endtime="20200727 01:22:27.231"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:22:07.095" endtime="20200727 01:22:27.231" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:27.232" endtime="20200727 01:22:27.232"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:27.237" level="INFO">Running command 'ozone sh key put o3://om:9862/71706-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:31.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:31.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:22:27.235" endtime="20200727 01:22:31.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:31.614" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:22:31.613" endtime="20200727 01:22:31.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:31.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:31.614" endtime="20200727 01:22:31.615"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:27.234" endtime="20200727 01:22:31.615"></status>
</kw>
<msg timestamp="20200727 01:22:31.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:27.234" endtime="20200727 01:22:31.616"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:27.233" endtime="20200727 01:22:31.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:31.622" level="INFO">Running command 'ozone sh key getacl o3://om:9862/71706-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:34.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:34.171" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:31.618" endtime="20200727 01:22:34.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:34.172" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:34.171" endtime="20200727 01:22:34.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:34.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:34.172" endtime="20200727 01:22:34.173"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:31.617" endtime="20200727 01:22:34.173"></status>
</kw>
<msg timestamp="20200727 01:22:34.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:31.617" endtime="20200727 01:22:34.173"></status>
</kw>
<msg timestamp="20200727 01:22:34.173" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:31.616" endtime="20200727 01:22:34.173"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:34.173" endtime="20200727 01:22:34.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:34.178" level="INFO">Running command 'ozone sh key addacl o3://om:9862/71706-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:36.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:36.498" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:22:34.176" endtime="20200727 01:22:36.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:36.499" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:22:36.498" endtime="20200727 01:22:36.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:36.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:36.499" endtime="20200727 01:22:36.500"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:34.175" endtime="20200727 01:22:36.500"></status>
</kw>
<msg timestamp="20200727 01:22:36.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:34.175" endtime="20200727 01:22:36.500"></status>
</kw>
<msg timestamp="20200727 01:22:36.501" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 01:22:34.174" endtime="20200727 01:22:36.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:36.504" level="INFO">Running command 'ozone sh key getacl o3://om:9862/71706-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:39.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:39.028" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:36.502" endtime="20200727 01:22:39.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:39.029" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:39.029" endtime="20200727 01:22:39.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:39.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:39.030" endtime="20200727 01:22:39.030"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:36.502" endtime="20200727 01:22:39.030"></status>
</kw>
<msg timestamp="20200727 01:22:39.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:36.501" endtime="20200727 01:22:39.031"></status>
</kw>
<msg timestamp="20200727 01:22:39.031" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:36.501" endtime="20200727 01:22:39.031"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:39.031" endtime="20200727 01:22:39.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:39.036" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/71706-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:41.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:41.546" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:22:39.033" endtime="20200727 01:22:41.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:41.547" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:22:41.546" endtime="20200727 01:22:41.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:41.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:41.547" endtime="20200727 01:22:41.548"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:39.033" endtime="20200727 01:22:41.548"></status>
</kw>
<msg timestamp="20200727 01:22:41.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:39.033" endtime="20200727 01:22:41.548"></status>
</kw>
<msg timestamp="20200727 01:22:41.549" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 01:22:39.032" endtime="20200727 01:22:41.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:41.552" level="INFO">Running command 'ozone sh key getacl o3://om:9862/71706-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:44.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:44.086" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:41.550" endtime="20200727 01:22:44.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:44.087" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:44.086" endtime="20200727 01:22:44.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:44.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:44.087" endtime="20200727 01:22:44.088"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:41.550" endtime="20200727 01:22:44.088"></status>
</kw>
<msg timestamp="20200727 01:22:44.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:41.549" endtime="20200727 01:22:44.088"></status>
</kw>
<msg timestamp="20200727 01:22:44.089" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 01:22:41.549" endtime="20200727 01:22:44.089"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:44.089" endtime="20200727 01:22:44.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:44.093" level="INFO">Running command 'ozone sh key setacl o3://om:9862/71706-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:46.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:46.209" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:44.091" endtime="20200727 01:22:46.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:46.210" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:46.209" endtime="20200727 01:22:46.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:46.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:46.210" endtime="20200727 01:22:46.211"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:44.090" endtime="20200727 01:22:46.211"></status>
</kw>
<msg timestamp="20200727 01:22:46.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:44.090" endtime="20200727 01:22:46.211"></status>
</kw>
<msg timestamp="20200727 01:22:46.212" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 01:22:44.089" endtime="20200727 01:22:46.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:46.216" level="INFO">Running command 'ozone sh key getacl o3://om:9862/71706-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:48.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:48.838" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 01:22:46.213" endtime="20200727 01:22:48.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:48.840" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 01:22:48.839" endtime="20200727 01:22:48.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:48.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:48.840" endtime="20200727 01:22:48.841"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:46.213" endtime="20200727 01:22:48.841"></status>
</kw>
<msg timestamp="20200727 01:22:48.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:46.212" endtime="20200727 01:22:48.841"></status>
</kw>
<msg timestamp="20200727 01:22:48.842" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 01:22:46.212" endtime="20200727 01:22:48.842"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:48.842" endtime="20200727 01:22:48.842"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:48.842" endtime="20200727 01:22:48.843"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:27.233" endtime="20200727 01:22:48.843"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:22:27.231" endtime="20200727 01:22:48.844" critical="yes"></status>
</test>
<test id="s1-s3-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:48.845" endtime="20200727 01:22:48.846"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:48.851" level="INFO">Running command 'ozone sh volume info o3:///71706-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:51.127" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:22:51.127" level="INFO">${output} = VOLUME_NOT_FOUND Volume 71706-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 01:22:48.847" endtime="20200727 01:22:51.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:51.129" level="INFO">VOLUME_NOT_FOUND Volume 71706-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 01:22:51.128" endtime="20200727 01:22:51.129"></status>
</kw>
<msg timestamp="20200727 01:22:51.129" level="INFO">${result} = VOLUME_NOT_FOUND Volume 71706-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 01:22:48.846" endtime="20200727 01:22:51.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:51.129" endtime="20200727 01:22:51.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:51.134" level="INFO">Running command 'ozone sh volume create o3:///71706-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:53.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:53.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:22:51.131" endtime="20200727 01:22:53.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:53.386" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:22:53.385" endtime="20200727 01:22:53.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:53.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:53.386" endtime="20200727 01:22:53.387"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:51.131" endtime="20200727 01:22:53.387"></status>
</kw>
<msg timestamp="20200727 01:22:53.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:51.130" endtime="20200727 01:22:53.387"></status>
</kw>
<msg timestamp="20200727 01:22:53.388" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:22:51.130" endtime="20200727 01:22:53.388"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:53.388" endtime="20200727 01:22:53.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:53.392" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="71706-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:55.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:55.910" level="INFO">${output} = {
  "metadata": {},
  "name": "71706-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:22:53.340Z",
  "modificationTime": "2020-07-27T01:22:53.340Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 01:22:53.390" endtime="20200727 01:22:55.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:55.911" level="INFO">{
  "metadata": {},
  "name": "71706-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:22:53.340Z",
  "modificationTime": "2020-07-27T01:22:53.340Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:22:55.910" endtime="20200727 01:22:55.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:55.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:55.911" endtime="20200727 01:22:55.912"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:53.389" endtime="20200727 01:22:55.912"></status>
</kw>
<msg timestamp="20200727 01:22:55.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:53.389" endtime="20200727 01:22:55.912"></status>
</kw>
<msg timestamp="20200727 01:22:55.913" level="INFO">${result} = {
  "metadata": {},
  "name": "71706-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:22:53.340Z",
  "modificationTime": "2020-07-27T01:22:53.340Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 01:22:53.388" endtime="20200727 01:22:55.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:55.913" endtime="20200727 01:22:55.913"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:55.917" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="71706-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:22:58.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:22:58.376" level="INFO">${output} = {
  "metadata": {},
  "name": "71706-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:22:53.340Z",
  "modificationTime": "2020-07-27T01:22:53.340Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 01:22:55.915" endtime="20200727 01:22:58.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:22:58.378" level="INFO">{
  "metadata": {},
  "name": "71706-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:22:53.340Z",
  "modificationTime": "2020-07-27T01:22:53.340Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:22:58.377" endtime="20200727 01:22:58.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:22:58.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:22:58.378" endtime="20200727 01:22:58.379"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:55.914" endtime="20200727 01:22:58.379"></status>
</kw>
<msg timestamp="20200727 01:22:58.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:55.914" endtime="20200727 01:22:58.379"></status>
</kw>
<msg timestamp="20200727 01:22:58.379" level="INFO">${result} = {
  "metadata": {},
  "name": "71706-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:22:53.340Z",
  "modificationTime": "2020-07-27T01:22:53.340Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 01:22:55.913" endtime="20200727 01:22:58.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:22:58.380" endtime="20200727 01:22:58.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:22:58.383" level="INFO">Running command 'ozone sh volume update o3:///71706-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:00.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:00.814" level="INFO">${output} = {
  "metadata" : { },
  "name" : "71706-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T01:22:53.340Z",
  "modificationTime" : "2020-07-27T01:23:00.515Z",
  "acls...</msg>
<status status="PASS" starttime="20200727 01:22:58.381" endtime="20200727 01:23:00.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:00.815" level="INFO">{
  "metadata" : { },
  "name" : "71706-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T01:22:53.340Z",
  "modificationTime" : "2020-07-27T01:23:00.515Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 01:23:00.814" endtime="20200727 01:23:00.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:00.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:00.815" endtime="20200727 01:23:00.816"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:58.381" endtime="20200727 01:23:00.816"></status>
</kw>
<msg timestamp="20200727 01:23:00.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:22:58.381" endtime="20200727 01:23:00.816"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:58.380" endtime="20200727 01:23:00.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:00.821" level="INFO">Running command 'ozone sh volume info o3:///71706-rpcwport | jq -r '. | select(.name=="71706-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:03.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:03.473" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:23:00.818" endtime="20200727 01:23:03.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:03.474" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 01:23:03.474" endtime="20200727 01:23:03.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:03.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:03.475" endtime="20200727 01:23:03.475"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:00.818" endtime="20200727 01:23:03.475"></status>
</kw>
<msg timestamp="20200727 01:23:03.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:00.818" endtime="20200727 01:23:03.476"></status>
</kw>
<msg timestamp="20200727 01:23:03.476" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:23:00.817" endtime="20200727 01:23:03.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:03.476" endtime="20200727 01:23:03.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:03.480" level="INFO">Running command 'ozone sh bucket create o3:///71706-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:05.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:05.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:03.478" endtime="20200727 01:23:05.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:05.779" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:05.778" endtime="20200727 01:23:05.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:05.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:05.779" endtime="20200727 01:23:05.780"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:03.478" endtime="20200727 01:23:05.780"></status>
</kw>
<msg timestamp="20200727 01:23:05.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:03.477" endtime="20200727 01:23:05.780"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:03.477" endtime="20200727 01:23:05.781"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:05.784" level="INFO">Running command 'ozone sh bucket info o3:///71706-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:08.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:08.311" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 01:23:05.782" endtime="20200727 01:23:08.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:08.312" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 01:23:08.311" endtime="20200727 01:23:08.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:08.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:08.312" endtime="20200727 01:23:08.313"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:05.782" endtime="20200727 01:23:08.313"></status>
</kw>
<msg timestamp="20200727 01:23:08.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:05.782" endtime="20200727 01:23:08.313"></status>
</kw>
<msg timestamp="20200727 01:23:08.314" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 01:23:05.781" endtime="20200727 01:23:08.314"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:08.314" endtime="20200727 01:23:08.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:08.318" level="INFO">Running command 'ozone sh bucket list o3:///71706-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:10.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:10.907" level="INFO">${output} = 71706-rpcwport</msg>
<status status="PASS" starttime="20200727 01:23:08.316" endtime="20200727 01:23:10.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:10.908" level="INFO">71706-rpcwport</msg>
<status status="PASS" starttime="20200727 01:23:10.908" endtime="20200727 01:23:10.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:10.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:10.909" endtime="20200727 01:23:10.909"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:08.316" endtime="20200727 01:23:10.910"></status>
</kw>
<msg timestamp="20200727 01:23:10.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:08.315" endtime="20200727 01:23:10.910"></status>
</kw>
<msg timestamp="20200727 01:23:10.910" level="INFO">${result} = 71706-rpcwport</msg>
<status status="PASS" starttime="20200727 01:23:08.314" endtime="20200727 01:23:10.910"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:10.910" endtime="20200727 01:23:10.911"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:10.917" level="INFO">Running command 'ozone sh key put o3:///71706-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:15.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:15.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:10.914" endtime="20200727 01:23:15.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:15.214" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:15.213" endtime="20200727 01:23:15.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:15.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:15.214" endtime="20200727 01:23:15.215"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:10.913" endtime="20200727 01:23:15.215"></status>
</kw>
<msg timestamp="20200727 01:23:15.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:10.912" endtime="20200727 01:23:15.215"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:10.912" endtime="20200727 01:23:15.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:15.220" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:15.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:15.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:15.217" endtime="20200727 01:23:15.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:15.223" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:15.223" endtime="20200727 01:23:15.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:15.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:15.224" endtime="20200727 01:23:15.225"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:15.217" endtime="20200727 01:23:15.225"></status>
</kw>
<msg timestamp="20200727 01:23:15.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:15.217" endtime="20200727 01:23:15.225"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:15.216" endtime="20200727 01:23:15.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:15.229" level="INFO">Running command 'ozone sh key get o3:///71706-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:19.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:19.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:15.227" endtime="20200727 01:23:19.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:19.367" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:19.366" endtime="20200727 01:23:19.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:19.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:19.367" endtime="20200727 01:23:19.368"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:15.227" endtime="20200727 01:23:19.368"></status>
</kw>
<msg timestamp="20200727 01:23:19.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:15.226" endtime="20200727 01:23:19.368"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:15.226" endtime="20200727 01:23:19.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:19.373" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:19.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:19.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:19.371" endtime="20200727 01:23:19.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:19.376" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:19.376" endtime="20200727 01:23:19.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:19.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:19.377" endtime="20200727 01:23:19.377"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:19.370" endtime="20200727 01:23:19.378"></status>
</kw>
<msg timestamp="20200727 01:23:19.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:19.370" endtime="20200727 01:23:19.378"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:19.369" endtime="20200727 01:23:19.379"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:19.384" level="INFO">Running command 'ozone sh key put -t RATIS o3:///71706-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:23.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:23.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:19.382" endtime="20200727 01:23:23.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:23.880" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:23.880" endtime="20200727 01:23:23.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:23.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:23.881" endtime="20200727 01:23:23.881"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:19.381" endtime="20200727 01:23:23.881"></status>
</kw>
<msg timestamp="20200727 01:23:23.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:19.380" endtime="20200727 01:23:23.882"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:19.379" endtime="20200727 01:23:23.882"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:23.885" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:23.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:23.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:23.883" endtime="20200727 01:23:23.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:23.889" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:23.888" endtime="20200727 01:23:23.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:23.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:23.889" endtime="20200727 01:23:23.890"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:23.883" endtime="20200727 01:23:23.890"></status>
</kw>
<msg timestamp="20200727 01:23:23.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:23.883" endtime="20200727 01:23:23.890"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:23.882" endtime="20200727 01:23:23.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:23.893" level="INFO">Running command 'ozone sh key get o3:///71706-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:28.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:28.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:23.892" endtime="20200727 01:23:28.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:28.080" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:28.079" endtime="20200727 01:23:28.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:28.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:28.080" endtime="20200727 01:23:28.081"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:23.891" endtime="20200727 01:23:28.081"></status>
</kw>
<msg timestamp="20200727 01:23:28.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:23.891" endtime="20200727 01:23:28.081"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:23.890" endtime="20200727 01:23:28.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:28.085" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:28.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:28.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:28.083" endtime="20200727 01:23:28.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:28.088" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:28.088" endtime="20200727 01:23:28.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:28.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:28.088" endtime="20200727 01:23:28.089"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:28.083" endtime="20200727 01:23:28.089"></status>
</kw>
<msg timestamp="20200727 01:23:28.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:28.082" endtime="20200727 01:23:28.090"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:28.082" endtime="20200727 01:23:28.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:28.093" level="INFO">Running command 'ozone sh key info o3:///71706-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:30.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:30.841" level="INFO">${output} = {
  "volumeName": "71706-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:23:21.651Z",
  "modificationTime": "2020-07-27T01:23:23.379Z",
...</msg>
<status status="PASS" starttime="20200727 01:23:28.091" endtime="20200727 01:23:30.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:30.842" level="INFO">{
  "volumeName": "71706-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:23:21.651Z",
  "modificationTime": "2020-07-27T01:23:23.379Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583200876069000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:23:30.841" endtime="20200727 01:23:30.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:30.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:30.843" endtime="20200727 01:23:30.843"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:28.091" endtime="20200727 01:23:30.843"></status>
</kw>
<msg timestamp="20200727 01:23:30.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:28.091" endtime="20200727 01:23:30.844"></status>
</kw>
<msg timestamp="20200727 01:23:30.844" level="INFO">${result} = {
  "volumeName": "71706-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:23:21.651Z",
  "modificationTime": "2020-07-27T01:23:23.379Z",
...</msg>
<status status="PASS" starttime="20200727 01:23:28.090" endtime="20200727 01:23:30.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:30.844" endtime="20200727 01:23:30.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:30.849" level="INFO">Running command 'ozone sh key delete o3:///71706-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:33.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:33.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:30.846" endtime="20200727 01:23:33.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:33.192" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:33.191" endtime="20200727 01:23:33.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:33.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:33.192" endtime="20200727 01:23:33.193"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:30.846" endtime="20200727 01:23:33.193"></status>
</kw>
<msg timestamp="20200727 01:23:33.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:30.845" endtime="20200727 01:23:33.193"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:30.845" endtime="20200727 01:23:33.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:33.197" level="INFO">Running command 'ozone sh key cp o3:///71706-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:37.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:37.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:33.195" endtime="20200727 01:23:37.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:37.788" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:37.787" endtime="20200727 01:23:37.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:37.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:37.788" endtime="20200727 01:23:37.789"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:33.194" endtime="20200727 01:23:37.789"></status>
</kw>
<msg timestamp="20200727 01:23:37.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:33.194" endtime="20200727 01:23:37.789"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:33.194" endtime="20200727 01:23:37.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:37.793" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:37.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:37.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:37.791" endtime="20200727 01:23:37.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:37.797" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:37.796" endtime="20200727 01:23:37.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:37.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:37.797" endtime="20200727 01:23:37.798"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:37.791" endtime="20200727 01:23:37.798"></status>
</kw>
<msg timestamp="20200727 01:23:37.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:37.790" endtime="20200727 01:23:37.798"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:37.790" endtime="20200727 01:23:37.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:37.809" level="INFO">Running command 'ozone sh key get o3:///71706-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:41.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:41.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:37.800" endtime="20200727 01:23:41.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:41.905" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:41.905" endtime="20200727 01:23:41.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:41.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:41.906" endtime="20200727 01:23:41.906"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:37.800" endtime="20200727 01:23:41.907"></status>
</kw>
<msg timestamp="20200727 01:23:41.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:37.799" endtime="20200727 01:23:41.907"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:37.799" endtime="20200727 01:23:41.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:41.911" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:41.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:41.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:41.909" endtime="20200727 01:23:41.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:41.915" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:41.914" endtime="20200727 01:23:41.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:41.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:41.915" endtime="20200727 01:23:41.916"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:41.908" endtime="20200727 01:23:41.916"></status>
</kw>
<msg timestamp="20200727 01:23:41.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:41.908" endtime="20200727 01:23:41.917"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:41.907" endtime="20200727 01:23:41.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:41.921" level="INFO">Running command 'ozone sh key delete o3:///71706-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:44.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:44.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:41.919" endtime="20200727 01:23:44.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:44.272" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:44.272" endtime="20200727 01:23:44.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:44.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:44.272" endtime="20200727 01:23:44.273"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:41.918" endtime="20200727 01:23:44.273"></status>
</kw>
<msg timestamp="20200727 01:23:44.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:41.918" endtime="20200727 01:23:44.274"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:41.917" endtime="20200727 01:23:44.274"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:44.278" level="INFO">Running command 'ozone sh key get o3:///71706-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:46.491" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:23:46.491" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:23:44.275" endtime="20200727 01:23:46.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:46.492" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:23:46.492" endtime="20200727 01:23:46.493"></status>
</kw>
<msg timestamp="20200727 01:23:46.493" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:23:44.274" endtime="20200727 01:23:46.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:46.493" endtime="20200727 01:23:46.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:46.497" level="INFO">Running command 'ozone sh key get --force o3:///71706-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:50.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:50.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:46.495" endtime="20200727 01:23:50.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:50.260" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:50.259" endtime="20200727 01:23:50.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:50.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:50.260" endtime="20200727 01:23:50.261"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:46.495" endtime="20200727 01:23:50.262"></status>
</kw>
<msg timestamp="20200727 01:23:50.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:46.494" endtime="20200727 01:23:50.262"></status>
</kw>
<msg timestamp="20200727 01:23:50.262" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:23:46.494" endtime="20200727 01:23:50.262"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:50.262" endtime="20200727 01:23:50.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:50.268" level="INFO">Running command 'ozone sh key info o3:///71706-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:52.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:52.854" level="INFO">${output} = {
  "volumeName": "71706-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:23:13.202Z",
  "modificationTime": "2020-07-27T01:23:14.749Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 01:23:50.266" endtime="20200727 01:23:52.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:52.855" level="INFO">{
  "volumeName": "71706-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:23:13.202Z",
  "modificationTime": "2020-07-27T01:23:14.749Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583200322486400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:23:52.854" endtime="20200727 01:23:52.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:52.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:52.855" endtime="20200727 01:23:52.856"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:50.265" endtime="20200727 01:23:52.856"></status>
</kw>
<msg timestamp="20200727 01:23:52.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:50.264" endtime="20200727 01:23:52.856"></status>
</kw>
<msg timestamp="20200727 01:23:52.857" level="INFO">${result} = {
  "volumeName": "71706-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:23:13.202Z",
  "modificationTime": "2020-07-27T01:23:14.749Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 01:23:50.263" endtime="20200727 01:23:52.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:52.857" endtime="20200727 01:23:52.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:52.862" level="INFO">Running command 'ozone sh key list o3:///71706-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:55.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:55.466" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 01:23:52.859" endtime="20200727 01:23:55.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:55.467" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 01:23:55.467" endtime="20200727 01:23:55.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:55.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:55.468" endtime="20200727 01:23:55.468"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:52.859" endtime="20200727 01:23:55.469"></status>
</kw>
<msg timestamp="20200727 01:23:55.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:52.858" endtime="20200727 01:23:55.469"></status>
</kw>
<msg timestamp="20200727 01:23:55.469" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 01:23:52.858" endtime="20200727 01:23:55.469"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:23:55.469" endtime="20200727 01:23:55.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:55.474" level="INFO">Running command 'ozone sh key rename o3:///71706-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:23:57.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:23:57.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:23:55.471" endtime="20200727 01:23:57.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:23:57.814" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:23:57.813" endtime="20200727 01:23:57.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:23:57.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:23:57.814" endtime="20200727 01:23:57.814"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:55.471" endtime="20200727 01:23:57.815"></status>
</kw>
<msg timestamp="20200727 01:23:57.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:55.470" endtime="20200727 01:23:57.815"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:55.470" endtime="20200727 01:23:57.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:23:57.820" level="INFO">Running command 'ozone sh key list o3:///71706-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:00.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:00.531" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 01:23:57.817" endtime="20200727 01:24:00.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:00.533" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 01:24:00.532" endtime="20200727 01:24:00.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:00.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:00.533" endtime="20200727 01:24:00.533"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:57.816" endtime="20200727 01:24:00.534"></status>
</kw>
<msg timestamp="20200727 01:24:00.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:23:57.816" endtime="20200727 01:24:00.534"></status>
</kw>
<msg timestamp="20200727 01:24:00.534" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 01:23:57.815" endtime="20200727 01:24:00.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:00.535" endtime="20200727 01:24:00.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:00.540" level="INFO">Running command 'ozone sh key delete o3:///71706-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:02.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:02.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:00.538" endtime="20200727 01:24:02.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:02.903" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:02.902" endtime="20200727 01:24:02.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:02.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:02.903" endtime="20200727 01:24:02.904"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:00.537" endtime="20200727 01:24:02.904"></status>
</kw>
<msg timestamp="20200727 01:24:02.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:00.536" endtime="20200727 01:24:02.904"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:00.535" endtime="20200727 01:24:02.904"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:10.911" endtime="20200727 01:24:02.904"></status>
</kw>
<status status="PASS" starttime="20200727 01:23:10.911" endtime="20200727 01:24:02.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:02.908" level="INFO">Running command 'ozone sh bucket delete o3:///71706-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:05.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:05.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:02.906" endtime="20200727 01:24:05.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:05.139" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:05.139" endtime="20200727 01:24:05.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:05.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:05.140" endtime="20200727 01:24:05.140"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:02.906" endtime="20200727 01:24:05.140"></status>
</kw>
<msg timestamp="20200727 01:24:05.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:02.905" endtime="20200727 01:24:05.141"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:02.905" endtime="20200727 01:24:05.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:05.144" level="INFO">Running command 'ozone sh volume delete o3:///71706-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:07.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:07.513" level="INFO">${output} = Volume 71706-rpcwport is deleted</msg>
<status status="PASS" starttime="20200727 01:24:05.142" endtime="20200727 01:24:07.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:07.514" level="INFO">Volume 71706-rpcwport is deleted</msg>
<status status="PASS" starttime="20200727 01:24:07.514" endtime="20200727 01:24:07.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:07.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:07.514" endtime="20200727 01:24:07.515"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:05.142" endtime="20200727 01:24:07.515"></status>
</kw>
<msg timestamp="20200727 01:24:07.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:05.142" endtime="20200727 01:24:07.516"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:05.141" endtime="20200727 01:24:07.516"></status>
</kw>
<status status="PASS" starttime="20200727 01:22:48.846" endtime="20200727 01:24:07.516"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:22:48.844" endtime="20200727 01:24:07.516" critical="yes"></status>
</test>
<test id="s1-s3-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:07.518" endtime="20200727 01:24:07.518"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:07.522" level="INFO">Running command 'ozone sh volume info /71706-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:09.826" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:24:09.826" level="INFO">${output} = VOLUME_NOT_FOUND Volume 71706-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 01:24:07.520" endtime="20200727 01:24:09.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:09.827" level="INFO">VOLUME_NOT_FOUND Volume 71706-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 01:24:09.827" endtime="20200727 01:24:09.828"></status>
</kw>
<msg timestamp="20200727 01:24:09.828" level="INFO">${result} = VOLUME_NOT_FOUND Volume 71706-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 01:24:07.519" endtime="20200727 01:24:09.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:09.828" endtime="20200727 01:24:09.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:09.833" level="INFO">Running command 'ozone sh volume create /71706-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:12.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:12.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:09.830" endtime="20200727 01:24:12.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:12.325" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:12.324" endtime="20200727 01:24:12.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:12.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:12.325" endtime="20200727 01:24:12.326"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:09.830" endtime="20200727 01:24:12.326"></status>
</kw>
<msg timestamp="20200727 01:24:12.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:09.829" endtime="20200727 01:24:12.326"></status>
</kw>
<msg timestamp="20200727 01:24:12.327" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:24:09.829" endtime="20200727 01:24:12.327"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:12.327" endtime="20200727 01:24:12.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:12.332" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="71706-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:14.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:14.786" level="INFO">${output} = {
  "metadata": {},
  "name": "71706-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:24:12.080Z",
  "modificationTime": "2020-07-27T01:24:12.080Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 01:24:12.329" endtime="20200727 01:24:14.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:14.788" level="INFO">{
  "metadata": {},
  "name": "71706-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:24:12.080Z",
  "modificationTime": "2020-07-27T01:24:12.080Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:24:14.787" endtime="20200727 01:24:14.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:14.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:14.788" endtime="20200727 01:24:14.789"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:12.329" endtime="20200727 01:24:14.789"></status>
</kw>
<msg timestamp="20200727 01:24:14.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:12.328" endtime="20200727 01:24:14.789"></status>
</kw>
<msg timestamp="20200727 01:24:14.790" level="INFO">${result} = {
  "metadata": {},
  "name": "71706-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:24:12.080Z",
  "modificationTime": "2020-07-27T01:24:12.080Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 01:24:12.327" endtime="20200727 01:24:14.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:14.790" endtime="20200727 01:24:14.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:14.794" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="71706-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:17.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:17.254" level="INFO">${output} = {
  "metadata": {},
  "name": "71706-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:24:12.080Z",
  "modificationTime": "2020-07-27T01:24:12.080Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 01:24:14.792" endtime="20200727 01:24:17.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:17.255" level="INFO">{
  "metadata": {},
  "name": "71706-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:24:12.080Z",
  "modificationTime": "2020-07-27T01:24:12.080Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 01:24:17.254" endtime="20200727 01:24:17.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:17.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:17.255" endtime="20200727 01:24:17.256"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:14.791" endtime="20200727 01:24:17.256"></status>
</kw>
<msg timestamp="20200727 01:24:17.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:14.791" endtime="20200727 01:24:17.256"></status>
</kw>
<msg timestamp="20200727 01:24:17.257" level="INFO">${result} = {
  "metadata": {},
  "name": "71706-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T01:24:12.080Z",
  "modificationTime": "2020-07-27T01:24:12.080Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 01:24:14.790" endtime="20200727 01:24:17.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:17.257" endtime="20200727 01:24:17.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:17.262" level="INFO">Running command 'ozone sh volume update /71706-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:19.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:19.855" level="INFO">${output} = {
  "metadata" : { },
  "name" : "71706-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T01:24:12.080Z",
  "modificationTime" : "2020-07-27T01:24:19.461Z",
  "a...</msg>
<status status="PASS" starttime="20200727 01:24:17.259" endtime="20200727 01:24:19.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:19.856" level="INFO">{
  "metadata" : { },
  "name" : "71706-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T01:24:12.080Z",
  "modificationTime" : "2020-07-27T01:24:19.461Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 01:24:19.856" endtime="20200727 01:24:19.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:19.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:19.856" endtime="20200727 01:24:19.857"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:17.258" endtime="20200727 01:24:19.857"></status>
</kw>
<msg timestamp="20200727 01:24:19.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:17.258" endtime="20200727 01:24:19.857"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:17.257" endtime="20200727 01:24:19.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:19.863" level="INFO">Running command 'ozone sh volume info /71706-rpcwoscheme | jq -r '. | select(.name=="71706-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:22.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:22.446" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:24:19.860" endtime="20200727 01:24:22.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:22.447" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 01:24:22.447" endtime="20200727 01:24:22.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:22.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:22.448" endtime="20200727 01:24:22.448"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:19.859" endtime="20200727 01:24:22.448"></status>
</kw>
<msg timestamp="20200727 01:24:22.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:19.859" endtime="20200727 01:24:22.449"></status>
</kw>
<msg timestamp="20200727 01:24:22.449" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 01:24:19.858" endtime="20200727 01:24:22.449"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:22.449" endtime="20200727 01:24:22.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:22.453" level="INFO">Running command 'ozone sh bucket create /71706-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:24.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:24.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:22.451" endtime="20200727 01:24:24.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:24.830" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:24.829" endtime="20200727 01:24:24.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:24.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:24.830" endtime="20200727 01:24:24.831"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:22.451" endtime="20200727 01:24:24.831"></status>
</kw>
<msg timestamp="20200727 01:24:24.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:22.450" endtime="20200727 01:24:24.831"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:22.450" endtime="20200727 01:24:24.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:24.835" level="INFO">Running command 'ozone sh bucket info /71706-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:27.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:27.327" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 01:24:24.834" endtime="20200727 01:24:27.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:27.328" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 01:24:27.327" endtime="20200727 01:24:27.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:27.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:27.328" endtime="20200727 01:24:27.329"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:24.833" endtime="20200727 01:24:27.329"></status>
</kw>
<msg timestamp="20200727 01:24:27.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:24.833" endtime="20200727 01:24:27.329"></status>
</kw>
<msg timestamp="20200727 01:24:27.330" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 01:24:24.832" endtime="20200727 01:24:27.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:27.330" endtime="20200727 01:24:27.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:27.334" level="INFO">Running command 'ozone sh bucket list /71706-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:29.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:29.883" level="INFO">${output} = 71706-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 01:24:27.332" endtime="20200727 01:24:29.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:29.884" level="INFO">71706-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 01:24:29.883" endtime="20200727 01:24:29.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:29.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:29.884" endtime="20200727 01:24:29.884"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:27.332" endtime="20200727 01:24:29.885"></status>
</kw>
<msg timestamp="20200727 01:24:29.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:27.331" endtime="20200727 01:24:29.885"></status>
</kw>
<msg timestamp="20200727 01:24:29.885" level="INFO">${result} = 71706-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 01:24:27.330" endtime="20200727 01:24:29.885"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:29.885" endtime="20200727 01:24:29.886"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:29.890" level="INFO">Running command 'ozone sh key put /71706-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:34.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:34.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:29.888" endtime="20200727 01:24:34.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:34.333" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:34.332" endtime="20200727 01:24:34.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:34.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:34.333" endtime="20200727 01:24:34.334"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:29.888" endtime="20200727 01:24:34.335"></status>
</kw>
<msg timestamp="20200727 01:24:34.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:29.888" endtime="20200727 01:24:34.335"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:29.887" endtime="20200727 01:24:34.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:34.339" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:34.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:34.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:34.337" endtime="20200727 01:24:34.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:34.343" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:34.342" endtime="20200727 01:24:34.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:34.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:34.343" endtime="20200727 01:24:34.344"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:34.336" endtime="20200727 01:24:34.344"></status>
</kw>
<msg timestamp="20200727 01:24:34.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:34.336" endtime="20200727 01:24:34.344"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:34.335" endtime="20200727 01:24:34.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:34.349" level="INFO">Running command 'ozone sh key get /71706-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:38.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:38.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:34.347" endtime="20200727 01:24:38.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:38.177" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:38.176" endtime="20200727 01:24:38.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:38.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:38.177" endtime="20200727 01:24:38.178"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:34.346" endtime="20200727 01:24:38.178"></status>
</kw>
<msg timestamp="20200727 01:24:38.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:34.346" endtime="20200727 01:24:38.178"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:34.345" endtime="20200727 01:24:38.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:38.182" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:38.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:38.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:38.180" endtime="20200727 01:24:38.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:38.186" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:38.185" endtime="20200727 01:24:38.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:38.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:38.187" endtime="20200727 01:24:38.187"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:38.180" endtime="20200727 01:24:38.187"></status>
</kw>
<msg timestamp="20200727 01:24:38.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:38.179" endtime="20200727 01:24:38.188"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:38.179" endtime="20200727 01:24:38.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:38.193" level="INFO">Running command 'ozone sh key put -t RATIS /71706-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:42.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:42.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:38.189" endtime="20200727 01:24:42.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:42.404" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:42.403" endtime="20200727 01:24:42.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:42.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:42.404" endtime="20200727 01:24:42.405"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:38.189" endtime="20200727 01:24:42.405"></status>
</kw>
<msg timestamp="20200727 01:24:42.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:38.188" endtime="20200727 01:24:42.405"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:38.188" endtime="20200727 01:24:42.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:42.409" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:42.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:42.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:42.407" endtime="20200727 01:24:42.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:42.412" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:42.412" endtime="20200727 01:24:42.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:42.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:42.413" endtime="20200727 01:24:42.413"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:42.407" endtime="20200727 01:24:42.413"></status>
</kw>
<msg timestamp="20200727 01:24:42.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:42.406" endtime="20200727 01:24:42.414"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:42.406" endtime="20200727 01:24:42.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:42.418" level="INFO">Running command 'ozone sh key get /71706-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:46.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:46.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:42.415" endtime="20200727 01:24:46.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:46.629" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:46.628" endtime="20200727 01:24:46.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:46.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:46.629" endtime="20200727 01:24:46.630"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:42.415" endtime="20200727 01:24:46.630"></status>
</kw>
<msg timestamp="20200727 01:24:46.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:42.414" endtime="20200727 01:24:46.630"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:42.414" endtime="20200727 01:24:46.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:46.634" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:46.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:46.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:46.632" endtime="20200727 01:24:46.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:46.637" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:46.636" endtime="20200727 01:24:46.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:46.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:46.638" endtime="20200727 01:24:46.638"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:46.631" endtime="20200727 01:24:46.638"></status>
</kw>
<msg timestamp="20200727 01:24:46.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:46.631" endtime="20200727 01:24:46.639"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:46.631" endtime="20200727 01:24:46.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:46.643" level="INFO">Running command 'ozone sh key info /71706-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:49.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:49.252" level="INFO">${output} = {
  "volumeName": "71706-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:24:40.440Z",
  "modificationTime": "2020-07-27T01:24:41.892Z...</msg>
<status status="PASS" starttime="20200727 01:24:46.640" endtime="20200727 01:24:49.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:49.253" level="INFO">{
  "volumeName": "71706-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:24:40.440Z",
  "modificationTime": "2020-07-27T01:24:41.892Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583206039650450,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:24:49.253" endtime="20200727 01:24:49.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:49.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:49.254" endtime="20200727 01:24:49.255"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:46.640" endtime="20200727 01:24:49.255"></status>
</kw>
<msg timestamp="20200727 01:24:49.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:46.640" endtime="20200727 01:24:49.255"></status>
</kw>
<msg timestamp="20200727 01:24:49.255" level="INFO">${result} = {
  "volumeName": "71706-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:24:40.440Z",
  "modificationTime": "2020-07-27T01:24:41.892Z...</msg>
<status status="PASS" starttime="20200727 01:24:46.639" endtime="20200727 01:24:49.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 01:24:49.256" endtime="20200727 01:24:49.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:49.259" level="INFO">Running command 'ozone sh key delete /71706-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:51.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:51.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:49.258" endtime="20200727 01:24:51.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:51.655" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:51.654" endtime="20200727 01:24:51.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:51.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:51.655" endtime="20200727 01:24:51.656"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:49.257" endtime="20200727 01:24:51.656"></status>
</kw>
<msg timestamp="20200727 01:24:51.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:49.257" endtime="20200727 01:24:51.656"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:49.256" endtime="20200727 01:24:51.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:51.660" level="INFO">Running command 'ozone sh key cp /71706-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:55.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:55.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:51.658" endtime="20200727 01:24:56.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:56.001" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:56.000" endtime="20200727 01:24:56.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:56.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:56.001" endtime="20200727 01:24:56.002"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:51.658" endtime="20200727 01:24:56.002"></status>
</kw>
<msg timestamp="20200727 01:24:56.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:51.657" endtime="20200727 01:24:56.002"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:51.657" endtime="20200727 01:24:56.003"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:56.010" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:56.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:56.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:56.005" endtime="20200727 01:24:56.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:56.012" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:56.011" endtime="20200727 01:24:56.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:56.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:56.012" endtime="20200727 01:24:56.013"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:56.005" endtime="20200727 01:24:56.013"></status>
</kw>
<msg timestamp="20200727 01:24:56.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:56.004" endtime="20200727 01:24:56.013"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:56.003" endtime="20200727 01:24:56.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:56.018" level="INFO">Running command 'ozone sh key get /71706-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:59.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:59.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:56.016" endtime="20200727 01:24:59.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:59.731" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:59.730" endtime="20200727 01:24:59.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:59.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:59.731" endtime="20200727 01:24:59.732"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:56.015" endtime="20200727 01:24:59.732"></status>
</kw>
<msg timestamp="20200727 01:24:59.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:56.015" endtime="20200727 01:24:59.733"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:56.014" endtime="20200727 01:24:59.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:59.737" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:24:59.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:24:59.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:59.735" endtime="20200727 01:24:59.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:24:59.741" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:24:59.741" endtime="20200727 01:24:59.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:24:59.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:24:59.742" endtime="20200727 01:24:59.742"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:59.734" endtime="20200727 01:24:59.743"></status>
</kw>
<msg timestamp="20200727 01:24:59.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:59.734" endtime="20200727 01:24:59.743"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:59.733" endtime="20200727 01:24:59.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:24:59.747" level="INFO">Running command 'ozone sh key delete /71706-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:02.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:02.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:24:59.745" endtime="20200727 01:25:02.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:02.058" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:25:02.057" endtime="20200727 01:25:02.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:02.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:02.058" endtime="20200727 01:25:02.059"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:59.744" endtime="20200727 01:25:02.059"></status>
</kw>
<msg timestamp="20200727 01:25:02.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:24:59.744" endtime="20200727 01:25:02.059"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:59.743" endtime="20200727 01:25:02.060"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:02.063" level="INFO">Running command 'ozone sh key get /71706-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:04.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:25:04.365" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:25:02.060" endtime="20200727 01:25:04.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:04.366" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:25:04.366" endtime="20200727 01:25:04.367"></status>
</kw>
<msg timestamp="20200727 01:25:04.367" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 01:25:02.060" endtime="20200727 01:25:04.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:25:04.367" endtime="20200727 01:25:04.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:04.372" level="INFO">Running command 'ozone sh key get --force /71706-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:08.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:08.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:25:04.370" endtime="20200727 01:25:08.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:08.486" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:25:08.486" endtime="20200727 01:25:08.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:08.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:08.487" endtime="20200727 01:25:08.487"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:04.369" endtime="20200727 01:25:08.488"></status>
</kw>
<msg timestamp="20200727 01:25:08.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:04.368" endtime="20200727 01:25:08.488"></status>
</kw>
<msg timestamp="20200727 01:25:08.488" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 01:25:04.368" endtime="20200727 01:25:08.488"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 01:25:08.489" endtime="20200727 01:25:08.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:08.493" level="INFO">Running command 'ozone sh key info /71706-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:11.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:11.081" level="INFO">${output} = {
  "volumeName": "71706-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:24:32.183Z",
  "modificationTime": "2020-07-27T01:24:33.785Z",
  "...</msg>
<status status="PASS" starttime="20200727 01:25:08.491" endtime="20200727 01:25:11.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:11.083" level="INFO">{
  "volumeName": "71706-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:24:32.183Z",
  "modificationTime": "2020-07-27T01:24:33.785Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104583205498454140,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 01:25:11.082" endtime="20200727 01:25:11.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:11.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:11.083" endtime="20200727 01:25:11.083"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:08.490" endtime="20200727 01:25:11.084"></status>
</kw>
<msg timestamp="20200727 01:25:11.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:08.490" endtime="20200727 01:25:11.084"></status>
</kw>
<msg timestamp="20200727 01:25:11.084" level="INFO">${result} = {
  "volumeName": "71706-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T01:24:32.183Z",
  "modificationTime": "2020-07-27T01:24:33.785Z",
  "...</msg>
<status status="PASS" starttime="20200727 01:25:08.489" endtime="20200727 01:25:11.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 01:25:11.084" endtime="20200727 01:25:11.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:11.089" level="INFO">Running command 'ozone sh key list /71706-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:13.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:13.674" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 01:25:11.086" endtime="20200727 01:25:13.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:13.675" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 01:25:13.675" endtime="20200727 01:25:13.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:13.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:13.676" endtime="20200727 01:25:13.676"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:11.086" endtime="20200727 01:25:13.676"></status>
</kw>
<msg timestamp="20200727 01:25:13.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:11.086" endtime="20200727 01:25:13.677"></status>
</kw>
<msg timestamp="20200727 01:25:13.677" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 01:25:11.085" endtime="20200727 01:25:13.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 01:25:13.677" endtime="20200727 01:25:13.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:13.683" level="INFO">Running command 'ozone sh key rename /71706-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:15.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:15.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:25:13.680" endtime="20200727 01:25:15.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:15.847" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:25:15.846" endtime="20200727 01:25:15.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:15.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:15.847" endtime="20200727 01:25:15.848"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:13.679" endtime="20200727 01:25:15.848"></status>
</kw>
<msg timestamp="20200727 01:25:15.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:13.679" endtime="20200727 01:25:15.848"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:13.678" endtime="20200727 01:25:15.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:15.860" level="INFO">Running command 'ozone sh key list /71706-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:18.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:18.429" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 01:25:15.858" endtime="20200727 01:25:18.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:18.431" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 01:25:18.430" endtime="20200727 01:25:18.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:18.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:18.431" endtime="20200727 01:25:18.431"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:15.858" endtime="20200727 01:25:18.432"></status>
</kw>
<msg timestamp="20200727 01:25:18.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:15.849" endtime="20200727 01:25:18.432"></status>
</kw>
<msg timestamp="20200727 01:25:18.432" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 01:25:15.849" endtime="20200727 01:25:18.432"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 01:25:18.433" endtime="20200727 01:25:18.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:18.437" level="INFO">Running command 'ozone sh key delete /71706-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:20.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:20.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:25:18.435" endtime="20200727 01:25:20.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:20.719" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:25:20.718" endtime="20200727 01:25:20.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:20.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:20.719" endtime="20200727 01:25:20.720"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:18.434" endtime="20200727 01:25:20.720"></status>
</kw>
<msg timestamp="20200727 01:25:20.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:18.434" endtime="20200727 01:25:20.720"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:18.433" endtime="20200727 01:25:20.721"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:29.886" endtime="20200727 01:25:20.721"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:29.886" endtime="20200727 01:25:20.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:20.725" level="INFO">Running command 'ozone sh bucket delete /71706-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:23.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:23.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:25:20.723" endtime="20200727 01:25:23.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:23.205" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:25:23.205" endtime="20200727 01:25:23.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:23.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:23.206" endtime="20200727 01:25:23.206"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:20.722" endtime="20200727 01:25:23.206"></status>
</kw>
<msg timestamp="20200727 01:25:23.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:20.722" endtime="20200727 01:25:23.207"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:20.721" endtime="20200727 01:25:23.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:25:23.211" level="INFO">Running command 'ozone sh volume delete /71706-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:25:25.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:25:25.463" level="INFO">${output} = Volume 71706-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200727 01:25:23.209" endtime="20200727 01:25:25.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:25:25.464" level="INFO">Volume 71706-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200727 01:25:25.464" endtime="20200727 01:25:25.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:25:25.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:25:25.465" endtime="20200727 01:25:25.465"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:23.208" endtime="20200727 01:25:25.466"></status>
</kw>
<msg timestamp="20200727 01:25:25.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:25:23.208" endtime="20200727 01:25:25.466"></status>
</kw>
<status status="PASS" starttime="20200727 01:25:23.207" endtime="20200727 01:25:25.466"></status>
</kw>
<status status="PASS" starttime="20200727 01:24:07.518" endtime="20200727 01:25:25.466"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 01:24:07.517" endtime="20200727 01:25:25.467" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200727 01:20:28.611" endtime="20200727 01:25:25.468"></status>
</suite>
<status status="PASS" starttime="20200727 01:17:31.355" endtime="20200727 01:25:25.475"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="15" fail="0" id="s1-s2" name="Links">ozone-basic.Links</stat>
<stat pass="6" fail="0" id="s1-s3" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
