<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 02:25:15.051" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:15.124" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:15.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:15.126" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:25:15.118" endtime="20200727 02:25:15.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:15.126" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:25:15.126" endtime="20200727 02:25:15.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:15.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:15.127" endtime="20200727 02:25:15.128"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.118" endtime="20200727 02:25:15.128"></status>
</kw>
<msg timestamp="20200727 02:25:15.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:15.118" endtime="20200727 02:25:15.129"></status>
</kw>
<msg timestamp="20200727 02:25:15.129" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:25:15.117" endtime="20200727 02:25:15.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:25:15.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:25:15.129" endtime="20200727 02:25:15.130"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:15.135" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:15.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:15.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:15.132" endtime="20200727 02:25:15.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:15.146" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:15.145" endtime="20200727 02:25:15.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:15.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:15.146" endtime="20200727 02:25:15.146"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.132" endtime="20200727 02:25:15.147"></status>
</kw>
<msg timestamp="20200727 02:25:15.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:15.132" endtime="20200727 02:25:15.147"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.131" endtime="20200727 02:25:15.147"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.131" endtime="20200727 02:25:15.147"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.117" endtime="20200727 02:25:15.147"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.116" endtime="20200727 02:25:15.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:15.152" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.395" level="INFO">${output} = 2020-07-27 02:25:16,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 02:25:16,537 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 02:25:15.149" endtime="20200727 02:25:23.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.396" level="INFO">2020-07-27 02:25:16,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 02:25:16,537 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 02:25:16,537 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 02:25:17,976 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-27 02:25:17,977 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 02:25:17,977 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 02:25:17,977 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-27 02:25:17,977 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-27 02:25:17,977 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 02:25:17,977 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 02:25:17,993 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 02:25:18,009 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-27 02:25:18,039 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-58907, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 02:25:18,062 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-58907/bucket-0-21625, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 02:25:18,560 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 02:25:19,016 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,021
Average Time spent in key write: 00:00:00,093
Total bytes written: 2050
Total Execution time: 00:00:06,310
***************************************************</msg>
<status status="PASS" starttime="20200727 02:25:23.395" endtime="20200727 02:25:23.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.397" endtime="20200727 02:25:23.397"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.148" endtime="20200727 02:25:23.398"></status>
</kw>
<msg timestamp="20200727 02:25:23.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:15.148" endtime="20200727 02:25:23.398"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:15.148" endtime="20200727 02:25:23.398"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:25:15.115" endtime="20200727 02:25:23.398" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.405" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.403" endtime="20200727 02:25:23.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.410" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.409" endtime="20200727 02:25:23.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.410" endtime="20200727 02:25:23.411"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.402" endtime="20200727 02:25:23.411"></status>
</kw>
<msg timestamp="20200727 02:25:23.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.401" endtime="20200727 02:25:23.411"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.401" endtime="20200727 02:25:23.411"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.400" endtime="20200727 02:25:23.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.415" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.436" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200727 02:25:23.413" endtime="20200727 02:25:23.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.437" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200727 02:25:23.437" endtime="20200727 02:25:23.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.438" endtime="20200727 02:25:23.438"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.412" endtime="20200727 02:25:23.438"></status>
</kw>
<msg timestamp="20200727 02:25:23.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.412" endtime="20200727 02:25:23.439"></status>
</kw>
<msg timestamp="20200727 02:25:23.439" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200727 02:25:23.411" endtime="20200727 02:25:23.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.439" endtime="20200727 02:25:23.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.443" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.446" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.442" endtime="20200727 02:25:23.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.447" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:25:23.446" endtime="20200727 02:25:23.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.447" endtime="20200727 02:25:23.447"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.441" endtime="20200727 02:25:23.448"></status>
</kw>
<msg timestamp="20200727 02:25:23.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.441" endtime="20200727 02:25:23.448"></status>
</kw>
<msg timestamp="20200727 02:25:23.448" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.441" endtime="20200727 02:25:23.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:25:23.449" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:25:23.448" endtime="20200727 02:25:23.449"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.453" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.451" endtime="20200727 02:25:23.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.471" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.470" endtime="20200727 02:25:23.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.471" endtime="20200727 02:25:23.472"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.451" endtime="20200727 02:25:23.472"></status>
</kw>
<msg timestamp="20200727 02:25:23.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.451" endtime="20200727 02:25:23.472"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.450" endtime="20200727 02:25:23.473"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.449" endtime="20200727 02:25:23.473"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.440" endtime="20200727 02:25:23.473"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.440" endtime="20200727 02:25:23.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.477" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.501" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200727 02:25:23.475" endtime="20200727 02:25:23.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.502" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x2631f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaRWjzy7RAXSklCa2zzU3QNJSJd3CpfN4B38IRr2dvygWxDX4xbmBX61QBu36XkXYkrISVulFKoSuJ6TvuQHoKMPzPI4J8Lioe+pc2qaCkgFkRDJuIcbRMidMi/A5CkjjmD1EklgZyWnlqJ1lotXCNlusgFW+/06WCBq0BP1gMLRgR7sefnxhe5msLWBOg3qZvxw6y010jabeduBtDnduELCpu2n5KyHht8E+t18+pzC/oRMdnjz95e5UICVHHqjefZgvzrsH7rCqGglNlcKzgeROD2GhUtacgcTyZzfqXLvTUPwHTZjLTwzkkIDNVVZcKwSpXfm0pgrjXbT5ajZXj0M1T2UzKVpIHWMIHToAMCARKigcsEgchm5+NpY2RQpReUcP4e2wlSHv1OZAF/vXCS+N4Z0UUyqY65na9U0HdMFbC+W9h3rFXUvzFVw3RxN9uMyIIQmXKQsPDdDkgd5BmnrIlIBIge1GdwKoDBUTwCkzbK+K6hSsZTC+J7GEWXEFiL1Se1DAgg16yqO73b07g5IFxMTi6Be+LPvnZmDw9nOxLCptdv5ruLYn0H7KIOD64zfddZh8GaGr1mzMReCb6ycFl1LfbZ9ZWLHwkrgTkGfLGoNmArJQMEsqbOmOM+mw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCf/J3n8G+ouSoheAJ1iu7zbSTLmFfB0yZJJkBemVuC35bexCJHnjo5O5ENjZSyk2otf8KdYL2pfpzm2YadbLb587L
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723496&amp;s=ocdB0Ye40XBjD4YBdusJNpaIv95LQSebXgz6AaNQrmo="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 27 Jul 2020 00:49:18 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 02:25:23 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCf/J3n8G+ouSoheAJ1iu7zbSTLmFfB0yZJJkBemVuC35bexCJHnjo5O5ENjZSyk2otf8KdYL2pfpzm2YadbLb587L
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723496&amp;s=ocdB0Ye40XBjD4YBdusJNpaIv95LQSebXgz6AaNQrmo="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 00:49:18 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200727 02:25:23.501" endtime="20200727 02:25:23.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.502" endtime="20200727 02:25:23.503"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.474" endtime="20200727 02:25:23.503"></status>
</kw>
<msg timestamp="20200727 02:25:23.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.474" endtime="20200727 02:25:23.503"></status>
</kw>
<msg timestamp="20200727 02:25:23.504" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200727 02:25:23.473" endtime="20200727 02:25:23.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.504" endtime="20200727 02:25:23.504"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.400" endtime="20200727 02:25:23.504"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:25:23.399" endtime="20200727 02:25:23.504" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.510" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.508" endtime="20200727 02:25:23.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.513" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.513" endtime="20200727 02:25:23.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.514" endtime="20200727 02:25:23.514"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.507" endtime="20200727 02:25:23.514"></status>
</kw>
<msg timestamp="20200727 02:25:23.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.507" endtime="20200727 02:25:23.515"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.507" endtime="20200727 02:25:23.515"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.506" endtime="20200727 02:25:23.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.519" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.530" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.517" endtime="20200727 02:25:23.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.531" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200727 02:25:23.530" endtime="20200727 02:25:23.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.531" endtime="20200727 02:25:23.531"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.516" endtime="20200727 02:25:23.532"></status>
</kw>
<msg timestamp="20200727 02:25:23.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.516" endtime="20200727 02:25:23.532"></status>
</kw>
<msg timestamp="20200727 02:25:23.532" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.515" endtime="20200727 02:25:23.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.532" endtime="20200727 02:25:23.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.537" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.539" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.535" endtime="20200727 02:25:23.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.539" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:25:23.539" endtime="20200727 02:25:23.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.540" endtime="20200727 02:25:23.540"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.534" endtime="20200727 02:25:23.540"></status>
</kw>
<msg timestamp="20200727 02:25:23.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.534" endtime="20200727 02:25:23.541"></status>
</kw>
<msg timestamp="20200727 02:25:23.541" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.534" endtime="20200727 02:25:23.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:25:23.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:25:23.541" endtime="20200727 02:25:23.542"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.547" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.544" endtime="20200727 02:25:23.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.556" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.555" endtime="20200727 02:25:23.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.556" endtime="20200727 02:25:23.556"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.544" endtime="20200727 02:25:23.557"></status>
</kw>
<msg timestamp="20200727 02:25:23.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.543" endtime="20200727 02:25:23.557"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.543" endtime="20200727 02:25:23.557"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.542" endtime="20200727 02:25:23.557"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.533" endtime="20200727 02:25:23.557"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.533" endtime="20200727 02:25:23.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.561" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.616" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.559" endtime="20200727 02:25:23.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.617" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1df3f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbl9vZ0JYdAuV3SlrXVqondEEwpMKHnKnqFCNyezO8dl1OGBOwZUcU4yyWG5dSaEAfwj54th6ODE1EvbYp1ffo8dXKYlHIKQTcK5IYg6eiMGL1inVVTYHDWD1/IeRHe+ffNXus5BSoki5C86BXZEVUHaTpCMbKiWZfrQziSprfz0fNFbz9lVrQrZjdFfqjUSqLTHqVlXI5FEoMGH/wk4xsuS4lbFigGlak+GSybSmfQHpE8YF5YM/pkMgk4Pbbv3Lqj22haoXEizHBcQhASqEMkTSTq/XO6AQV/cqp+HyDs/JiLNDWD9NX0J6voK0rxa75O+XfZGBOwLiF5ZCHdAe9zz2JNVX+SpIHWMIHToAMCARKigcsEgcg59c+OVBGMWKiunwS9Xo275bWqO3in19zVYDel8QiEsDJWFLJ/dVjBcANdosFxprjmGpp7n+fMqL9roUvsgHUX/p/kNaKdKBZkiNO1rJgMinkisc7xm3c9SJNBGs1jfrl7Pd6CSSXIpJ3LnLH/YE67isGH3wwXs94QA1jdaGQcJjAuTlOLvZcpdrKzaZN6LnRegZ8EIUInzqvzDjy+SgAdiTQBnUSqzd6rVOk48q7KZS+4NkGVq3zyuimGTFKttkIN+JAyPGvybA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCjRxoxEtzOLPbl8T7/RNwFAm/MjAhEle0nJZOmG4VybT7LdwjSVgh7XApdy3VSFuBid2iF85XXX1mDA8EG3YyG7dJ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723577&amp;s=kOwKQid9R6G40wYq+q6nw1dudXiZpB+KkI/z6WJPuMU="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1595816723577.tgz"
&lt; Content-Length: 90176
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 02:25:23 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCjRxoxEtzOLPbl8T7/RNwFAm/MjAhEle0nJZOmG4VybT7LdwjSVgh7XApdy3VSFuBid2iF85XXX1mDA8EG3YyG7dJ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723577&amp;s=kOwKQid9R6G40wYq+q6nw1dudXiZpB+KkI/z6WJPuMU="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1595816723577.tgz"
Content-Length: 90176
</msg>
<status status="PASS" starttime="20200727 02:25:23.616" endtime="20200727 02:25:23.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.617" endtime="20200727 02:25:23.618"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.558" endtime="20200727 02:25:23.618"></status>
</kw>
<msg timestamp="20200727 02:25:23.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.558" endtime="20200727 02:25:23.618"></status>
</kw>
<msg timestamp="20200727 02:25:23.619" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.557" endtime="20200727 02:25:23.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.619" endtime="20200727 02:25:23.619"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.506" endtime="20200727 02:25:23.619"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:25:23.505" endtime="20200727 02:25:23.619" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.625" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.623" endtime="20200727 02:25:23.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.628" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.628" endtime="20200727 02:25:23.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.629" endtime="20200727 02:25:23.629"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.622" endtime="20200727 02:25:23.630"></status>
</kw>
<msg timestamp="20200727 02:25:23.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.622" endtime="20200727 02:25:23.630"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.622" endtime="20200727 02:25:23.630"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.621" endtime="20200727 02:25:23.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.634" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.646" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200727 02:25:23.632" endtime="20200727 02:25:23.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.646" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200727 02:25:23.646" endtime="20200727 02:25:23.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.647" endtime="20200727 02:25:23.647"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.631" endtime="20200727 02:25:23.647"></status>
</kw>
<msg timestamp="20200727 02:25:23.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.631" endtime="20200727 02:25:23.648"></status>
</kw>
<msg timestamp="20200727 02:25:23.648" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200727 02:25:23.630" endtime="20200727 02:25:23.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.648" endtime="20200727 02:25:23.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.654" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.655" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.651" endtime="20200727 02:25:23.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.656" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:25:23.656" endtime="20200727 02:25:23.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.657" endtime="20200727 02:25:23.657"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.650" endtime="20200727 02:25:23.657"></status>
</kw>
<msg timestamp="20200727 02:25:23.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.650" endtime="20200727 02:25:23.658"></status>
</kw>
<msg timestamp="20200727 02:25:23.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.650" endtime="20200727 02:25:23.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:25:23.659" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:25:23.658" endtime="20200727 02:25:23.659"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.663" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.661" endtime="20200727 02:25:23.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.672" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.672" endtime="20200727 02:25:23.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.673" endtime="20200727 02:25:23.673"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.660" endtime="20200727 02:25:23.673"></status>
</kw>
<msg timestamp="20200727 02:25:23.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.660" endtime="20200727 02:25:23.674"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.659" endtime="20200727 02:25:23.674"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.659" endtime="20200727 02:25:23.674"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.649" endtime="20200727 02:25:23.674"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.649" endtime="20200727 02:25:23.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.678" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.708" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200727 02:25:23.675" endtime="20200727 02:25:23.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.709" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x864f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbH/e8HPn0pjuiuzU8NGui7HFy180lXMKC5i4Zvz0yEpMmSSjLkCvOyLhOl5RQFv+4eJ2nOYDRPpUnVm7DFgzCDzTMe/IPI6i/3qjq/byoWlDDXxrpEjpI7VImHmxZuwjFv6/fLUOhO+MYOtNFmKdEfKy3Qxy+UygeZkCvAJxz7BLBggXgUJF31qXO3B4dCJny6SA4i83NuOo2KkRf3eY4eNjFVQ10Tmza1BamXP6NtSkXolV2dDbaI9vZH2zSDfRbVMzl/CoWGwxvn/kDAIbnQLNE8GfguhI6d9IIfsHJHlY1LISFDXUvl1Oe8gxagJSqpLR+NCYF+FqVjUx0M6Y62V8nToP0TpIHWMIHToAMCARKigcsEgchWOURlrUcgkTK+/i91kOdlw4rMWinjVDh6GAcAYCsKjBiFiVll09fzESdSxwgFH0+V0+luMyo346ZAtwBuvZwoKaqV/Xkmptf1jFIHzegO/Y2UfJxstRTtFVrrv5ZupQLo1RGleDNSGEnzHMF1cQhcba/Be4vBaLbhHhH+3LFbrxkV7UOsafwjjU/4HK6TiFyWbH3vEaA0V+eesZIBkbelcxrYdLImxaUmmuz5mv+KbmjfMKq8opo3BdR31Bd/U1I0v/H3CZ5kUA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCYLlFY8XhD8liGjgq7mQm4qMnM++di/PMtg22F6SpPfdatzlaMRTt1qwLk5WHfpnxAeKGV8LCeRHIR9oEjMT9TQij
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723694&amp;s=WAY7n+wVsZrZsCt7fkoa2Jw4KQgYubEm0yjYLu9s0yc="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 02:25:23 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCYLlFY8XhD8liGjgq7mQm4qMnM++di/PMtg22F6SpPfdatzlaMRTt1qwLk5WHfpnxAeKGV8LCeRHIR9oEjMT9TQij
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723694&amp;s=WAY7n+wVsZrZsCt7fkoa2Jw4KQgYubEm0yjYLu9s0yc="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200727 02:25:23.708" endtime="20200727 02:25:23.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.710" endtime="20200727 02:25:23.710"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.675" endtime="20200727 02:25:23.710"></status>
</kw>
<msg timestamp="20200727 02:25:23.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.675" endtime="20200727 02:25:23.711"></status>
</kw>
<msg timestamp="20200727 02:25:23.711" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200727 02:25:23.674" endtime="20200727 02:25:23.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.711" endtime="20200727 02:25:23.712"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.621" endtime="20200727 02:25:23.712"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:25:23.620" endtime="20200727 02:25:23.712" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.719" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.716" endtime="20200727 02:25:23.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.722" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.722" endtime="20200727 02:25:23.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.722" endtime="20200727 02:25:23.723"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.715" endtime="20200727 02:25:23.723"></status>
</kw>
<msg timestamp="20200727 02:25:23.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.715" endtime="20200727 02:25:23.723"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.715" endtime="20200727 02:25:23.724"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.714" endtime="20200727 02:25:23.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.727" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.743" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 02:25:23.725" endtime="20200727 02:25:23.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.744" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200727 02:25:23.744" endtime="20200727 02:25:23.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.744" endtime="20200727 02:25:23.745"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.725" endtime="20200727 02:25:23.745"></status>
</kw>
<msg timestamp="20200727 02:25:23.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.724" endtime="20200727 02:25:23.745"></status>
</kw>
<msg timestamp="20200727 02:25:23.746" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 02:25:23.724" endtime="20200727 02:25:23.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.746" endtime="20200727 02:25:23.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.752" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.753" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.749" endtime="20200727 02:25:23.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.754" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:25:23.753" endtime="20200727 02:25:23.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.754" endtime="20200727 02:25:23.755"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.749" endtime="20200727 02:25:23.756"></status>
</kw>
<msg timestamp="20200727 02:25:23.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.748" endtime="20200727 02:25:23.756"></status>
</kw>
<msg timestamp="20200727 02:25:23.756" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.748" endtime="20200727 02:25:23.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:25:23.757" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:25:23.756" endtime="20200727 02:25:23.757"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.762" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.759" endtime="20200727 02:25:23.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.788" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.787" endtime="20200727 02:25:23.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.788" endtime="20200727 02:25:23.789"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.759" endtime="20200727 02:25:23.789"></status>
</kw>
<msg timestamp="20200727 02:25:23.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.758" endtime="20200727 02:25:23.789"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.758" endtime="20200727 02:25:23.790"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.757" endtime="20200727 02:25:23.790"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.747" endtime="20200727 02:25:23.790"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.747" endtime="20200727 02:25:23.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.794" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.819" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 02:25:23.792" endtime="20200727 02:25:23.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.820" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x1377f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.7) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGU+9maatg7coYMRxjygdu8iP1ifBlCH0Pd/27rN1UzqEtFVkbfJC8k6jVRxblMMT/1toMhk+yf8XHvVSRGKGm8+wbbt14gRxsICj47C7o3L+WUQkNBxYlkcuNewmA89hmCDfwb6frV9loZl0sBk98nVWSwPKkp+Zcfw+J7uC9Wjcya+A7aZPkSm1nRRyoF7IGrKz3P13MhxSjwSTlluvx0VhbsquAiuOEcvdvAgC7CYX0hvggu0BpGN5Dzz5pm7O9JXxlEzk9qzeTAb3LLRwMf37sqURVL7DtCTpd0wtTPlhuoKULejo+q7zfhrsDm1tuxJcsKQeAB46izAnkxtXQTw8zijZWO6SB1jCB06ADAgESooHLBIHIWpmR945wx/iCMn18LQIywlnTp9kjx3s3Txce6+16uvuJRHQet6qzusBD29wRXKFqwn7gN4PA6USNBgsvdV2lvYGHS2C/03jgHW1Nc3hWQKImt3ZoiWCGR8UdtEUCCAzNIMYNXvKo6Iyn70L1dQiRFPmBWVDMCtfugh0Oz2uka31YbdX5qwmNhhTseu7nBARmOmzyIj5aHYcTnZbGRZ6oXqfVKKll5zIsfoRpevnX7r7E1GHto31LeMrVvCExELrLtW+OQ0XI+Ss=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0wT5LKVfHqsWd66nPR085KmAdBi3bWUSeD1s3DOfeQ8C0GJb5Ak0kdmAPbw2KSa9nXBmkzy6diTFJuuIfE9tIg+w
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723815&amp;s=8yKSlWOG6nGMVJcEHXKvuJKqPErzz94bHFFt5FlL2IA="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 27 Jul 2020 00:48:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 02:25:23 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0wT5LKVfHqsWd66nPR085KmAdBi3bWUSeD1s3DOfeQ8C0GJb5Ak0kdmAPbw2KSa9nXBmkzy6diTFJuuIfE9tIg+w
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723815&amp;s=8yKSlWOG6nGMVJcEHXKvuJKqPErzz94bHFFt5FlL2IA="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 00:48:58 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200727 02:25:23.820" endtime="20200727 02:25:23.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.821" endtime="20200727 02:25:23.821"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.791" endtime="20200727 02:25:23.822"></status>
</kw>
<msg timestamp="20200727 02:25:23.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.791" endtime="20200727 02:25:23.822"></status>
</kw>
<msg timestamp="20200727 02:25:23.822" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 02:25:23.790" endtime="20200727 02:25:23.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.822" endtime="20200727 02:25:23.823"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.714" endtime="20200727 02:25:23.823"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:25:23.713" endtime="20200727 02:25:23.823" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.828" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.827" endtime="20200727 02:25:23.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.833" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.832" endtime="20200727 02:25:23.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.833" endtime="20200727 02:25:23.833"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.826" endtime="20200727 02:25:23.834"></status>
</kw>
<msg timestamp="20200727 02:25:23.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.826" endtime="20200727 02:25:23.834"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.826" endtime="20200727 02:25:23.834"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.825" endtime="20200727 02:25:23.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.838" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.851" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.836" endtime="20200727 02:25:23.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.852" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200727 02:25:23.852" endtime="20200727 02:25:23.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.853" endtime="20200727 02:25:23.853"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.835" endtime="20200727 02:25:23.853"></status>
</kw>
<msg timestamp="20200727 02:25:23.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.835" endtime="20200727 02:25:23.854"></status>
</kw>
<msg timestamp="20200727 02:25:23.854" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.834" endtime="20200727 02:25:23.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.854" endtime="20200727 02:25:23.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.859" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.860" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.857" endtime="20200727 02:25:23.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.861" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:25:23.861" endtime="20200727 02:25:23.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.862" endtime="20200727 02:25:23.862"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.856" endtime="20200727 02:25:23.862"></status>
</kw>
<msg timestamp="20200727 02:25:23.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.856" endtime="20200727 02:25:23.862"></status>
</kw>
<msg timestamp="20200727 02:25:23.863" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:25:23.856" endtime="20200727 02:25:23.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:25:23.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:25:23.863" endtime="20200727 02:25:23.863"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.868" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:25:23.865" endtime="20200727 02:25:23.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.877" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:25:23.877" endtime="20200727 02:25:23.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.878" endtime="20200727 02:25:23.878"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.865" endtime="20200727 02:25:23.878"></status>
</kw>
<msg timestamp="20200727 02:25:23.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.864" endtime="20200727 02:25:23.879"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.864" endtime="20200727 02:25:23.879"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.864" endtime="20200727 02:25:23.879"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.855" endtime="20200727 02:25:23.879"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.855" endtime="20200727 02:25:23.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:25:23.883" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:25:23.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:25:23.912" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.881" endtime="20200727 02:25:23.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.913" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xeb8f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.3) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZKrQwFcUWcQb/3nJXMbJzt1UWrf9K+z/DhtUI2CK//D9iBOV1G3YXWzsdzHT/hjCdkIb6k2WmRci9Diq56CuX/eierPfj+bVJbFxmpf7yGg/yZPUm2R3opYqHDk9tIiiFzkn47m2O1IASYr6GdqODPjsyj9mQdTtCPcXWX8Z9PPj0bWtNpY0EmMJAyu+10Vba2yAC7QsRvjr6mGccs2i2b98WM4MScuHfEJ/OIoJVn3OsOLhVII2NWlRd34DxnVFZElLkn/w+zlh9YdIcT6JXChs/Am1yv4TMOGNh7jHrp0/tdXplPdDYEOdeD+OJQ4EnWLFzbhrLnDOGFH6g5Qg0jcSFhWlRupIHWMIHToAMCARKigcsEgciY60zAfiTvafaxUgSUOaDEkebdc9w4QhobLsnxkfT3Qx+DbJwjTKnTDN0f0JQCjsUcRHScp04M3WDDqd7q+FPEJqgA4Jw4w/YISUsbljRlF4DyuYG/cagocoqczaDofWzSGS0Wh+F0+Gik7ca3Xf6HHShNEh2KSGpD2GG2WBl/pIXW31EUzr0R9RWsKLNGwAak3+zDeQAluKnDMrENMSYVOVevxpqO0d45Ta/q0TTbxL2EFr4Wz9TO32TE4gtjhZ5piXnDqMz84g==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Date: Mon, 27 Jul 2020 02:25:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCw/rQGDzFQ3ypqYsDb//JUf7+ieNY4U9fDhSXIGaFRLROfEStbhMUX1EBgWQtArZs5dblKsd7q+m4HzB2FHcx7Hq0
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723904&amp;s=CePuuZUNZROJm4BCqykEZz8HJf8Q26QtkZrzYAW/WhA="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 27 Jul 2020 00:53:40 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 02:25:23 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 27 Jul 2020 02:25:23 GMT
Date: Mon, 27 Jul 2020 02:25:23 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCw/rQGDzFQ3ypqYsDb//JUf7+ieNY4U9fDhSXIGaFRLROfEStbhMUX1EBgWQtArZs5dblKsd7q+m4HzB2FHcx7Hq0
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595852723904&amp;s=CePuuZUNZROJm4BCqykEZz8HJf8Q26QtkZrzYAW/WhA="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 00:53:40 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200727 02:25:23.912" endtime="20200727 02:25:23.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:25:23.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:25:23.914" endtime="20200727 02:25:23.915"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.880" endtime="20200727 02:25:23.915"></status>
</kw>
<msg timestamp="20200727 02:25:23.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:25:23.880" endtime="20200727 02:25:23.915"></status>
</kw>
<msg timestamp="20200727 02:25:23.915" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 02:25:23.879" endtime="20200727 02:25:23.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 02:25:23.916" endtime="20200727 02:25:23.916"></status>
</kw>
<status status="PASS" starttime="20200727 02:25:23.825" endtime="20200727 02:25:23.916"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:25:23.824" endtime="20200727 02:25:23.916" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 02:25:15.084" endtime="20200727 02:25:23.918"></status>
</suite>
<status status="PASS" starttime="20200727 02:25:15.052" endtime="20200727 02:25:23.920"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
