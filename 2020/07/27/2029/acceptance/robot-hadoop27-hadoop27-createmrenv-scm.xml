<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 00:59:34.531" rpa="false">
<suite id="s1" name="hadoop27-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:34.598" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:36.300" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 00:59:36.300" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 00:59:34.594" endtime="20200727 00:59:36.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:36.301" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 00:59:36.301" endtime="20200727 00:59:36.302"></status>
</kw>
<msg timestamp="20200727 00:59:36.302" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 00:59:34.594" endtime="20200727 00:59:36.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:36.306" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:37.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 00:59:37.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 00:59:36.304" endtime="20200727 00:59:37.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:37.896" level="INFO"></msg>
<status status="PASS" starttime="20200727 00:59:37.896" endtime="20200727 00:59:37.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 00:59:37.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 00:59:37.897" endtime="20200727 00:59:37.897"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:36.304" endtime="20200727 00:59:37.898"></status>
</kw>
<msg timestamp="20200727 00:59:37.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 00:59:36.303" endtime="20200727 00:59:37.898"></status>
</kw>
<msg timestamp="20200727 00:59:37.898" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 00:59:36.303" endtime="20200727 00:59:37.898"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 00:59:37.898" endtime="20200727 00:59:37.899"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:36.303" endtime="20200727 00:59:37.899"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:36.302" endtime="20200727 00:59:37.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:37.907" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:39.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 00:59:39.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 00:59:37.902" endtime="20200727 00:59:39.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:39.547" level="INFO"></msg>
<status status="PASS" starttime="20200727 00:59:39.546" endtime="20200727 00:59:39.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 00:59:39.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 00:59:39.547" endtime="20200727 00:59:39.547"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:37.902" endtime="20200727 00:59:39.548"></status>
</kw>
<msg timestamp="20200727 00:59:39.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 00:59:37.900" endtime="20200727 00:59:39.548"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:37.900" endtime="20200727 00:59:39.548"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:37.899" endtime="20200727 00:59:39.548"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:37.899" endtime="20200727 00:59:39.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 00:59:39.549" endtime="20200727 00:59:39.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:39.553" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:41.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 00:59:41.413" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T00:59:39.519Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 00:59:39.551" endtime="20200727 00:59:41.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:41.414" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T00:59:39.519Z",
  "modificationTime" : "2020-07-27T00:59:39.519Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 00:59:41.414" endtime="20200727 00:59:41.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 00:59:41.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 00:59:41.415" endtime="20200727 00:59:41.415"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:39.550" endtime="20200727 00:59:41.415"></status>
</kw>
<msg timestamp="20200727 00:59:41.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 00:59:39.550" endtime="20200727 00:59:41.416"></status>
</kw>
<msg timestamp="20200727 00:59:41.416" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T00:59:39.519Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 00:59:39.549" endtime="20200727 00:59:41.416"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 00:59:41.416" endtime="20200727 00:59:41.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:41.421" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:46.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 00:59:46.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 00:59:41.418" endtime="20200727 00:59:46.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:46.109" level="INFO"></msg>
<status status="PASS" starttime="20200727 00:59:46.108" endtime="20200727 00:59:46.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 00:59:46.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 00:59:46.109" endtime="20200727 00:59:46.109"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:41.417" endtime="20200727 00:59:46.110"></status>
</kw>
<msg timestamp="20200727 00:59:46.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 00:59:41.417" endtime="20200727 00:59:46.110"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:41.416" endtime="20200727 00:59:46.110"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 00:59:34.593" endtime="20200727 00:59:46.110" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:46.115" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:47.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 00:59:47.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 00:59:46.113" endtime="20200727 00:59:47.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:47.942" level="INFO"></msg>
<status status="PASS" starttime="20200727 00:59:47.941" endtime="20200727 00:59:47.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 00:59:47.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 00:59:47.942" endtime="20200727 00:59:47.942"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:46.113" endtime="20200727 00:59:47.943"></status>
</kw>
<msg timestamp="20200727 00:59:47.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 00:59:46.112" endtime="20200727 00:59:47.943"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:46.112" endtime="20200727 00:59:47.943"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 00:59:47.946" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 00:59:49.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 00:59:49.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 00:59:47.945" endtime="20200727 00:59:49.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 00:59:49.865" level="INFO"></msg>
<status status="PASS" starttime="20200727 00:59:49.865" endtime="20200727 00:59:49.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 00:59:49.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 00:59:49.865" endtime="20200727 00:59:49.866"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:47.944" endtime="20200727 00:59:49.866"></status>
</kw>
<msg timestamp="20200727 00:59:49.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 00:59:47.944" endtime="20200727 00:59:49.866"></status>
</kw>
<status status="PASS" starttime="20200727 00:59:47.943" endtime="20200727 00:59:49.867"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 00:59:46.111" endtime="20200727 00:59:49.867" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200727 00:59:34.532" endtime="20200727 00:59:49.868"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop27-createmrenv">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
