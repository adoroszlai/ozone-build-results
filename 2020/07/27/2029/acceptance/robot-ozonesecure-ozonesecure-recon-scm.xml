<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 02:23:52.405" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:23:52.469" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:23:52.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:23:52.471" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:23:52.465" endtime="20200727 02:23:52.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:23:52.472" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:23:52.471" endtime="20200727 02:23:52.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:23:52.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:23:52.472" endtime="20200727 02:23:52.472"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.464" endtime="20200727 02:23:52.473"></status>
</kw>
<msg timestamp="20200727 02:23:52.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:23:52.464" endtime="20200727 02:23:52.473"></status>
</kw>
<msg timestamp="20200727 02:23:52.473" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:23:52.463" endtime="20200727 02:23:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 02:23:52.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 02:23:52.473" endtime="20200727 02:23:52.475"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:23:52.478" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:23:52.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:23:52.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:23:52.477" endtime="20200727 02:23:52.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:23:52.496" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:23:52.495" endtime="20200727 02:23:52.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:23:52.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:23:52.496" endtime="20200727 02:23:52.497"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.476" endtime="20200727 02:23:52.497"></status>
</kw>
<msg timestamp="20200727 02:23:52.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:23:52.476" endtime="20200727 02:23:52.497"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.475" endtime="20200727 02:23:52.497"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.475" endtime="20200727 02:23:52.497"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.463" endtime="20200727 02:23:52.498"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.462" endtime="20200727 02:23:52.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:23:52.501" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:00.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:00.952" level="INFO">${output} = 2020-07-27 02:23:53,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 02:23:53,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 02:23:52.499" endtime="20200727 02:24:00.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:00.954" level="INFO">2020-07-27 02:23:53,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 02:23:53,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 02:23:53,915 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 02:23:55,412 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-27 02:23:55,413 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 02:23:55,413 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 02:23:55,413 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-27 02:23:55,413 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-27 02:23:55,413 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 02:23:55,413 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 02:23:55,423 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 02:23:55,433 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-27 02:23:55,469 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-08580, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 02:23:55,506 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-08580/bucket-0-04140, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 02:23:56,026 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 02:23:56,437 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,138
Average Time spent in key write: 00:00:00,454
Total bytes written: 10250
Total Execution time: 00:00:06,503
***************************************************</msg>
<status status="PASS" starttime="20200727 02:24:00.953" endtime="20200727 02:24:00.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:00.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:00.954" endtime="20200727 02:24:00.955"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.499" endtime="20200727 02:24:00.955"></status>
</kw>
<msg timestamp="20200727 02:24:00.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:23:52.498" endtime="20200727 02:24:00.955"></status>
</kw>
<status status="PASS" starttime="20200727 02:23:52.498" endtime="20200727 02:24:00.956"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:23:52.461" endtime="20200727 02:24:00.956" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:00.965" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:00.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:00.967" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:00.962" endtime="20200727 02:24:00.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:00.968" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:00.968" endtime="20200727 02:24:00.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:00.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:00.969" endtime="20200727 02:24:00.969"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.961" endtime="20200727 02:24:00.970"></status>
</kw>
<msg timestamp="20200727 02:24:00.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:00.961" endtime="20200727 02:24:00.970"></status>
</kw>
<msg timestamp="20200727 02:24:00.970" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:00.960" endtime="20200727 02:24:00.970"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:00.975" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:00.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:00.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:00.973" endtime="20200727 02:24:00.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:00.987" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:00.987" endtime="20200727 02:24:00.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:00.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:00.988" endtime="20200727 02:24:00.988"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.972" endtime="20200727 02:24:00.989"></status>
</kw>
<msg timestamp="20200727 02:24:00.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:00.971" endtime="20200727 02:24:00.989"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.971" endtime="20200727 02:24:00.989"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.970" endtime="20200727 02:24:00.989"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.960" endtime="20200727 02:24:00.989"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.959" endtime="20200727 02:24:00.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:00.993" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:01.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:01.156" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:00.991" endtime="20200727 02:24:01.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:01.157" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:01.156" endtime="20200727 02:24:01.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:01.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:01.157" endtime="20200727 02:24:01.158"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.991" endtime="20200727 02:24:01.158"></status>
</kw>
<msg timestamp="20200727 02:24:01.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:00.990" endtime="20200727 02:24:01.158"></status>
</kw>
<msg timestamp="20200727 02:24:01.159" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:00.990" endtime="20200727 02:24:01.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:01.159" endtime="20200727 02:24:01.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:01.164" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:01.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:01.201" level="INFO">${output} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:01.161" endtime="20200727 02:24:01.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:01.202" level="INFO">[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 02:24:01.202" endtime="20200727 02:24:01.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:01.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:01.202" endtime="20200727 02:24:01.203"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:01.160" endtime="20200727 02:24:01.203"></status>
</kw>
<msg timestamp="20200727 02:24:01.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:01.160" endtime="20200727 02:24:01.203"></status>
</kw>
<msg timestamp="20200727 02:24:01.204" level="INFO">${result} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:01.159" endtime="20200727 02:24:01.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 02:24:01.205" level="FAIL">'[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 02:24:01.204" endtime="20200727 02:24:01.205"></status>
</kw>
<status status="FAIL" starttime="20200727 02:24:00.959" endtime="20200727 02:24:01.205"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:11.211" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:11.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:11.213" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:11.209" endtime="20200727 02:24:11.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.215" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:11.214" endtime="20200727 02:24:11.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:11.215" endtime="20200727 02:24:11.215"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.208" endtime="20200727 02:24:11.216"></status>
</kw>
<msg timestamp="20200727 02:24:11.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:11.208" endtime="20200727 02:24:11.216"></status>
</kw>
<msg timestamp="20200727 02:24:11.216" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:11.207" endtime="20200727 02:24:11.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:11.220" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:11.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:11.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:11.219" endtime="20200727 02:24:11.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.237" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:11.237" endtime="20200727 02:24:11.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:11.238" endtime="20200727 02:24:11.238"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.218" endtime="20200727 02:24:11.238"></status>
</kw>
<msg timestamp="20200727 02:24:11.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:11.218" endtime="20200727 02:24:11.239"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.217" endtime="20200727 02:24:11.239"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.217" endtime="20200727 02:24:11.239"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.207" endtime="20200727 02:24:11.239"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.207" endtime="20200727 02:24:11.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:11.242" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:11.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:11.258" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:11.241" endtime="20200727 02:24:11.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.259" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:11.259" endtime="20200727 02:24:11.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:11.260" endtime="20200727 02:24:11.260"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.240" endtime="20200727 02:24:11.261"></status>
</kw>
<msg timestamp="20200727 02:24:11.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:11.240" endtime="20200727 02:24:11.261"></status>
</kw>
<msg timestamp="20200727 02:24:11.261" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:11.239" endtime="20200727 02:24:11.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:11.261" endtime="20200727 02:24:11.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:11.266" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:11.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:11.285" level="INFO">${output} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:11.263" endtime="20200727 02:24:11.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.286" level="INFO">[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 02:24:11.286" endtime="20200727 02:24:11.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:11.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:11.287" endtime="20200727 02:24:11.287"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:11.263" endtime="20200727 02:24:11.288"></status>
</kw>
<msg timestamp="20200727 02:24:11.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:11.262" endtime="20200727 02:24:11.288"></status>
</kw>
<msg timestamp="20200727 02:24:11.288" level="INFO">${result} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:11.262" endtime="20200727 02:24:11.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 02:24:11.289" level="FAIL">'[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 02:24:11.288" endtime="20200727 02:24:11.289"></status>
</kw>
<status status="FAIL" starttime="20200727 02:24:11.206" endtime="20200727 02:24:11.289"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:21.296" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:21.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:21.299" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:21.294" endtime="20200727 02:24:21.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.300" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:21.300" endtime="20200727 02:24:21.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:21.301" endtime="20200727 02:24:21.302"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.293" endtime="20200727 02:24:21.302"></status>
</kw>
<msg timestamp="20200727 02:24:21.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:21.293" endtime="20200727 02:24:21.302"></status>
</kw>
<msg timestamp="20200727 02:24:21.303" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:21.292" endtime="20200727 02:24:21.303"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:21.308" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:21.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:21.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:21.305" endtime="20200727 02:24:21.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.329" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:21.329" endtime="20200727 02:24:21.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:21.330" endtime="20200727 02:24:21.330"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.305" endtime="20200727 02:24:21.331"></status>
</kw>
<msg timestamp="20200727 02:24:21.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:21.304" endtime="20200727 02:24:21.331"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.303" endtime="20200727 02:24:21.331"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.303" endtime="20200727 02:24:21.331"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.291" endtime="20200727 02:24:21.332"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.291" endtime="20200727 02:24:21.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:21.337" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:21.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:21.354" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:21.334" endtime="20200727 02:24:21.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.356" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:21.355" endtime="20200727 02:24:21.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:21.356" endtime="20200727 02:24:21.357"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.333" endtime="20200727 02:24:21.357"></status>
</kw>
<msg timestamp="20200727 02:24:21.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:21.333" endtime="20200727 02:24:21.358"></status>
</kw>
<msg timestamp="20200727 02:24:21.358" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:21.332" endtime="20200727 02:24:21.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:21.358" endtime="20200727 02:24:21.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:21.364" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:21.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:21.379" level="INFO">${output} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:21.360" endtime="20200727 02:24:21.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.380" level="INFO">[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 02:24:21.379" endtime="20200727 02:24:21.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:21.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:21.380" endtime="20200727 02:24:21.381"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:21.360" endtime="20200727 02:24:21.382"></status>
</kw>
<msg timestamp="20200727 02:24:21.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:21.359" endtime="20200727 02:24:21.382"></status>
</kw>
<msg timestamp="20200727 02:24:21.382" level="INFO">${result} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:21.359" endtime="20200727 02:24:21.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 02:24:21.383" level="FAIL">'[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 02:24:21.383" endtime="20200727 02:24:21.384"></status>
</kw>
<status status="FAIL" starttime="20200727 02:24:21.290" endtime="20200727 02:24:21.384"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:31.391" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:31.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:31.394" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:31.389" endtime="20200727 02:24:31.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.395" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:31.395" endtime="20200727 02:24:31.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:31.396" endtime="20200727 02:24:31.397"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.388" endtime="20200727 02:24:31.397"></status>
</kw>
<msg timestamp="20200727 02:24:31.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:31.388" endtime="20200727 02:24:31.398"></status>
</kw>
<msg timestamp="20200727 02:24:31.398" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:31.387" endtime="20200727 02:24:31.398"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:31.403" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:31.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:31.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:31.400" endtime="20200727 02:24:31.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.417" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:31.416" endtime="20200727 02:24:31.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:31.418" endtime="20200727 02:24:31.418"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.400" endtime="20200727 02:24:31.419"></status>
</kw>
<msg timestamp="20200727 02:24:31.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:31.399" endtime="20200727 02:24:31.419"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.399" endtime="20200727 02:24:31.419"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.398" endtime="20200727 02:24:31.419"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.387" endtime="20200727 02:24:31.420"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.386" endtime="20200727 02:24:31.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:31.425" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:31.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:31.445" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:31.422" endtime="20200727 02:24:31.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.446" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:31.446" endtime="20200727 02:24:31.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:31.447" endtime="20200727 02:24:31.447"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.421" endtime="20200727 02:24:31.448"></status>
</kw>
<msg timestamp="20200727 02:24:31.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:31.421" endtime="20200727 02:24:31.448"></status>
</kw>
<msg timestamp="20200727 02:24:31.448" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:31.420" endtime="20200727 02:24:31.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:31.448" endtime="20200727 02:24:31.449"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:31.453" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:31.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:31.469" level="INFO">${output} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:31.451" endtime="20200727 02:24:31.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.470" level="INFO">[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 02:24:31.470" endtime="20200727 02:24:31.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:31.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:31.471" endtime="20200727 02:24:31.471"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:31.450" endtime="20200727 02:24:31.472"></status>
</kw>
<msg timestamp="20200727 02:24:31.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:31.450" endtime="20200727 02:24:31.472"></status>
</kw>
<msg timestamp="20200727 02:24:31.472" level="INFO">${result} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:31.449" endtime="20200727 02:24:31.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 02:24:31.473" level="FAIL">'[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 02:24:31.472" endtime="20200727 02:24:31.473"></status>
</kw>
<status status="FAIL" starttime="20200727 02:24:31.385" endtime="20200727 02:24:31.474"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:41.479" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:41.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:41.482" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:41.477" endtime="20200727 02:24:41.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.483" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:41.482" endtime="20200727 02:24:41.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:41.483" endtime="20200727 02:24:41.484"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.477" endtime="20200727 02:24:41.484"></status>
</kw>
<msg timestamp="20200727 02:24:41.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:41.476" endtime="20200727 02:24:41.484"></status>
</kw>
<msg timestamp="20200727 02:24:41.485" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:41.476" endtime="20200727 02:24:41.485"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:41.488" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:41.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:41.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:41.487" endtime="20200727 02:24:41.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.512" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:41.511" endtime="20200727 02:24:41.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:41.512" endtime="20200727 02:24:41.513"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.486" endtime="20200727 02:24:41.513"></status>
</kw>
<msg timestamp="20200727 02:24:41.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:41.486" endtime="20200727 02:24:41.513"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.485" endtime="20200727 02:24:41.513"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.485" endtime="20200727 02:24:41.513"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.476" endtime="20200727 02:24:41.513"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.475" endtime="20200727 02:24:41.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:41.516" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:41.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:41.531" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:41.515" endtime="20200727 02:24:41.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.532" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:41.531" endtime="20200727 02:24:41.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:41.532" endtime="20200727 02:24:41.533"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.514" endtime="20200727 02:24:41.533"></status>
</kw>
<msg timestamp="20200727 02:24:41.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:41.514" endtime="20200727 02:24:41.533"></status>
</kw>
<msg timestamp="20200727 02:24:41.533" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 02:24:41.514" endtime="20200727 02:24:41.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:41.534" endtime="20200727 02:24:41.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:41.537" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:41.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:41.554" level="INFO">${output} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:41.536" endtime="20200727 02:24:41.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.555" level="INFO">[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 02:24:41.554" endtime="20200727 02:24:41.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:41.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:41.555" endtime="20200727 02:24:41.555"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:41.535" endtime="20200727 02:24:41.556"></status>
</kw>
<msg timestamp="20200727 02:24:41.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:41.535" endtime="20200727 02:24:41.556"></status>
</kw>
<msg timestamp="20200727 02:24:41.556" level="INFO">${result} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:41.534" endtime="20200727 02:24:41.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 02:24:41.557" level="FAIL">'[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 02:24:41.557" endtime="20200727 02:24:41.557"></status>
</kw>
<status status="FAIL" starttime="20200727 02:24:41.474" endtime="20200727 02:24:41.558"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.565" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.568" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:51.562" endtime="20200727 02:24:51.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.569" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:51.568" endtime="20200727 02:24:51.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.569" endtime="20200727 02:24:51.570"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.562" endtime="20200727 02:24:51.570"></status>
</kw>
<msg timestamp="20200727 02:24:51.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.561" endtime="20200727 02:24:51.571"></status>
</kw>
<msg timestamp="20200727 02:24:51.571" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:51.561" endtime="20200727 02:24:51.571"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.576" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:51.574" endtime="20200727 02:24:51.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.590" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:51.590" endtime="20200727 02:24:51.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.591" endtime="20200727 02:24:51.591"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.573" endtime="20200727 02:24:51.592"></status>
</kw>
<msg timestamp="20200727 02:24:51.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.572" endtime="20200727 02:24:51.592"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.572" endtime="20200727 02:24:51.592"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.571" endtime="20200727 02:24:51.592"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.560" endtime="20200727 02:24:51.593"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.559" endtime="20200727 02:24:51.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.597" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.614" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":172},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 02:24:51.594" endtime="20200727 02:24:51.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.615" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":172},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 02:24:51.615" endtime="20200727 02:24:51.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.615" endtime="20200727 02:24:51.616"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.594" endtime="20200727 02:24:51.616"></status>
</kw>
<msg timestamp="20200727 02:24:51.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.593" endtime="20200727 02:24:51.617"></status>
</kw>
<msg timestamp="20200727 02:24:51.617" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":172},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 02:24:51.593" endtime="20200727 02:24:51.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.617" endtime="20200727 02:24:51.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.623" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.638" level="INFO">${output} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:51.619" endtime="20200727 02:24:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.639" level="INFO">[{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-31510","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-4-48781","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-4-29102","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-4-90065","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-0-09141","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-1-46556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-4-18176","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-1-77462","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-1-20084","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-4-16671","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-3-46608","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-0-06174","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-3-75186","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-1-41556","fileSize":16384,"count":5},{"volume":"vol-3-36360","bucket":"bucket-2-37327","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-3-59231","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-2-93400","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-0-71362","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-3-27796","fileSize":16384,"count":5},{"volume":"vol-4-83192","bucket":"bucket-2-43078","fileSize":16384,"count":5},{"volume":"vol-2-72106","bucket":"bucket-2-29587","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-1-27092","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-2-02437","fileSize":16384,"count":5},{"volume":"39610-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"39610-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"35163-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"35163-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"35163-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-zuumk","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest391","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link2-ofs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-00138","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-52386","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45731","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32820","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-21432","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-32983","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-07677","fileSize":1024,"count":1},{"volume":"vol-0-08580","bucket":"bucket-0-04140","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200727 02:24:51.639" endtime="20200727 02:24:51.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.640" endtime="20200727 02:24:51.641"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.619" endtime="20200727 02:24:51.641"></status>
</kw>
<msg timestamp="20200727 02:24:51.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.619" endtime="20200727 02:24:51.641"></status>
</kw>
<msg timestamp="20200727 02:24:51.642" level="INFO">${result} = [{"volume":"vol-0-26968","bucket":"bucket-0-66956","fileSize":16384,"count":5},{"volume":"vol-1-51520","bucket":"bucket-0-00567","fileSize":16384,"count":5},{"volume":"vol-0-26968","bucket":"bucket-3-...</msg>
<status status="PASS" starttime="20200727 02:24:51.618" endtime="20200727 02:24:51.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.642" endtime="20200727 02:24:51.642"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.558" endtime="20200727 02:24:51.643"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:00.958" endtime="20200727 02:24:51.643"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:24:00.957" endtime="20200727 02:24:51.643" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.648" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.702" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"faa37fc0-55f3-4578-95e5-4997d385291c","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595816667281,"storageReport":{"ca...</msg>
<status status="PASS" starttime="20200727 02:24:51.646" endtime="20200727 02:24:51.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.704" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"faa37fc0-55f3-4578-95e5-4997d385291c","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595816667281,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24459497472},"pipelines":[{"pipelineID":"aac36774-7892-462d-a511-9ffd047cd922","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"20638cd0-83f3-4339-8308-385169caeb85","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595814719280,"revision":"093f5560c645c745e331e9e5ee3c47ff75015783","buildDate":"2020-07-27T00:48Z"},{"uuid":"a8b2bb22-a3d1-4200-a54c-67a5832ca3d2","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595816667273,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24459497472},"pipelines":[{"pipelineID":"20638cd0-83f3-4339-8308-385169caeb85","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"55f9241f-a74f-4158-b8bc-c08f34a0767d","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595814713660,"revision":"093f5560c645c745e331e9e5ee3c47ff75015783","buildDate":"2020-07-27T00:48Z"},{"uuid":"41ab5fda-abff-4c1a-ab6d-0f7abd9f36d2","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595816667285,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24459497472},"pipelines":[{"pipelineID":"03329ed2-db7d-4e70-98b3-be77f841629b","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"20638cd0-83f3-4339-8308-385169caeb85","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1595814719458,"revision":"093f5560c645c745e331e9e5ee3c47ff75015783","buildDate":"2020-07-27T00:48Z"}]}</msg>
<status status="PASS" starttime="20200727 02:24:51.703" endtime="20200727 02:24:51.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.704" endtime="20200727 02:24:51.705"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.646" endtime="20200727 02:24:51.705"></status>
</kw>
<msg timestamp="20200727 02:24:51.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.645" endtime="20200727 02:24:51.705"></status>
</kw>
<msg timestamp="20200727 02:24:51.705" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"faa37fc0-55f3-4578-95e5-4997d385291c","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595816667281,"storageReport":{"ca...</msg>
<status status="PASS" starttime="20200727 02:24:51.645" endtime="20200727 02:24:51.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.706" endtime="20200727 02:24:51.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.706" endtime="20200727 02:24:51.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.707" endtime="20200727 02:24:51.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.707" endtime="20200727 02:24:51.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.713" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.733" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"03329ed2-db7d-4e70-98b3-be77f841629b","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonese...</msg>
<status status="PASS" starttime="20200727 02:24:51.710" endtime="20200727 02:24:51.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.734" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"03329ed2-db7d-4e70-98b3-be77f841629b","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1938590,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"aac36774-7892-462d-a511-9ffd047cd922","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1938091,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"20638cd0-83f3-4339-8308-385169caeb85","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1938059,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"55f9241f-a74f-4158-b8bc-c08f34a0767d","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1938085,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200727 02:24:51.733" endtime="20200727 02:24:51.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.734" endtime="20200727 02:24:51.735"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.709" endtime="20200727 02:24:51.735"></status>
</kw>
<msg timestamp="20200727 02:24:51.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.709" endtime="20200727 02:24:51.735"></status>
</kw>
<msg timestamp="20200727 02:24:51.736" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"03329ed2-db7d-4e70-98b3-be77f841629b","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonese...</msg>
<status status="PASS" starttime="20200727 02:24:51.708" endtime="20200727 02:24:51.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.736" endtime="20200727 02:24:51.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.736" endtime="20200727 02:24:51.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.737" endtime="20200727 02:24:51.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.738" endtime="20200727 02:24:51.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.738" endtime="20200727 02:24:51.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.739" endtime="20200727 02:24:51.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.743" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.759" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":73378492416},"containers":4,"volumes":33,"buckets":93,"keys":206}</msg>
<status status="PASS" starttime="20200727 02:24:51.741" endtime="20200727 02:24:51.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.760" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":73378492416},"containers":4,"volumes":33,"buckets":93,"keys":206}</msg>
<status status="PASS" starttime="20200727 02:24:51.759" endtime="20200727 02:24:51.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.760" endtime="20200727 02:24:51.761"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.740" endtime="20200727 02:24:51.762"></status>
</kw>
<msg timestamp="20200727 02:24:51.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.740" endtime="20200727 02:24:51.762"></status>
</kw>
<msg timestamp="20200727 02:24:51.762" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":73378492416},"containers":4,"volumes":33,"buckets":93,"keys":206}</msg>
<status status="PASS" starttime="20200727 02:24:51.739" endtime="20200727 02:24:51.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.762" endtime="20200727 02:24:51.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.763" endtime="20200727 02:24:51.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.763" endtime="20200727 02:24:51.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.767" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.799" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595814788364,"lastReportTimestamp":1595816587852},{"containerId":1,"datanodeHost":"ozonesecure_dat...</msg>
<status status="PASS" starttime="20200727 02:24:51.765" endtime="20200727 02:24:51.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.800" level="INFO">[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595814788364,"lastReportTimestamp":1595816587852},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1595814788597,"lastReportTimestamp":1595816637287},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1595814788567,"lastReportTimestamp":1595816618423}]</msg>
<status status="PASS" starttime="20200727 02:24:51.799" endtime="20200727 02:24:51.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.800" endtime="20200727 02:24:51.801"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.765" endtime="20200727 02:24:51.801"></status>
</kw>
<msg timestamp="20200727 02:24:51.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.764" endtime="20200727 02:24:51.801"></status>
</kw>
<msg timestamp="20200727 02:24:51.802" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595814788364,"lastReportTimestamp":1595816587852},{"containerId":1,"datanodeHost":"ozonesecure_dat...</msg>
<status status="PASS" starttime="20200727 02:24:51.764" endtime="20200727 02:24:51.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.802" endtime="20200727 02:24:51.802"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:24:51.644" endtime="20200727 02:24:51.803" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.810" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.812" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 02:24:51.808" endtime="20200727 02:24:51.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.813" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 02:24:51.813" endtime="20200727 02:24:51.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.814" endtime="20200727 02:24:51.814"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.807" endtime="20200727 02:24:51.814"></status>
</kw>
<msg timestamp="20200727 02:24:51.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.807" endtime="20200727 02:24:51.815"></status>
</kw>
<msg timestamp="20200727 02:24:51.815" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 02:24:51.807" endtime="20200727 02:24:51.815"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.819" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 02:24:51.817" endtime="20200727 02:24:51.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.830" level="INFO"></msg>
<status status="PASS" starttime="20200727 02:24:51.829" endtime="20200727 02:24:51.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.830" endtime="20200727 02:24:51.831"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.816" endtime="20200727 02:24:51.831"></status>
</kw>
<msg timestamp="20200727 02:24:51.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.816" endtime="20200727 02:24:51.831"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.815" endtime="20200727 02:24:51.831"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.815" endtime="20200727 02:24:51.831"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.806" endtime="20200727 02:24:51.831"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.806" endtime="20200727 02:24:51.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 02:24:51.836" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 02:24:51.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 02:24:51.884" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 02:24:51.833" endtime="20200727 02:24:51.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.885" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.de8738b4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.d84a7cfa.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2fc2e818.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.30b8d325.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.884" endtime="20200727 02:24:51.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 02:24:51.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 02:24:51.885" endtime="20200727 02:24:51.886"></status>
</kw>
<status status="PASS" starttime="20200727 02:24:51.833" endtime="20200727 02:24:51.886"></status>
</kw>
<msg timestamp="20200727 02:24:51.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 02:24:51.832" endtime="20200727 02:24:51.886"></status>
</kw>
<msg timestamp="20200727 02:24:51.887" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 02:24:51.832" endtime="20200727 02:24:51.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200727 02:24:51.887" endtime="20200727 02:24:51.887"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 02:24:51.805" endtime="20200727 02:24:51.888" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 02:23:52.434" endtime="20200727 02:24:51.890"></status>
</suite>
<status status="PASS" starttime="20200727 02:23:52.406" endtime="20200727 02:24:51.894"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
