<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 01:16:36.975" rpa="false">
<suite id="s1" name="ozone-ozone-lib" source="/opt/hadoop/smoketest/ozone-lib">
<suite id="s1-s1" name="Shell Tests" source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot">
<test id="s1-s1-t1" name="Bucket Exists should not if No Such Volume">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:16:37.035" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:16:40.326" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:16:40.326" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20200727 01:16:37.032" endtime="20200727 01:16:40.326"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20200727 01:16:40.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:16:40.326" endtime="20200727 01:16:40.328"></status>
</kw>
<msg timestamp="20200727 01:16:40.329" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20200727 01:16:37.031" endtime="20200727 01:16:40.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:16:40.329" endtime="20200727 01:16:40.329"></status>
</kw>
<status status="PASS" starttime="20200727 01:16:37.031" endtime="20200727 01:16:40.330" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Bucket Exists should not if No Such Bucket">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:16:40.334" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:16:43.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:16:43.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:16:40.332" endtime="20200727 01:16:43.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:16:43.038" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:16:43.037" endtime="20200727 01:16:43.038"></status>
</kw>
<status status="PASS" starttime="20200727 01:16:40.331" endtime="20200727 01:16:43.038"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:16:43.041" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:16:45.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 01:16:45.499" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20200727 01:16:43.039" endtime="20200727 01:16:45.499"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20200727 01:16:45.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:16:45.499" endtime="20200727 01:16:45.500"></status>
</kw>
<msg timestamp="20200727 01:16:45.500" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20200727 01:16:43.038" endtime="20200727 01:16:45.501"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:16:45.501" endtime="20200727 01:16:45.501"></status>
</kw>
<status status="PASS" starttime="20200727 01:16:40.331" endtime="20200727 01:16:45.501" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Bucket Exists">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:16:45.505" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:16:47.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:16:47.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:16:45.503" endtime="20200727 01:16:47.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:16:47.935" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:16:47.935" endtime="20200727 01:16:47.935"></status>
</kw>
<status status="PASS" starttime="20200727 01:16:45.503" endtime="20200727 01:16:47.936"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:16:47.938" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:16:50.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:16:50.273" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T01:16:47.732Z",
  "modificationTime" : "2020-07-27T...</msg>
<status status="PASS" starttime="20200727 01:16:47.936" endtime="20200727 01:16:50.273"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:16:50.274" endtime="20200727 01:16:50.274"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:16:50.274" endtime="20200727 01:16:50.275"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:16:50.275" endtime="20200727 01:16:50.275"></status>
</kw>
<msg timestamp="20200727 01:16:50.275" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20200727 01:16:47.936" endtime="20200727 01:16:50.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${TRUE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:16:50.276" endtime="20200727 01:16:50.276"></status>
</kw>
<status status="PASS" starttime="20200727 01:16:45.502" endtime="20200727 01:16:50.276" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Bucket Exists should not if No Such OM service">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:16:50.280" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:05.321" level="INFO">${rc} = 124</msg>
<msg timestamp="20200727 01:17:05.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:16:50.278" endtime="20200727 01:17:05.322"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20200727 01:17:05.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:05.322" endtime="20200727 01:17:05.323"></status>
</kw>
<msg timestamp="20200727 01:17:05.323" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20200727 01:16:50.277" endtime="20200727 01:17:05.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:05.324" endtime="20200727 01:17:05.324"></status>
</kw>
<status status="PASS" starttime="20200727 01:16:50.277" endtime="20200727 01:17:05.324" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Key Should Match Local File">
<kw name="Execute" library="os" type="setup">
<arguments>
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:05.330" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:12.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:12.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:05.328" endtime="20200727 01:17:12.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:12.080" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:12.080" endtime="20200727 01:17:12.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:12.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:12.080" endtime="20200727 01:17:12.081"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:05.327" endtime="20200727 01:17:12.081"></status>
</kw>
<msg timestamp="20200727 01:17:12.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:05.327" endtime="20200727 01:17:12.081"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:05.326" endtime="20200727 01:17:12.082"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:17:12.083" level="INFO">${postfix} = 42640</msg>
<status status="PASS" starttime="20200727 01:17:12.083" endtime="20200727 01:17:12.083"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:17:12.084" level="INFO">${tmpfile} = /tmp/tempkey-42640</msg>
<status status="PASS" starttime="20200727 01:17:12.083" endtime="20200727 01:17:12.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:12.087" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-42640 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:16.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:16.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:12.085" endtime="20200727 01:17:16.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:16.492" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:16.492" endtime="20200727 01:17:16.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:16.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:16.492" endtime="20200727 01:17:16.493"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:12.085" endtime="20200727 01:17:16.494"></status>
</kw>
<msg timestamp="20200727 01:17:16.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:12.084" endtime="20200727 01:17:16.494"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:12.084" endtime="20200727 01:17:16.494"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:17:16.496" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-42640 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:16.500" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 01:17:16.494" endtime="20200727 01:17:16.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:16.504" level="INFO">Running command 'rm -f /tmp/tempkey-42640 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:16.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:16.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:16.502" endtime="20200727 01:17:16.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:16.507" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:16.507" endtime="20200727 01:17:16.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:16.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:16.508" endtime="20200727 01:17:16.508"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:16.502" endtime="20200727 01:17:16.508"></status>
</kw>
<msg timestamp="20200727 01:17:16.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:16.501" endtime="20200727 01:17:16.509"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:16.500" endtime="20200727 01:17:16.509"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:17:16.510" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 01:17:16.509" endtime="20200727 01:17:16.510"></status>
</kw>
<msg timestamp="20200727 01:17:16.510" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 01:17:12.082" endtime="20200727 01:17:16.510"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:16.510" endtime="20200727 01:17:16.511"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:12.082" endtime="20200727 01:17:16.511"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:05.325" endtime="20200727 01:17:16.511" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Compare Key With Local File with Different File">
<kw name="Create Random File" library="os">
<assign>
<var>${random_file}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:17:16.513" level="INFO">${postfix} = 80044</msg>
<status status="PASS" starttime="20200727 01:17:16.513" endtime="20200727 01:17:16.513"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempfile-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:17:16.514" level="INFO">${tmpfile} = /tmp/tempfile-80044</msg>
<status status="PASS" starttime="20200727 01:17:16.514" endtime="20200727 01:17:16.514"></status>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<doc>Fails if the given path points to an existing file.</doc>
<arguments>
<arg>${tmpfile}</arg>
</arguments>
<msg timestamp="20200727 01:17:16.515" level="INFO" html="yes">File '&lt;a href="file:///tmp/tempfile-80044"&gt;/tmp/tempfile-80044&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20200727 01:17:16.514" endtime="20200727 01:17:16.515"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"Random string"</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20200727 01:17:16.515" level="INFO">${content} = "Random string"</msg>
<status status="PASS" starttime="20200727 01:17:16.515" endtime="20200727 01:17:16.515"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${tmpfile}</arg>
<arg>${content}</arg>
</arguments>
<msg timestamp="20200727 01:17:16.516" level="INFO" html="yes">Created file '&lt;a href="file:///tmp/tempfile-80044"&gt;/tmp/tempfile-80044&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200727 01:17:16.515" endtime="20200727 01:17:16.516"></status>
</kw>
<msg timestamp="20200727 01:17:16.516" level="INFO">${random_file} = /tmp/tempfile-80044</msg>
<status status="PASS" starttime="20200727 01:17:16.513" endtime="20200727 01:17:16.516"></status>
</kw>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:17:16.518" level="INFO">${postfix} = 41075</msg>
<status status="PASS" starttime="20200727 01:17:16.517" endtime="20200727 01:17:16.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:17:16.518" level="INFO">${tmpfile} = /tmp/tempkey-41075</msg>
<status status="PASS" starttime="20200727 01:17:16.518" endtime="20200727 01:17:16.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:16.522" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-41075 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:20.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:20.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:16.520" endtime="20200727 01:17:20.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:20.500" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:20.499" endtime="20200727 01:17:20.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:20.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:20.500" endtime="20200727 01:17:20.501"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:16.519" endtime="20200727 01:17:20.501"></status>
</kw>
<msg timestamp="20200727 01:17:20.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:16.519" endtime="20200727 01:17:20.502"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:16.518" endtime="20200727 01:17:20.502"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:17:20.504" level="INFO">Running command 'diff -q /tmp/tempfile-80044 /tmp/tempkey-41075 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:20.506" level="INFO">${rc} = 1</msg>
<status status="PASS" starttime="20200727 01:17:20.502" endtime="20200727 01:17:20.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:20.510" level="INFO">Running command 'rm -f /tmp/tempkey-41075 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:20.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:20.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:20.508" endtime="20200727 01:17:20.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:20.513" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:20.512" endtime="20200727 01:17:20.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:20.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:20.513" endtime="20200727 01:17:20.514"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:20.508" endtime="20200727 01:17:20.514"></status>
</kw>
<msg timestamp="20200727 01:17:20.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:20.507" endtime="20200727 01:17:20.514"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:20.507" endtime="20200727 01:17:20.514"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:17:20.515" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20200727 01:17:20.514" endtime="20200727 01:17:20.515"></status>
</kw>
<msg timestamp="20200727 01:17:20.515" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20200727 01:17:16.516" endtime="20200727 01:17:20.515"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${matches}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:20.515" endtime="20200727 01:17:20.516"></status>
</kw>
<kw name="Remove File" library="OperatingSystem" type="teardown">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${random_file}</arg>
</arguments>
<msg timestamp="20200727 01:17:20.516" level="INFO" html="yes">Removed file '&lt;a href="file:///tmp/tempfile-80044"&gt;/tmp/tempfile-80044&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200727 01:17:20.516" endtime="20200727 01:17:20.517"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:16.512" endtime="20200727 01:17:20.517" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Compare Key With Local File if File Does Not Exist">
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 01:17:20.519" level="INFO">${postfix} = 34050</msg>
<status status="PASS" starttime="20200727 01:17:20.519" endtime="20200727 01:17:20.519"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 01:17:20.520" level="INFO">${tmpfile} = /tmp/tempkey-34050</msg>
<status status="PASS" starttime="20200727 01:17:20.519" endtime="20200727 01:17:20.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:20.524" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-34050 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:24.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:24.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:20.521" endtime="20200727 01:17:24.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:24.944" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:24.943" endtime="20200727 01:17:24.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:24.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:24.944" endtime="20200727 01:17:24.945"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:20.521" endtime="20200727 01:17:24.945"></status>
</kw>
<msg timestamp="20200727 01:17:24.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:20.520" endtime="20200727 01:17:24.945"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:20.520" endtime="20200727 01:17:24.945"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 01:17:24.948" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-34050 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:24.950" level="INFO">${rc} = 2</msg>
<status status="PASS" starttime="20200727 01:17:24.946" endtime="20200727 01:17:24.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 01:17:24.955" level="INFO">Running command 'rm -f /tmp/tempkey-34050 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 01:17:24.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 01:17:24.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 01:17:24.953" endtime="20200727 01:17:24.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 01:17:24.958" level="INFO"></msg>
<status status="PASS" starttime="20200727 01:17:24.958" endtime="20200727 01:17:24.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 01:17:24.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 01:17:24.959" endtime="20200727 01:17:24.959"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:24.952" endtime="20200727 01:17:24.959"></status>
</kw>
<msg timestamp="20200727 01:17:24.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 01:17:24.951" endtime="20200727 01:17:24.960"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:24.951" endtime="20200727 01:17:24.960"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 01:17:24.961" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20200727 01:17:24.960" endtime="20200727 01:17:24.961"></status>
</kw>
<msg timestamp="20200727 01:17:24.961" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20200727 01:17:20.518" endtime="20200727 01:17:24.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${matches}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 01:17:24.961" endtime="20200727 01:17:24.962"></status>
</kw>
<status status="PASS" starttime="20200727 01:17:20.517" endtime="20200727 01:17:24.962" critical="yes"></status>
</test>
<status status="PASS" starttime="20200727 01:16:37.004" endtime="20200727 01:17:24.964"></status>
</suite>
<status status="PASS" starttime="20200727 01:16:36.976" endtime="20200727 01:17:24.970"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="ozone-ozone-lib">ozone-ozone-lib</stat>
<stat pass="7" fail="0" id="s1-s1" name="Shell Tests">ozone-ozone-lib.Shell Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
