<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 09:46:11.592" rpa="false">
<suite id="s1" name="hadoop27-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:11.646" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:13.622" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 09:46:13.623" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:46:11.640" endtime="20200727 09:46:13.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:13.624" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:46:13.623" endtime="20200727 09:46:13.624"></status>
</kw>
<msg timestamp="20200727 09:46:13.624" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:46:11.639" endtime="20200727 09:46:13.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:13.629" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:15.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:46:15.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:46:13.627" endtime="20200727 09:46:15.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:15.516" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:46:15.515" endtime="20200727 09:46:15.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:46:15.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:46:15.516" endtime="20200727 09:46:15.516"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:13.626" endtime="20200727 09:46:15.517"></status>
</kw>
<msg timestamp="20200727 09:46:15.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:46:13.626" endtime="20200727 09:46:15.517"></status>
</kw>
<msg timestamp="20200727 09:46:15.517" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 09:46:13.625" endtime="20200727 09:46:15.517"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 09:46:15.517" endtime="20200727 09:46:15.517"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:13.625" endtime="20200727 09:46:15.518"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:13.624" endtime="20200727 09:46:15.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:15.524" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:17.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:46:17.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:46:15.521" endtime="20200727 09:46:17.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:17.290" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:46:17.290" endtime="20200727 09:46:17.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:46:17.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:46:17.291" endtime="20200727 09:46:17.291"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:15.520" endtime="20200727 09:46:17.291"></status>
</kw>
<msg timestamp="20200727 09:46:17.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:46:15.519" endtime="20200727 09:46:17.292"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:15.519" endtime="20200727 09:46:17.292"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:15.518" endtime="20200727 09:46:17.292"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:15.518" endtime="20200727 09:46:17.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 09:46:17.292" endtime="20200727 09:46:17.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:17.297" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:19.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:46:19.072" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:46:17.164Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 09:46:17.294" endtime="20200727 09:46:19.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:19.073" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:46:17.164Z",
  "modificationTime" : "2020-07-27T09:46:17.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 09:46:19.073" endtime="20200727 09:46:19.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:46:19.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:46:19.073" endtime="20200727 09:46:19.074"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:17.293" endtime="20200727 09:46:19.074"></status>
</kw>
<msg timestamp="20200727 09:46:19.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:46:17.293" endtime="20200727 09:46:19.074"></status>
</kw>
<msg timestamp="20200727 09:46:19.075" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:46:17.164Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 09:46:17.292" endtime="20200727 09:46:19.075"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 09:46:19.075" endtime="20200727 09:46:19.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:19.080" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:23.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:46:23.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:46:19.076" endtime="20200727 09:46:23.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:23.659" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:46:23.659" endtime="20200727 09:46:23.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:46:23.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:46:23.660" endtime="20200727 09:46:23.660"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:19.076" endtime="20200727 09:46:23.660"></status>
</kw>
<msg timestamp="20200727 09:46:23.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:46:19.076" endtime="20200727 09:46:23.661"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:19.075" endtime="20200727 09:46:23.661"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 09:46:11.638" endtime="20200727 09:46:23.661" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:23.667" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:25.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:46:25.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:46:23.664" endtime="20200727 09:46:25.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:25.481" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:46:25.481" endtime="20200727 09:46:25.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:46:25.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:46:25.481" endtime="20200727 09:46:25.482"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:23.663" endtime="20200727 09:46:25.482"></status>
</kw>
<msg timestamp="20200727 09:46:25.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:46:23.663" endtime="20200727 09:46:25.482"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:23.663" endtime="20200727 09:46:25.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:46:25.488" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:46:27.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:46:27.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:46:25.484" endtime="20200727 09:46:27.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:46:27.448" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:46:27.447" endtime="20200727 09:46:27.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:46:27.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:46:27.448" endtime="20200727 09:46:27.448"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:25.483" endtime="20200727 09:46:27.448"></status>
</kw>
<msg timestamp="20200727 09:46:27.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:46:25.483" endtime="20200727 09:46:27.449"></status>
</kw>
<status status="PASS" starttime="20200727 09:46:25.483" endtime="20200727 09:46:27.449"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 09:46:23.662" endtime="20200727 09:46:27.449" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200727 09:46:11.593" endtime="20200727 09:46:27.450"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop27-createmrenv">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
