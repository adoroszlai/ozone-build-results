<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 10:39:18.104" rpa="false">
<suite id="s1" name="ozonesecure-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:39:18.164" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:39:18.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:39:18.167" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:39:18.160" endtime="20200727 10:39:18.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.168" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:39:18.167" endtime="20200727 10:39:18.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:39:18.168" endtime="20200727 10:39:18.168"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.160" endtime="20200727 10:39:18.169"></status>
</kw>
<msg timestamp="20200727 10:39:18.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:39:18.160" endtime="20200727 10:39:18.169"></status>
</kw>
<msg timestamp="20200727 10:39:18.169" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:39:18.159" endtime="20200727 10:39:18.169"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:39:18.173" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:39:18.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:39:18.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:39:18.171" endtime="20200727 10:39:18.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.189" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:39:18.188" endtime="20200727 10:39:18.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:39:18.189" endtime="20200727 10:39:18.190"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.170" endtime="20200727 10:39:18.190"></status>
</kw>
<msg timestamp="20200727 10:39:18.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:39:18.170" endtime="20200727 10:39:18.190"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.170" endtime="20200727 10:39:18.190"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.169" endtime="20200727 10:39:18.190"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.159" endtime="20200727 10:39:18.190"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.158" endtime="20200727 10:39:18.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:39:18.195" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:39:18.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:39:18.315" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20200727 10:39:18.192" endtime="20200727 10:39:18.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.317" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 10:39:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCDxK1MSsHU9f1g/WjPStfsKQswLVjqZIaWx8pj+MXsbHyU/bZ+FTDqpLk6cC/uPVs8nROatQ+poDZb/7apKfpgiIz
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595882358305&amp;s=tcvRLnXqgZ8yvYCL/1LTvAK5kN/ohonNJwgc6peh4xw="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 09:35:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200727 10:39:18.316" endtime="20200727 10:39:18.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:39:18.317" endtime="20200727 10:39:18.318"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.191" endtime="20200727 10:39:18.318"></status>
</kw>
<msg timestamp="20200727 10:39:18.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:39:18.191" endtime="20200727 10:39:18.318"></status>
</kw>
<msg timestamp="20200727 10:39:18.318" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20200727 10:39:18.191" endtime="20200727 10:39:18.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200727 10:39:18.319" endtime="20200727 10:39:18.319"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:39:18.157" endtime="20200727 10:39:18.319" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:39:18.325" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:39:18.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:39:18.328" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:39:18.323" endtime="20200727 10:39:18.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.329" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:39:18.329" endtime="20200727 10:39:18.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:39:18.329" endtime="20200727 10:39:18.330"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.323" endtime="20200727 10:39:18.330"></status>
</kw>
<msg timestamp="20200727 10:39:18.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:39:18.322" endtime="20200727 10:39:18.330"></status>
</kw>
<msg timestamp="20200727 10:39:18.331" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:39:18.322" endtime="20200727 10:39:18.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:39:18.332" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:39:18.331" endtime="20200727 10:39:18.332"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:39:18.336" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:39:18.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:39:18.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:39:18.334" endtime="20200727 10:39:18.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.353" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:39:18.352" endtime="20200727 10:39:18.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:39:18.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:39:18.353" endtime="20200727 10:39:18.353"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.333" endtime="20200727 10:39:18.354"></status>
</kw>
<msg timestamp="20200727 10:39:18.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:39:18.333" endtime="20200727 10:39:18.354"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.333" endtime="20200727 10:39:18.354"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.332" endtime="20200727 10:39:18.354"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.322" endtime="20200727 10:39:18.354"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.321" endtime="20200727 10:39:18.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:39:18.358" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:22.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:22.222" level="INFO">${output} = 2020-07-27 10:39:19,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:39:20,078 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:39:18.356" endtime="20200727 10:40:22.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:22.223" level="INFO">2020-07-27 10:39:19,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:39:20,078 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:39:20,078 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 10:39:22,349 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 10:39:22,349 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-27 10:39:22,349 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-27 10:39:22,349 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-27 10:39:22,350 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 10:39:22,350 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 10:39:22,350 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-27 10:39:22,352 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-27 10:39:22,353 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 10:39:22,366 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-27 10:39:22,399 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-63621, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:39:22,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-58086, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:39:22,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-36267, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:39:22,688 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-26183, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:39:22,719 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-29475, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:39:22,743 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-63621/bucket-0-41695, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,824 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-58086/bucket-0-34803, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,835 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-36267/bucket-0-32291, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,843 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-26183/bucket-0-67954, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,847 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-29475/bucket-0-29207, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,869 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-63621/bucket-1-96802, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,876 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-58086/bucket-1-71909, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,880 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-36267/bucket-1-79197, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,884 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-26183/bucket-1-78284, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,894 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-29475/bucket-1-03179, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,904 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-63621/bucket-2-51631, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,908 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-58086/bucket-2-93883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,913 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-36267/bucket-2-86155, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,918 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-26183/bucket-2-35571, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,922 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-29475/bucket-2-06912, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,925 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-63621/bucket-3-04539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,929 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-58086/bucket-3-92427, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,932 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-36267/bucket-3-44906, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-26183/bucket-3-86305, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,940 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-29475/bucket-3-68457, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,943 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-63621/bucket-4-92540, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,946 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-58086/bucket-4-70947, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,950 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-36267/bucket-4-01489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,954 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-26183/bucket-4-07158, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:22,957 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-29475/bucket-4-67813, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:39:23,367 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-27 10:39:23,933 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:39:24,372 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 10:39:25,373 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 10:39:26,374 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 10:39:27,379 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-07-27 10:39:28,380 [Thread-8] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-07-27 10:39:29,380 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-27 10:39:30,380 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-07-27 10:39:31,381 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-07-27 10:39:32,381 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-07-27 10:39:33,382 [Thread-8] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-07-27 10:39:34,383 [Thread-8] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-07-27 10:39:35,383 [Thread-8] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-07-27 10:39:36,384 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 10:39:37,384 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 10:39:38,385 [Thread-8] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 10:39:39,393 [Thread-8] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-07-27 10:39:40,394 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-27 10:39:41,394 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-07-27 10:39:42,394 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-07-27 10:39:43,395 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-07-27 10:39:44,395 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-07-27 10:39:45,396 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-07-27 10:39:46,396 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-07-27 10:39:47,397 [Thread-8] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-07-27 10:39:48,397 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 10:39:49,398 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 10:39:50,398 [Thread-8] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-27 10:39:51,399 [Thread-8] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-27 10:39:52,400 [Thread-8] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-07-27 10:39:53,401 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-27 10:39:54,401 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-27 10:39:55,402 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-27 10:39:56,402 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-27 10:39:57,403 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-27 10:39:58,403 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-27 10:39:59,403 [Thread-8] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-27 10:40:00,404 [Thread-8] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-27 10:40:01,404 [Thread-8] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-27 10:40:02,405 [Thread-8] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-27 10:40:03,405 [Thread-8] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-27 10:40:04,406 [Thread-8] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-27 10:40:05,406 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-27 10:40:06,407 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-27 10:40:07,407 [Thread-8] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-27 10:40:08,408 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-27 10:40:09,408 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-27 10:40:10,409 [Thread-8] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-27 10:40:11,409 [Thread-8] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-27 10:40:12,410 [Thread-8] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-27 10:40:13,411 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-27 10:40:14,411 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-07-27 10:40:15,411 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-07-27 10:40:16,412 [Thread-8] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-07-27 10:40:17,412 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,302
Average Time spent in bucket creation: 00:00:00,174
Average Time spent in key creation: 00:00:03,169
Average Time spent in key write: 00:00:00,857
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:01,630
***************************************************</msg>
<status status="PASS" starttime="20200727 10:40:22.223" endtime="20200727 10:40:22.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:22.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:22.224" endtime="20200727 10:40:22.225"></status>
</kw>
<status status="PASS" starttime="20200727 10:39:18.355" endtime="20200727 10:40:22.225"></status>
</kw>
<msg timestamp="20200727 10:40:22.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:39:18.355" endtime="20200727 10:40:22.225"></status>
</kw>
<msg timestamp="20200727 10:40:22.226" level="INFO">${result} = 2020-07-27 10:39:19,882 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:39:20,078 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:39:18.355" endtime="20200727 10:40:22.226"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200727 10:40:22.226" endtime="20200727 10:40:22.227"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:22.226" endtime="20200727 10:40:22.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200727 10:40:22.227" endtime="20200727 10:40:22.227"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:39:18.320" endtime="20200727 10:40:22.227" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 10:39:18.132" endtime="20200727 10:40:22.228"></status>
</suite>
<suite id="s1-s2" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 10:40:22.241" level="INFO">${random} = 30946</msg>
<status status="PASS" starttime="20200727 10:40:22.240" endtime="20200727 10:40:22.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200727 10:40:22.242" level="INFO">${source} = 30946-source</msg>
<status status="PASS" starttime="20200727 10:40:22.241" endtime="20200727 10:40:22.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200727 10:40:22.243" level="INFO">${target} = 30946-target</msg>
<status status="PASS" starttime="20200727 10:40:22.242" endtime="20200727 10:40:22.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:22.247" level="INFO">Running command 'ozone sh volume create 30946-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:25.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:25.184" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:22.244" endtime="20200727 10:40:25.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:25.185" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:25.185" endtime="20200727 10:40:25.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:25.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:25.185" endtime="20200727 10:40:25.186"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:22.244" endtime="20200727 10:40:25.186"></status>
</kw>
<msg timestamp="20200727 10:40:25.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:22.243" endtime="20200727 10:40:25.186"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:22.243" endtime="20200727 10:40:25.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:25.191" level="INFO">Running command 'ozone sh volume create 30946-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:28.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:28.257" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:25.188" endtime="20200727 10:40:28.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:28.258" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:28.257" endtime="20200727 10:40:28.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:28.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:28.258" endtime="20200727 10:40:28.259"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:25.188" endtime="20200727 10:40:28.259"></status>
</kw>
<msg timestamp="20200727 10:40:28.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:25.188" endtime="20200727 10:40:28.259"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:25.187" endtime="20200727 10:40:28.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:28.264" level="INFO">Running command 'ozone sh bucket create 30946-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:31.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:31.140" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:28.262" endtime="20200727 10:40:31.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:31.141" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:31.140" endtime="20200727 10:40:31.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:31.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:31.141" endtime="20200727 10:40:31.142"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:28.262" endtime="20200727 10:40:31.142"></status>
</kw>
<msg timestamp="20200727 10:40:31.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:28.261" endtime="20200727 10:40:31.142"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:28.260" endtime="20200727 10:40:31.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:31.145" level="INFO">Running command 'ozone sh key put 30946-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:36.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:36.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:31.143" endtime="20200727 10:40:36.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:36.048" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:36.047" endtime="20200727 10:40:36.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:36.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:36.048" endtime="20200727 10:40:36.048"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:31.143" endtime="20200727 10:40:36.049"></status>
</kw>
<msg timestamp="20200727 10:40:36.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:31.143" endtime="20200727 10:40:36.049"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:31.142" endtime="20200727 10:40:36.049"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:36.052" level="INFO">Running command 'ozone sh bucket create 30946-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:38.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:38.852" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:36.050" endtime="20200727 10:40:38.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:38.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:38.853" endtime="20200727 10:40:38.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:38.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:38.854" endtime="20200727 10:40:38.854"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:36.050" endtime="20200727 10:40:38.854"></status>
</kw>
<msg timestamp="20200727 10:40:38.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:36.050" endtime="20200727 10:40:38.855"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:36.049" endtime="20200727 10:40:38.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:38.858" level="INFO">Running command 'ozone sh bucket link 30946-source/readable-bucket 30946-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:41.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:41.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:38.856" endtime="20200727 10:40:41.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:41.675" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:41.675" endtime="20200727 10:40:41.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:41.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:41.675" endtime="20200727 10:40:41.676"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:38.856" endtime="20200727 10:40:41.676"></status>
</kw>
<msg timestamp="20200727 10:40:41.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:38.855" endtime="20200727 10:40:41.676"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:38.855" endtime="20200727 10:40:41.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:41.680" level="INFO">Running command 'ozone sh bucket link 30946-source/readable-bucket 30946-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:44.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:44.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:41.678" endtime="20200727 10:40:44.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:44.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:44.319" endtime="20200727 10:40:44.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:44.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:44.320" endtime="20200727 10:40:44.320"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:41.677" endtime="20200727 10:40:44.320"></status>
</kw>
<msg timestamp="20200727 10:40:44.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:41.677" endtime="20200727 10:40:44.321"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:41.677" endtime="20200727 10:40:44.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:44.324" level="INFO">Running command 'ozone sh bucket link 30946-source/unreadable-bucket 30946-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:47.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:47.275" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:44.322" endtime="20200727 10:40:47.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:47.276" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:40:47.275" endtime="20200727 10:40:47.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:47.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:47.276" endtime="20200727 10:40:47.277"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:44.322" endtime="20200727 10:40:47.277"></status>
</kw>
<msg timestamp="20200727 10:40:47.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:44.321" endtime="20200727 10:40:47.277"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:44.321" endtime="20200727 10:40:47.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:47.280" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 30946-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:50.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:50.237" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:47.278" endtime="20200727 10:40:50.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:50.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:40:50.237" endtime="20200727 10:40:50.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:50.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:50.238" endtime="20200727 10:40:50.239"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:47.278" endtime="20200727 10:40:50.239"></status>
</kw>
<msg timestamp="20200727 10:40:50.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:47.278" endtime="20200727 10:40:50.239"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:47.277" endtime="20200727 10:40:50.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:50.249" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 30946-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:53.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:53.210" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:50.241" endtime="20200727 10:40:53.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:53.211" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:40:53.211" endtime="20200727 10:40:53.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:53.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:53.212" endtime="20200727 10:40:53.212"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:50.240" endtime="20200727 10:40:53.212"></status>
</kw>
<msg timestamp="20200727 10:40:53.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:50.240" endtime="20200727 10:40:53.213"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:50.239" endtime="20200727 10:40:53.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:53.216" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 30946-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:56.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:56.224" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:53.214" endtime="20200727 10:40:56.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:56.225" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:40:56.224" endtime="20200727 10:40:56.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:56.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:56.225" endtime="20200727 10:40:56.226"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:53.214" endtime="20200727 10:40:56.226"></status>
</kw>
<msg timestamp="20200727 10:40:56.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:53.213" endtime="20200727 10:40:56.226"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:53.213" endtime="20200727 10:40:56.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:56.231" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 30946-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:40:59.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:40:59.055" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:56.228" endtime="20200727 10:40:59.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:40:59.056" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:40:59.055" endtime="20200727 10:40:59.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:40:59.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:40:59.056" endtime="20200727 10:40:59.057"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:56.227" endtime="20200727 10:40:59.057"></status>
</kw>
<msg timestamp="20200727 10:40:59.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:56.227" endtime="20200727 10:40:59.057"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:56.226" endtime="20200727 10:40:59.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:40:59.061" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 30946-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:03.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:03.029" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:40:59.059" endtime="20200727 10:41:03.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:03.030" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:41:03.029" endtime="20200727 10:41:03.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:03.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:03.030" endtime="20200727 10:41:03.030"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:59.058" endtime="20200727 10:41:03.031"></status>
</kw>
<msg timestamp="20200727 10:41:03.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:40:59.058" endtime="20200727 10:41:03.031"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:59.057" endtime="20200727 10:41:03.031"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:28.260" endtime="20200727 10:41:03.031"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:28.260" endtime="20200727 10:41:03.031"></status>
</kw>
<status status="PASS" starttime="20200727 10:40:22.240" endtime="20200727 10:41:03.032"></status>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:03.040" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:03.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:03.041" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:03.035" endtime="20200727 10:41:03.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:03.042" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:03.041" endtime="20200727 10:41:03.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:03.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:03.042" endtime="20200727 10:41:03.043"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.035" endtime="20200727 10:41:03.043"></status>
</kw>
<msg timestamp="20200727 10:41:03.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:03.034" endtime="20200727 10:41:03.043"></status>
</kw>
<msg timestamp="20200727 10:41:03.043" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:03.034" endtime="20200727 10:41:03.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:03.045" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:03.044" endtime="20200727 10:41:03.045"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:03.050" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:03.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:03.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:03.047" endtime="20200727 10:41:03.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:03.062" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:03.061" endtime="20200727 10:41:03.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:03.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:03.062" endtime="20200727 10:41:03.063"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.046" endtime="20200727 10:41:03.063"></status>
</kw>
<msg timestamp="20200727 10:41:03.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:03.046" endtime="20200727 10:41:03.063"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.045" endtime="20200727 10:41:03.063"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.045" endtime="20200727 10:41:03.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.033" endtime="20200727 10:41:03.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.033" endtime="20200727 10:41:03.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:03.068" level="INFO">Running command 'ozone sh bucket link 30946-source/no-such-bucket 30946-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:05.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:05.997" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:03.065" endtime="20200727 10:41:05.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:05.998" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:05.997" endtime="20200727 10:41:05.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:05.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:05.998" endtime="20200727 10:41:05.999"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.065" endtime="20200727 10:41:05.999"></status>
</kw>
<msg timestamp="20200727 10:41:05.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:03.065" endtime="20200727 10:41:05.999"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:03.064" endtime="20200727 10:41:05.999"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:06.002" level="INFO">Running command 'ozone sh key list 30946-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:08.803" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:41:08.804" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:06.000" endtime="20200727 10:41:08.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:08.805" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 10:41:08.804" endtime="20200727 10:41:08.805"></status>
</kw>
<msg timestamp="20200727 10:41:08.805" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:06.000" endtime="20200727 10:41:08.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:08.805" endtime="20200727 10:41:08.806"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:03.032" endtime="20200727 10:41:08.806" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:08.813" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:08.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:08.816" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:08.811" endtime="20200727 10:41:08.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:08.817" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:08.816" endtime="20200727 10:41:08.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:08.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:08.817" endtime="20200727 10:41:08.817"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.810" endtime="20200727 10:41:08.818"></status>
</kw>
<msg timestamp="20200727 10:41:08.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:08.810" endtime="20200727 10:41:08.818"></status>
</kw>
<msg timestamp="20200727 10:41:08.818" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:08.809" endtime="20200727 10:41:08.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:08.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:08.818" endtime="20200727 10:41:08.819"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:08.823" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:08.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:08.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:08.821" endtime="20200727 10:41:08.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:08.840" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:08.839" endtime="20200727 10:41:08.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:08.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:08.840" endtime="20200727 10:41:08.840"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.820" endtime="20200727 10:41:08.841"></status>
</kw>
<msg timestamp="20200727 10:41:08.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:08.820" endtime="20200727 10:41:08.841"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.819" endtime="20200727 10:41:08.841"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.819" endtime="20200727 10:41:08.841"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.808" endtime="20200727 10:41:08.841"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.808" endtime="20200727 10:41:08.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:08.844" level="INFO">Running command 'ozone sh bucket link 30946-source/bucket1 30946-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:11.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:11.683" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:08.843" endtime="20200727 10:41:11.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:11.684" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:11.684" endtime="20200727 10:41:11.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:11.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:11.685" endtime="20200727 10:41:11.685"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.842" endtime="20200727 10:41:11.685"></status>
</kw>
<msg timestamp="20200727 10:41:11.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:08.842" endtime="20200727 10:41:11.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:08.841" endtime="20200727 10:41:11.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:11.691" level="INFO">Running command 'ozone sh bucket create 30946-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:14.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:14.707" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:11.687" endtime="20200727 10:41:14.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:14.709" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:14.708" endtime="20200727 10:41:14.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:14.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:14.709" endtime="20200727 10:41:14.710"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:11.687" endtime="20200727 10:41:14.710"></status>
</kw>
<msg timestamp="20200727 10:41:14.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:11.687" endtime="20200727 10:41:14.710"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:11.686" endtime="20200727 10:41:14.711"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:14.714" level="INFO">Running command 'ozone sh key put 30946-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:19.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:19.409" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:14.712" endtime="20200727 10:41:19.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:19.410" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:19.409" endtime="20200727 10:41:19.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:19.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:19.410" endtime="20200727 10:41:19.411"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:14.711" endtime="20200727 10:41:19.411"></status>
</kw>
<msg timestamp="20200727 10:41:19.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:14.711" endtime="20200727 10:41:19.411"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:14.711" endtime="20200727 10:41:19.411"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:41:19.413" level="INFO">${postfix} = 40410</msg>
<status status="PASS" starttime="20200727 10:41:19.413" endtime="20200727 10:41:19.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:41:19.414" level="INFO">${tmpfile} = /tmp/tempkey-40410</msg>
<status status="PASS" starttime="20200727 10:41:19.413" endtime="20200727 10:41:19.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:19.417" level="INFO">Running command 'ozone sh key get -f 30946-target/link1/key1 /tmp/tempkey-40410 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:23.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:23.957" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:19.415" endtime="20200727 10:41:23.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:23.958" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:23.958" endtime="20200727 10:41:23.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:23.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:23.959" endtime="20200727 10:41:23.960"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:19.415" endtime="20200727 10:41:23.960"></status>
</kw>
<msg timestamp="20200727 10:41:23.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:19.414" endtime="20200727 10:41:23.961"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:19.414" endtime="20200727 10:41:23.961"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:41:23.965" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-40410 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:23.967" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:41:23.961" endtime="20200727 10:41:23.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:23.971" level="INFO">Running command 'rm -f /tmp/tempkey-40410 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:23.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:23.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:23.969" endtime="20200727 10:41:23.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:23.975" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:23.974" endtime="20200727 10:41:23.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:23.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:23.975" endtime="20200727 10:41:23.976"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.968" endtime="20200727 10:41:23.976"></status>
</kw>
<msg timestamp="20200727 10:41:23.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:23.968" endtime="20200727 10:41:23.976"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.967" endtime="20200727 10:41:23.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:41:23.977" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:41:23.977" endtime="20200727 10:41:23.977"></status>
</kw>
<msg timestamp="20200727 10:41:23.977" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:41:19.412" endtime="20200727 10:41:23.977"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:23.978" endtime="20200727 10:41:23.978"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:19.412" endtime="20200727 10:41:23.978"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:08.807" endtime="20200727 10:41:23.978" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:23.985" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:23.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:23.986" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:23.982" endtime="20200727 10:41:23.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:23.987" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:23.986" endtime="20200727 10:41:23.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:23.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:23.987" endtime="20200727 10:41:23.988"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.981" endtime="20200727 10:41:23.988"></status>
</kw>
<msg timestamp="20200727 10:41:23.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:23.981" endtime="20200727 10:41:23.988"></status>
</kw>
<msg timestamp="20200727 10:41:23.988" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:23.980" endtime="20200727 10:41:23.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:23.989" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:23.989" endtime="20200727 10:41:23.989"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:23.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:24.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:24.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:23.991" endtime="20200727 10:41:24.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:24.006" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:24.006" endtime="20200727 10:41:24.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:24.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:24.007" endtime="20200727 10:41:24.007"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.991" endtime="20200727 10:41:24.007"></status>
</kw>
<msg timestamp="20200727 10:41:24.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:23.990" endtime="20200727 10:41:24.008"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.990" endtime="20200727 10:41:24.008"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.989" endtime="20200727 10:41:24.008"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.980" endtime="20200727 10:41:24.008"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:23.980" endtime="20200727 10:41:24.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:24.012" level="INFO">Running command 'ozone sh key put 30946-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:29.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:29.084" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:24.010" endtime="20200727 10:41:29.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:29.085" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:29.084" endtime="20200727 10:41:29.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:29.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:29.085" endtime="20200727 10:41:29.087"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:24.009" endtime="20200727 10:41:29.087"></status>
</kw>
<msg timestamp="20200727 10:41:29.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:24.009" endtime="20200727 10:41:29.088"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:24.008" endtime="20200727 10:41:29.088"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:41:29.090" level="INFO">${postfix} = 61442</msg>
<status status="PASS" starttime="20200727 10:41:29.089" endtime="20200727 10:41:29.090"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:41:29.091" level="INFO">${tmpfile} = /tmp/tempkey-61442</msg>
<status status="PASS" starttime="20200727 10:41:29.090" endtime="20200727 10:41:29.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:29.096" level="INFO">Running command 'ozone sh key get -f 30946-source/bucket1/key2 /tmp/tempkey-61442 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:33.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:33.687" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:29.093" endtime="20200727 10:41:33.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.688" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:33.687" endtime="20200727 10:41:33.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:33.689" endtime="20200727 10:41:33.689"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:29.092" endtime="20200727 10:41:33.689"></status>
</kw>
<msg timestamp="20200727 10:41:33.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:29.092" endtime="20200727 10:41:33.690"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:29.091" endtime="20200727 10:41:33.690"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:41:33.692" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-61442 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:33.695" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:41:33.690" endtime="20200727 10:41:33.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:33.700" level="INFO">Running command 'rm -f /tmp/tempkey-61442 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:33.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:33.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:33.697" endtime="20200727 10:41:33.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.702" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:33.702" endtime="20200727 10:41:33.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:33.703" endtime="20200727 10:41:33.703"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.697" endtime="20200727 10:41:33.703"></status>
</kw>
<msg timestamp="20200727 10:41:33.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:33.696" endtime="20200727 10:41:33.704"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.696" endtime="20200727 10:41:33.704"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:41:33.704" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:41:33.704" endtime="20200727 10:41:33.704"></status>
</kw>
<msg timestamp="20200727 10:41:33.705" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:41:29.089" endtime="20200727 10:41:33.705"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:33.705" endtime="20200727 10:41:33.705"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:29.088" endtime="20200727 10:41:33.705"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:23.979" endtime="20200727 10:41:33.705" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:33.711" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:33.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:33.713" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:33.709" endtime="20200727 10:41:33.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.714" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:33.714" endtime="20200727 10:41:33.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:33.714" endtime="20200727 10:41:33.715"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.708" endtime="20200727 10:41:33.715"></status>
</kw>
<msg timestamp="20200727 10:41:33.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:33.708" endtime="20200727 10:41:33.715"></status>
</kw>
<msg timestamp="20200727 10:41:33.715" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:33.707" endtime="20200727 10:41:33.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:33.716" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:33.716" endtime="20200727 10:41:33.716"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:33.721" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:33.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:33.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:33.718" endtime="20200727 10:41:33.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.735" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:33.734" endtime="20200727 10:41:33.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:33.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:33.735" endtime="20200727 10:41:33.735"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.717" endtime="20200727 10:41:33.736"></status>
</kw>
<msg timestamp="20200727 10:41:33.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:33.717" endtime="20200727 10:41:33.736"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.717" endtime="20200727 10:41:33.736"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.716" endtime="20200727 10:41:33.736"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.707" endtime="20200727 10:41:33.736"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.707" endtime="20200727 10:41:33.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:33.741" level="INFO">Running command 'ozone sh key list 30946-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:36.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:36.794" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:41:33.738" endtime="20200727 10:41:36.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:36.795" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 10:41:36.795" endtime="20200727 10:41:36.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:36.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:36.796" endtime="20200727 10:41:36.796"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:33.737" endtime="20200727 10:41:36.796"></status>
</kw>
<msg timestamp="20200727 10:41:36.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:33.737" endtime="20200727 10:41:36.797"></status>
</kw>
<msg timestamp="20200727 10:41:36.797" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:41:33.736" endtime="20200727 10:41:36.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:36.802" level="INFO">Running command 'ozone sh key list 30946-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:39.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:39.942" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:41:36.798" endtime="20200727 10:41:39.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:39.944" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 10:41:39.943" endtime="20200727 10:41:39.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:39.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:39.944" endtime="20200727 10:41:39.944"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:36.798" endtime="20200727 10:41:39.945"></status>
</kw>
<msg timestamp="20200727 10:41:39.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:36.798" endtime="20200727 10:41:39.945"></status>
</kw>
<msg timestamp="20200727 10:41:39.945" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:41:36.797" endtime="20200727 10:41:39.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:39.945" endtime="20200727 10:41:39.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:39.946" endtime="20200727 10:41:39.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:39.947" endtime="20200727 10:41:39.947"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:33.706" endtime="20200727 10:41:39.947" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:39.954" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:39.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:39.956" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:39.951" endtime="20200727 10:41:39.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:39.957" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:39.956" endtime="20200727 10:41:39.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:39.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:39.957" endtime="20200727 10:41:39.958"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.950" endtime="20200727 10:41:39.958"></status>
</kw>
<msg timestamp="20200727 10:41:39.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:39.950" endtime="20200727 10:41:39.958"></status>
</kw>
<msg timestamp="20200727 10:41:39.959" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:39.950" endtime="20200727 10:41:39.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:39.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:39.959" endtime="20200727 10:41:39.960"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:39.965" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:39.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:39.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:39.962" endtime="20200727 10:41:39.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:39.980" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:39.979" endtime="20200727 10:41:39.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:39.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:39.980" endtime="20200727 10:41:39.980"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.961" endtime="20200727 10:41:39.981"></status>
</kw>
<msg timestamp="20200727 10:41:39.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:39.961" endtime="20200727 10:41:39.981"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.960" endtime="20200727 10:41:39.981"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.960" endtime="20200727 10:41:39.981"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.949" endtime="20200727 10:41:39.981"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.948" endtime="20200727 10:41:39.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:39.986" level="INFO">Running command 'ozone sh key delete 30946-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:42.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:42.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:39.983" endtime="20200727 10:41:42.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:42.901" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:41:42.900" endtime="20200727 10:41:42.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:42.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:42.901" endtime="20200727 10:41:42.901"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.982" endtime="20200727 10:41:42.902"></status>
</kw>
<msg timestamp="20200727 10:41:42.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:39.982" endtime="20200727 10:41:42.902"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:39.982" endtime="20200727 10:41:42.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:42.907" level="INFO">Running command 'ozone sh key list 30946-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:45.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:45.907" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:41:42.904" endtime="20200727 10:41:45.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:45.908" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:41:45.907" endtime="20200727 10:41:45.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:45.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:45.908" endtime="20200727 10:41:45.908"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:42.903" endtime="20200727 10:41:45.909"></status>
</kw>
<msg timestamp="20200727 10:41:45.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:42.903" endtime="20200727 10:41:45.909"></status>
</kw>
<msg timestamp="20200727 10:41:45.909" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20200727 10:41:42.902" endtime="20200727 10:41:45.909"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:45.909" endtime="20200727 10:41:45.910"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:39.948" endtime="20200727 10:41:45.910" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:45.917" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:45.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:45.918" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:45.913" endtime="20200727 10:41:45.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:45.919" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:45.919" endtime="20200727 10:41:45.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:45.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:45.919" endtime="20200727 10:41:45.920"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.913" endtime="20200727 10:41:45.920"></status>
</kw>
<msg timestamp="20200727 10:41:45.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:45.913" endtime="20200727 10:41:45.920"></status>
</kw>
<msg timestamp="20200727 10:41:45.920" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:45.912" endtime="20200727 10:41:45.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:45.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:45.921" endtime="20200727 10:41:45.921"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:45.926" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:45.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:45.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:45.923" endtime="20200727 10:41:45.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:45.940" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:45.939" endtime="20200727 10:41:45.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:45.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:45.940" endtime="20200727 10:41:45.940"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.923" endtime="20200727 10:41:45.941"></status>
</kw>
<msg timestamp="20200727 10:41:45.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:45.922" endtime="20200727 10:41:45.941"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.922" endtime="20200727 10:41:45.941"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.921" endtime="20200727 10:41:45.941"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.912" endtime="20200727 10:41:45.941"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.911" endtime="20200727 10:41:45.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:45.947" level="INFO">Running command 'ozone sh bucket list 30946-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:48.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:48.996" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:45.943" endtime="20200727 10:41:48.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:48.997" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:41:05.818Z",
  "modificationTime" : "2020-07-27T10:41:05.818Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:47.107Z",
  "modificationTime" : "2020-07-27T10:40:47.107Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:41:11.619Z",
  "modificationTime" : "2020-07-27T10:41:11.619Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:41.621Z",
  "modificationTime" : "2020-07-27T10:40:41.621Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:44.270Z",
  "modificationTime" : "2020-07-27T10:40:44.270Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" starttime="20200727 10:41:48.997" endtime="20200727 10:41:48.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:48.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:48.998" endtime="20200727 10:41:48.998"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:45.942" endtime="20200727 10:41:48.998"></status>
</kw>
<msg timestamp="20200727 10:41:48.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:45.942" endtime="20200727 10:41:48.999"></status>
</kw>
<msg timestamp="20200727 10:41:48.999" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:45.942" endtime="20200727 10:41:48.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:48.999" endtime="20200727 10:41:49.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:49.000" endtime="20200727 10:41:49.000"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:45.910" endtime="20200727 10:41:49.000" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:49.006" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:49.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:49.009" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:49.004" endtime="20200727 10:41:49.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:49.010" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:49.009" endtime="20200727 10:41:49.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:49.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:49.010" endtime="20200727 10:41:49.010"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.003" endtime="20200727 10:41:49.011"></status>
</kw>
<msg timestamp="20200727 10:41:49.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:49.003" endtime="20200727 10:41:49.011"></status>
</kw>
<msg timestamp="20200727 10:41:49.011" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:49.003" endtime="20200727 10:41:49.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:49.012" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:49.011" endtime="20200727 10:41:49.012"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:49.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:49.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:49.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:49.014" endtime="20200727 10:41:49.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:49.032" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:49.031" endtime="20200727 10:41:49.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:49.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:49.032" endtime="20200727 10:41:49.032"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.013" endtime="20200727 10:41:49.032"></status>
</kw>
<msg timestamp="20200727 10:41:49.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:49.013" endtime="20200727 10:41:49.033"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.012" endtime="20200727 10:41:49.033"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.012" endtime="20200727 10:41:49.033"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.002" endtime="20200727 10:41:49.033"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.002" endtime="20200727 10:41:49.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:49.039" level="INFO">Running command 'ozone sh bucket info 30946-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:51.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:51.970" level="INFO">${output} = 30946-source bucket1</msg>
<status status="PASS" starttime="20200727 10:41:49.035" endtime="20200727 10:41:51.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:51.971" level="INFO">30946-source bucket1</msg>
<status status="PASS" starttime="20200727 10:41:51.970" endtime="20200727 10:41:51.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:51.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:51.971" endtime="20200727 10:41:51.972"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:49.034" endtime="20200727 10:41:51.972"></status>
</kw>
<msg timestamp="20200727 10:41:51.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:49.034" endtime="20200727 10:41:51.972"></status>
</kw>
<msg timestamp="20200727 10:41:51.973" level="INFO">${result} = 30946-source bucket1</msg>
<status status="PASS" starttime="20200727 10:41:49.033" endtime="20200727 10:41:51.973"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:51.973" endtime="20200727 10:41:51.973"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:49.001" endtime="20200727 10:41:51.973" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:51.979" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:51.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:51.981" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:41:51.977" endtime="20200727 10:41:51.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:51.983" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:41:51.982" endtime="20200727 10:41:51.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:51.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:51.983" endtime="20200727 10:41:51.983"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:51.976" endtime="20200727 10:41:51.984"></status>
</kw>
<msg timestamp="20200727 10:41:51.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:51.976" endtime="20200727 10:41:51.984"></status>
</kw>
<msg timestamp="20200727 10:41:51.984" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:41:51.976" endtime="20200727 10:41:51.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:41:51.985" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:41:51.984" endtime="20200727 10:41:51.985"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:51.990" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:52.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:52.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:51.987" endtime="20200727 10:41:52.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:52.001" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:41:52.001" endtime="20200727 10:41:52.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:52.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:52.002" endtime="20200727 10:41:52.002"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:51.986" endtime="20200727 10:41:52.002"></status>
</kw>
<msg timestamp="20200727 10:41:52.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:51.986" endtime="20200727 10:41:52.003"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:51.985" endtime="20200727 10:41:52.003"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:51.985" endtime="20200727 10:41:52.003"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:51.975" endtime="20200727 10:41:52.003"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:51.975" endtime="20200727 10:41:52.003"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:52.008" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 30946-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:54.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:54.748" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:41:52.005" endtime="20200727 10:41:54.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:54.749" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:41:54.748" endtime="20200727 10:41:54.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:54.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:54.749" endtime="20200727 10:41:54.750"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:52.004" endtime="20200727 10:41:54.750"></status>
</kw>
<msg timestamp="20200727 10:41:54.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:52.004" endtime="20200727 10:41:54.750"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:52.003" endtime="20200727 10:41:54.751"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:54.755" level="INFO">Running command 'ozone sh bucket getacl 30946-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:41:58.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:41:58.130" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 10:41:54.753" endtime="20200727 10:41:58.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:41:58.131" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 10:41:58.131" endtime="20200727 10:41:58.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:41:58.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:41:58.132" endtime="20200727 10:41:58.132"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:54.752" endtime="20200727 10:41:58.132"></status>
</kw>
<msg timestamp="20200727 10:41:58.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:54.752" endtime="20200727 10:41:58.133"></status>
</kw>
<msg timestamp="20200727 10:41:58.133" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 10:41:54.751" endtime="20200727 10:41:58.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:41:58.133" endtime="20200727 10:41:58.133"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:54.751" endtime="20200727 10:41:58.134"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:41:58.140" level="INFO">Running command 'ozone sh bucket getacl 30946-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:01.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:01.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:41:58.136" endtime="20200727 10:42:01.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:01.346" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:01.345" endtime="20200727 10:42:01.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:01.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:01.346" endtime="20200727 10:42:01.347"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:58.136" endtime="20200727 10:42:01.347"></status>
</kw>
<msg timestamp="20200727 10:42:01.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:41:58.135" endtime="20200727 10:42:01.348"></status>
</kw>
<msg timestamp="20200727 10:42:01.348" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 10:41:58.134" endtime="20200727 10:42:01.348"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:01.348" endtime="20200727 10:42:01.348"></status>
</kw>
<status status="PASS" starttime="20200727 10:41:58.134" endtime="20200727 10:42:01.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:01.363" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 30946-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:04.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:04.250" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:01.356" endtime="20200727 10:42:04.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:04.251" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:42:04.250" endtime="20200727 10:42:04.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:04.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:04.252" endtime="20200727 10:42:04.252"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:01.350" endtime="20200727 10:42:04.252"></status>
</kw>
<msg timestamp="20200727 10:42:04.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:01.349" endtime="20200727 10:42:04.253"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:01.349" endtime="20200727 10:42:04.253"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:04.257" level="INFO">Running command 'ozone sh bucket getacl 30946-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:07.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:07.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:04.255" endtime="20200727 10:42:07.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:07.377" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:07.376" endtime="20200727 10:42:07.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:07.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:07.377" endtime="20200727 10:42:07.378"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:04.255" endtime="20200727 10:42:07.378"></status>
</kw>
<msg timestamp="20200727 10:42:07.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:04.254" endtime="20200727 10:42:07.378"></status>
</kw>
<msg timestamp="20200727 10:42:07.379" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 10:42:04.254" endtime="20200727 10:42:07.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:07.379" endtime="20200727 10:42:07.379"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:04.253" endtime="20200727 10:42:07.379"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:07.385" level="INFO">Running command 'ozone sh bucket getacl 30946-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:10.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:10.456" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20200727 10:42:07.382" endtime="20200727 10:42:10.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:10.458" level="INFO">READ</msg>
<status status="PASS" starttime="20200727 10:42:10.457" endtime="20200727 10:42:10.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:10.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:10.458" endtime="20200727 10:42:10.458"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:07.381" endtime="20200727 10:42:10.459"></status>
</kw>
<msg timestamp="20200727 10:42:10.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:07.381" endtime="20200727 10:42:10.459"></status>
</kw>
<msg timestamp="20200727 10:42:10.459" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20200727 10:42:07.380" endtime="20200727 10:42:10.459"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:10.459" endtime="20200727 10:42:10.460"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:07.379" endtime="20200727 10:42:10.460"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:41:51.974" endtime="20200727 10:42:10.460" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:10.466" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:10.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:10.469" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:10.464" endtime="20200727 10:42:10.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:10.469" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:10.469" endtime="20200727 10:42:10.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:10.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:10.470" endtime="20200727 10:42:10.470"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.463" endtime="20200727 10:42:10.470"></status>
</kw>
<msg timestamp="20200727 10:42:10.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:10.463" endtime="20200727 10:42:10.471"></status>
</kw>
<msg timestamp="20200727 10:42:10.471" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:10.463" endtime="20200727 10:42:10.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:10.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:10.471" endtime="20200727 10:42:10.472"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:10.476" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:10.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:10.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:10.473" endtime="20200727 10:42:10.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:10.491" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:10.491" endtime="20200727 10:42:10.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:10.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:10.491" endtime="20200727 10:42:10.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.473" endtime="20200727 10:42:10.492"></status>
</kw>
<msg timestamp="20200727 10:42:10.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:10.473" endtime="20200727 10:42:10.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.472" endtime="20200727 10:42:10.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.472" endtime="20200727 10:42:10.493"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.462" endtime="20200727 10:42:10.493"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.462" endtime="20200727 10:42:10.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:10.497" level="INFO">Running command 'ozone sh bucket link 30946-source/bucket2 30946-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:13.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:13.442" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:10.494" endtime="20200727 10:42:13.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:13.444" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:13.443" endtime="20200727 10:42:13.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:13.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:13.444" endtime="20200727 10:42:13.445"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.494" endtime="20200727 10:42:13.445"></status>
</kw>
<msg timestamp="20200727 10:42:13.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:10.494" endtime="20200727 10:42:13.445"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:10.493" endtime="20200727 10:42:13.445"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:13.448" level="INFO">Running command 'ozone sh bucket create 30946-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:16.348" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:42:16.348" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:13.446" endtime="20200727 10:42:16.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:16.350" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:42:16.349" endtime="20200727 10:42:16.350"></status>
</kw>
<msg timestamp="20200727 10:42:16.350" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:13.445" endtime="20200727 10:42:16.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:16.350" endtime="20200727 10:42:16.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:16.355" level="INFO">Running command 'ozone sh bucket create 30946-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:19.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:19.294" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:16.352" endtime="20200727 10:42:19.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:19.296" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:19.295" endtime="20200727 10:42:19.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:19.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:19.296" endtime="20200727 10:42:19.296"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:16.352" endtime="20200727 10:42:19.297"></status>
</kw>
<msg timestamp="20200727 10:42:19.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:16.351" endtime="20200727 10:42:19.297"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:16.351" endtime="20200727 10:42:19.297"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:19.300" level="INFO">Running command 'ozone sh bucket link 30946-source/bucket1 30946-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:22.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:42:22.096" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:19.298" endtime="20200727 10:42:22.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.097" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:42:22.096" endtime="20200727 10:42:22.097"></status>
</kw>
<msg timestamp="20200727 10:42:22.098" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:19.297" endtime="20200727 10:42:22.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:22.098" endtime="20200727 10:42:22.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:10.461" endtime="20200727 10:42:22.098" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:22.104" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:22.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:22.107" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:22.102" endtime="20200727 10:42:22.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.108" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:22.107" endtime="20200727 10:42:22.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:22.108" endtime="20200727 10:42:22.109"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.101" endtime="20200727 10:42:22.109"></status>
</kw>
<msg timestamp="20200727 10:42:22.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:22.101" endtime="20200727 10:42:22.109"></status>
</kw>
<msg timestamp="20200727 10:42:22.109" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:22.101" endtime="20200727 10:42:22.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:22.110" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:22.110" endtime="20200727 10:42:22.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:22.115" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:22.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:22.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:22.112" endtime="20200727 10:42:22.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.135" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:22.134" endtime="20200727 10:42:22.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:22.135" endtime="20200727 10:42:22.135"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.112" endtime="20200727 10:42:22.135"></status>
</kw>
<msg timestamp="20200727 10:42:22.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:22.111" endtime="20200727 10:42:22.136"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.111" endtime="20200727 10:42:22.136"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.110" endtime="20200727 10:42:22.136"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.100" endtime="20200727 10:42:22.136"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.100" endtime="20200727 10:42:22.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:22.142" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:22.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:22.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:22.139" endtime="20200727 10:42:22.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.145" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:22.145" endtime="20200727 10:42:22.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:22.145" endtime="20200727 10:42:22.146"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.138" endtime="20200727 10:42:22.146"></status>
</kw>
<msg timestamp="20200727 10:42:22.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:22.138" endtime="20200727 10:42:22.146"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.137" endtime="20200727 10:42:22.146"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:22.151" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:22.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:22.152" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:22.148" endtime="20200727 10:42:22.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.154" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:22.153" endtime="20200727 10:42:22.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:22.154" endtime="20200727 10:42:22.155"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.148" endtime="20200727 10:42:22.155"></status>
</kw>
<msg timestamp="20200727 10:42:22.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:22.148" endtime="20200727 10:42:22.155"></status>
</kw>
<msg timestamp="20200727 10:42:22.156" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:22.147" endtime="20200727 10:42:22.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:22.156" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:22.156" endtime="20200727 10:42:22.156"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:22.161" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:22.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:22.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:22.158" endtime="20200727 10:42:22.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.172" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:22.172" endtime="20200727 10:42:22.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:22.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:22.173" endtime="20200727 10:42:22.173"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.158" endtime="20200727 10:42:22.173"></status>
</kw>
<msg timestamp="20200727 10:42:22.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:22.157" endtime="20200727 10:42:22.174"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.157" endtime="20200727 10:42:22.174"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.156" endtime="20200727 10:42:22.174"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.147" endtime="20200727 10:42:22.174"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.146" endtime="20200727 10:42:22.174"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:22.178" level="INFO">Running command 'ozone sh key list 30946-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:25.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:25.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:22.175" endtime="20200727 10:42:25.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.299" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "30946-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-07-27T10:40:33.904Z",
  "modificationTime" : "2020-07-27T10:40:35.618Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20200727 10:42:25.298" endtime="20200727 10:42:25.299"></status>
</kw>
<msg timestamp="20200727 10:42:25.299" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:22.174" endtime="20200727 10:42:25.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:25.299" endtime="20200727 10:42:25.300"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.137" endtime="20200727 10:42:25.300"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:22.136" endtime="20200727 10:42:25.300"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:22.099" endtime="20200727 10:42:25.300" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:25.307" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:25.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:25.309" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:25.304" endtime="20200727 10:42:25.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.310" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:25.309" endtime="20200727 10:42:25.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:25.310" endtime="20200727 10:42:25.311"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.304" endtime="20200727 10:42:25.311"></status>
</kw>
<msg timestamp="20200727 10:42:25.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:25.304" endtime="20200727 10:42:25.311"></status>
</kw>
<msg timestamp="20200727 10:42:25.312" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:25.303" endtime="20200727 10:42:25.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:25.312" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:25.312" endtime="20200727 10:42:25.312"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:25.316" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:25.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:25.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:25.314" endtime="20200727 10:42:25.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.330" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:25.330" endtime="20200727 10:42:25.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:25.331" endtime="20200727 10:42:25.331"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.314" endtime="20200727 10:42:25.331"></status>
</kw>
<msg timestamp="20200727 10:42:25.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:25.313" endtime="20200727 10:42:25.332"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.313" endtime="20200727 10:42:25.332"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.312" endtime="20200727 10:42:25.332"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.302" endtime="20200727 10:42:25.332"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.302" endtime="20200727 10:42:25.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:25.336" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:25.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:25.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:25.334" endtime="20200727 10:42:25.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.341" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:25.340" endtime="20200727 10:42:25.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:25.341" endtime="20200727 10:42:25.341"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.334" endtime="20200727 10:42:25.342"></status>
</kw>
<msg timestamp="20200727 10:42:25.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:25.334" endtime="20200727 10:42:25.342"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.333" endtime="20200727 10:42:25.342"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:25.346" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:25.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:25.349" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:25.344" endtime="20200727 10:42:25.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.350" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:25.349" endtime="20200727 10:42:25.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:25.350" endtime="20200727 10:42:25.350"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.344" endtime="20200727 10:42:25.351"></status>
</kw>
<msg timestamp="20200727 10:42:25.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:25.344" endtime="20200727 10:42:25.351"></status>
</kw>
<msg timestamp="20200727 10:42:25.351" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:25.343" endtime="20200727 10:42:25.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:25.352" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:25.351" endtime="20200727 10:42:25.352"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:25.357" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:25.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:25.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:25.354" endtime="20200727 10:42:25.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.372" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:25.371" endtime="20200727 10:42:25.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:25.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:25.372" endtime="20200727 10:42:25.373"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.353" endtime="20200727 10:42:25.373"></status>
</kw>
<msg timestamp="20200727 10:42:25.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:25.353" endtime="20200727 10:42:25.373"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.352" endtime="20200727 10:42:25.374"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.352" endtime="20200727 10:42:25.374"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.343" endtime="20200727 10:42:25.374"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.342" endtime="20200727 10:42:25.374"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:25.378" level="INFO">Running command 'ozone sh key list 30946-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:28.368" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:42:28.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:25.375" endtime="20200727 10:42:28.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" starttime="20200727 10:42:28.368" endtime="20200727 10:42:28.369"></status>
</kw>
<msg timestamp="20200727 10:42:28.369" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:25.374" endtime="20200727 10:42:28.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:28.370" endtime="20200727 10:42:28.370"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.333" endtime="20200727 10:42:28.370"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:25.332" endtime="20200727 10:42:28.370"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:25.301" endtime="20200727 10:42:28.371" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:28.377" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:28.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:28.379" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:28.375" endtime="20200727 10:42:28.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.380" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:28.379" endtime="20200727 10:42:28.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:28.380" endtime="20200727 10:42:28.381"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.374" endtime="20200727 10:42:28.381"></status>
</kw>
<msg timestamp="20200727 10:42:28.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:28.374" endtime="20200727 10:42:28.381"></status>
</kw>
<msg timestamp="20200727 10:42:28.381" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:28.373" endtime="20200727 10:42:28.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:28.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:28.381" endtime="20200727 10:42:28.382"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:28.386" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:28.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:28.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:28.384" endtime="20200727 10:42:28.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.400" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:28.400" endtime="20200727 10:42:28.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:28.401" endtime="20200727 10:42:28.401"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.383" endtime="20200727 10:42:28.401"></status>
</kw>
<msg timestamp="20200727 10:42:28.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:28.383" endtime="20200727 10:42:28.402"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.383" endtime="20200727 10:42:28.402"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.382" endtime="20200727 10:42:28.402"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.373" endtime="20200727 10:42:28.402"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.372" endtime="20200727 10:42:28.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:28.406" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:28.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:28.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:28.404" endtime="20200727 10:42:28.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.410" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:28.410" endtime="20200727 10:42:28.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:28.411" endtime="20200727 10:42:28.411"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.404" endtime="20200727 10:42:28.411"></status>
</kw>
<msg timestamp="20200727 10:42:28.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:28.404" endtime="20200727 10:42:28.412"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.403" endtime="20200727 10:42:28.412"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:28.417" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:28.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:28.418" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:28.414" endtime="20200727 10:42:28.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.420" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:28.419" endtime="20200727 10:42:28.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:28.420" endtime="20200727 10:42:28.420"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.413" endtime="20200727 10:42:28.421"></status>
</kw>
<msg timestamp="20200727 10:42:28.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:28.413" endtime="20200727 10:42:28.421"></status>
</kw>
<msg timestamp="20200727 10:42:28.421" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:28.413" endtime="20200727 10:42:28.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:28.422" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:28.421" endtime="20200727 10:42:28.422"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:28.426" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:28.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:28.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:28.424" endtime="20200727 10:42:28.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.438" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:28.438" endtime="20200727 10:42:28.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:28.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:28.439" endtime="20200727 10:42:28.439"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.423" endtime="20200727 10:42:28.439"></status>
</kw>
<msg timestamp="20200727 10:42:28.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:28.423" endtime="20200727 10:42:28.440"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.422" endtime="20200727 10:42:28.440"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.422" endtime="20200727 10:42:28.440"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.412" endtime="20200727 10:42:28.440"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.412" endtime="20200727 10:42:28.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:28.444" level="INFO">Running command 'ozone sh bucket info 30946-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:31.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:31.484" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:28.441" endtime="20200727 10:42:31.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:31.485" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:47.107Z",
  "modificationTime" : "2020-07-27T10:40:47.107Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" starttime="20200727 10:42:31.484" endtime="20200727 10:42:31.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:31.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:31.485" endtime="20200727 10:42:31.486"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.441" endtime="20200727 10:42:31.486"></status>
</kw>
<msg timestamp="20200727 10:42:31.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:28.441" endtime="20200727 10:42:31.486"></status>
</kw>
<msg timestamp="20200727 10:42:31.486" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:28.440" endtime="20200727 10:42:31.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:31.487" endtime="20200727 10:42:31.487"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:31.487" endtime="20200727 10:42:31.487"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:31.491" level="INFO">Running command 'ozone sh key list 30946-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:34.242" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:42:34.242" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:31.488" endtime="20200727 10:42:34.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:34.243" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" starttime="20200727 10:42:34.242" endtime="20200727 10:42:34.243"></status>
</kw>
<msg timestamp="20200727 10:42:34.243" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:31.487" endtime="20200727 10:42:34.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:34.244" endtime="20200727 10:42:34.244"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.403" endtime="20200727 10:42:34.244"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:28.402" endtime="20200727 10:42:34.244"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:28.371" endtime="20200727 10:42:34.244" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:34.251" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:34.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:34.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:34.249" endtime="20200727 10:42:34.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:34.254" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:34.254" endtime="20200727 10:42:34.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:34.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:34.255" endtime="20200727 10:42:34.255"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.248" endtime="20200727 10:42:34.256"></status>
</kw>
<msg timestamp="20200727 10:42:34.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:34.247" endtime="20200727 10:42:34.256"></status>
</kw>
<msg timestamp="20200727 10:42:34.256" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:34.247" endtime="20200727 10:42:34.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:34.257" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:34.256" endtime="20200727 10:42:34.257"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:34.260" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:34.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:34.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:34.259" endtime="20200727 10:42:34.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:34.273" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:34.273" endtime="20200727 10:42:34.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:34.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:34.274" endtime="20200727 10:42:34.274"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.258" endtime="20200727 10:42:34.275"></status>
</kw>
<msg timestamp="20200727 10:42:34.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:34.258" endtime="20200727 10:42:34.275"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.257" endtime="20200727 10:42:34.275"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.257" endtime="20200727 10:42:34.275"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.246" endtime="20200727 10:42:34.275"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.246" endtime="20200727 10:42:34.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:34.279" level="INFO">Running command 'ozone sh bucket link 30946-target/loop1 30946-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:37.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:37.161" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:34.277" endtime="20200727 10:42:37.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:37.162" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:37.161" endtime="20200727 10:42:37.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:37.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:37.162" endtime="20200727 10:42:37.163"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.276" endtime="20200727 10:42:37.163"></status>
</kw>
<msg timestamp="20200727 10:42:37.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:34.276" endtime="20200727 10:42:37.163"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:34.275" endtime="20200727 10:42:37.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:37.167" level="INFO">Running command 'ozone sh bucket link 30946-target/loop2 30946-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:40.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:40.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:37.165" endtime="20200727 10:42:40.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:40.140" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:40.139" endtime="20200727 10:42:40.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:40.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:40.140" endtime="20200727 10:42:40.141"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:37.164" endtime="20200727 10:42:40.141"></status>
</kw>
<msg timestamp="20200727 10:42:40.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:37.164" endtime="20200727 10:42:40.141"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:37.163" endtime="20200727 10:42:40.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:40.146" level="INFO">Running command 'ozone sh bucket link 30946-target/loop3 30946-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:43.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:43.011" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:40.143" endtime="20200727 10:42:43.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:43.012" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:43.011" endtime="20200727 10:42:43.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:43.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:43.012" endtime="20200727 10:42:43.013"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:40.143" endtime="20200727 10:42:43.013"></status>
</kw>
<msg timestamp="20200727 10:42:43.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:40.142" endtime="20200727 10:42:43.013"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:40.142" endtime="20200727 10:42:43.013"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:43.018" level="INFO">Running command 'ozone sh key list 30946-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:45.513" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:42:45.513" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:43.014" endtime="20200727 10:42:45.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:45.514" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 10:42:45.513" endtime="20200727 10:42:45.514"></status>
</kw>
<msg timestamp="20200727 10:42:45.515" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:43.013" endtime="20200727 10:42:45.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:45.515" endtime="20200727 10:42:45.515"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:34.245" endtime="20200727 10:42:45.516" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:45.521" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:45.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:45.524" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:45.519" endtime="20200727 10:42:45.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:45.525" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:45.524" endtime="20200727 10:42:45.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:45.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:45.525" endtime="20200727 10:42:45.526"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.519" endtime="20200727 10:42:45.526"></status>
</kw>
<msg timestamp="20200727 10:42:45.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:45.518" endtime="20200727 10:42:45.526"></status>
</kw>
<msg timestamp="20200727 10:42:45.526" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:45.518" endtime="20200727 10:42:45.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:45.527" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:45.526" endtime="20200727 10:42:45.527"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:45.531" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:45.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:45.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:45.529" endtime="20200727 10:42:45.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:45.546" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:45.545" endtime="20200727 10:42:45.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:45.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:45.546" endtime="20200727 10:42:45.547"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.528" endtime="20200727 10:42:45.547"></status>
</kw>
<msg timestamp="20200727 10:42:45.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:45.528" endtime="20200727 10:42:45.548"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.527" endtime="20200727 10:42:45.548"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.527" endtime="20200727 10:42:45.548"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.517" endtime="20200727 10:42:45.548"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.517" endtime="20200727 10:42:45.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:45.552" level="INFO">Running command 'ozone sh bucket link 30946-source/bucket1 30946-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:48.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:48.293" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:45.549" endtime="20200727 10:42:48.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:48.294" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:48.294" endtime="20200727 10:42:48.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:48.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:48.294" endtime="20200727 10:42:48.295"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.549" endtime="20200727 10:42:48.295"></status>
</kw>
<msg timestamp="20200727 10:42:48.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:45.549" endtime="20200727 10:42:48.295"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:45.548" endtime="20200727 10:42:48.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:48.299" level="INFO">Running command 'ozone sh key put 30946-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:53.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:53.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:48.297" endtime="20200727 10:42:53.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:53.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:53.065" endtime="20200727 10:42:53.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:53.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:53.065" endtime="20200727 10:42:53.066"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:48.297" endtime="20200727 10:42:53.066"></status>
</kw>
<msg timestamp="20200727 10:42:53.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:48.297" endtime="20200727 10:42:53.066"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:48.296" endtime="20200727 10:42:53.067"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:42:53.068" level="INFO">${postfix} = 40107</msg>
<status status="PASS" starttime="20200727 10:42:53.068" endtime="20200727 10:42:53.069"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:42:53.069" level="INFO">${tmpfile} = /tmp/tempkey-40107</msg>
<status status="PASS" starttime="20200727 10:42:53.069" endtime="20200727 10:42:53.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:53.073" level="INFO">Running command 'ozone sh key get -f 30946-target/link1/key3 /tmp/tempkey-40107 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:57.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:57.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:53.070" endtime="20200727 10:42:57.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.442" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:42:57.440" endtime="20200727 10:42:57.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:57.442" endtime="20200727 10:42:57.443"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:53.070" endtime="20200727 10:42:57.443"></status>
</kw>
<msg timestamp="20200727 10:42:57.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:53.070" endtime="20200727 10:42:57.443"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:53.069" endtime="20200727 10:42:57.444"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:42:57.446" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-40107 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:57.449" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:42:57.444" endtime="20200727 10:42:57.449"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:57.453" level="INFO">Running command 'rm -f /tmp/tempkey-40107 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:57.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:57.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:57.451" endtime="20200727 10:42:57.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.457" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:57.456" endtime="20200727 10:42:57.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:57.457" endtime="20200727 10:42:57.457"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.450" endtime="20200727 10:42:57.458"></status>
</kw>
<msg timestamp="20200727 10:42:57.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:57.450" endtime="20200727 10:42:57.458"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.449" endtime="20200727 10:42:57.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:42:57.459" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:42:57.458" endtime="20200727 10:42:57.459"></status>
</kw>
<msg timestamp="20200727 10:42:57.459" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:42:53.067" endtime="20200727 10:42:57.459"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:42:57.459" endtime="20200727 10:42:57.459"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:53.067" endtime="20200727 10:42:57.460"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:45.516" endtime="20200727 10:42:57.460" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:57.465" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:57.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:57.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:42:57.464" endtime="20200727 10:42:57.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.469" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:42:57.468" endtime="20200727 10:42:57.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:57.469" endtime="20200727 10:42:57.470"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.463" endtime="20200727 10:42:57.470"></status>
</kw>
<msg timestamp="20200727 10:42:57.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:57.463" endtime="20200727 10:42:57.470"></status>
</kw>
<msg timestamp="20200727 10:42:57.470" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:42:57.462" endtime="20200727 10:42:57.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:42:57.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:42:57.470" endtime="20200727 10:42:57.471"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:57.477" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:42:57.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:42:57.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:42:57.473" endtime="20200727 10:42:57.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.491" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:42:57.490" endtime="20200727 10:42:57.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:42:57.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:42:57.491" endtime="20200727 10:42:57.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.473" endtime="20200727 10:42:57.492"></status>
</kw>
<msg timestamp="20200727 10:42:57.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:57.472" endtime="20200727 10:42:57.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.472" endtime="20200727 10:42:57.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.471" endtime="20200727 10:42:57.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.462" endtime="20200727 10:42:57.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.461" endtime="20200727 10:42:57.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:42:57.497" level="INFO">Running command 'ozone sh bucket delete 30946-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:00.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:00.357" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:42:57.494" endtime="20200727 10:43:00.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:00.359" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:00.358" endtime="20200727 10:43:00.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:00.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:00.359" endtime="20200727 10:43:00.359"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.494" endtime="20200727 10:43:00.360"></status>
</kw>
<msg timestamp="20200727 10:43:00.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:42:57.493" endtime="20200727 10:43:00.360"></status>
</kw>
<status status="PASS" starttime="20200727 10:42:57.493" endtime="20200727 10:43:00.360"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:00.364" level="INFO">Running command 'ozone sh bucket list 30946-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:03.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:03.510" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:00.362" endtime="20200727 10:43:03.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:03.512" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:42:19.243Z",
  "modificationTime" : "2020-07-27T10:42:19.243Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:41:05.818Z",
  "modificationTime" : "2020-07-27T10:41:05.818Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:47.107Z",
  "modificationTime" : "2020-07-27T10:40:47.107Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:42:13.295Z",
  "modificationTime" : "2020-07-27T10:42:13.295Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:42:48.214Z",
  "modificationTime" : "2020-07-27T10:42:48.214Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:42:42.957Z",
  "modificationTime" : "2020-07-27T10:42:42.957Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:42:37.089Z",
  "modificationTime" : "2020-07-27T10:42:37.089Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:42:39.995Z",
  "modificationTime" : "2020-07-27T10:42:39.995Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:41.621Z",
  "modificationTime" : "2020-07-27T10:40:41.621Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "30946-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:40:44.270Z",
  "modificationTime" : "2020-07-27T10:40:44.270Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "30946-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" starttime="20200727 10:43:03.511" endtime="20200727 10:43:03.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:03.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:03.512" endtime="20200727 10:43:03.512"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:00.361" endtime="20200727 10:43:03.513"></status>
</kw>
<msg timestamp="20200727 10:43:03.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:00.361" endtime="20200727 10:43:03.513"></status>
</kw>
<msg timestamp="20200727 10:43:03.513" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:00.360" endtime="20200727 10:43:03.513"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:03.513" endtime="20200727 10:43:03.514"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:03.519" level="INFO">Running command 'ozone sh key list 30946-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:06.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:06.586" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20200727 10:43:03.515" endtime="20200727 10:43:06.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.587" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20200727 10:43:06.586" endtime="20200727 10:43:06.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:06.587" endtime="20200727 10:43:06.588"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:03.515" endtime="20200727 10:43:06.588"></status>
</kw>
<msg timestamp="20200727 10:43:06.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:03.514" endtime="20200727 10:43:06.588"></status>
</kw>
<msg timestamp="20200727 10:43:06.588" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20200727 10:43:03.514" endtime="20200727 10:43:06.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:06.589" endtime="20200727 10:43:06.589"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:42:57.461" endtime="20200727 10:43:06.589" critical="yes"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20200727 10:40:22.230" endtime="20200727 10:43:06.592"></status>
</suite>
<suite id="s1-s3" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 10:43:06.606" level="INFO">${random} = 75312</msg>
<status status="PASS" starttime="20200727 10:43:06.605" endtime="20200727 10:43:06.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.606" level="INFO">${prefix} = 75312</msg>
<status status="PASS" starttime="20200727 10:43:06.606" endtime="20200727 10:43:06.606"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.605" endtime="20200727 10:43:06.607"></status>
</kw>
<test id="s1-s3-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:06.612" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:06.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:06.615" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:43:06.609" endtime="20200727 10:43:06.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.616" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:43:06.615" endtime="20200727 10:43:06.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:06.616" endtime="20200727 10:43:06.617"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.609" endtime="20200727 10:43:06.617"></status>
</kw>
<msg timestamp="20200727 10:43:06.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:06.608" endtime="20200727 10:43:06.617"></status>
</kw>
<msg timestamp="20200727 10:43:06.617" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:43:06.608" endtime="20200727 10:43:06.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:43:06.619" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:43:06.618" endtime="20200727 10:43:06.619"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:06.623" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:06.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:06.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:43:06.621" endtime="20200727 10:43:06.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.641" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:43:06.641" endtime="20200727 10:43:06.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:06.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:06.642" endtime="20200727 10:43:06.642"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.620" endtime="20200727 10:43:06.643"></status>
</kw>
<msg timestamp="20200727 10:43:06.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:06.620" endtime="20200727 10:43:06.643"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.619" endtime="20200727 10:43:06.643"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.619" endtime="20200727 10:43:06.643"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.608" endtime="20200727 10:43:06.643"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.607" endtime="20200727 10:43:06.643"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:06.647" level="INFO">Running command 'ozone sh volume info o3://om:9862/75312-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:09.295" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:43:09.295" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:06.645" endtime="20200727 10:43:09.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:09.296" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 75312-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 10:43:09.296" endtime="20200727 10:43:09.296"></status>
</kw>
<msg timestamp="20200727 10:43:09.297" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:06.644" endtime="20200727 10:43:09.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:09.297" endtime="20200727 10:43:09.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:09.301" level="INFO">Running command 'ozone sh volume create o3://om:9862/75312-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:12.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:12.308" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:09.299" endtime="20200727 10:43:12.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:12.309" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:12.309" endtime="20200727 10:43:12.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:12.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:12.310" endtime="20200727 10:43:12.310"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:09.298" endtime="20200727 10:43:12.311"></status>
</kw>
<msg timestamp="20200727 10:43:12.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:09.298" endtime="20200727 10:43:12.311"></status>
</kw>
<msg timestamp="20200727 10:43:12.311" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:09.297" endtime="20200727 10:43:12.311"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:12.311" endtime="20200727 10:43:12.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:12.317" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="75312-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:15.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:15.550" level="INFO">${output} = {
  "metadata": {},
  "name": "75312-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:43:12.256Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 10:43:12.313" endtime="20200727 10:43:15.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:15.551" level="INFO">{
  "metadata": {},
  "name": "75312-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:43:12.256Z",
  "modificationTime": "2020-07-27T10:43:12.256Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:43:15.550" endtime="20200727 10:43:15.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:15.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:15.551" endtime="20200727 10:43:15.552"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:12.313" endtime="20200727 10:43:15.552"></status>
</kw>
<msg timestamp="20200727 10:43:15.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:12.312" endtime="20200727 10:43:15.552"></status>
</kw>
<msg timestamp="20200727 10:43:15.552" level="INFO">${result} = {
  "metadata": {},
  "name": "75312-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:43:12.256Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 10:43:12.312" endtime="20200727 10:43:15.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:15.552" endtime="20200727 10:43:15.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:15.558" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="75312-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:18.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:18.678" level="INFO">${output} = {
  "metadata": {},
  "name": "75312-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:43:12.256Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 10:43:15.554" endtime="20200727 10:43:18.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:18.680" level="INFO">{
  "metadata": {},
  "name": "75312-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:43:12.256Z",
  "modificationTime": "2020-07-27T10:43:12.256Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:43:18.678" endtime="20200727 10:43:18.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:18.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:18.680" endtime="20200727 10:43:18.680"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:15.554" endtime="20200727 10:43:18.681"></status>
</kw>
<msg timestamp="20200727 10:43:18.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:15.553" endtime="20200727 10:43:18.681"></status>
</kw>
<msg timestamp="20200727 10:43:18.681" level="INFO">${result} = {
  "metadata": {},
  "name": "75312-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:43:12.256Z",
  "modificationTime": "2020...</msg>
<status status="PASS" starttime="20200727 10:43:15.553" endtime="20200727 10:43:18.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:18.683" endtime="20200727 10:43:18.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:18.694" level="INFO">Running command 'ozone sh volume update o3://om:9862/75312-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:21.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:21.754" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:18.688" endtime="20200727 10:43:21.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:21.756" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "75312-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-07-27T10:43:12.256Z",
  "modificationTime" : "2020-07-27T10:43:21.395Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 10:43:21.755" endtime="20200727 10:43:21.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:21.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:21.756" endtime="20200727 10:43:21.756"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:18.688" endtime="20200727 10:43:21.757"></status>
</kw>
<msg timestamp="20200727 10:43:21.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:18.686" endtime="20200727 10:43:21.757"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:18.685" endtime="20200727 10:43:21.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:21.762" level="INFO">Running command 'ozone sh volume info o3://om:9862/75312-rpcwoport | jq -r '. | select(.name=="75312-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:24.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:24.787" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:43:21.759" endtime="20200727 10:43:24.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:24.788" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 10:43:24.787" endtime="20200727 10:43:24.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:24.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:24.788" endtime="20200727 10:43:24.789"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:21.758" endtime="20200727 10:43:24.789"></status>
</kw>
<msg timestamp="20200727 10:43:24.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:21.758" endtime="20200727 10:43:24.789"></status>
</kw>
<msg timestamp="20200727 10:43:24.789" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:43:21.757" endtime="20200727 10:43:24.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:24.789" endtime="20200727 10:43:24.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:24.794" level="INFO">Running command 'ozone sh bucket create o3://om:9862/75312-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:27.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:27.710" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:24.792" endtime="20200727 10:43:27.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:27.711" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:27.711" endtime="20200727 10:43:27.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:27.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:27.712" endtime="20200727 10:43:27.712"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:24.791" endtime="20200727 10:43:27.713"></status>
</kw>
<msg timestamp="20200727 10:43:27.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:24.791" endtime="20200727 10:43:27.713"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:24.790" endtime="20200727 10:43:27.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:27.717" level="INFO">Running command 'ozone sh bucket info o3://om:9862/75312-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:30.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:30.950" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 10:43:27.715" endtime="20200727 10:43:30.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:30.951" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 10:43:30.951" endtime="20200727 10:43:30.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:30.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:30.952" endtime="20200727 10:43:30.952"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:27.714" endtime="20200727 10:43:30.953"></status>
</kw>
<msg timestamp="20200727 10:43:30.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:27.714" endtime="20200727 10:43:30.953"></status>
</kw>
<msg timestamp="20200727 10:43:30.953" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 10:43:27.713" endtime="20200727 10:43:30.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:30.953" endtime="20200727 10:43:30.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:30.957" level="INFO">Running command 'ozone sh bucket list o3://om:9862/75312-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:34.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:34.180" level="INFO">${output} = 75312-rpcwoport</msg>
<status status="PASS" starttime="20200727 10:43:30.955" endtime="20200727 10:43:34.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:34.181" level="INFO">75312-rpcwoport</msg>
<status status="PASS" starttime="20200727 10:43:34.180" endtime="20200727 10:43:34.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:34.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:34.181" endtime="20200727 10:43:34.182"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:30.955" endtime="20200727 10:43:34.182"></status>
</kw>
<msg timestamp="20200727 10:43:34.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:30.955" endtime="20200727 10:43:34.182"></status>
</kw>
<msg timestamp="20200727 10:43:34.182" level="INFO">${result} = 75312-rpcwoport</msg>
<status status="PASS" starttime="20200727 10:43:30.954" endtime="20200727 10:43:34.182"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:34.182" endtime="20200727 10:43:34.183"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:34.189" level="INFO">Running command 'ozone sh key put o3://om:9862/75312-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:38.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:38.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:34.185" endtime="20200727 10:43:38.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:38.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:38.990" endtime="20200727 10:43:38.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:38.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:38.991" endtime="20200727 10:43:38.992"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:34.185" endtime="20200727 10:43:38.993"></status>
</kw>
<msg timestamp="20200727 10:43:38.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:34.185" endtime="20200727 10:43:38.993"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:34.184" endtime="20200727 10:43:38.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:38.997" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:38.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:38.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:43:38.995" endtime="20200727 10:43:38.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:39.000" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:43:39.000" endtime="20200727 10:43:39.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:39.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:39.001" endtime="20200727 10:43:39.001"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:38.994" endtime="20200727 10:43:39.002"></status>
</kw>
<msg timestamp="20200727 10:43:39.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:38.994" endtime="20200727 10:43:39.002"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:38.993" endtime="20200727 10:43:39.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:39.006" level="INFO">Running command 'ozone sh key get o3://om:9862/75312-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:43.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:43.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:39.004" endtime="20200727 10:43:43.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:43.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:43.592" endtime="20200727 10:43:43.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:43.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:43.593" endtime="20200727 10:43:43.593"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:39.003" endtime="20200727 10:43:43.593"></status>
</kw>
<msg timestamp="20200727 10:43:43.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:39.003" endtime="20200727 10:43:43.594"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:39.002" endtime="20200727 10:43:43.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:43.598" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:43.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:43.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:43:43.595" endtime="20200727 10:43:43.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:43.601" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:43:43.601" endtime="20200727 10:43:43.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:43.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:43.602" endtime="20200727 10:43:43.602"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:43.595" endtime="20200727 10:43:43.602"></status>
</kw>
<msg timestamp="20200727 10:43:43.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:43.595" endtime="20200727 10:43:43.603"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:43.594" endtime="20200727 10:43:43.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:43.606" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/75312-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:48.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:48.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:43.604" endtime="20200727 10:43:48.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:48.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:48.340" endtime="20200727 10:43:48.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:48.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:48.341" endtime="20200727 10:43:48.342"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:43.604" endtime="20200727 10:43:48.342"></status>
</kw>
<msg timestamp="20200727 10:43:48.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:43.604" endtime="20200727 10:43:48.342"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:43.603" endtime="20200727 10:43:48.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:48.346" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:48.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:48.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:43:48.344" endtime="20200727 10:43:48.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:48.350" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:43:48.349" endtime="20200727 10:43:48.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:48.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:48.350" endtime="20200727 10:43:48.351"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:48.343" endtime="20200727 10:43:48.351"></status>
</kw>
<msg timestamp="20200727 10:43:48.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:48.343" endtime="20200727 10:43:48.351"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:48.343" endtime="20200727 10:43:48.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:48.355" level="INFO">Running command 'ozone sh key get o3://om:9862/75312-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:52.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:52.686" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:48.353" endtime="20200727 10:43:52.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:52.687" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:52.686" endtime="20200727 10:43:52.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:52.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:52.687" endtime="20200727 10:43:52.688"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:48.352" endtime="20200727 10:43:52.688"></status>
</kw>
<msg timestamp="20200727 10:43:52.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:48.352" endtime="20200727 10:43:52.689"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:48.351" endtime="20200727 10:43:52.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:52.692" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:52.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:52.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:43:52.690" endtime="20200727 10:43:52.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:52.697" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:43:52.696" endtime="20200727 10:43:52.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:52.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:52.699" endtime="20200727 10:43:52.699"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:52.690" endtime="20200727 10:43:52.700"></status>
</kw>
<msg timestamp="20200727 10:43:52.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:52.689" endtime="20200727 10:43:52.700"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:52.689" endtime="20200727 10:43:52.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:52.705" level="INFO">Running command 'ozone sh key info o3://om:9862/75312-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:55.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:55.834" level="INFO">${output} = {
  "volumeName": "75312-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:43:46.371Z",
  "modificationTime": "2020-07-27T10:43:47.834Z",...</msg>
<status status="PASS" starttime="20200727 10:43:52.702" endtime="20200727 10:43:55.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:55.836" level="INFO">{
  "volumeName": "75312-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:43:46.371Z",
  "modificationTime": "2020-07-27T10:43:47.834Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585404505653380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:43:55.834" endtime="20200727 10:43:55.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:55.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:55.836" endtime="20200727 10:43:55.837"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:52.701" endtime="20200727 10:43:55.837"></status>
</kw>
<msg timestamp="20200727 10:43:55.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:52.701" endtime="20200727 10:43:55.837"></status>
</kw>
<msg timestamp="20200727 10:43:55.837" level="INFO">${result} = {
  "volumeName": "75312-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:43:46.371Z",
  "modificationTime": "2020-07-27T10:43:47.834Z",...</msg>
<status status="PASS" starttime="20200727 10:43:52.700" endtime="20200727 10:43:55.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:43:55.837" endtime="20200727 10:43:55.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:55.841" level="INFO">Running command 'ozone sh key delete o3://om:9862/75312-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:43:58.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:43:58.738" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:55.839" endtime="20200727 10:43:58.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:43:58.739" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:43:58.739" endtime="20200727 10:43:58.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:43:58.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:43:58.740" endtime="20200727 10:43:58.740"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:55.839" endtime="20200727 10:43:58.741"></status>
</kw>
<msg timestamp="20200727 10:43:58.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:55.838" endtime="20200727 10:43:58.741"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:55.838" endtime="20200727 10:43:58.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:43:58.746" level="INFO">Running command 'ozone sh key cp o3://om:9862/75312-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:03.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:03.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:43:58.743" endtime="20200727 10:44:03.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:03.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:03.879" endtime="20200727 10:44:03.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:03.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:03.880" endtime="20200727 10:44:03.881"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:58.742" endtime="20200727 10:44:03.881"></status>
</kw>
<msg timestamp="20200727 10:44:03.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:43:58.742" endtime="20200727 10:44:03.881"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:58.741" endtime="20200727 10:44:03.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:03.885" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:03.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:03.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:44:03.883" endtime="20200727 10:44:03.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:03.889" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:44:03.888" endtime="20200727 10:44:03.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:03.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:03.889" endtime="20200727 10:44:03.890"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:03.883" endtime="20200727 10:44:03.890"></status>
</kw>
<msg timestamp="20200727 10:44:03.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:03.882" endtime="20200727 10:44:03.890"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:03.882" endtime="20200727 10:44:03.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:03.895" level="INFO">Running command 'ozone sh key get o3://om:9862/75312-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:08.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:08.311" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:03.892" endtime="20200727 10:44:08.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:08.312" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:08.311" endtime="20200727 10:44:08.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:08.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:08.312" endtime="20200727 10:44:08.313"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:03.891" endtime="20200727 10:44:08.313"></status>
</kw>
<msg timestamp="20200727 10:44:08.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:03.891" endtime="20200727 10:44:08.313"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:03.890" endtime="20200727 10:44:08.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:08.317" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:08.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:08.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:44:08.315" endtime="20200727 10:44:08.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:08.321" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:44:08.320" endtime="20200727 10:44:08.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:08.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:08.321" endtime="20200727 10:44:08.321"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:08.314" endtime="20200727 10:44:08.322"></status>
</kw>
<msg timestamp="20200727 10:44:08.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:08.314" endtime="20200727 10:44:08.322"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:08.314" endtime="20200727 10:44:08.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:08.326" level="INFO">Running command 'ozone sh key delete o3://om:9862/75312-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:11.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:11.153" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:08.324" endtime="20200727 10:44:11.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:11.154" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:11.153" endtime="20200727 10:44:11.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:11.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:11.154" endtime="20200727 10:44:11.155"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:08.323" endtime="20200727 10:44:11.155"></status>
</kw>
<msg timestamp="20200727 10:44:11.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:08.323" endtime="20200727 10:44:11.155"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:08.322" endtime="20200727 10:44:11.155"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:11.158" level="INFO">Running command 'ozone sh key get o3://om:9862/75312-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:14.099" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:44:14.099" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:11.156" endtime="20200727 10:44:14.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:14.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:44:14.100" endtime="20200727 10:44:14.100"></status>
</kw>
<msg timestamp="20200727 10:44:14.101" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:11.156" endtime="20200727 10:44:14.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:14.101" endtime="20200727 10:44:14.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:14.106" level="INFO">Running command 'ozone sh key get --force o3://om:9862/75312-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:18.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:18.701" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:14.103" endtime="20200727 10:44:18.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:18.702" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:18.701" endtime="20200727 10:44:18.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:18.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:18.702" endtime="20200727 10:44:18.703"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:14.103" endtime="20200727 10:44:18.703"></status>
</kw>
<msg timestamp="20200727 10:44:18.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:14.102" endtime="20200727 10:44:18.703"></status>
</kw>
<msg timestamp="20200727 10:44:18.703" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:14.102" endtime="20200727 10:44:18.703"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:18.703" endtime="20200727 10:44:18.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:18.708" level="INFO">Running command 'ozone sh key info o3://om:9862/75312-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:21.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:21.751" level="INFO">${output} = {
  "volumeName": "75312-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:43:37.032Z",
  "modificationTime": "2020-07-27T10:43:38.551Z",
  "re...</msg>
<status status="PASS" starttime="20200727 10:44:18.706" endtime="20200727 10:44:21.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:21.752" level="INFO">{
  "volumeName": "75312-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:43:37.032Z",
  "modificationTime": "2020-07-27T10:43:38.551Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585403893481600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:44:21.751" endtime="20200727 10:44:21.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:21.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:21.752" endtime="20200727 10:44:21.753"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:18.705" endtime="20200727 10:44:21.753"></status>
</kw>
<msg timestamp="20200727 10:44:21.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:18.705" endtime="20200727 10:44:21.753"></status>
</kw>
<msg timestamp="20200727 10:44:21.753" level="INFO">${result} = {
  "volumeName": "75312-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:43:37.032Z",
  "modificationTime": "2020-07-27T10:43:38.551Z",
  "re...</msg>
<status status="PASS" starttime="20200727 10:44:18.704" endtime="20200727 10:44:21.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:21.753" endtime="20200727 10:44:21.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:21.758" level="INFO">Running command 'ozone sh key list o3://om:9862/75312-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:24.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:24.840" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:44:21.756" endtime="20200727 10:44:24.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:24.841" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:44:24.841" endtime="20200727 10:44:24.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:24.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:24.842" endtime="20200727 10:44:24.842"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:21.755" endtime="20200727 10:44:24.842"></status>
</kw>
<msg timestamp="20200727 10:44:24.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:21.755" endtime="20200727 10:44:24.843"></status>
</kw>
<msg timestamp="20200727 10:44:24.843" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 10:44:21.754" endtime="20200727 10:44:24.843"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:24.843" endtime="20200727 10:44:24.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:24.847" level="INFO">Running command 'ozone sh key rename o3://om:9862/75312-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:27.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:27.700" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:24.845" endtime="20200727 10:44:27.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:27.701" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:27.701" endtime="20200727 10:44:27.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:27.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:27.702" endtime="20200727 10:44:27.702"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:24.844" endtime="20200727 10:44:27.703"></status>
</kw>
<msg timestamp="20200727 10:44:27.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:24.844" endtime="20200727 10:44:27.703"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:24.844" endtime="20200727 10:44:27.703"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:27.706" level="INFO">Running command 'ozone sh key list o3://om:9862/75312-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:30.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:30.773" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 10:44:27.704" endtime="20200727 10:44:30.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:30.774" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 10:44:30.773" endtime="20200727 10:44:30.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:30.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:30.774" endtime="20200727 10:44:30.775"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:27.704" endtime="20200727 10:44:30.775"></status>
</kw>
<msg timestamp="20200727 10:44:30.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:27.704" endtime="20200727 10:44:30.775"></status>
</kw>
<msg timestamp="20200727 10:44:30.775" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 10:44:27.703" endtime="20200727 10:44:30.775"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:30.776" endtime="20200727 10:44:30.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:30.781" level="INFO">Running command 'ozone sh key delete o3://om:9862/75312-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:33.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:33.602" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:30.778" endtime="20200727 10:44:33.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:33.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:33.603" endtime="20200727 10:44:33.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:33.604" endtime="20200727 10:44:33.605"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:30.778" endtime="20200727 10:44:33.605"></status>
</kw>
<msg timestamp="20200727 10:44:33.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:30.777" endtime="20200727 10:44:33.605"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:30.776" endtime="20200727 10:44:33.606"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:34.184" endtime="20200727 10:44:33.606"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:34.183" endtime="20200727 10:44:33.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:33.611" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/75312-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:36.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:36.636" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:33.607" endtime="20200727 10:44:36.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:36.637" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:36.636" endtime="20200727 10:44:36.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:36.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:36.637" endtime="20200727 10:44:36.638"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:33.607" endtime="20200727 10:44:36.638"></status>
</kw>
<msg timestamp="20200727 10:44:36.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:33.607" endtime="20200727 10:44:36.638"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:33.606" endtime="20200727 10:44:36.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:36.643" level="INFO">Running command 'ozone sh volume delete o3://om:9862/75312-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:39.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:39.540" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:36.640" endtime="20200727 10:44:39.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:39.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 75312-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200727 10:44:39.541" endtime="20200727 10:44:39.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:39.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:39.542" endtime="20200727 10:44:39.542"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:36.640" endtime="20200727 10:44:39.543"></status>
</kw>
<msg timestamp="20200727 10:44:39.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:36.639" endtime="20200727 10:44:39.543"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:36.639" endtime="20200727 10:44:39.543"></status>
</kw>
<status status="PASS" starttime="20200727 10:43:06.643" endtime="20200727 10:44:39.543"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:43:06.607" endtime="20200727 10:44:39.543" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:39.549" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:39.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:39.552" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:44:39.547" endtime="20200727 10:44:39.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:39.553" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:44:39.552" endtime="20200727 10:44:39.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:39.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:39.554" endtime="20200727 10:44:39.554"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.547" endtime="20200727 10:44:39.554"></status>
</kw>
<msg timestamp="20200727 10:44:39.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:39.546" endtime="20200727 10:44:39.555"></status>
</kw>
<msg timestamp="20200727 10:44:39.555" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:44:39.546" endtime="20200727 10:44:39.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:44:39.555" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:44:39.555" endtime="20200727 10:44:39.555"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:39.560" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:39.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:39.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:44:39.557" endtime="20200727 10:44:39.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:39.577" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:44:39.576" endtime="20200727 10:44:39.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:39.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:39.577" endtime="20200727 10:44:39.578"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.557" endtime="20200727 10:44:39.578"></status>
</kw>
<msg timestamp="20200727 10:44:39.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:39.556" endtime="20200727 10:44:39.578"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.556" endtime="20200727 10:44:39.578"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.556" endtime="20200727 10:44:39.578"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.545" endtime="20200727 10:44:39.578"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.545" endtime="20200727 10:44:39.579"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:39.583" level="INFO">Running command 'ozone sh volume create o3://om:9862/75312-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:42.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:42.279" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:39.581" endtime="20200727 10:44:42.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:42.280" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:44:42.279" endtime="20200727 10:44:42.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:42.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:42.280" endtime="20200727 10:44:42.281"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.580" endtime="20200727 10:44:42.281"></status>
</kw>
<msg timestamp="20200727 10:44:42.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:39.580" endtime="20200727 10:44:42.281"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.579" endtime="20200727 10:44:42.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:42.286" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75312-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:45.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:45.111" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:42.283" endtime="20200727 10:44:45.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:45.112" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:44:45.112" endtime="20200727 10:44:45.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:45.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:45.112" endtime="20200727 10:44:45.113"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:42.282" endtime="20200727 10:44:45.113"></status>
</kw>
<msg timestamp="20200727 10:44:45.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:42.282" endtime="20200727 10:44:45.113"></status>
</kw>
<msg timestamp="20200727 10:44:45.114" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:42.282" endtime="20200727 10:44:45.114"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:45.114" endtime="20200727 10:44:45.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:45.120" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/75312-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:47.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:47.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:45.117" endtime="20200727 10:44:47.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:47.770" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 10:44:47.769" endtime="20200727 10:44:47.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:47.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:47.770" endtime="20200727 10:44:47.771"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:45.116" endtime="20200727 10:44:47.771"></status>
</kw>
<msg timestamp="20200727 10:44:47.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:45.116" endtime="20200727 10:44:47.771"></status>
</kw>
<msg timestamp="20200727 10:44:47.772" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:45.115" endtime="20200727 10:44:47.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:47.776" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75312-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:50.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:50.802" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:47.773" endtime="20200727 10:44:50.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:50.803" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:44:50.802" endtime="20200727 10:44:50.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:50.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:50.803" endtime="20200727 10:44:50.804"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:47.772" endtime="20200727 10:44:50.804"></status>
</kw>
<msg timestamp="20200727 10:44:50.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:47.772" endtime="20200727 10:44:50.804"></status>
</kw>
<msg timestamp="20200727 10:44:50.804" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:47.772" endtime="20200727 10:44:50.804"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:50.804" endtime="20200727 10:44:50.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:50.809" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/75312-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:53.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:53.600" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:50.807" endtime="20200727 10:44:53.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:53.601" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:44:53.600" endtime="20200727 10:44:53.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:53.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:53.601" endtime="20200727 10:44:53.602"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:50.806" endtime="20200727 10:44:53.602"></status>
</kw>
<msg timestamp="20200727 10:44:53.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:50.806" endtime="20200727 10:44:53.602"></status>
</kw>
<msg timestamp="20200727 10:44:53.603" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:50.805" endtime="20200727 10:44:53.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:53.606" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75312-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:56.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:56.542" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:53.604" endtime="20200727 10:44:56.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:56.543" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:44:56.543" endtime="20200727 10:44:56.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:56.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:56.543" endtime="20200727 10:44:56.544"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:53.604" endtime="20200727 10:44:56.544"></status>
</kw>
<msg timestamp="20200727 10:44:56.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:53.603" endtime="20200727 10:44:56.545"></status>
</kw>
<msg timestamp="20200727 10:44:56.545" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:53.603" endtime="20200727 10:44:56.545"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:44:56.545" endtime="20200727 10:44:56.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:56.550" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/75312-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:44:59.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:44:59.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:56.548" endtime="20200727 10:44:59.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:44:59.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:44:59.472" endtime="20200727 10:44:59.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:44:59.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:44:59.473" endtime="20200727 10:44:59.474"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:56.547" endtime="20200727 10:44:59.474"></status>
</kw>
<msg timestamp="20200727 10:44:59.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:56.547" endtime="20200727 10:44:59.474"></status>
</kw>
<msg timestamp="20200727 10:44:59.474" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:56.546" endtime="20200727 10:44:59.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:44:59.478" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75312-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:02.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:02.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:59.476" endtime="20200727 10:45:02.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:02.530" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:02.530" endtime="20200727 10:45:02.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:02.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:02.531" endtime="20200727 10:45:02.531"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:59.475" endtime="20200727 10:45:02.531"></status>
</kw>
<msg timestamp="20200727 10:45:02.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:44:59.475" endtime="20200727 10:45:02.532"></status>
</kw>
<msg timestamp="20200727 10:45:02.532" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:44:59.474" endtime="20200727 10:45:02.532"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:02.532" endtime="20200727 10:45:02.532"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:02.533" endtime="20200727 10:45:02.533"></status>
</kw>
<status status="PASS" starttime="20200727 10:44:39.579" endtime="20200727 10:45:02.534"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:44:39.544" endtime="20200727 10:45:02.534" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:02.540" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:02.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:02.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:45:02.537" endtime="20200727 10:45:02.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:02.544" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:45:02.543" endtime="20200727 10:45:02.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:02.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:02.544" endtime="20200727 10:45:02.545"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.537" endtime="20200727 10:45:02.545"></status>
</kw>
<msg timestamp="20200727 10:45:02.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:02.537" endtime="20200727 10:45:02.545"></status>
</kw>
<msg timestamp="20200727 10:45:02.545" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:45:02.536" endtime="20200727 10:45:02.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:45:02.546" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:45:02.546" endtime="20200727 10:45:02.546"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:02.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:02.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:02.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:45:02.548" endtime="20200727 10:45:02.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:02.569" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:45:02.568" endtime="20200727 10:45:02.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:02.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:02.569" endtime="20200727 10:45:02.570"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.548" endtime="20200727 10:45:02.570"></status>
</kw>
<msg timestamp="20200727 10:45:02.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:02.547" endtime="20200727 10:45:02.570"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.547" endtime="20200727 10:45:02.570"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.546" endtime="20200727 10:45:02.571"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.536" endtime="20200727 10:45:02.571"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.535" endtime="20200727 10:45:02.571"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:02.575" level="INFO">Running command 'ozone sh bucket create o3://om:9862/75312-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:05.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:05.584" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:02.573" endtime="20200727 10:45:05.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:05.585" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:45:05.584" endtime="20200727 10:45:05.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:05.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:05.585" endtime="20200727 10:45:05.586"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.572" endtime="20200727 10:45:05.586"></status>
</kw>
<msg timestamp="20200727 10:45:05.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:02.572" endtime="20200727 10:45:05.586"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.571" endtime="20200727 10:45:05.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:05.590" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75312-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:08.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:08.580" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:05.588" endtime="20200727 10:45:08.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:08.581" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:08.580" endtime="20200727 10:45:08.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:08.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:08.582" endtime="20200727 10:45:08.582"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:05.588" endtime="20200727 10:45:08.582"></status>
</kw>
<msg timestamp="20200727 10:45:08.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:05.587" endtime="20200727 10:45:08.583"></status>
</kw>
<msg timestamp="20200727 10:45:08.583" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:05.587" endtime="20200727 10:45:08.583"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:08.583" endtime="20200727 10:45:08.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:08.598" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/75312-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:11.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:11.246" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:08.596" endtime="20200727 10:45:11.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:11.247" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 10:45:11.247" endtime="20200727 10:45:11.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:11.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:11.248" endtime="20200727 10:45:11.248"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:08.595" endtime="20200727 10:45:11.248"></status>
</kw>
<msg timestamp="20200727 10:45:11.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:08.584" endtime="20200727 10:45:11.249"></status>
</kw>
<msg timestamp="20200727 10:45:11.249" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:08.584" endtime="20200727 10:45:11.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:11.254" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75312-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:14.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:14.293" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:11.251" endtime="20200727 10:45:14.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:14.294" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:14.293" endtime="20200727 10:45:14.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:14.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:14.294" endtime="20200727 10:45:14.295"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:11.250" endtime="20200727 10:45:14.295"></status>
</kw>
<msg timestamp="20200727 10:45:14.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:11.250" endtime="20200727 10:45:14.295"></status>
</kw>
<msg timestamp="20200727 10:45:14.295" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:11.249" endtime="20200727 10:45:14.296"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:14.296" endtime="20200727 10:45:14.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:14.302" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/75312-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:16.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:16.980" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:14.298" endtime="20200727 10:45:16.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:16.982" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:45:16.981" endtime="20200727 10:45:16.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:16.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:16.982" endtime="20200727 10:45:16.982"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:14.298" endtime="20200727 10:45:16.983"></status>
</kw>
<msg timestamp="20200727 10:45:16.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:14.298" endtime="20200727 10:45:16.983"></status>
</kw>
<msg timestamp="20200727 10:45:16.983" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:14.297" endtime="20200727 10:45:16.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:16.987" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75312-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:20.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:20.386" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:16.985" endtime="20200727 10:45:20.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:20.387" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:20.386" endtime="20200727 10:45:20.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:20.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:20.387" endtime="20200727 10:45:20.388"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:16.985" endtime="20200727 10:45:20.388"></status>
</kw>
<msg timestamp="20200727 10:45:20.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:16.984" endtime="20200727 10:45:20.388"></status>
</kw>
<msg timestamp="20200727 10:45:20.388" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:16.984" endtime="20200727 10:45:20.388"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:20.389" endtime="20200727 10:45:20.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:20.395" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/75312-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:23.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:23.188" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:20.391" endtime="20200727 10:45:23.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:23.189" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:45:23.188" endtime="20200727 10:45:23.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:23.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:23.189" endtime="20200727 10:45:23.190"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:20.391" endtime="20200727 10:45:23.190"></status>
</kw>
<msg timestamp="20200727 10:45:23.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:20.390" endtime="20200727 10:45:23.190"></status>
</kw>
<msg timestamp="20200727 10:45:23.190" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:20.390" endtime="20200727 10:45:23.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:23.194" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75312-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:26.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:26.474" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:23.192" endtime="20200727 10:45:26.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:26.476" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:26.475" endtime="20200727 10:45:26.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:26.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:26.476" endtime="20200727 10:45:26.476"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:23.192" endtime="20200727 10:45:26.477"></status>
</kw>
<msg timestamp="20200727 10:45:26.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:23.191" endtime="20200727 10:45:26.477"></status>
</kw>
<msg timestamp="20200727 10:45:26.477" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:23.191" endtime="20200727 10:45:26.477"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:26.477" endtime="20200727 10:45:26.478"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:26.478" endtime="20200727 10:45:26.478"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:02.571" endtime="20200727 10:45:26.479"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:45:02.534" endtime="20200727 10:45:26.479" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:26.488" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:26.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:26.489" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:45:26.485" endtime="20200727 10:45:26.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:26.490" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:45:26.490" endtime="20200727 10:45:26.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:26.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:26.491" endtime="20200727 10:45:26.491"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.484" endtime="20200727 10:45:26.491"></status>
</kw>
<msg timestamp="20200727 10:45:26.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:26.484" endtime="20200727 10:45:26.492"></status>
</kw>
<msg timestamp="20200727 10:45:26.492" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:45:26.484" endtime="20200727 10:45:26.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:45:26.492" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:45:26.492" endtime="20200727 10:45:26.493"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:26.497" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:26.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:26.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:45:26.494" endtime="20200727 10:45:26.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:26.512" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:45:26.512" endtime="20200727 10:45:26.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:26.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:26.513" endtime="20200727 10:45:26.513"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.494" endtime="20200727 10:45:26.513"></status>
</kw>
<msg timestamp="20200727 10:45:26.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:26.494" endtime="20200727 10:45:26.514"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.493" endtime="20200727 10:45:26.514"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.493" endtime="20200727 10:45:26.514"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.483" endtime="20200727 10:45:26.514"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.482" endtime="20200727 10:45:26.514"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:26.519" level="INFO">Running command 'ozone sh key put o3://om:9862/75312-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:31.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:31.253" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:26.516" endtime="20200727 10:45:31.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:31.255" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:45:31.254" endtime="20200727 10:45:31.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:31.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:31.256" endtime="20200727 10:45:31.256"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.516" endtime="20200727 10:45:31.257"></status>
</kw>
<msg timestamp="20200727 10:45:31.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:26.515" endtime="20200727 10:45:31.257"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.515" endtime="20200727 10:45:31.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:31.260" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75312-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:34.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:34.322" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:31.258" endtime="20200727 10:45:34.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:34.323" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:34.322" endtime="20200727 10:45:34.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:34.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:34.323" endtime="20200727 10:45:34.324"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:31.258" endtime="20200727 10:45:34.324"></status>
</kw>
<msg timestamp="20200727 10:45:34.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:31.258" endtime="20200727 10:45:34.324"></status>
</kw>
<msg timestamp="20200727 10:45:34.325" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:31.257" endtime="20200727 10:45:34.325"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:34.325" endtime="20200727 10:45:34.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:34.330" level="INFO">Running command 'ozone sh key addacl o3://om:9862/75312-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:37.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:37.199" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:34.327" endtime="20200727 10:45:37.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:37.200" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:45:37.199" endtime="20200727 10:45:37.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:37.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:37.200" endtime="20200727 10:45:37.201"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:34.326" endtime="20200727 10:45:37.201"></status>
</kw>
<msg timestamp="20200727 10:45:37.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:34.326" endtime="20200727 10:45:37.201"></status>
</kw>
<msg timestamp="20200727 10:45:37.202" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:34.325" endtime="20200727 10:45:37.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:37.207" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75312-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:40.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:40.210" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:37.203" endtime="20200727 10:45:40.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:40.211" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:40.210" endtime="20200727 10:45:40.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:40.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:40.211" endtime="20200727 10:45:40.212"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:37.203" endtime="20200727 10:45:40.212"></status>
</kw>
<msg timestamp="20200727 10:45:40.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:37.202" endtime="20200727 10:45:40.212"></status>
</kw>
<msg timestamp="20200727 10:45:40.213" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:37.202" endtime="20200727 10:45:40.213"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:40.213" endtime="20200727 10:45:40.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:40.219" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/75312-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:43.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:43.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:40.216" endtime="20200727 10:45:43.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:43.066" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:45:43.065" endtime="20200727 10:45:43.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:43.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:43.066" endtime="20200727 10:45:43.066"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:40.215" endtime="20200727 10:45:43.067"></status>
</kw>
<msg timestamp="20200727 10:45:43.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:40.215" endtime="20200727 10:45:43.067"></status>
</kw>
<msg timestamp="20200727 10:45:43.067" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:40.214" endtime="20200727 10:45:43.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:43.071" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75312-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:46.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:46.155" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:43.069" endtime="20200727 10:45:46.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:46.156" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:46.155" endtime="20200727 10:45:46.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:46.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:46.156" endtime="20200727 10:45:46.157"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:43.068" endtime="20200727 10:45:46.157"></status>
</kw>
<msg timestamp="20200727 10:45:46.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:43.068" endtime="20200727 10:45:46.157"></status>
</kw>
<msg timestamp="20200727 10:45:46.157" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:43.067" endtime="20200727 10:45:46.157"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:46.158" endtime="20200727 10:45:46.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:46.163" level="INFO">Running command 'ozone sh key setacl o3://om:9862/75312-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:49.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:49.196" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:46.160" endtime="20200727 10:45:49.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:49.197" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:45:49.197" endtime="20200727 10:45:49.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:49.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:49.198" endtime="20200727 10:45:49.198"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:46.159" endtime="20200727 10:45:49.199"></status>
</kw>
<msg timestamp="20200727 10:45:49.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:46.159" endtime="20200727 10:45:49.199"></status>
</kw>
<msg timestamp="20200727 10:45:49.199" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:46.158" endtime="20200727 10:45:49.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:49.203" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75312-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:52.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:52.441" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:49.201" endtime="20200727 10:45:52.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:52.442" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:45:52.442" endtime="20200727 10:45:52.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:52.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:52.443" endtime="20200727 10:45:52.443"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:49.200" endtime="20200727 10:45:52.443"></status>
</kw>
<msg timestamp="20200727 10:45:52.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:49.200" endtime="20200727 10:45:52.444"></status>
</kw>
<msg timestamp="20200727 10:45:52.444" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:49.199" endtime="20200727 10:45:52.444"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:52.444" endtime="20200727 10:45:52.445"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:52.445" endtime="20200727 10:45:52.445"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:26.514" endtime="20200727 10:45:52.446"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:45:26.481" endtime="20200727 10:45:52.446" critical="yes"></status>
</test>
<test id="s1-s3-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:52.452" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:52.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:52.455" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:45:52.450" endtime="20200727 10:45:52.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:52.456" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:45:52.455" endtime="20200727 10:45:52.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:52.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:52.456" endtime="20200727 10:45:52.457"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.450" endtime="20200727 10:45:52.457"></status>
</kw>
<msg timestamp="20200727 10:45:52.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:52.449" endtime="20200727 10:45:52.457"></status>
</kw>
<msg timestamp="20200727 10:45:52.457" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:45:52.448" endtime="20200727 10:45:52.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:45:52.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:45:52.457" endtime="20200727 10:45:52.458"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:52.463" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:52.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:52.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:45:52.460" endtime="20200727 10:45:52.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:52.539" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:45:52.538" endtime="20200727 10:45:52.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:52.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:52.539" endtime="20200727 10:45:52.540"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.460" endtime="20200727 10:45:52.540"></status>
</kw>
<msg timestamp="20200727 10:45:52.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:52.459" endtime="20200727 10:45:52.540"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.459" endtime="20200727 10:45:52.541"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.458" endtime="20200727 10:45:52.541"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.448" endtime="20200727 10:45:52.541"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.448" endtime="20200727 10:45:52.541"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:52.545" level="INFO">Running command 'ozone sh volume info o3:///75312-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:55.504" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:45:55.504" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:52.543" endtime="20200727 10:45:55.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:55.505" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 75312-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 10:45:55.505" endtime="20200727 10:45:55.505"></status>
</kw>
<msg timestamp="20200727 10:45:55.506" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:52.542" endtime="20200727 10:45:55.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:55.506" endtime="20200727 10:45:55.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:55.511" level="INFO">Running command 'ozone sh volume create o3:///75312-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:45:58.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:45:58.639" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:55.508" endtime="20200727 10:45:58.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:45:58.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:45:58.640" endtime="20200727 10:45:58.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:45:58.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:45:58.641" endtime="20200727 10:45:58.641"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:55.507" endtime="20200727 10:45:58.642"></status>
</kw>
<msg timestamp="20200727 10:45:58.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:55.507" endtime="20200727 10:45:58.642"></status>
</kw>
<msg timestamp="20200727 10:45:58.642" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:45:55.506" endtime="20200727 10:45:58.642"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:45:58.642" endtime="20200727 10:45:58.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:45:58.647" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="75312-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:01.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:01.758" level="INFO">${output} = {
  "metadata": {},
  "name": "75312-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:45:58.500Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 10:45:58.645" endtime="20200727 10:46:01.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:01.759" level="INFO">{
  "metadata": {},
  "name": "75312-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:45:58.500Z",
  "modificationTime": "2020-07-27T10:45:58.500Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:46:01.758" endtime="20200727 10:46:01.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:01.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:01.759" endtime="20200727 10:46:01.760"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:58.644" endtime="20200727 10:46:01.760"></status>
</kw>
<msg timestamp="20200727 10:46:01.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:45:58.644" endtime="20200727 10:46:01.760"></status>
</kw>
<msg timestamp="20200727 10:46:01.760" level="INFO">${result} = {
  "metadata": {},
  "name": "75312-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:45:58.500Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 10:45:58.643" endtime="20200727 10:46:01.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:01.761" endtime="20200727 10:46:01.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:01.765" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="75312-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:04.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:04.748" level="INFO">${output} = {
  "metadata": {},
  "name": "75312-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:45:58.500Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 10:46:01.763" endtime="20200727 10:46:04.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:04.749" level="INFO">{
  "metadata": {},
  "name": "75312-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:45:58.500Z",
  "modificationTime": "2020-07-27T10:45:58.500Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:46:04.748" endtime="20200727 10:46:04.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:04.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:04.749" endtime="20200727 10:46:04.750"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:01.762" endtime="20200727 10:46:04.750"></status>
</kw>
<msg timestamp="20200727 10:46:04.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:01.762" endtime="20200727 10:46:04.750"></status>
</kw>
<msg timestamp="20200727 10:46:04.751" level="INFO">${result} = {
  "metadata": {},
  "name": "75312-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:45:58.500Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" starttime="20200727 10:46:01.761" endtime="20200727 10:46:04.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:04.751" endtime="20200727 10:46:04.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:04.755" level="INFO">Running command 'ozone sh volume update o3:///75312-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:07.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:07.907" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:04.753" endtime="20200727 10:46:07.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:07.908" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "75312-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-07-27T10:45:58.500Z",
  "modificationTime" : "2020-07-27T10:46:07.566Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 10:46:07.907" endtime="20200727 10:46:07.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:07.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:07.908" endtime="20200727 10:46:07.909"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:04.752" endtime="20200727 10:46:07.909"></status>
</kw>
<msg timestamp="20200727 10:46:07.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:04.752" endtime="20200727 10:46:07.909"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:04.751" endtime="20200727 10:46:07.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:07.914" level="INFO">Running command 'ozone sh volume info o3:///75312-rpcwport | jq -r '. | select(.name=="75312-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:10.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:10.929" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:46:07.912" endtime="20200727 10:46:10.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:10.930" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 10:46:10.929" endtime="20200727 10:46:10.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:10.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:10.930" endtime="20200727 10:46:10.931"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:07.911" endtime="20200727 10:46:10.931"></status>
</kw>
<msg timestamp="20200727 10:46:10.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:07.911" endtime="20200727 10:46:10.931"></status>
</kw>
<msg timestamp="20200727 10:46:10.931" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:46:07.910" endtime="20200727 10:46:10.931"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:10.932" endtime="20200727 10:46:10.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:10.936" level="INFO">Running command 'ozone sh bucket create o3:///75312-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:13.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:13.847" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:10.934" endtime="20200727 10:46:13.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:13.848" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:13.848" endtime="20200727 10:46:13.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:13.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:13.849" endtime="20200727 10:46:13.849"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:10.933" endtime="20200727 10:46:13.850"></status>
</kw>
<msg timestamp="20200727 10:46:13.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:10.933" endtime="20200727 10:46:13.850"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:10.932" endtime="20200727 10:46:13.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:13.855" level="INFO">Running command 'ozone sh bucket info o3:///75312-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:16.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:16.675" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 10:46:13.852" endtime="20200727 10:46:16.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:16.676" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 10:46:16.675" endtime="20200727 10:46:16.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:16.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:16.676" endtime="20200727 10:46:16.677"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:13.851" endtime="20200727 10:46:16.677"></status>
</kw>
<msg timestamp="20200727 10:46:16.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:13.851" endtime="20200727 10:46:16.677"></status>
</kw>
<msg timestamp="20200727 10:46:16.677" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 10:46:13.850" endtime="20200727 10:46:16.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:16.678" endtime="20200727 10:46:16.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:16.682" level="INFO">Running command 'ozone sh bucket list o3:///75312-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:19.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:19.719" level="INFO">${output} = 75312-rpcwport</msg>
<status status="PASS" starttime="20200727 10:46:16.680" endtime="20200727 10:46:19.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:19.721" level="INFO">75312-rpcwport</msg>
<status status="PASS" starttime="20200727 10:46:19.720" endtime="20200727 10:46:19.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:19.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:19.721" endtime="20200727 10:46:19.722"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:16.679" endtime="20200727 10:46:19.722"></status>
</kw>
<msg timestamp="20200727 10:46:19.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:16.679" endtime="20200727 10:46:19.722"></status>
</kw>
<msg timestamp="20200727 10:46:19.722" level="INFO">${result} = 75312-rpcwport</msg>
<status status="PASS" starttime="20200727 10:46:16.678" endtime="20200727 10:46:19.722"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:19.722" endtime="20200727 10:46:19.723"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:19.729" level="INFO">Running command 'ozone sh key put o3:///75312-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:24.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:24.507" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:19.726" endtime="20200727 10:46:24.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:24.509" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:24.508" endtime="20200727 10:46:24.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:24.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:24.509" endtime="20200727 10:46:24.510"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:19.725" endtime="20200727 10:46:24.510"></status>
</kw>
<msg timestamp="20200727 10:46:24.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:19.725" endtime="20200727 10:46:24.511"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:19.725" endtime="20200727 10:46:24.511"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:24.514" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:24.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:24.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:46:24.512" endtime="20200727 10:46:24.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:24.517" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:46:24.517" endtime="20200727 10:46:24.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:24.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:24.518" endtime="20200727 10:46:24.518"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:24.512" endtime="20200727 10:46:24.518"></status>
</kw>
<msg timestamp="20200727 10:46:24.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:24.511" endtime="20200727 10:46:24.519"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:24.511" endtime="20200727 10:46:24.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:24.522" level="INFO">Running command 'ozone sh key get o3:///75312-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:28.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:28.952" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:24.520" endtime="20200727 10:46:28.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:28.953" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:28.953" endtime="20200727 10:46:28.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:28.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:28.954" endtime="20200727 10:46:28.954"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:24.520" endtime="20200727 10:46:28.954"></status>
</kw>
<msg timestamp="20200727 10:46:28.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:24.519" endtime="20200727 10:46:28.955"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:24.519" endtime="20200727 10:46:28.955"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:28.958" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:28.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:28.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:46:28.956" endtime="20200727 10:46:28.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:28.962" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:46:28.961" endtime="20200727 10:46:28.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:28.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:28.963" endtime="20200727 10:46:28.963"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:28.956" endtime="20200727 10:46:28.963"></status>
</kw>
<msg timestamp="20200727 10:46:28.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:28.955" endtime="20200727 10:46:28.963"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:28.955" endtime="20200727 10:46:28.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:28.968" level="INFO">Running command 'ozone sh key put -t RATIS o3:///75312-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:33.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:33.603" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:28.965" endtime="20200727 10:46:33.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:33.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:33.603" endtime="20200727 10:46:33.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:33.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:33.604" endtime="20200727 10:46:33.605"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:28.965" endtime="20200727 10:46:33.605"></status>
</kw>
<msg timestamp="20200727 10:46:33.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:28.964" endtime="20200727 10:46:33.605"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:28.964" endtime="20200727 10:46:33.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:33.610" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:33.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:33.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:46:33.607" endtime="20200727 10:46:33.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:33.612" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:46:33.612" endtime="20200727 10:46:33.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:33.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:33.613" endtime="20200727 10:46:33.613"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:33.606" endtime="20200727 10:46:33.613"></status>
</kw>
<msg timestamp="20200727 10:46:33.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:33.606" endtime="20200727 10:46:33.614"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:33.605" endtime="20200727 10:46:33.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:33.617" level="INFO">Running command 'ozone sh key get o3:///75312-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:37.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:37.933" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:33.615" endtime="20200727 10:46:37.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:37.934" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:37.933" endtime="20200727 10:46:37.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:37.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:37.934" endtime="20200727 10:46:37.935"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:33.615" endtime="20200727 10:46:37.936"></status>
</kw>
<msg timestamp="20200727 10:46:37.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:33.615" endtime="20200727 10:46:37.936"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:33.614" endtime="20200727 10:46:37.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:37.940" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:37.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:37.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:46:37.938" endtime="20200727 10:46:37.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:37.944" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:46:37.943" endtime="20200727 10:46:37.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:37.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:37.944" endtime="20200727 10:46:37.944"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:37.937" endtime="20200727 10:46:37.944"></status>
</kw>
<msg timestamp="20200727 10:46:37.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:37.937" endtime="20200727 10:46:37.945"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:37.936" endtime="20200727 10:46:37.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:37.950" level="INFO">Running command 'ozone sh key info o3:///75312-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:41.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:41.097" level="INFO">${output} = {
  "volumeName": "75312-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:46:31.612Z",
  "modificationTime": "2020-07-27T10:46:33.214Z",
...</msg>
<status status="PASS" starttime="20200727 10:46:37.947" endtime="20200727 10:46:41.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:41.098" level="INFO">{
  "volumeName": "75312-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:46:31.612Z",
  "modificationTime": "2020-07-27T10:46:33.214Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585415334887550,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:46:41.097" endtime="20200727 10:46:41.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:41.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:41.098" endtime="20200727 10:46:41.099"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:37.946" endtime="20200727 10:46:41.099"></status>
</kw>
<msg timestamp="20200727 10:46:41.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:37.946" endtime="20200727 10:46:41.099"></status>
</kw>
<msg timestamp="20200727 10:46:41.099" level="INFO">${result} = {
  "volumeName": "75312-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:46:31.612Z",
  "modificationTime": "2020-07-27T10:46:33.214Z",
...</msg>
<status status="PASS" starttime="20200727 10:46:37.945" endtime="20200727 10:46:41.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:41.100" endtime="20200727 10:46:41.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:41.104" level="INFO">Running command 'ozone sh key delete o3:///75312-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:44.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:44.019" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:41.102" endtime="20200727 10:46:44.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:44.020" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:44.019" endtime="20200727 10:46:44.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:44.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:44.021" endtime="20200727 10:46:44.021"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:41.101" endtime="20200727 10:46:44.021"></status>
</kw>
<msg timestamp="20200727 10:46:44.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:41.101" endtime="20200727 10:46:44.022"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:41.100" endtime="20200727 10:46:44.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:44.025" level="INFO">Running command 'ozone sh key cp o3:///75312-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:49.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:49.072" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:44.023" endtime="20200727 10:46:49.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:49.073" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:49.073" endtime="20200727 10:46:49.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:49.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:49.074" endtime="20200727 10:46:49.074"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:44.023" endtime="20200727 10:46:49.074"></status>
</kw>
<msg timestamp="20200727 10:46:49.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:44.022" endtime="20200727 10:46:49.075"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:44.022" endtime="20200727 10:46:49.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:49.079" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:49.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:49.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:46:49.076" endtime="20200727 10:46:49.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:49.083" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:46:49.082" endtime="20200727 10:46:49.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:49.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:49.083" endtime="20200727 10:46:49.084"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:49.076" endtime="20200727 10:46:49.084"></status>
</kw>
<msg timestamp="20200727 10:46:49.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:49.075" endtime="20200727 10:46:49.084"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:49.075" endtime="20200727 10:46:49.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:49.087" level="INFO">Running command 'ozone sh key get o3:///75312-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:53.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:53.745" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:49.085" endtime="20200727 10:46:53.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:53.746" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:53.745" endtime="20200727 10:46:53.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:53.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:53.746" endtime="20200727 10:46:53.747"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:49.085" endtime="20200727 10:46:53.747"></status>
</kw>
<msg timestamp="20200727 10:46:53.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:49.085" endtime="20200727 10:46:53.747"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:49.084" endtime="20200727 10:46:53.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:53.752" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:53.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:53.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:46:53.749" endtime="20200727 10:46:53.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:53.755" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:46:53.755" endtime="20200727 10:46:53.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:53.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:53.755" endtime="20200727 10:46:53.756"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:53.748" endtime="20200727 10:46:53.756"></status>
</kw>
<msg timestamp="20200727 10:46:53.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:53.748" endtime="20200727 10:46:53.756"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:53.748" endtime="20200727 10:46:53.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:53.760" level="INFO">Running command 'ozone sh key delete o3:///75312-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:56.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:46:56.516" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:53.758" endtime="20200727 10:46:56.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:56.517" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:46:56.517" endtime="20200727 10:46:56.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:46:56.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:46:56.517" endtime="20200727 10:46:56.518"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:53.758" endtime="20200727 10:46:56.519"></status>
</kw>
<msg timestamp="20200727 10:46:56.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:53.757" endtime="20200727 10:46:56.519"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:53.757" endtime="20200727 10:46:56.519"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:56.522" level="INFO">Running command 'ozone sh key get o3:///75312-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:46:59.479" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:46:59.479" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:56.520" endtime="20200727 10:46:59.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:46:59.481" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:46:59.480" endtime="20200727 10:46:59.481"></status>
</kw>
<msg timestamp="20200727 10:46:59.481" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:56.519" endtime="20200727 10:46:59.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:46:59.481" endtime="20200727 10:46:59.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:46:59.486" level="INFO">Running command 'ozone sh key get --force o3:///75312-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:04.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:04.062" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:59.484" endtime="20200727 10:47:04.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:04.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:04.062" endtime="20200727 10:47:04.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:04.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:04.063" endtime="20200727 10:47:04.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:59.483" endtime="20200727 10:47:04.064"></status>
</kw>
<msg timestamp="20200727 10:47:04.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:46:59.483" endtime="20200727 10:47:04.064"></status>
</kw>
<msg timestamp="20200727 10:47:04.065" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:46:59.482" endtime="20200727 10:47:04.065"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:04.065" endtime="20200727 10:47:04.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:04.069" level="INFO">Running command 'ozone sh key info o3:///75312-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:06.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:06.965" level="INFO">${output} = {
  "volumeName": "75312-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:46:22.483Z",
  "modificationTime": "2020-07-27T10:46:24.118Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 10:47:04.067" endtime="20200727 10:47:06.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:06.967" level="INFO">{
  "volumeName": "75312-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:46:22.483Z",
  "modificationTime": "2020-07-27T10:46:24.118Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585414736609400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:47:06.966" endtime="20200727 10:47:06.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:06.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:06.967" endtime="20200727 10:47:06.967"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:04.066" endtime="20200727 10:47:06.968"></status>
</kw>
<msg timestamp="20200727 10:47:06.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:04.066" endtime="20200727 10:47:06.968"></status>
</kw>
<msg timestamp="20200727 10:47:06.968" level="INFO">${result} = {
  "volumeName": "75312-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:46:22.483Z",
  "modificationTime": "2020-07-27T10:46:24.118Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 10:47:04.065" endtime="20200727 10:47:06.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:06.968" endtime="20200727 10:47:06.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:06.973" level="INFO">Running command 'ozone sh key list o3:///75312-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:09.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:09.867" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:47:06.970" endtime="20200727 10:47:09.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:09.868" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:47:09.868" endtime="20200727 10:47:09.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:09.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:09.869" endtime="20200727 10:47:09.869"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:06.970" endtime="20200727 10:47:09.869"></status>
</kw>
<msg timestamp="20200727 10:47:09.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:06.970" endtime="20200727 10:47:09.870"></status>
</kw>
<msg timestamp="20200727 10:47:09.870" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 10:47:06.969" endtime="20200727 10:47:09.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:09.870" endtime="20200727 10:47:09.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:09.874" level="INFO">Running command 'ozone sh key rename o3:///75312-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:12.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:12.734" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:09.872" endtime="20200727 10:47:12.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:12.735" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:12.734" endtime="20200727 10:47:12.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:12.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:12.735" endtime="20200727 10:47:12.736"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:09.872" endtime="20200727 10:47:12.736"></status>
</kw>
<msg timestamp="20200727 10:47:12.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:09.871" endtime="20200727 10:47:12.736"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:09.871" endtime="20200727 10:47:12.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:12.741" level="INFO">Running command 'ozone sh key list o3:///75312-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:15.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:15.740" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 10:47:12.739" endtime="20200727 10:47:15.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:15.741" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 10:47:15.740" endtime="20200727 10:47:15.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:15.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:15.741" endtime="20200727 10:47:15.741"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:12.738" endtime="20200727 10:47:15.742"></status>
</kw>
<msg timestamp="20200727 10:47:15.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:12.737" endtime="20200727 10:47:15.742"></status>
</kw>
<msg timestamp="20200727 10:47:15.742" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 10:47:12.737" endtime="20200727 10:47:15.742"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:15.742" endtime="20200727 10:47:15.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:15.748" level="INFO">Running command 'ozone sh key delete o3:///75312-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:18.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:18.533" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:15.744" endtime="20200727 10:47:18.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:18.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:18.534" endtime="20200727 10:47:18.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:18.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:18.535" endtime="20200727 10:47:18.535"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:15.744" endtime="20200727 10:47:18.536"></status>
</kw>
<msg timestamp="20200727 10:47:18.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:15.744" endtime="20200727 10:47:18.536"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:15.743" endtime="20200727 10:47:18.536"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:19.723" endtime="20200727 10:47:18.536"></status>
</kw>
<status status="PASS" starttime="20200727 10:46:19.723" endtime="20200727 10:47:18.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:18.540" level="INFO">Running command 'ozone sh bucket delete o3:///75312-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:21.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:21.220" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:18.538" endtime="20200727 10:47:21.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:21.221" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:21.220" endtime="20200727 10:47:21.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:21.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:21.221" endtime="20200727 10:47:21.222"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:18.537" endtime="20200727 10:47:21.222"></status>
</kw>
<msg timestamp="20200727 10:47:21.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:18.537" endtime="20200727 10:47:21.222"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:18.536" endtime="20200727 10:47:21.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:21.226" level="INFO">Running command 'ozone sh volume delete o3:///75312-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:24.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:24.072" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:21.224" endtime="20200727 10:47:24.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:24.073" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 75312-rpcwport is deleted</msg>
<status status="PASS" starttime="20200727 10:47:24.073" endtime="20200727 10:47:24.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:24.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:24.074" endtime="20200727 10:47:24.074"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:21.223" endtime="20200727 10:47:24.075"></status>
</kw>
<msg timestamp="20200727 10:47:24.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:21.223" endtime="20200727 10:47:24.075"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:21.223" endtime="20200727 10:47:24.075"></status>
</kw>
<status status="PASS" starttime="20200727 10:45:52.541" endtime="20200727 10:47:24.075"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:45:52.447" endtime="20200727 10:47:24.076" critical="yes"></status>
</test>
<test id="s1-s3-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:24.082" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:24.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:24.084" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:47:24.079" endtime="20200727 10:47:24.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:24.085" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:47:24.084" endtime="20200727 10:47:24.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:24.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:24.085" endtime="20200727 10:47:24.086"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.079" endtime="20200727 10:47:24.086"></status>
</kw>
<msg timestamp="20200727 10:47:24.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:24.079" endtime="20200727 10:47:24.086"></status>
</kw>
<msg timestamp="20200727 10:47:24.086" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:47:24.078" endtime="20200727 10:47:24.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:47:24.087" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:47:24.087" endtime="20200727 10:47:24.087"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:24.091" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:24.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:24.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:47:24.089" endtime="20200727 10:47:24.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:24.111" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:47:24.111" endtime="20200727 10:47:24.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:24.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:24.112" endtime="20200727 10:47:24.112"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.088" endtime="20200727 10:47:24.112"></status>
</kw>
<msg timestamp="20200727 10:47:24.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:24.088" endtime="20200727 10:47:24.113"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.088" endtime="20200727 10:47:24.113"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.087" endtime="20200727 10:47:24.113"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.077" endtime="20200727 10:47:24.113"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.077" endtime="20200727 10:47:24.113"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:24.118" level="INFO">Running command 'ozone sh volume info /75312-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:27.032" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:47:27.032" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:24.115" endtime="20200727 10:47:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:27.033" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 75312-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 10:47:27.033" endtime="20200727 10:47:27.034"></status>
</kw>
<msg timestamp="20200727 10:47:27.034" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:24.114" endtime="20200727 10:47:27.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:27.034" endtime="20200727 10:47:27.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:27.038" level="INFO">Running command 'ozone sh volume create /75312-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:29.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:29.873" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:27.036" endtime="20200727 10:47:29.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:29.875" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:29.874" endtime="20200727 10:47:29.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:29.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:29.875" endtime="20200727 10:47:29.876"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:27.036" endtime="20200727 10:47:29.876"></status>
</kw>
<msg timestamp="20200727 10:47:29.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:27.035" endtime="20200727 10:47:29.877"></status>
</kw>
<msg timestamp="20200727 10:47:29.877" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:27.035" endtime="20200727 10:47:29.877"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:29.877" endtime="20200727 10:47:29.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:29.881" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="75312-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:32.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:32.981" level="INFO">${output} = {
  "metadata": {},
  "name": "75312-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:47:29.815Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 10:47:29.879" endtime="20200727 10:47:32.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:32.982" level="INFO">{
  "metadata": {},
  "name": "75312-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:47:29.815Z",
  "modificationTime": "2020-07-27T10:47:29.815Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:47:32.982" endtime="20200727 10:47:32.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:32.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:32.983" endtime="20200727 10:47:32.983"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:29.879" endtime="20200727 10:47:32.984"></status>
</kw>
<msg timestamp="20200727 10:47:32.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:29.878" endtime="20200727 10:47:32.984"></status>
</kw>
<msg timestamp="20200727 10:47:32.984" level="INFO">${result} = {
  "metadata": {},
  "name": "75312-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:47:29.815Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 10:47:29.877" endtime="20200727 10:47:32.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:32.984" endtime="20200727 10:47:32.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:32.989" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="75312-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:35.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:35.751" level="INFO">${output} = {
  "metadata": {},
  "name": "75312-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:47:29.815Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 10:47:32.986" endtime="20200727 10:47:35.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:35.753" level="INFO">{
  "metadata": {},
  "name": "75312-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:47:29.815Z",
  "modificationTime": "2020-07-27T10:47:29.815Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:47:35.752" endtime="20200727 10:47:35.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:35.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:35.753" endtime="20200727 10:47:35.753"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:32.986" endtime="20200727 10:47:35.754"></status>
</kw>
<msg timestamp="20200727 10:47:35.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:32.985" endtime="20200727 10:47:35.754"></status>
</kw>
<msg timestamp="20200727 10:47:35.754" level="INFO">${result} = {
  "metadata": {},
  "name": "75312-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-07-27T10:47:29.815Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20200727 10:47:32.985" endtime="20200727 10:47:35.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:35.754" endtime="20200727 10:47:35.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:35.760" level="INFO">Running command 'ozone sh volume update /75312-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:38.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:38.778" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:35.756" endtime="20200727 10:47:38.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:38.780" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "75312-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-07-27T10:47:29.815Z",
  "modificationTime" : "2020-07-27T10:47:38.426Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 10:47:38.779" endtime="20200727 10:47:38.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:38.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:38.780" endtime="20200727 10:47:38.781"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:35.756" endtime="20200727 10:47:38.781"></status>
</kw>
<msg timestamp="20200727 10:47:38.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:35.755" endtime="20200727 10:47:38.781"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:35.755" endtime="20200727 10:47:38.781"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:38.786" level="INFO">Running command 'ozone sh volume info /75312-rpcwoscheme | jq -r '. | select(.name=="75312-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:41.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:41.823" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:47:38.783" endtime="20200727 10:47:41.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:41.825" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 10:47:41.824" endtime="20200727 10:47:41.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:41.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:41.825" endtime="20200727 10:47:41.825"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:38.783" endtime="20200727 10:47:41.826"></status>
</kw>
<msg timestamp="20200727 10:47:41.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:38.782" endtime="20200727 10:47:41.826"></status>
</kw>
<msg timestamp="20200727 10:47:41.826" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:47:38.781" endtime="20200727 10:47:41.826"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:41.826" endtime="20200727 10:47:41.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:41.831" level="INFO">Running command 'ozone sh bucket create /75312-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:44.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:44.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:41.828" endtime="20200727 10:47:44.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:44.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:44.675" endtime="20200727 10:47:44.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:44.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:44.676" endtime="20200727 10:47:44.676"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:41.828" endtime="20200727 10:47:44.677"></status>
</kw>
<msg timestamp="20200727 10:47:44.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:41.827" endtime="20200727 10:47:44.677"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:41.827" endtime="20200727 10:47:44.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:44.681" level="INFO">Running command 'ozone sh bucket info /75312-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:47.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:47.619" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 10:47:44.679" endtime="20200727 10:47:47.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:47.620" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 10:47:47.619" endtime="20200727 10:47:47.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:47.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:47.620" endtime="20200727 10:47:47.621"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:44.678" endtime="20200727 10:47:47.621"></status>
</kw>
<msg timestamp="20200727 10:47:47.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:44.678" endtime="20200727 10:47:47.621"></status>
</kw>
<msg timestamp="20200727 10:47:47.622" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 10:47:44.677" endtime="20200727 10:47:47.622"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:47.622" endtime="20200727 10:47:47.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:47.627" level="INFO">Running command 'ozone sh bucket list /75312-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:50.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:50.871" level="INFO">${output} = 75312-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 10:47:47.624" endtime="20200727 10:47:50.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:50.872" level="INFO">75312-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 10:47:50.871" endtime="20200727 10:47:50.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:50.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:50.872" endtime="20200727 10:47:50.873"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:47.623" endtime="20200727 10:47:50.873"></status>
</kw>
<msg timestamp="20200727 10:47:50.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:47.623" endtime="20200727 10:47:50.873"></status>
</kw>
<msg timestamp="20200727 10:47:50.873" level="INFO">${result} = 75312-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 10:47:47.622" endtime="20200727 10:47:50.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:47:50.873" endtime="20200727 10:47:50.874"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:50.880" level="INFO">Running command 'ozone sh key put /75312-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:55.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:55.504" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:50.877" endtime="20200727 10:47:55.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:55.505" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:47:55.504" endtime="20200727 10:47:55.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:55.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:55.505" endtime="20200727 10:47:55.506"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:50.876" endtime="20200727 10:47:55.506"></status>
</kw>
<msg timestamp="20200727 10:47:55.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:50.876" endtime="20200727 10:47:55.506"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:50.875" endtime="20200727 10:47:55.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:55.510" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:47:55.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:47:55.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:47:55.508" endtime="20200727 10:47:55.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:47:55.514" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:47:55.513" endtime="20200727 10:47:55.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:47:55.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:47:55.514" endtime="20200727 10:47:55.515"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:55.507" endtime="20200727 10:47:55.515"></status>
</kw>
<msg timestamp="20200727 10:47:55.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:55.507" endtime="20200727 10:47:55.515"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:55.507" endtime="20200727 10:47:55.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:47:55.520" level="INFO">Running command 'ozone sh key get /75312-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:00.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:00.436" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:47:55.517" endtime="20200727 10:48:00.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:00.437" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:00.437" endtime="20200727 10:48:00.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:00.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:00.438" endtime="20200727 10:48:00.438"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:55.516" endtime="20200727 10:48:00.438"></status>
</kw>
<msg timestamp="20200727 10:48:00.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:47:55.516" endtime="20200727 10:48:00.439"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:55.515" endtime="20200727 10:48:00.439"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:00.443" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:00.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:00.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:48:00.440" endtime="20200727 10:48:00.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:00.446" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:48:00.445" endtime="20200727 10:48:00.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:00.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:00.446" endtime="20200727 10:48:00.447"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:00.440" endtime="20200727 10:48:00.447"></status>
</kw>
<msg timestamp="20200727 10:48:00.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:00.440" endtime="20200727 10:48:00.447"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:00.439" endtime="20200727 10:48:00.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:00.451" level="INFO">Running command 'ozone sh key put -t RATIS /75312-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:04.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:04.816" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:00.449" endtime="20200727 10:48:04.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:04.817" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:04.817" endtime="20200727 10:48:04.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:04.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:04.818" endtime="20200727 10:48:04.818"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:00.449" endtime="20200727 10:48:04.818"></status>
</kw>
<msg timestamp="20200727 10:48:04.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:00.448" endtime="20200727 10:48:04.818"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:00.447" endtime="20200727 10:48:04.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:04.822" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:04.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:04.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:48:04.820" endtime="20200727 10:48:04.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:04.825" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:48:04.825" endtime="20200727 10:48:04.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:04.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:04.826" endtime="20200727 10:48:04.826"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:04.820" endtime="20200727 10:48:04.827"></status>
</kw>
<msg timestamp="20200727 10:48:04.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:04.819" endtime="20200727 10:48:04.827"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:04.819" endtime="20200727 10:48:04.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:04.831" level="INFO">Running command 'ozone sh key get /75312-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:09.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:09.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:04.829" endtime="20200727 10:48:09.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:09.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:09.190" endtime="20200727 10:48:09.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:09.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:09.191" endtime="20200727 10:48:09.191"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:04.828" endtime="20200727 10:48:09.192"></status>
</kw>
<msg timestamp="20200727 10:48:09.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:04.828" endtime="20200727 10:48:09.192"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:04.827" endtime="20200727 10:48:09.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:09.196" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:09.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:09.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:48:09.194" endtime="20200727 10:48:09.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:09.199" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:48:09.198" endtime="20200727 10:48:09.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:09.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:09.199" endtime="20200727 10:48:09.200"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:09.193" endtime="20200727 10:48:09.200"></status>
</kw>
<msg timestamp="20200727 10:48:09.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:09.193" endtime="20200727 10:48:09.200"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:09.192" endtime="20200727 10:48:09.200"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:09.205" level="INFO">Running command 'ozone sh key info /75312-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:12.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:12.303" level="INFO">${output} = {
  "volumeName": "75312-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:48:03.008Z",
  "modificationTime": "2020-07-27T10:48:04.430Z...</msg>
<status status="PASS" starttime="20200727 10:48:09.202" endtime="20200727 10:48:12.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:12.304" level="INFO">{
  "volumeName": "75312-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:48:03.008Z",
  "modificationTime": "2020-07-27T10:48:04.430Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585421324615820,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:48:12.303" endtime="20200727 10:48:12.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:12.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:12.304" endtime="20200727 10:48:12.305"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:09.201" endtime="20200727 10:48:12.305"></status>
</kw>
<msg timestamp="20200727 10:48:12.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:09.201" endtime="20200727 10:48:12.305"></status>
</kw>
<msg timestamp="20200727 10:48:12.305" level="INFO">${result} = {
  "volumeName": "75312-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:48:03.008Z",
  "modificationTime": "2020-07-27T10:48:04.430Z...</msg>
<status status="PASS" starttime="20200727 10:48:09.200" endtime="20200727 10:48:12.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:48:12.306" endtime="20200727 10:48:12.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:12.311" level="INFO">Running command 'ozone sh key delete /75312-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:15.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:15.070" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:12.307" endtime="20200727 10:48:15.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:15.071" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:15.070" endtime="20200727 10:48:15.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:15.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:15.071" endtime="20200727 10:48:15.071"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:12.307" endtime="20200727 10:48:15.072"></status>
</kw>
<msg timestamp="20200727 10:48:15.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:12.307" endtime="20200727 10:48:15.072"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:12.306" endtime="20200727 10:48:15.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:15.076" level="INFO">Running command 'ozone sh key cp /75312-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:19.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:19.936" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:15.073" endtime="20200727 10:48:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:19.937" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:19.936" endtime="20200727 10:48:19.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:19.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:19.937" endtime="20200727 10:48:19.938"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:15.073" endtime="20200727 10:48:19.938"></status>
</kw>
<msg timestamp="20200727 10:48:19.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:15.073" endtime="20200727 10:48:19.938"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:15.072" endtime="20200727 10:48:19.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:19.943" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:19.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:19.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:48:19.940" endtime="20200727 10:48:19.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:19.946" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:48:19.945" endtime="20200727 10:48:19.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:19.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:19.946" endtime="20200727 10:48:19.947"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:19.940" endtime="20200727 10:48:19.947"></status>
</kw>
<msg timestamp="20200727 10:48:19.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:19.939" endtime="20200727 10:48:19.947"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:19.939" endtime="20200727 10:48:19.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:19.951" level="INFO">Running command 'ozone sh key get /75312-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:24.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:24.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:19.949" endtime="20200727 10:48:24.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:24.318" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:24.318" endtime="20200727 10:48:24.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:24.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:24.319" endtime="20200727 10:48:24.319"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:19.948" endtime="20200727 10:48:24.319"></status>
</kw>
<msg timestamp="20200727 10:48:24.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:19.948" endtime="20200727 10:48:24.320"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:19.948" endtime="20200727 10:48:24.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:24.323" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:24.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:24.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:48:24.321" endtime="20200727 10:48:24.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:24.327" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:48:24.326" endtime="20200727 10:48:24.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:24.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:24.327" endtime="20200727 10:48:24.327"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:24.321" endtime="20200727 10:48:24.328"></status>
</kw>
<msg timestamp="20200727 10:48:24.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:24.320" endtime="20200727 10:48:24.328"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:24.320" endtime="20200727 10:48:24.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:24.331" level="INFO">Running command 'ozone sh key delete /75312-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:27.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:27.149" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:24.329" endtime="20200727 10:48:27.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:27.150" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:27.149" endtime="20200727 10:48:27.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:27.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:27.150" endtime="20200727 10:48:27.151"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:24.329" endtime="20200727 10:48:27.151"></status>
</kw>
<msg timestamp="20200727 10:48:27.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:24.329" endtime="20200727 10:48:27.151"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:24.328" endtime="20200727 10:48:27.152"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:27.155" level="INFO">Running command 'ozone sh key get /75312-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:30.084" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:48:30.085" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:27.152" endtime="20200727 10:48:30.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:30.086" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:48:30.085" endtime="20200727 10:48:30.086"></status>
</kw>
<msg timestamp="20200727 10:48:30.086" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:27.152" endtime="20200727 10:48:30.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:48:30.086" endtime="20200727 10:48:30.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:30.091" level="INFO">Running command 'ozone sh key get --force /75312-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:34.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:34.397" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:30.088" endtime="20200727 10:48:34.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:34.398" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:34.397" endtime="20200727 10:48:34.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:34.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:34.398" endtime="20200727 10:48:34.399"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:30.088" endtime="20200727 10:48:34.399"></status>
</kw>
<msg timestamp="20200727 10:48:34.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:30.088" endtime="20200727 10:48:34.400"></status>
</kw>
<msg timestamp="20200727 10:48:34.400" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:30.087" endtime="20200727 10:48:34.400"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:48:34.400" endtime="20200727 10:48:34.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:34.406" level="INFO">Running command 'ozone sh key info /75312-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:37.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:37.436" level="INFO">${output} = {
  "volumeName": "75312-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:47:53.583Z",
  "modificationTime": "2020-07-27T10:47:55.019Z",
  "...</msg>
<status status="PASS" starttime="20200727 10:48:34.403" endtime="20200727 10:48:37.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:37.437" level="INFO">{
  "volumeName": "75312-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:47:53.583Z",
  "modificationTime": "2020-07-27T10:47:55.019Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585420706939000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:48:37.437" endtime="20200727 10:48:37.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:37.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:37.438" endtime="20200727 10:48:37.438"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:34.402" endtime="20200727 10:48:37.438"></status>
</kw>
<msg timestamp="20200727 10:48:37.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:34.402" endtime="20200727 10:48:37.439"></status>
</kw>
<msg timestamp="20200727 10:48:37.439" level="INFO">${result} = {
  "volumeName": "75312-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:47:53.583Z",
  "modificationTime": "2020-07-27T10:47:55.019Z",
  "...</msg>
<status status="PASS" starttime="20200727 10:48:34.401" endtime="20200727 10:48:37.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:48:37.439" endtime="20200727 10:48:37.439"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:37.445" level="INFO">Running command 'ozone sh key list /75312-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:40.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:40.460" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:48:37.441" endtime="20200727 10:48:40.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:40.461" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:48:40.460" endtime="20200727 10:48:40.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:40.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:40.461" endtime="20200727 10:48:40.462"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:37.441" endtime="20200727 10:48:40.462"></status>
</kw>
<msg timestamp="20200727 10:48:40.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:37.440" endtime="20200727 10:48:40.462"></status>
</kw>
<msg timestamp="20200727 10:48:40.463" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 10:48:37.440" endtime="20200727 10:48:40.463"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:48:40.463" endtime="20200727 10:48:40.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:40.468" level="INFO">Running command 'ozone sh key rename /75312-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:43.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:43.152" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:40.465" endtime="20200727 10:48:43.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:43.153" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:43.152" endtime="20200727 10:48:43.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:43.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:43.153" endtime="20200727 10:48:43.154"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:40.464" endtime="20200727 10:48:43.154"></status>
</kw>
<msg timestamp="20200727 10:48:43.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:40.464" endtime="20200727 10:48:43.155"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:40.463" endtime="20200727 10:48:43.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:43.158" level="INFO">Running command 'ozone sh key list /75312-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:46.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:46.258" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 10:48:43.156" endtime="20200727 10:48:46.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:46.259" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 10:48:46.258" endtime="20200727 10:48:46.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:46.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:46.260" endtime="20200727 10:48:46.260"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:43.156" endtime="20200727 10:48:46.260"></status>
</kw>
<msg timestamp="20200727 10:48:46.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:43.155" endtime="20200727 10:48:46.261"></status>
</kw>
<msg timestamp="20200727 10:48:46.261" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 10:48:43.155" endtime="20200727 10:48:46.261"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:48:46.261" endtime="20200727 10:48:46.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:46.265" level="INFO">Running command 'ozone sh key delete /75312-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:49.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:49.059" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:46.263" endtime="20200727 10:48:49.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:49.060" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:49.060" endtime="20200727 10:48:49.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:49.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:49.061" endtime="20200727 10:48:49.061"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:46.262" endtime="20200727 10:48:49.061"></status>
</kw>
<msg timestamp="20200727 10:48:49.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:46.262" endtime="20200727 10:48:49.062"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:46.261" endtime="20200727 10:48:49.062"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:50.874" endtime="20200727 10:48:49.062"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:50.874" endtime="20200727 10:48:49.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:49.066" level="INFO">Running command 'ozone sh bucket delete /75312-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:51.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:51.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:49.064" endtime="20200727 10:48:51.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:51.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:48:51.853" endtime="20200727 10:48:51.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:51.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:51.854" endtime="20200727 10:48:51.855"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:49.063" endtime="20200727 10:48:51.855"></status>
</kw>
<msg timestamp="20200727 10:48:51.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:49.063" endtime="20200727 10:48:51.855"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:49.062" endtime="20200727 10:48:51.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:48:51.859" level="INFO">Running command 'ozone sh volume delete /75312-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:48:54.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:48:54.684" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:48:51.857" endtime="20200727 10:48:54.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:48:54.685" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 75312-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200727 10:48:54.684" endtime="20200727 10:48:54.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:48:54.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:48:54.685" endtime="20200727 10:48:54.685"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:51.857" endtime="20200727 10:48:54.686"></status>
</kw>
<msg timestamp="20200727 10:48:54.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:48:51.856" endtime="20200727 10:48:54.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:48:51.856" endtime="20200727 10:48:54.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:47:24.113" endtime="20200727 10:48:54.686"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:47:24.076" endtime="20200727 10:48:54.687" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200727 10:43:06.598" endtime="20200727 10:48:54.688"></status>
</suite>
<status status="PASS" starttime="20200727 10:39:18.105" endtime="20200727 10:48:54.695"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="ozonesecure-basic">ozonesecure-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozonesecure-basic.Basic</stat>
<stat pass="15" fail="0" id="s1-s2" name="Links">ozonesecure-basic.Links</stat>
<stat pass="6" fail="0" id="s1-s3" name="Ozone-Shell">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
