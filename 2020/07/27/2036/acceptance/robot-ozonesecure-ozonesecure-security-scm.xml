<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 10:49:01.518" rpa="false">
<suite id="s1" name="ozonesecure-security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s1" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="setup">
<kw name="Create Random Volume" library="shell">
<assign>
<var>${volume}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 10:49:01.574" level="INFO">${random} = ttnms</msg>
<status status="PASS" starttime="20200727 10:49:01.573" endtime="20200727 10:49:01.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:01.579" level="INFO">Running command 'ozone sh volume create o3://om/vol-ttnms 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:04.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:04.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:01.575" endtime="20200727 10:49:04.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:04.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:04.592" endtime="20200727 10:49:04.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:04.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:04.593" endtime="20200727 10:49:04.593"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:01.575" endtime="20200727 10:49:04.593"></status>
</kw>
<msg timestamp="20200727 10:49:04.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:01.575" endtime="20200727 10:49:04.594"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:01.574" endtime="20200727 10:49:04.594"></status>
</kw>
<msg timestamp="20200727 10:49:04.594" level="INFO">${volume} = vol-ttnms</msg>
<status status="PASS" starttime="20200727 10:49:01.573" endtime="20200727 10:49:04.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
</arguments>
<msg timestamp="20200727 10:49:04.595" level="INFO">${VOLUME} = vol-ttnms</msg>
<status status="PASS" starttime="20200727 10:49:04.594" endtime="20200727 10:49:04.595"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:01.573" endtime="20200727 10:49:04.595"></status>
</kw>
<test id="s1-s1-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:04.601" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-ttnms/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:07.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:07.757" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:04.598" endtime="20200727 10:49:07.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:07.758" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:07.757" endtime="20200727 10:49:07.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:07.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:07.758" endtime="20200727 10:49:07.759"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:04.597" endtime="20200727 10:49:07.759"></status>
</kw>
<msg timestamp="20200727 10:49:07.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:04.597" endtime="20200727 10:49:07.759"></status>
</kw>
<msg timestamp="20200727 10:49:07.759" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:04.596" endtime="20200727 10:49:07.759"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:07.759" endtime="20200727 10:49:07.760"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:07.763" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-ttnms/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:10.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:10.714" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:07.760" endtime="20200727 10:49:10.714"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:10.715" endtime="20200727 10:49:10.716"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:10.716" endtime="20200727 10:49:10.716"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:10.716" endtime="20200727 10:49:10.716"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:07.760" endtime="20200727 10:49:10.717"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:04.595" endtime="20200727 10:49:10.717" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20200727 10:49:10.719" level="INFO">${key} = o3://om/vol-ttnms/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20200727 10:49:10.719" endtime="20200727 10:49:10.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} /etc/passwd</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:10.722" level="INFO">Running command 'ozone sh key put o3://om/vol-ttnms/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:15.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:15.841" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:10.720" endtime="20200727 10:49:15.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:15.843" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:15.842" endtime="20200727 10:49:15.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:15.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:15.843" endtime="20200727 10:49:15.843"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:10.720" endtime="20200727 10:49:15.844"></status>
</kw>
<msg timestamp="20200727 10:49:15.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:10.720" endtime="20200727 10:49:15.844"></status>
</kw>
<msg timestamp="20200727 10:49:15.844" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:10.719" endtime="20200727 10:49:15.844"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:49:15.846" level="INFO">${postfix} = 10265</msg>
<status status="PASS" starttime="20200727 10:49:15.845" endtime="20200727 10:49:15.846"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:49:15.847" level="INFO">${tmpfile} = /tmp/tempkey-10265</msg>
<status status="PASS" starttime="20200727 10:49:15.846" endtime="20200727 10:49:15.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:15.850" level="INFO">Running command 'ozone sh key get -f o3://om/vol-ttnms/encrypted-bucket/passwd /tmp/tempkey-10265 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:20.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:20.674" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:15.848" endtime="20200727 10:49:20.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:20.675" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:20.674" endtime="20200727 10:49:20.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:20.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:20.675" endtime="20200727 10:49:20.676"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:15.848" endtime="20200727 10:49:20.676"></status>
</kw>
<msg timestamp="20200727 10:49:20.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:15.847" endtime="20200727 10:49:20.676"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:15.847" endtime="20200727 10:49:20.676"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:49:20.679" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-10265 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:20.681" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:49:20.676" endtime="20200727 10:49:20.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:20.685" level="INFO">Running command 'rm -f /tmp/tempkey-10265 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:20.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:20.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:49:20.683" endtime="20200727 10:49:20.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:20.689" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:49:20.688" endtime="20200727 10:49:20.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:20.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:20.689" endtime="20200727 10:49:20.689"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:20.683" endtime="20200727 10:49:20.689"></status>
</kw>
<msg timestamp="20200727 10:49:20.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:20.682" endtime="20200727 10:49:20.690"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:20.681" endtime="20200727 10:49:20.690"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:49:20.690" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:49:20.690" endtime="20200727 10:49:20.690"></status>
</kw>
<msg timestamp="20200727 10:49:20.691" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:49:15.845" endtime="20200727 10:49:20.691"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:20.691" endtime="20200727 10:49:20.691"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:15.844" endtime="20200727 10:49:20.691"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:10.718" endtime="20200727 10:49:20.692" critical="yes"></status>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20200727 10:49:01.545" endtime="20200727 10:49:20.693"></status>
</suite>
<suite id="s1-s2" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:20.706" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:20.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:20.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:49:20.703" endtime="20200727 10:49:20.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:20.709" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:49:20.709" endtime="20200727 10:49:20.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:20.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:20.709" endtime="20200727 10:49:20.710"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:20.703" endtime="20200727 10:49:20.710"></status>
</kw>
<msg timestamp="20200727 10:49:20.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:20.703" endtime="20200727 10:49:20.710"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:20.702" endtime="20200727 10:49:20.711"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ozone sh volume create o3://om/fstest</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:20.713" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:23.025" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:49:23.025" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:20.711" endtime="20200727 10:49:23.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:23.025" endtime="20200727 10:49:23.026"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:20.701" endtime="20200727 10:49:23.026" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:23.032" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:23.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:23.034" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:49:23.030" endtime="20200727 10:49:23.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:23.035" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:49:23.035" endtime="20200727 10:49:23.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:23.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:23.036" endtime="20200727 10:49:23.036"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:23.029" endtime="20200727 10:49:23.036"></status>
</kw>
<msg timestamp="20200727 10:49:23.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:23.029" endtime="20200727 10:49:23.036"></status>
</kw>
<msg timestamp="20200727 10:49:23.037" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:49:23.028" endtime="20200727 10:49:23.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:49:23.038" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:49:23.037" endtime="20200727 10:49:23.038"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:23.042" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:23.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:23.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:49:23.040" endtime="20200727 10:49:23.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:23.063" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:49:23.062" endtime="20200727 10:49:23.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:23.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:23.063" endtime="20200727 10:49:23.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:23.040" endtime="20200727 10:49:23.064"></status>
</kw>
<msg timestamp="20200727 10:49:23.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:23.039" endtime="20200727 10:49:23.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:23.039" endtime="20200727 10:49:23.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:23.038" endtime="20200727 10:49:23.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:23.028" endtime="20200727 10:49:23.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:23.028" endtime="20200727 10:49:23.064"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ozone sh volume create o3://om/fstest</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:23.066" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:25.816" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:49:25.816" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:23.065" endtime="20200727 10:49:25.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:25.817" endtime="20200727 10:49:25.818"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:23.027" endtime="20200727 10:49:25.818" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:25.825" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:25.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:25.827" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:49:25.822" endtime="20200727 10:49:25.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.828" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:49:25.827" endtime="20200727 10:49:25.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:25.828" endtime="20200727 10:49:25.829"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.821" endtime="20200727 10:49:25.829"></status>
</kw>
<msg timestamp="20200727 10:49:25.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:25.821" endtime="20200727 10:49:25.829"></status>
</kw>
<msg timestamp="20200727 10:49:25.829" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:49:25.821" endtime="20200727 10:49:25.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:49:25.830" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:49:25.830" endtime="20200727 10:49:25.830"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:25.835" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:25.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:25.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:49:25.832" endtime="20200727 10:49:25.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.869" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:49:25.869" endtime="20200727 10:49:25.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:25.869" endtime="20200727 10:49:25.870"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.831" endtime="20200727 10:49:25.870"></status>
</kw>
<msg timestamp="20200727 10:49:25.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:25.831" endtime="20200727 10:49:25.870"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.830" endtime="20200727 10:49:25.870"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.830" endtime="20200727 10:49:25.870"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.820" endtime="20200727 10:49:25.871"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.820" endtime="20200727 10:49:25.871"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup volume names</arg>
</arguments>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 10:49:25.873" level="INFO">${random} = 98</msg>
<status status="PASS" starttime="20200727 10:49:25.872" endtime="20200727 10:49:25.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.874" level="INFO">${volume1} = fstest98</msg>
<status status="PASS" starttime="20200727 10:49:25.873" endtime="20200727 10:49:25.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.875" level="INFO">${volume2} = fstest298</msg>
<status status="PASS" starttime="20200727 10:49:25.874" endtime="20200727 10:49:25.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
</arguments>
<msg timestamp="20200727 10:49:25.876" level="INFO">${volume3} = fstest398</msg>
<status status="PASS" starttime="20200727 10:49:25.875" endtime="20200727 10:49:25.876"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.871" endtime="20200727 10:49:25.877"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.871" endtime="20200727 10:49:25.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://om/${volume1}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:25.880" level="INFO">Running command 'ozone sh volume create o3://om/fstest98 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:28.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:28.892" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:25.878" endtime="20200727 10:49:28.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:28.893" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:28.893" endtime="20200727 10:49:28.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:28.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:28.894" endtime="20200727 10:49:28.894"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.878" endtime="20200727 10:49:28.894"></status>
</kw>
<msg timestamp="20200727 10:49:28.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:25.877" endtime="20200727 10:49:28.895"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:25.877" endtime="20200727 10:49:28.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://om/${volume2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:28.900" level="INFO">Running command 'ozone sh volume create o3://om/fstest298 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:31.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:31.880" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:28.896" endtime="20200727 10:49:31.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:31.881" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:31.881" endtime="20200727 10:49:31.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:31.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:31.882" endtime="20200727 10:49:31.882"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:28.896" endtime="20200727 10:49:31.883"></status>
</kw>
<msg timestamp="20200727 10:49:31.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:28.896" endtime="20200727 10:49:31.883"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:28.895" endtime="20200727 10:49:31.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://om/${volume1}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:31.887" level="INFO">Running command 'ozone sh bucket create o3://om/fstest98/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:34.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:34.747" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:31.885" endtime="20200727 10:49:34.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:34.748" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:34.747" endtime="20200727 10:49:34.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:34.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:34.748" endtime="20200727 10:49:34.749"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:31.884" endtime="20200727 10:49:34.749"></status>
</kw>
<msg timestamp="20200727 10:49:34.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:31.884" endtime="20200727 10:49:34.749"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:31.883" endtime="20200727 10:49:34.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://om/${volume1}/bucket2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:34.754" level="INFO">Running command 'ozone sh bucket create o3://om/fstest98/bucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:37.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:37.587" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:34.751" endtime="20200727 10:49:37.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:37.588" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:37.587" endtime="20200727 10:49:37.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:37.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:37.588" endtime="20200727 10:49:37.589"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:34.751" endtime="20200727 10:49:37.589"></status>
</kw>
<msg timestamp="20200727 10:49:37.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:34.751" endtime="20200727 10:49:37.589"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:34.750" endtime="20200727 10:49:37.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://om/${volume2}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:37.593" level="INFO">Running command 'ozone sh bucket create o3://om/fstest298/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:40.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:40.481" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:37.591" endtime="20200727 10:49:40.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:40.482" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:40.481" endtime="20200727 10:49:40.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:40.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:40.482" endtime="20200727 10:49:40.483"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:37.590" endtime="20200727 10:49:40.483"></status>
</kw>
<msg timestamp="20200727 10:49:40.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:37.590" endtime="20200727 10:49:40.483"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:37.590" endtime="20200727 10:49:40.483"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:25.819" endtime="20200727 10:49:40.483" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:40.490" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest98/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:43.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:43.569" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:40.486" endtime="20200727 10:49:43.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:43.570" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:43.569" endtime="20200727 10:49:43.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:43.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:43.571" endtime="20200727 10:49:43.571"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:40.486" endtime="20200727 10:49:43.572"></status>
</kw>
<msg timestamp="20200727 10:49:43.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:40.485" endtime="20200727 10:49:43.572"></status>
</kw>
<msg timestamp="20200727 10:49:43.572" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:40.485" endtime="20200727 10:49:43.572"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:40.484" endtime="20200727 10:49:43.572" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Test Volume Acls">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:43.577" level="INFO">Running command 'ozone sh volume create fstest398 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:46.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:46.373" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:43.575" endtime="20200727 10:49:46.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:46.374" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:49:46.374" endtime="20200727 10:49:46.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:46.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:46.374" endtime="20200727 10:49:46.375"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:43.575" endtime="20200727 10:49:46.375"></status>
</kw>
<msg timestamp="20200727 10:49:46.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:43.574" endtime="20200727 10:49:46.375"></status>
</kw>
<msg timestamp="20200727 10:49:46.376" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:43.574" endtime="20200727 10:49:46.376"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:46.376" endtime="20200727 10:49:46.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:46.380" level="INFO">Running command 'ozone sh volume getacl fstest398 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:49.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:49.347" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:46.378" endtime="20200727 10:49:49.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:49.348" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:49:49.348" endtime="20200727 10:49:49.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:49.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:49.349" endtime="20200727 10:49:49.349"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:46.377" endtime="20200727 10:49:49.349"></status>
</kw>
<msg timestamp="20200727 10:49:49.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:46.377" endtime="20200727 10:49:49.350"></status>
</kw>
<msg timestamp="20200727 10:49:49.350" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:46.376" endtime="20200727 10:49:49.350"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:49.350" endtime="20200727 10:49:49.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:49.355" level="INFO">Running command 'ozone sh volume addacl fstest398 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:52.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:52.404" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:49.353" endtime="20200727 10:49:52.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:52.406" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 10:49:52.405" endtime="20200727 10:49:52.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:52.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:52.406" endtime="20200727 10:49:52.407"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:49.352" endtime="20200727 10:49:52.407"></status>
</kw>
<msg timestamp="20200727 10:49:52.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:49.352" endtime="20200727 10:49:52.408"></status>
</kw>
<msg timestamp="20200727 10:49:52.408" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:49.351" endtime="20200727 10:49:52.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:52.412" level="INFO">Running command 'ozone sh volume getacl fstest398 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:55.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:55.265" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:52.410" endtime="20200727 10:49:55.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:55.266" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:49:55.265" endtime="20200727 10:49:55.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:55.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:55.266" endtime="20200727 10:49:55.266"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:52.409" endtime="20200727 10:49:55.267"></status>
</kw>
<msg timestamp="20200727 10:49:55.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:52.409" endtime="20200727 10:49:55.267"></status>
</kw>
<msg timestamp="20200727 10:49:55.267" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:52.408" endtime="20200727 10:49:55.267"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:49:55.267" endtime="20200727 10:49:55.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:55.272" level="INFO">Running command 'ozone sh volume removeacl fstest398 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:49:58.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:49:58.206" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:55.270" endtime="20200727 10:49:58.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:49:58.207" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:49:58.206" endtime="20200727 10:49:58.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:49:58.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:49:58.207" endtime="20200727 10:49:58.208"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:55.269" endtime="20200727 10:49:58.208"></status>
</kw>
<msg timestamp="20200727 10:49:58.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:55.269" endtime="20200727 10:49:58.208"></status>
</kw>
<msg timestamp="20200727 10:49:58.208" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:55.268" endtime="20200727 10:49:58.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:49:58.212" level="INFO">Running command 'ozone sh volume getacl fstest398 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:01.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:01.282" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:58.210" endtime="20200727 10:50:01.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:01.283" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:01.282" endtime="20200727 10:50:01.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:01.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:01.283" endtime="20200727 10:50:01.284"></status>
</kw>
<status status="PASS" starttime="20200727 10:49:58.209" endtime="20200727 10:50:01.284"></status>
</kw>
<msg timestamp="20200727 10:50:01.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:49:58.209" endtime="20200727 10:50:01.284"></status>
</kw>
<msg timestamp="20200727 10:50:01.284" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:49:58.209" endtime="20200727 10:50:01.284"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:01.285" endtime="20200727 10:50:01.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:01.290" level="INFO">Running command 'ozone sh volume setacl fstest398 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:04.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:04.124" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:01.288" endtime="20200727 10:50:04.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:04.126" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:50:04.125" endtime="20200727 10:50:04.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:04.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:04.126" endtime="20200727 10:50:04.126"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:01.286" endtime="20200727 10:50:04.127"></status>
</kw>
<msg timestamp="20200727 10:50:04.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:01.286" endtime="20200727 10:50:04.127"></status>
</kw>
<msg timestamp="20200727 10:50:04.127" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:01.286" endtime="20200727 10:50:04.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:04.131" level="INFO">Running command 'ozone sh volume getacl fstest398 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:07.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:07.163" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:04.129" endtime="20200727 10:50:07.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:07.164" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:07.163" endtime="20200727 10:50:07.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:07.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:07.164" endtime="20200727 10:50:07.165"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:04.128" endtime="20200727 10:50:07.165"></status>
</kw>
<msg timestamp="20200727 10:50:07.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:04.128" endtime="20200727 10:50:07.165"></status>
</kw>
<msg timestamp="20200727 10:50:07.165" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:04.127" endtime="20200727 10:50:07.165"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:07.166" endtime="20200727 10:50:07.166"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:07.167" endtime="20200727 10:50:07.167"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:49:43.573" endtime="20200727 10:50:07.167" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Test Bucket Acls">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:07.173" level="INFO">Running command 'ozone sh bucket create fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:09.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:09.682" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:07.171" endtime="20200727 10:50:09.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:09.683" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:50:09.682" endtime="20200727 10:50:09.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:09.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:09.683" endtime="20200727 10:50:09.684"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:07.170" endtime="20200727 10:50:09.684"></status>
</kw>
<msg timestamp="20200727 10:50:09.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:07.170" endtime="20200727 10:50:09.684"></status>
</kw>
<msg timestamp="20200727 10:50:09.684" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:07.169" endtime="20200727 10:50:09.684"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:09.685" endtime="20200727 10:50:09.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:09.690" level="INFO">Running command 'ozone sh bucket getacl fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:12.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:12.679" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:09.687" endtime="20200727 10:50:12.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:12.680" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:12.679" endtime="20200727 10:50:12.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:12.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:12.680" endtime="20200727 10:50:12.681"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:09.686" endtime="20200727 10:50:12.681"></status>
</kw>
<msg timestamp="20200727 10:50:12.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:09.686" endtime="20200727 10:50:12.681"></status>
</kw>
<msg timestamp="20200727 10:50:12.682" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:09.685" endtime="20200727 10:50:12.682"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:12.682" endtime="20200727 10:50:12.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:12.686" level="INFO">Running command 'ozone sh bucket addacl fstest398/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:15.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:15.558" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:12.684" endtime="20200727 10:50:15.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:15.559" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 10:50:15.558" endtime="20200727 10:50:15.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:15.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:15.559" endtime="20200727 10:50:15.560"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:12.683" endtime="20200727 10:50:15.560"></status>
</kw>
<msg timestamp="20200727 10:50:15.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:12.683" endtime="20200727 10:50:15.560"></status>
</kw>
<msg timestamp="20200727 10:50:15.561" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:12.682" endtime="20200727 10:50:15.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:15.564" level="INFO">Running command 'ozone sh bucket getacl fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:18.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:18.579" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:15.562" endtime="20200727 10:50:18.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:18.580" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:18.579" endtime="20200727 10:50:18.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:18.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:18.580" endtime="20200727 10:50:18.581"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:15.562" endtime="20200727 10:50:18.581"></status>
</kw>
<msg timestamp="20200727 10:50:18.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:15.561" endtime="20200727 10:50:18.581"></status>
</kw>
<msg timestamp="20200727 10:50:18.582" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:15.561" endtime="20200727 10:50:18.582"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:18.582" endtime="20200727 10:50:18.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:18.587" level="INFO">Running command 'ozone sh bucket removeacl fstest398/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:21.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:21.336" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:18.584" endtime="20200727 10:50:21.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:21.338" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:50:21.337" endtime="20200727 10:50:21.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:21.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:21.338" endtime="20200727 10:50:21.338"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:18.583" endtime="20200727 10:50:21.339"></status>
</kw>
<msg timestamp="20200727 10:50:21.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:18.583" endtime="20200727 10:50:21.339"></status>
</kw>
<msg timestamp="20200727 10:50:21.339" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:18.582" endtime="20200727 10:50:21.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:21.343" level="INFO">Running command 'ozone sh bucket getacl fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:24.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:24.281" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:21.341" endtime="20200727 10:50:24.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:24.282" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:24.282" endtime="20200727 10:50:24.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:24.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:24.283" endtime="20200727 10:50:24.283"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:21.340" endtime="20200727 10:50:24.283"></status>
</kw>
<msg timestamp="20200727 10:50:24.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:21.340" endtime="20200727 10:50:24.284"></status>
</kw>
<msg timestamp="20200727 10:50:24.284" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:21.339" endtime="20200727 10:50:24.284"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:24.284" endtime="20200727 10:50:24.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:24.288" level="INFO">Running command 'ozone sh bucket setacl fstest398/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:27.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:27.153" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:24.286" endtime="20200727 10:50:27.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:27.154" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:50:27.153" endtime="20200727 10:50:27.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:27.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:27.154" endtime="20200727 10:50:27.155"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:24.286" endtime="20200727 10:50:27.155"></status>
</kw>
<msg timestamp="20200727 10:50:27.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:24.286" endtime="20200727 10:50:27.155"></status>
</kw>
<msg timestamp="20200727 10:50:27.156" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:24.285" endtime="20200727 10:50:27.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:27.159" level="INFO">Running command 'ozone sh bucket getacl fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:29.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:29.914" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:27.157" endtime="20200727 10:50:29.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:29.915" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:29.915" endtime="20200727 10:50:29.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:29.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:29.916" endtime="20200727 10:50:29.916"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:27.157" endtime="20200727 10:50:29.916"></status>
</kw>
<msg timestamp="20200727 10:50:29.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:27.156" endtime="20200727 10:50:29.917"></status>
</kw>
<msg timestamp="20200727 10:50:29.917" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:27.156" endtime="20200727 10:50:29.917"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:29.917" endtime="20200727 10:50:29.918"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:29.918" endtime="20200727 10:50:29.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:50:07.168" endtime="20200727 10:50:29.919" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Test key Acls">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:29.923" level="INFO">Running command 'ozone sh key put fstest398/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:34.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:34.534" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:29.921" endtime="20200727 10:50:34.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:34.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200727 10:50:34.535" endtime="20200727 10:50:34.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:34.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:34.535" endtime="20200727 10:50:34.536"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:29.921" endtime="20200727 10:50:34.536"></status>
</kw>
<msg timestamp="20200727 10:50:34.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:29.920" endtime="20200727 10:50:34.536"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:29.920" endtime="20200727 10:50:34.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:34.540" level="INFO">Running command 'ozone sh key getacl fstest398/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:37.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:37.606" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:34.538" endtime="20200727 10:50:37.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:37.607" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:37.606" endtime="20200727 10:50:37.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:37.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:37.607" endtime="20200727 10:50:37.608"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:34.537" endtime="20200727 10:50:37.608"></status>
</kw>
<msg timestamp="20200727 10:50:37.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:34.537" endtime="20200727 10:50:37.608"></status>
</kw>
<msg timestamp="20200727 10:50:37.608" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:34.537" endtime="20200727 10:50:37.608"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:37.609" endtime="20200727 10:50:37.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:37.614" level="INFO">Running command 'ozone sh key addacl fstest398/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:40.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:40.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:37.611" endtime="20200727 10:50:40.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:40.665" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:50:40.664" endtime="20200727 10:50:40.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:40.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:40.665" endtime="20200727 10:50:40.666"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:37.611" endtime="20200727 10:50:40.666"></status>
</kw>
<msg timestamp="20200727 10:50:40.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:37.610" endtime="20200727 10:50:40.666"></status>
</kw>
<msg timestamp="20200727 10:50:40.666" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:37.609" endtime="20200727 10:50:40.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:40.670" level="INFO">Running command 'ozone sh key getacl fstest398/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:43.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:43.523" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:40.668" endtime="20200727 10:50:43.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:43.524" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:43.523" endtime="20200727 10:50:43.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:43.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:43.524" endtime="20200727 10:50:43.524"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:40.667" endtime="20200727 10:50:43.525"></status>
</kw>
<msg timestamp="20200727 10:50:43.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:40.667" endtime="20200727 10:50:43.525"></status>
</kw>
<msg timestamp="20200727 10:50:43.525" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:40.667" endtime="20200727 10:50:43.525"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:43.525" endtime="20200727 10:50:43.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:43.529" level="INFO">Running command 'ozone sh key removeacl fstest398/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:46.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:46.341" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:43.527" endtime="20200727 10:50:46.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:46.342" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:50:46.341" endtime="20200727 10:50:46.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:46.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:46.342" endtime="20200727 10:50:46.342"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:43.527" endtime="20200727 10:50:46.343"></status>
</kw>
<msg timestamp="20200727 10:50:46.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:43.526" endtime="20200727 10:50:46.343"></status>
</kw>
<msg timestamp="20200727 10:50:46.343" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:43.526" endtime="20200727 10:50:46.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:46.347" level="INFO">Running command 'ozone sh key getacl fstest398/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:49.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:49.265" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:46.345" endtime="20200727 10:50:49.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:49.266" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:49.265" endtime="20200727 10:50:49.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:49.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:49.267" endtime="20200727 10:50:49.267"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:46.344" endtime="20200727 10:50:49.267"></status>
</kw>
<msg timestamp="20200727 10:50:49.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:46.344" endtime="20200727 10:50:49.268"></status>
</kw>
<msg timestamp="20200727 10:50:49.268" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:46.343" endtime="20200727 10:50:49.268"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:49.268" endtime="20200727 10:50:49.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:49.273" level="INFO">Running command 'ozone sh key setacl fstest398/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:52.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:52.020" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:49.270" endtime="20200727 10:50:52.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:52.021" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:50:52.020" endtime="20200727 10:50:52.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:52.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:52.021" endtime="20200727 10:50:52.022"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:49.269" endtime="20200727 10:50:52.022"></status>
</kw>
<msg timestamp="20200727 10:50:52.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:49.269" endtime="20200727 10:50:52.022"></status>
</kw>
<msg timestamp="20200727 10:50:52.023" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:49.269" endtime="20200727 10:50:52.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:52.026" level="INFO">Running command 'ozone sh key getacl fstest398/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:54.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:54.826" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:52.024" endtime="20200727 10:50:54.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:54.828" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:50:54.827" endtime="20200727 10:50:54.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:54.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:54.828" endtime="20200727 10:50:54.829"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:52.024" endtime="20200727 10:50:54.829"></status>
</kw>
<msg timestamp="20200727 10:50:54.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:52.023" endtime="20200727 10:50:54.829"></status>
</kw>
<msg timestamp="20200727 10:50:54.830" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:52.023" endtime="20200727 10:50:54.830"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:54.830" endtime="20200727 10:50:54.830"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:50:54.831" endtime="20200727 10:50:54.831"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:50:29.919" endtime="20200727 10:50:54.831" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Test native authorizer">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:54.837" level="INFO">Running command 'ozone sh volume removeacl fstest398 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:57.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:57.681" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:54.834" endtime="20200727 10:50:57.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.682" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:root:a[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:50:57.682" endtime="20200727 10:50:57.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:57.683" endtime="20200727 10:50:57.684"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:54.834" endtime="20200727 10:50:57.684"></status>
</kw>
<msg timestamp="20200727 10:50:57.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:54.834" endtime="20200727 10:50:57.684"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:54.833" endtime="20200727 10:50:57.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:57.688" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:57.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:57.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:50:57.686" endtime="20200727 10:50:57.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.692" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:50:57.692" endtime="20200727 10:50:57.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:57.693" endtime="20200727 10:50:57.693"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.685" endtime="20200727 10:50:57.693"></status>
</kw>
<msg timestamp="20200727 10:50:57.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:57.685" endtime="20200727 10:50:57.694"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.684" endtime="20200727 10:50:57.694"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:57.699" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:57.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:57.700" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:50:57.696" endtime="20200727 10:50:57.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.701" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:50:57.701" endtime="20200727 10:50:57.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:57.701" endtime="20200727 10:50:57.702"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.695" endtime="20200727 10:50:57.702"></status>
</kw>
<msg timestamp="20200727 10:50:57.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:57.695" endtime="20200727 10:50:57.702"></status>
</kw>
<msg timestamp="20200727 10:50:57.703" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:50:57.695" endtime="20200727 10:50:57.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:50:57.703" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:50:57.703" endtime="20200727 10:50:57.703"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:57.707" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:50:57.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:50:57.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:50:57.705" endtime="20200727 10:50:57.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.730" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:50:57.729" endtime="20200727 10:50:57.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:50:57.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:50:57.730" endtime="20200727 10:50:57.731"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.705" endtime="20200727 10:50:57.731"></status>
</kw>
<msg timestamp="20200727 10:50:57.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:50:57.705" endtime="20200727 10:50:57.731"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.704" endtime="20200727 10:50:57.731"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.703" endtime="20200727 10:50:57.732"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.694" endtime="20200727 10:50:57.732"></status>
</kw>
<status status="PASS" starttime="20200727 10:50:57.694" endtime="20200727 10:50:57.732"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:50:57.735" level="INFO">Running command 'ozone sh bucket list /fstest398/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:00.462" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:51:00.462" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:57.732" endtime="20200727 10:51:00.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:00.464" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume</msg>
<status status="PASS" starttime="20200727 10:51:00.463" endtime="20200727 10:51:00.464"></status>
</kw>
<msg timestamp="20200727 10:51:00.464" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:50:57.732" endtime="20200727 10:51:00.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:00.465" endtime="20200727 10:51:00.465"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:00.468" level="INFO">Running command 'ozone sh key list /fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:02.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:51:02.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:00.466" endtime="20200727 10:51:02.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:02.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume</msg>
<status status="PASS" starttime="20200727 10:51:02.990" endtime="20200727 10:51:02.991"></status>
</kw>
<msg timestamp="20200727 10:51:02.992" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:00.465" endtime="20200727 10:51:02.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:02.992" endtime="20200727 10:51:02.992"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:02.996" level="INFO">Running command 'ozone sh volume addacl fstest398 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:05.640" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:51:05.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:02.993" endtime="20200727 10:51:05.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</msg>
<status status="PASS" starttime="20200727 10:51:05.640" endtime="20200727 10:51:05.641"></status>
</kw>
<msg timestamp="20200727 10:51:05.641" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:02.992" endtime="20200727 10:51:05.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:05.641" endtime="20200727 10:51:05.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:05.646" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:05.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:05.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:05.643" endtime="20200727 10:51:05.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.650" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:05.650" endtime="20200727 10:51:05.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:05.651" endtime="20200727 10:51:05.651"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.643" endtime="20200727 10:51:05.651"></status>
</kw>
<msg timestamp="20200727 10:51:05.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:05.642" endtime="20200727 10:51:05.652"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.642" endtime="20200727 10:51:05.652"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:05.657" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:05.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:05.658" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:51:05.654" endtime="20200727 10:51:05.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.660" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:51:05.659" endtime="20200727 10:51:05.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:05.660" endtime="20200727 10:51:05.661"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.653" endtime="20200727 10:51:05.662"></status>
</kw>
<msg timestamp="20200727 10:51:05.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:05.653" endtime="20200727 10:51:05.662"></status>
</kw>
<msg timestamp="20200727 10:51:05.662" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:51:05.653" endtime="20200727 10:51:05.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:51:05.663" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:05.663" endtime="20200727 10:51:05.663"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:05.667" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:05.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:05.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:05.665" endtime="20200727 10:51:05.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.684" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:05.684" endtime="20200727 10:51:05.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:05.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:05.685" endtime="20200727 10:51:05.685"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.665" endtime="20200727 10:51:05.685"></status>
</kw>
<msg timestamp="20200727 10:51:05.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:05.665" endtime="20200727 10:51:05.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.664" endtime="20200727 10:51:05.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.663" endtime="20200727 10:51:05.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.652" endtime="20200727 10:51:05.686"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.652" endtime="20200727 10:51:05.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:05.690" level="INFO">Running command 'ozone sh volume addacl fstest398 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:08.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:08.608" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:05.688" endtime="20200727 10:51:08.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.609" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:51:08.608" endtime="20200727 10:51:08.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:08.609" endtime="20200727 10:51:08.610"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.687" endtime="20200727 10:51:08.610"></status>
</kw>
<msg timestamp="20200727 10:51:08.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:05.687" endtime="20200727 10:51:08.610"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:05.686" endtime="20200727 10:51:08.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:08.615" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:08.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:08.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:08.612" endtime="20200727 10:51:08.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.619" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:08.618" endtime="20200727 10:51:08.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:08.619" endtime="20200727 10:51:08.619"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.612" endtime="20200727 10:51:08.620"></status>
</kw>
<msg timestamp="20200727 10:51:08.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:08.611" endtime="20200727 10:51:08.620"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.611" endtime="20200727 10:51:08.620"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:08.625" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:08.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:08.626" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:51:08.622" endtime="20200727 10:51:08.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.627" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:51:08.626" endtime="20200727 10:51:08.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:08.627" endtime="20200727 10:51:08.628"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.621" endtime="20200727 10:51:08.628"></status>
</kw>
<msg timestamp="20200727 10:51:08.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:08.621" endtime="20200727 10:51:08.628"></status>
</kw>
<msg timestamp="20200727 10:51:08.629" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:51:08.621" endtime="20200727 10:51:08.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:51:08.629" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:08.629" endtime="20200727 10:51:08.629"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:08.634" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:08.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:08.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:08.631" endtime="20200727 10:51:08.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.652" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:08.651" endtime="20200727 10:51:08.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:08.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:08.652" endtime="20200727 10:51:08.652"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.631" endtime="20200727 10:51:08.653"></status>
</kw>
<msg timestamp="20200727 10:51:08.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:08.631" endtime="20200727 10:51:08.653"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.630" endtime="20200727 10:51:08.653"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.629" endtime="20200727 10:51:08.653"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.620" endtime="20200727 10:51:08.653"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:08.620" endtime="20200727 10:51:08.653"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:08.657" level="INFO">Running command 'ozone sh bucket list /fstest398/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:11.440" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:51:11.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:08.654" endtime="20200727 10:51:11.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:11.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</msg>
<status status="PASS" starttime="20200727 10:51:11.441" endtime="20200727 10:51:11.441"></status>
</kw>
<msg timestamp="20200727 10:51:11.442" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:08.654" endtime="20200727 10:51:11.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:11.442" endtime="20200727 10:51:11.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:11.446" level="INFO">Running command 'ozone sh volume addacl fstest398 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:14.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:14.278" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:11.444" endtime="20200727 10:51:14.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:14.279" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:51:14.278" endtime="20200727 10:51:14.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:14.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:14.279" endtime="20200727 10:51:14.280"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:11.443" endtime="20200727 10:51:14.280"></status>
</kw>
<msg timestamp="20200727 10:51:14.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:11.443" endtime="20200727 10:51:14.280"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:11.442" endtime="20200727 10:51:14.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:14.285" level="INFO">Running command 'ozone sh bucket list /fstest398/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:17.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:17.126" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:14.282" endtime="20200727 10:51:17.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:17.127" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "fstest398",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:50:09.567Z",
  "modificationTime" : "2020-07-27T10:50:09.567Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 10:51:17.126" endtime="20200727 10:51:17.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:17.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:17.127" endtime="20200727 10:51:17.128"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:14.282" endtime="20200727 10:51:17.128"></status>
</kw>
<msg timestamp="20200727 10:51:17.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:14.281" endtime="20200727 10:51:17.129"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:14.281" endtime="20200727 10:51:17.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl /${volume3}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:17.134" level="INFO">Running command 'ozone sh volume getacl /fstest398/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:20.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:20.043" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:17.131" endtime="20200727 10:51:20.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:20.044" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:51:20.043" endtime="20200727 10:51:20.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:20.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:20.044" endtime="20200727 10:51:20.044"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:17.130" endtime="20200727 10:51:20.045"></status>
</kw>
<msg timestamp="20200727 10:51:20.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:17.130" endtime="20200727 10:51:20.045"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:17.129" endtime="20200727 10:51:20.045"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:20.049" level="INFO">Running command 'ozone sh key list /fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:22.821" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:51:22.821" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:20.046" endtime="20200727 10:51:22.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.822" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" starttime="20200727 10:51:22.822" endtime="20200727 10:51:22.823"></status>
</kw>
<msg timestamp="20200727 10:51:22.823" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:20.045" endtime="20200727 10:51:22.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:22.823" endtime="20200727 10:51:22.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:22.827" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:22.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:22.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:22.825" endtime="20200727 10:51:22.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.832" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:22.831" endtime="20200727 10:51:22.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:22.832" endtime="20200727 10:51:22.833"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.825" endtime="20200727 10:51:22.833"></status>
</kw>
<msg timestamp="20200727 10:51:22.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:22.824" endtime="20200727 10:51:22.833"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.824" endtime="20200727 10:51:22.833"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:22.838" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:22.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:22.840" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:51:22.836" endtime="20200727 10:51:22.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.841" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:51:22.841" endtime="20200727 10:51:22.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:22.841" endtime="20200727 10:51:22.842"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.835" endtime="20200727 10:51:22.842"></status>
</kw>
<msg timestamp="20200727 10:51:22.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:22.835" endtime="20200727 10:51:22.842"></status>
</kw>
<msg timestamp="20200727 10:51:22.843" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:51:22.834" endtime="20200727 10:51:22.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:51:22.843" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:22.843" endtime="20200727 10:51:22.843"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:22.847" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:22.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:22.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:22.846" endtime="20200727 10:51:22.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.865" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:22.864" endtime="20200727 10:51:22.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:22.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:22.865" endtime="20200727 10:51:22.866"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.845" endtime="20200727 10:51:22.866"></status>
</kw>
<msg timestamp="20200727 10:51:22.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:22.845" endtime="20200727 10:51:22.866"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.844" endtime="20200727 10:51:22.866"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.844" endtime="20200727 10:51:22.866"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.834" endtime="20200727 10:51:22.867"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.834" endtime="20200727 10:51:22.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:22.871" level="INFO">Running command 'ozone sh bucket addacl fstest398/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:25.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:25.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:22.868" endtime="20200727 10:51:25.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:25.531" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:51:25.530" endtime="20200727 10:51:25.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:25.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:25.531" endtime="20200727 10:51:25.532"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.868" endtime="20200727 10:51:25.532"></status>
</kw>
<msg timestamp="20200727 10:51:25.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:22.867" endtime="20200727 10:51:25.532"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:22.867" endtime="20200727 10:51:25.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:25.538" level="INFO">Running command 'ozone sh bucket getacl /fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:28.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:28.461" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:25.534" endtime="20200727 10:51:28.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.462" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:51:28.461" endtime="20200727 10:51:28.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:28.462" endtime="20200727 10:51:28.463"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:25.534" endtime="20200727 10:51:28.463"></status>
</kw>
<msg timestamp="20200727 10:51:28.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:25.533" endtime="20200727 10:51:28.463"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:25.533" endtime="20200727 10:51:28.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:28.468" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:28.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:28.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:28.465" endtime="20200727 10:51:28.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.472" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:28.472" endtime="20200727 10:51:28.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:28.472" endtime="20200727 10:51:28.473"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.464" endtime="20200727 10:51:28.473"></status>
</kw>
<msg timestamp="20200727 10:51:28.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:28.464" endtime="20200727 10:51:28.473"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.464" endtime="20200727 10:51:28.474"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:28.480" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:28.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:28.481" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:51:28.477" endtime="20200727 10:51:28.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.482" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:51:28.481" endtime="20200727 10:51:28.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:28.482" endtime="20200727 10:51:28.483"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.476" endtime="20200727 10:51:28.483"></status>
</kw>
<msg timestamp="20200727 10:51:28.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:28.476" endtime="20200727 10:51:28.483"></status>
</kw>
<msg timestamp="20200727 10:51:28.483" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:51:28.475" endtime="20200727 10:51:28.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:51:28.484" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:28.484" endtime="20200727 10:51:28.484"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:28.488" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:28.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:28.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:28.486" endtime="20200727 10:51:28.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.507" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:28.506" endtime="20200727 10:51:28.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:28.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:28.507" endtime="20200727 10:51:28.508"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.485" endtime="20200727 10:51:28.508"></status>
</kw>
<msg timestamp="20200727 10:51:28.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:28.485" endtime="20200727 10:51:28.508"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.485" endtime="20200727 10:51:28.508"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.484" endtime="20200727 10:51:28.508"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.474" endtime="20200727 10:51:28.508"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.474" endtime="20200727 10:51:28.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:28.513" level="INFO">Running command 'ozone sh bucket getacl /fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:31.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:31.555" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:28.510" endtime="20200727 10:51:31.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:31.556" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:51:31.556" endtime="20200727 10:51:31.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:31.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:31.557" endtime="20200727 10:51:31.557"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.509" endtime="20200727 10:51:31.558"></status>
</kw>
<msg timestamp="20200727 10:51:31.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:28.509" endtime="20200727 10:51:31.558"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:28.509" endtime="20200727 10:51:31.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:31.563" level="INFO">Running command 'ozone sh key list /fstest398/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:34.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:34.450" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:31.561" endtime="20200727 10:51:34.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.451" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "fstest398",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17540,
  "creationTime" : "2020-07-27T10:50:32.648Z",
  "modificationTime" : "2020-07-27T10:50:34.061Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20200727 10:51:34.450" endtime="20200727 10:51:34.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:34.451" endtime="20200727 10:51:34.452"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:31.559" endtime="20200727 10:51:34.452"></status>
</kw>
<msg timestamp="20200727 10:51:34.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:31.559" endtime="20200727 10:51:34.452"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:31.558" endtime="20200727 10:51:34.452"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:34.457" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:34.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:34.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:34.454" endtime="20200727 10:51:34.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.460" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:34.460" endtime="20200727 10:51:34.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:34.460" endtime="20200727 10:51:34.461"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.453" endtime="20200727 10:51:34.461"></status>
</kw>
<msg timestamp="20200727 10:51:34.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:34.453" endtime="20200727 10:51:34.461"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.452" endtime="20200727 10:51:34.462"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:34.467" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:34.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:34.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:51:34.464" endtime="20200727 10:51:34.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.469" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:51:34.469" endtime="20200727 10:51:34.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:34.469" endtime="20200727 10:51:34.470"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.463" endtime="20200727 10:51:34.470"></status>
</kw>
<msg timestamp="20200727 10:51:34.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:34.463" endtime="20200727 10:51:34.471"></status>
</kw>
<msg timestamp="20200727 10:51:34.471" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:51:34.463" endtime="20200727 10:51:34.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:51:34.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:34.471" endtime="20200727 10:51:34.472"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:34.476" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:34.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:34.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:34.473" endtime="20200727 10:51:34.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.490" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:34.489" endtime="20200727 10:51:34.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:34.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:34.490" endtime="20200727 10:51:34.491"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.473" endtime="20200727 10:51:34.491"></status>
</kw>
<msg timestamp="20200727 10:51:34.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:34.473" endtime="20200727 10:51:34.491"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.472" endtime="20200727 10:51:34.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.472" endtime="20200727 10:51:34.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.462" endtime="20200727 10:51:34.492"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.462" endtime="20200727 10:51:34.492"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:50:54.832" endtime="20200727 10:51:34.492" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 10:49:20.695" endtime="20200727 10:51:34.494"></status>
</suite>
<suite id="s1-s3" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s3-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup s3 tests</arg>
</arguments>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:34.518" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:34.520" level="INFO">${rc} = 1</msg>
<msg timestamp="20200727 10:51:34.520" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200727 10:51:34.514" endtime="20200727 10:51:34.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:34.520" endtime="20200727 10:51:34.521"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:34.523" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:34.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:34.667" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Triggername'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" starttime="20200727 10:51:34.521" endtime="20200727 10:51:34.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:34.673" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:47.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:47.955" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.wdc1.us.leaseweb.net
 * epel: dl.fedoraproject.org
 * extras: mirror.wdc1.us.leaseweb.net
 * updates: mirror.centos.iad1....</msg>
<status status="PASS" starttime="20200727 10:51:34.671" endtime="20200727 10:51:47.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:47.956" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.wdc1.us.leaseweb.net
 * epel: dl.fedoraproject.org
 * extras: mirror.wdc1.us.leaseweb.net
 * updates: mirror.centos.iad1.serverforge.org
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7.0.1 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7.0.1.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-19.el7 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-19.el7 for package: 1:openssl-1.0.2k-19.el7.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-19.el7.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-32.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-32.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-7.el7 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-16.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-19.el7 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                         Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                          noarch 1.14.28-5.el7_5.1            base 1.0 M
Installing for dependencies:
 PyYAML                          x86_64 3.10-11.el7                  base 153 k
 jbigkit-libs                    x86_64 2.0-11.el7                   base  46 k
 libtiff                         x86_64 4.0.3-32.el7                 base 171 k
 libwebp                         x86_64 0.3.0-7.el7                  base 170 k
 libyaml                         x86_64 0.1.4-11.el7_0               base  55 k
 make                            x86_64 1:3.82-24.el7                base 421 k
 openssl                         x86_64 1:1.0.2k-19.el7              base 493 k
 python-backports                x86_64 1.0-8.el7                    base 5.8 k
 python-backports-ssl_match_hostname
                                 noarch 3.5.0.1-1.el7                base  13 k
 python-cffi                     x86_64 1.6.0-5.el7                  base 218 k
 python-dateutil                 noarch 1.5-7.el7                    base  85 k
 python-docutils                 noarch 0.11-0.3.20130715svn7687.el7 base 1.5 M
 python-enum34                   noarch 1.0.4-1.el7                  base  52 k
 python-idna                     noarch 2.4-1.el7                    base  94 k
 python-ipaddress                noarch 1.0.16-2.el7                 base  34 k
 python-pillow                   x86_64 2.0.0-20.gitd1c6db8.el7_7    base 439 k
 python-ply                      noarch 3.4-11.el7                   base 123 k
 python-pycparser                noarch 2.14-1.el7                   base 104 k
 python-s3transfer               noarch 0.1.13-1.el7.0.1             base 2.9 M
 python-setuptools               noarch 0.9.8-7.el7                  base 397 k
 python-six                      noarch 1.9.0-2.el7                  base  29 k
 python2-cryptography            x86_64 1.7.2-2.el7                  base 502 k
 python2-pyasn1                  noarch 0.1.9-7.el7                  base 100 k
Updating for dependencies:
 openssl-libs                    x86_64 1:1.0.2k-19.el7              base 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 10 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                               22 MB/s |  10 MB  00:00     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-19.el7.x86_64                         2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : python-backports-1.0-8.el7.x86_64                           6/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    7/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                        8/26 
  Installing : python-ply-3.4-11.el7.noarch                                9/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         10/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             11/26 
  Installing : python-idna-2.4-1.el7.noarch                               12/26 
  Installing : python-six-1.9.0-2.el7.noarch                              13/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  14/26 
  Installing : 1:openssl-1.0.2k-19.el7.x86_64                             15/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           16/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Installing : libtiff-4.0.3-32.el7.x86_64                                18/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           19/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    20/26 
  Installing : libwebp-0.3.0-7.el7.x86_64                                 21/26 
  Installing : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             22/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        23/26 
  Installing : python-s3transfer-0.1.13-1.el7.0.1.noarch                  24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : libwebp-0.3.0-7.el7.x86_64                                  2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        4/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         5/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                              6/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            7/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                   8/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                               9/26 
  Verifying  : python-s3transfer-0.1.13-1.el7.0.1.noarch                  10/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               11/26 
  Verifying  : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : 1:openssl-1.0.2k-19.el7.x86_64                             14/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          15/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             16/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            17/26 
  Verifying  : 1:openssl-libs-1.0.2k-19.el7.x86_64                        18/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         19/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              20/26 
  Verifying  : libtiff-4.0.3-32.el7.x86_64                                21/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       22/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          23/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-32.el7                                                 
  libwebp.x86_64 0:0.3.0-7.el7                                                  
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-19.el7                                                
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7                              
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7.0.1                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-19.el7                                           

Complete!</msg>
<status status="PASS" starttime="20200727 10:51:47.956" endtime="20200727 10:51:47.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:47.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:47.957" endtime="20200727 10:51:47.957"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.670" endtime="20200727 10:51:47.958"></status>
</kw>
<msg timestamp="20200727 10:51:47.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:34.670" endtime="20200727 10:51:47.958"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.669" endtime="20200727 10:51:47.959"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.669" endtime="20200727 10:51:47.959"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.668" endtime="20200727 10:51:47.959"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.514" endtime="20200727 10:51:47.959"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.514" endtime="20200727 10:51:47.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:47.965" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:47.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:47.967" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 10:51:47.963" endtime="20200727 10:51:47.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:47.968" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 10:51:47.968" endtime="20200727 10:51:47.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:47.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:47.969" endtime="20200727 10:51:47.969"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.962" endtime="20200727 10:51:47.970"></status>
</kw>
<msg timestamp="20200727 10:51:47.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:47.962" endtime="20200727 10:51:47.970"></status>
</kw>
<msg timestamp="20200727 10:51:47.970" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 10:51:47.961" endtime="20200727 10:51:47.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 10:51:47.972" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:47.970" endtime="20200727 10:51:47.972"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:47.978" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:47.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:47.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:47.974" endtime="20200727 10:51:47.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:47.994" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:47.993" endtime="20200727 10:51:47.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:47.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:47.994" endtime="20200727 10:51:47.994"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.973" endtime="20200727 10:51:47.995"></status>
</kw>
<msg timestamp="20200727 10:51:47.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:47.973" endtime="20200727 10:51:47.995"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.972" endtime="20200727 10:51:47.995"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.972" endtime="20200727 10:51:47.995"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.961" endtime="20200727 10:51:47.995"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.961" endtime="20200727 10:51:47.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:48.001" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:51.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:51.019" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:47.998" endtime="20200727 10:51:51.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:51.021" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f8ff64a1cbf6148b55b231b21a3ef34db5075e4b18bd27fe4a7257b2460b0b94</msg>
<status status="PASS" starttime="20200727 10:51:51.020" endtime="20200727 10:51:51.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:51.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:51.021" endtime="20200727 10:51:51.021"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.997" endtime="20200727 10:51:51.022"></status>
</kw>
<msg timestamp="20200727 10:51:51.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:47.997" endtime="20200727 10:51:51.022"></status>
</kw>
<msg timestamp="20200727 10:51:51.022" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:51:47.997" endtime="20200727 10:51:51.022"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200727 10:51:51.023" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200727 10:51:51.023" endtime="20200727 10:51:51.024"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200727 10:51:51.024" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200727 10:51:51.024" endtime="20200727 10:51:51.024"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200727 10:51:51.025" level="INFO">${secret} = ['f8ff64a1cbf6148b55b231b21a3ef34db5075e4b18bd27fe4a7257b2460b0b94']</msg>
<status status="PASS" starttime="20200727 10:51:51.024" endtime="20200727 10:51:51.025"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200727 10:51:51.026" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 10:51:51.025" endtime="20200727 10:51:51.026"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200727 10:51:51.026" level="INFO">${secret} = f8ff64a1cbf6148b55b231b21a3ef34db5075e4b18bd27fe4a7257b2460b0b94</msg>
<status status="PASS" starttime="20200727 10:51:51.026" endtime="20200727 10:51:51.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:51.031" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:51.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:51.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:51.028" endtime="20200727 10:51:51.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:51.365" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:51.364" endtime="20200727 10:51:51.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:51.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:51.365" endtime="20200727 10:51:51.366"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:51.027" endtime="20200727 10:51:51.366"></status>
</kw>
<msg timestamp="20200727 10:51:51.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:51.027" endtime="20200727 10:51:51.366"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:51.026" endtime="20200727 10:51:51.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:51.371" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:51.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:51.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:51.368" endtime="20200727 10:51:51.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:51.693" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:51.693" endtime="20200727 10:51:51.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:51.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:51.694" endtime="20200727 10:51:51.694"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:51.368" endtime="20200727 10:51:51.695"></status>
</kw>
<msg timestamp="20200727 10:51:51.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:51.367" endtime="20200727 10:51:51.695"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:51.367" endtime="20200727 10:51:51.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:51.700" level="INFO">Running command 'aws configure set aws_secret_access_key f8ff64a1cbf6148b55b231b21a3ef34db5075e4b18bd27fe4a7257b2460b0b94 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:52.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:52.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:51.697" endtime="20200727 10:51:52.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:52.039" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:52.038" endtime="20200727 10:51:52.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:52.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:52.039" endtime="20200727 10:51:52.040"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:51.696" endtime="20200727 10:51:52.040"></status>
</kw>
<msg timestamp="20200727 10:51:52.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:51.696" endtime="20200727 10:51:52.040"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:51.695" endtime="20200727 10:51:52.040"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:52.045" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:52.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:52.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:52.042" endtime="20200727 10:51:52.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:52.367" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:52.366" endtime="20200727 10:51:52.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:52.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:52.367" endtime="20200727 10:51:52.368"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:52.041" endtime="20200727 10:51:52.368"></status>
</kw>
<msg timestamp="20200727 10:51:52.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:52.041" endtime="20200727 10:51:52.368"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:52.040" endtime="20200727 10:51:52.368"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.996" endtime="20200727 10:51:52.368"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.996" endtime="20200727 10:51:52.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:52.369" endtime="20200727 10:51:52.369"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.960" endtime="20200727 10:51:52.369"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:47.960" endtime="20200727 10:51:52.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:51:52.371" level="INFO">${postfix} = 20902</msg>
<status status="PASS" starttime="20200727 10:51:52.370" endtime="20200727 10:51:52.371"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20200727 10:51:52.371" level="INFO">${bucket} = bucket-20902</msg>
<status status="PASS" starttime="20200727 10:51:52.371" endtime="20200727 10:51:52.371"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:52.376" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-20902 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:53.975" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-20902"
}</msg>
<status status="PASS" starttime="20200727 10:51:52.373" endtime="20200727 10:51:53.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:53.977" level="INFO">{
    "Location": "http://s3g:9878/bucket-20902"
}</msg>
<status status="PASS" starttime="20200727 10:51:53.976" endtime="20200727 10:51:53.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:53.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:53.977" endtime="20200727 10:51:53.977"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:52.373" endtime="20200727 10:51:53.978"></status>
</kw>
<msg timestamp="20200727 10:51:53.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:52.373" endtime="20200727 10:51:53.978"></status>
</kw>
<msg timestamp="20200727 10:51:53.978" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-20902"
}</msg>
<status status="PASS" starttime="20200727 10:51:52.372" endtime="20200727 10:51:53.978"></status>
</kw>
<msg timestamp="20200727 10:51:53.979" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-20902"
}</msg>
<status status="PASS" starttime="20200727 10:51:52.372" endtime="20200727 10:51:53.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:53.979" endtime="20200727 10:51:53.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:53.979" endtime="20200727 10:51:53.980"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:52.371" endtime="20200727 10:51:53.980"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:52.370" endtime="20200727 10:51:53.980"></status>
</kw>
<msg timestamp="20200727 10:51:53.980" level="INFO">${BUCKET} = bucket-20902</msg>
<status status="PASS" starttime="20200727 10:51:52.369" endtime="20200727 10:51:53.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20200727 10:51:53.981" level="INFO">${BUCKET} = bucket-20902</msg>
<status status="PASS" starttime="20200727 10:51:53.980" endtime="20200727 10:51:53.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:53.981" endtime="20200727 10:51:53.981"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.513" endtime="20200727 10:51:53.981"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:34.513" endtime="20200727 10:51:53.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:53.986" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:54.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:54.560" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200727 10:51:53.984" endtime="20200727 10:51:54.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:54.561" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200727 10:51:54.561" endtime="20200727 10:51:54.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:54.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:54.561" endtime="20200727 10:51:54.562"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:53.983" endtime="20200727 10:51:54.562"></status>
</kw>
<msg timestamp="20200727 10:51:54.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:53.982" endtime="20200727 10:51:54.563"></status>
</kw>
<msg timestamp="20200727 10:51:54.563" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200727 10:51:53.982" endtime="20200727 10:51:54.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:54.566" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:55.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:55.075" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2020-07-27T10:51:53.910Z", 
            "Name": "bucket-20902"
        }, 
        {
            "CreationDate": "2020-07-27T10:51:54.415Z", 
...</msg>
<status status="PASS" starttime="20200727 10:51:54.564" endtime="20200727 10:51:55.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:55.076" level="INFO">{
    "Buckets": [
        {
            "CreationDate": "2020-07-27T10:51:53.910Z", 
            "Name": "bucket-20902"
        }, 
        {
            "CreationDate": "2020-07-27T10:51:54.415Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 10:51:55.075" endtime="20200727 10:51:55.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:55.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:55.076" endtime="20200727 10:51:55.077"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:54.564" endtime="20200727 10:51:55.077"></status>
</kw>
<msg timestamp="20200727 10:51:55.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:54.564" endtime="20200727 10:51:55.077"></status>
</kw>
<msg timestamp="20200727 10:51:55.077" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2020-07-27T10:51:53.910Z", 
            "Name": "bucket-20902"
        }, 
        {
            "CreationDate": "2020-07-27T10:51:54.415Z", 
...</msg>
<status status="PASS" starttime="20200727 10:51:54.563" endtime="20200727 10:51:55.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>bucket-test123</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:55.077" endtime="20200727 10:51:55.078"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:51:34.512" endtime="20200727 10:51:55.078" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
</arguments>
<assign>
<var>${testFilePath}</var>
</assign>
<msg timestamp="20200727 10:51:55.080" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20200727 10:51:55.080" endtime="20200727 10:51:55.080"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
</arguments>
<msg timestamp="20200727 10:51:55.081" level="INFO" html="yes">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200727 10:51:55.080" endtime="20200727 10:51:55.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:55.085" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:57.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:57.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:55.083" endtime="20200727 10:51:57.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:57.152" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:57.151" endtime="20200727 10:51:57.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:57.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:57.152" endtime="20200727 10:51:57.153"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:55.083" endtime="20200727 10:51:57.153"></status>
</kw>
<msg timestamp="20200727 10:51:57.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:55.082" endtime="20200727 10:51:57.153"></status>
</kw>
<msg timestamp="20200727 10:51:57.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:55.082" endtime="20200727 10:51:57.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:57.158" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:57.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:57.680" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 10:51:57.155" endtime="20200727 10:51:57.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:57.681" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17540
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 10:51:57.680" endtime="20200727 10:51:57.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:57.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:57.681" endtime="20200727 10:51:57.682"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:57.154" endtime="20200727 10:51:57.682"></status>
</kw>
<msg timestamp="20200727 10:51:57.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:57.154" endtime="20200727 10:51:57.682"></status>
</kw>
<msg timestamp="20200727 10:51:57.683" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 10:51:57.153" endtime="20200727 10:51:57.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:57.683" endtime="20200727 10:51:57.683"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:57.688" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:58.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:58.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:57.685" endtime="20200727 10:51:58.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:58.359" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:58.358" endtime="20200727 10:51:58.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:58.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:58.359" endtime="20200727 10:51:58.360"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:57.684" endtime="20200727 10:51:58.360"></status>
</kw>
<msg timestamp="20200727 10:51:58.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:57.684" endtime="20200727 10:51:58.360"></status>
</kw>
<msg timestamp="20200727 10:51:58.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:57.683" endtime="20200727 10:51:58.360"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:58.365" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:58.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:58.858" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 10:51:58.362" endtime="20200727 10:51:58.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:58.859" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17540
        }, 
        {
            "LastModified": "2020-07-27T10:51:58.202Z", 
            "ETag": "2020-07-27T10:51:58.202Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17540
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 10:51:58.859" endtime="20200727 10:51:58.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:58.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:58.860" endtime="20200727 10:51:58.860"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:58.362" endtime="20200727 10:51:58.861"></status>
</kw>
<msg timestamp="20200727 10:51:58.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:58.361" endtime="20200727 10:51:58.861"></status>
</kw>
<msg timestamp="20200727 10:51:58.861" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20200727 10:51:58.361" endtime="20200727 10:51:58.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
</arguments>
<status status="PASS" starttime="20200727 10:51:58.861" endtime="20200727 10:51:58.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:58.867" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:51:59.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:51:59.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:58.863" endtime="20200727 10:51:59.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:51:59.517" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:51:59.516" endtime="20200727 10:51:59.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:51:59.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:51:59.517" endtime="20200727 10:51:59.518"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:58.863" endtime="20200727 10:51:59.518"></status>
</kw>
<msg timestamp="20200727 10:51:59.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:58.862" endtime="20200727 10:51:59.518"></status>
</kw>
<msg timestamp="20200727 10:51:59.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:51:58.862" endtime="20200727 10:51:59.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:51:59.524" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:00.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:00.012" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:59.363Z", 
            "ETag": "2020-07-27T10:51:59.363Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20200727 10:51:59.520" endtime="20200727 10:52:00.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:00.014" level="INFO">{
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:59.363Z", 
            "ETag": "2020-07-27T10:51:59.363Z", 
            "StorageClass": "STANDARD", 
            "Key": "//tmp5/tmp6/NOTICE.txt", 
            "Size": 17540
        }, 
        {
            "LastModified": "2020-07-27T10:51:57.075Z", 
            "ETag": "2020-07-27T10:51:57.075Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17540
        }, 
        {
            "LastModified": "2020-07-27T10:51:58.202Z", 
            "ETag": "2020-07-27T10:51:58.202Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17540
        }
    ]
}</msg>
<status status="PASS" starttime="20200727 10:52:00.013" endtime="20200727 10:52:00.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:00.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:00.014" endtime="20200727 10:52:00.015"></status>
</kw>
<status status="PASS" starttime="20200727 10:51:59.520" endtime="20200727 10:52:00.015"></status>
</kw>
<msg timestamp="20200727 10:52:00.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:51:59.519" endtime="20200727 10:52:00.015"></status>
</kw>
<msg timestamp="20200727 10:52:00.015" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2020-07-27T10:51:59.363Z", 
            "ETag": "2020-07-27T10:51:59.363Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20200727 10:51:59.519" endtime="20200727 10:52:00.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
</arguments>
<status status="PASS" starttime="20200727 10:52:00.016" endtime="20200727 10:52:00.016"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:51:55.079" endtime="20200727 10:52:00.016" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:00.023" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:00.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:00.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:52:00.021" endtime="20200727 10:52:00.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:00.349" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:52:00.349" endtime="20200727 10:52:00.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:00.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:00.350" endtime="20200727 10:52:00.350"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.020" endtime="20200727 10:52:00.350"></status>
</kw>
<msg timestamp="20200727 10:52:00.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:00.020" endtime="20200727 10:52:00.350"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.020" endtime="20200727 10:52:00.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:00.356" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:00.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:00.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:52:00.352" endtime="20200727 10:52:00.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:00.689" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:52:00.688" endtime="20200727 10:52:00.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:00.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:00.689" endtime="20200727 10:52:00.690"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.352" endtime="20200727 10:52:00.690"></status>
</kw>
<msg timestamp="20200727 10:52:00.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:00.352" endtime="20200727 10:52:00.690"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.351" endtime="20200727 10:52:00.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:00.695" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:01.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:01.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:52:00.692" endtime="20200727 10:52:01.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:01.041" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:52:01.041" endtime="20200727 10:52:01.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:01.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:01.042" endtime="20200727 10:52:01.042"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.692" endtime="20200727 10:52:01.042"></status>
</kw>
<msg timestamp="20200727 10:52:01.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:00.691" endtime="20200727 10:52:01.043"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.691" endtime="20200727 10:52:01.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:01.047" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:01.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:01.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:52:01.044" endtime="20200727 10:52:01.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:01.392" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:52:01.391" endtime="20200727 10:52:01.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:01.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:01.392" endtime="20200727 10:52:01.393"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:01.044" endtime="20200727 10:52:01.393"></status>
</kw>
<msg timestamp="20200727 10:52:01.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:01.044" endtime="20200727 10:52:01.393"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:01.043" endtime="20200727 10:52:01.394"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.019" endtime="20200727 10:52:01.394"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:00.018" endtime="20200727 10:52:01.394"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:52:01.397" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:12.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:52:12.036" level="INFO">${result} = 
An error occurred (500) when calling the CreateBucket operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20200727 10:52:01.394" endtime="20200727 10:52:12.036"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rc} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20200727 10:52:12.036" endtime="20200727 10:52:12.037"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:52:00.017" endtime="20200727 10:52:12.037" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 10:51:34.497" endtime="20200727 10:52:12.039"></status>
</suite>
<suite id="s1-s4" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s4-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
</arguments>
<status status="PASS" starttime="20200727 10:52:12.049" endtime="20200727 10:52:12.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
</arguments>
<kw name="Token Test in Secure Cluster">
<kw name="Get Token in Secure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token get &gt; /tmp/token.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:12.054" level="INFO">Running command 'ozone sh token get &gt; /tmp/token.txt'.</msg>
<msg timestamp="20200727 10:52:15.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:15.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:52:12.052" endtime="20200727 10:52:15.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:15.073" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:52:15.072" endtime="20200727 10:52:15.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:15.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:15.073" endtime="20200727 10:52:15.073"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:12.051" endtime="20200727 10:52:15.074"></status>
</kw>
<msg timestamp="20200727 10:52:15.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:12.051" endtime="20200727 10:52:15.074"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:12.051" endtime="20200727 10:52:15.074"></status>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<doc>Fails if the specified directory is empty.</doc>
<arguments>
<arg>/tmp/token.txt</arg>
</arguments>
<msg timestamp="20200727 10:52:15.075" level="INFO" html="yes">File '&lt;a href="file:///tmp/token.txt"&gt;/tmp/token.txt&lt;/a&gt;' contains 506 bytes.</msg>
<status status="PASS" starttime="20200727 10:52:15.074" endtime="20200727 10:52:15.075"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:12.051" endtime="20200727 10:52:15.075"></status>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token print</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:15.079" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:16.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:16.524" level="INFO">${output} = {
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMJycm/+4LjicpM2fuy5AAUgBWg0zOTUxODQ4ODA4MDE5ehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "LBUDh15PKja0EsM0kSV4cyx/Q5vUgp0NwO1iLI83w...</msg>
<status status="PASS" starttime="20200727 10:52:15.077" endtime="20200727 10:52:16.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:16.527" level="INFO">{
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMJycm/+4LjicpM2fuy5AAUgBWg0zOTUxODQ4ODA4MDE5ehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "LBUDh15PKja0EsM0kSV4cyx/Q5vUgp0NwO1iLI83wujme7dKmxHv17VyB+PQpK3YVL9HzX8k3WzFO/P0ctKlirBW91fRop+gudx+wcUdLZZDoNTTSRMVVn6v6euPcTXuaFGCL3+Js+JD0km10r+4smLFxZP7w7qz7zvr7sKo6OLmW00vX0XoaEeX+8sbZSB9kDaHLMMEb6uitBtexOW4gPp3s9XkVqMhRwa+szWV8rMB0QjIkCviJvWCJnEwlCzXsyrV0dHycGY2xhNDZ6K++EMFN8Psfgp7BEhtmEqOTWn9kny4HMkWJunezszDpfGXsZA8ac+LZ+amBkk5B7RkAA==",
  "kind" : {
    "bytes" : "T3pvbmVUb2tlbg==",
    "length" : 10
  },
  "service" : {
    "bytes" : "MTcyLjI2LjAuMTA6OTg2Mg==",
    "length" : 16
  },
  "private" : false,
  "managed" : true
}</msg>
<status status="PASS" starttime="20200727 10:52:16.524" endtime="20200727 10:52:16.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:16.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:16.527" endtime="20200727 10:52:16.528"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:15.076" endtime="20200727 10:52:16.528"></status>
</kw>
<msg timestamp="20200727 10:52:16.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:15.076" endtime="20200727 10:52:16.528"></status>
</kw>
<msg timestamp="20200727 10:52:16.528" level="INFO">${output} = {
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMJycm/+4LjicpM2fuy5AAUgBWg0zOTUxODQ4ODA4MDE5ehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "LBUDh15PKja0EsM0kSV4cyx/Q5vUgp0NwO1iLI83w...</msg>
<status status="PASS" starttime="20200727 10:52:15.075" endtime="20200727 10:52:16.528"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:16.529" level="INFO">Length is 698</msg>
<status status="PASS" starttime="20200727 10:52:16.529" endtime="20200727 10:52:16.529"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:15.075" endtime="20200727 10:52:16.529"></status>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token renew</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:16.534" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:19.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:19.528" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:52:16.531" endtime="20200727 10:52:19.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:19.530" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Token renewed successfully, expiry time: 1595933539214.</msg>
<status status="PASS" starttime="20200727 10:52:19.529" endtime="20200727 10:52:19.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:19.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:19.530" endtime="20200727 10:52:19.530"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:16.530" endtime="20200727 10:52:19.531"></status>
</kw>
<msg timestamp="20200727 10:52:19.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:16.530" endtime="20200727 10:52:19.531"></status>
</kw>
<msg timestamp="20200727 10:52:19.531" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:52:16.530" endtime="20200727 10:52:19.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
</arguments>
<status status="PASS" starttime="20200727 10:52:19.531" endtime="20200727 10:52:19.532"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:16.529" endtime="20200727 10:52:19.532"></status>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token cancel</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:19.536" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:22.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:22.358" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:52:19.534" endtime="20200727 10:52:22.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:22.359" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Token canceled successfully.</msg>
<status status="PASS" starttime="20200727 10:52:22.358" endtime="20200727 10:52:22.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:22.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:22.359" endtime="20200727 10:52:22.360"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:19.533" endtime="20200727 10:52:22.360"></status>
</kw>
<msg timestamp="20200727 10:52:22.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:19.533" endtime="20200727 10:52:22.360"></status>
</kw>
<msg timestamp="20200727 10:52:22.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200727 10:52:19.532" endtime="20200727 10:52:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
</arguments>
<status status="PASS" starttime="20200727 10:52:22.361" endtime="20200727 10:52:22.361"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:19.532" endtime="20200727 10:52:22.361"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:12.050" endtime="20200727 10:52:22.361"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:12.050" endtime="20200727 10:52:22.361"></status>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token print -t /asdf</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:52:22.366" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:52:23.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:52:23.620" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:52:22.363" endtime="20200727 10:52:23.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:52:23.621" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:52:23.621" endtime="20200727 10:52:23.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:52:23.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:52:23.622" endtime="20200727 10:52:23.623"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:22.363" endtime="20200727 10:52:23.623"></status>
</kw>
<msg timestamp="20200727 10:52:23.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:52:22.362" endtime="20200727 10:52:23.623"></status>
</kw>
<msg timestamp="20200727 10:52:23.623" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:52:22.362" endtime="20200727 10:52:23.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
</arguments>
<status status="PASS" starttime="20200727 10:52:23.623" endtime="20200727 10:52:23.624"></status>
</kw>
<status status="PASS" starttime="20200727 10:52:22.362" endtime="20200727 10:52:23.624"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:52:12.049" endtime="20200727 10:52:23.624" critical="yes"></status>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20200727 10:52:12.042" endtime="20200727 10:52:23.625"></status>
</suite>
<status status="PASS" starttime="20200727 10:49:01.520" endtime="20200727 10:52:23.628"></status>
</suite>
<statistics>
<total>
<stat pass="14" fail="0">Critical Tests</stat>
<stat pass="14" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" id="s1" name="ozonesecure-security">ozonesecure-security</stat>
<stat pass="2" fail="0" id="s1-s1" name="Bucket-Encryption">ozonesecure-security.Bucket-Encryption</stat>
<stat pass="8" fail="0" id="s1-s2" name="Ozone-Secure-Fs">ozonesecure-security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" id="s1-s3" name="Ozone-Secure-S3">ozonesecure-security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" id="s1-s4" name="Ozone-Secure-Token">ozonesecure-security.Ozone-Secure-Token</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
