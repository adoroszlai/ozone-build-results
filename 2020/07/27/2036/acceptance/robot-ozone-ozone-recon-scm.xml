<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 10:28:25.444" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:25.494" endtime="20200727 10:28:25.494"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:25.500" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:33.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:33.641" level="INFO">${output} = 2020-07-27 10:28:26,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:28:26,954 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:28:25.495" endtime="20200727 10:28:33.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:33.642" level="INFO">2020-07-27 10:28:26,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:28:26,954 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:28:26,954 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:28:28,058 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-27 10:28:28,059 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 10:28:28,059 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 10:28:28,059 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-27 10:28:28,059 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-27 10:28:28,059 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 10:28:28,059 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 10:28:28,069 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 10:28:28,082 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-27 10:28:28,134 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-45798, with hadoop as owner.
2020-07-27 10:28:28,177 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-45798/bucket-0-67614, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:28:28,743 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:28:29,088 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,096
Average Time spent in key write: 00:00:00,548
Total bytes written: 10250
Total Execution time: 00:00:06,087
***************************************************</msg>
<status status="PASS" starttime="20200727 10:28:33.641" endtime="20200727 10:28:33.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:33.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:33.642" endtime="20200727 10:28:33.643"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:25.495" endtime="20200727 10:28:33.643"></status>
</kw>
<msg timestamp="20200727 10:28:33.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:25.495" endtime="20200727 10:28:33.643"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:25.494" endtime="20200727 10:28:33.644"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:28:25.493" endtime="20200727 10:28:33.644" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:33.646" endtime="20200727 10:28:33.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:33.651" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:33.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:33.835" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:33.648" endtime="20200727 10:28:33.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:33.836" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:33.836" endtime="20200727 10:28:33.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:33.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:33.837" endtime="20200727 10:28:33.837"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:33.647" endtime="20200727 10:28:33.838"></status>
</kw>
<msg timestamp="20200727 10:28:33.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:33.647" endtime="20200727 10:28:33.838"></status>
</kw>
<msg timestamp="20200727 10:28:33.838" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:33.647" endtime="20200727 10:28:33.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:33.838" endtime="20200727 10:28:33.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:33.843" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:33.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:33.881" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:28:33.840" endtime="20200727 10:28:33.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:33.882" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 10:28:33.881" endtime="20200727 10:28:33.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:33.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:33.883" endtime="20200727 10:28:33.883"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:33.840" endtime="20200727 10:28:33.884"></status>
</kw>
<msg timestamp="20200727 10:28:33.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:33.839" endtime="20200727 10:28:33.884"></status>
</kw>
<msg timestamp="20200727 10:28:33.884" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:28:33.839" endtime="20200727 10:28:33.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 10:28:33.885" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 10:28:33.884" endtime="20200727 10:28:33.885"></status>
</kw>
<status status="FAIL" starttime="20200727 10:28:33.646" endtime="20200727 10:28:33.885"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:43.886" endtime="20200727 10:28:43.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:43.892" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:43.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:43.907" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:43.888" endtime="20200727 10:28:43.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:43.909" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:43.908" endtime="20200727 10:28:43.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:43.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:43.909" endtime="20200727 10:28:43.910"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:43.888" endtime="20200727 10:28:43.910"></status>
</kw>
<msg timestamp="20200727 10:28:43.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:43.887" endtime="20200727 10:28:43.910"></status>
</kw>
<msg timestamp="20200727 10:28:43.911" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:43.887" endtime="20200727 10:28:43.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:43.911" endtime="20200727 10:28:43.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:43.915" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:43.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:43.935" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:28:43.913" endtime="20200727 10:28:43.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:43.937" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 10:28:43.936" endtime="20200727 10:28:43.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:43.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:43.937" endtime="20200727 10:28:43.938"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:43.912" endtime="20200727 10:28:43.938"></status>
</kw>
<msg timestamp="20200727 10:28:43.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:43.912" endtime="20200727 10:28:43.938"></status>
</kw>
<msg timestamp="20200727 10:28:43.939" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:28:43.911" endtime="20200727 10:28:43.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 10:28:43.940" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 10:28:43.939" endtime="20200727 10:28:43.940"></status>
</kw>
<status status="FAIL" starttime="20200727 10:28:43.886" endtime="20200727 10:28:43.940"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:53.942" endtime="20200727 10:28:53.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:53.946" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:53.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:53.964" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:53.943" endtime="20200727 10:28:53.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:53.965" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:53.964" endtime="20200727 10:28:53.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:53.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:53.965" endtime="20200727 10:28:53.965"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:53.943" endtime="20200727 10:28:53.966"></status>
</kw>
<msg timestamp="20200727 10:28:53.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:53.943" endtime="20200727 10:28:53.966"></status>
</kw>
<msg timestamp="20200727 10:28:53.966" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:28:53.942" endtime="20200727 10:28:53.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:28:53.966" endtime="20200727 10:28:53.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:28:53.972" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:28:53.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:28:53.988" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:28:53.969" endtime="20200727 10:28:53.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:28:53.989" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 10:28:53.988" endtime="20200727 10:28:53.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:28:53.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:28:53.989" endtime="20200727 10:28:53.990"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:53.968" endtime="20200727 10:28:53.990"></status>
</kw>
<msg timestamp="20200727 10:28:53.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:28:53.968" endtime="20200727 10:28:53.990"></status>
</kw>
<msg timestamp="20200727 10:28:53.991" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:28:53.967" endtime="20200727 10:28:53.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 10:28:53.992" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 10:28:53.991" endtime="20200727 10:28:53.992"></status>
</kw>
<status status="FAIL" starttime="20200727 10:28:53.941" endtime="20200727 10:28:53.992"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:03.994" endtime="20200727 10:29:03.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:03.998" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:04.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:04.014" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:29:03.996" endtime="20200727 10:29:04.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:04.015" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:29:04.014" endtime="20200727 10:29:04.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:04.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:04.015" endtime="20200727 10:29:04.015"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:03.995" endtime="20200727 10:29:04.015"></status>
</kw>
<msg timestamp="20200727 10:29:04.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:03.995" endtime="20200727 10:29:04.016"></status>
</kw>
<msg timestamp="20200727 10:29:04.016" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":167}]}}</msg>
<status status="PASS" starttime="20200727 10:29:03.994" endtime="20200727 10:29:04.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:04.016" endtime="20200727 10:29:04.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:04.021" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:04.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:04.038" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:29:04.018" endtime="20200727 10:29:04.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:04.040" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 10:29:04.039" endtime="20200727 10:29:04.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:04.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:04.040" endtime="20200727 10:29:04.041"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:04.017" endtime="20200727 10:29:04.041"></status>
</kw>
<msg timestamp="20200727 10:29:04.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:04.017" endtime="20200727 10:29:04.042"></status>
</kw>
<msg timestamp="20200727 10:29:04.042" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:29:04.017" endtime="20200727 10:29:04.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 10:29:04.043" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 10:29:04.042" endtime="20200727 10:29:04.043"></status>
</kw>
<status status="FAIL" starttime="20200727 10:29:03.993" endtime="20200727 10:29:04.043"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.044" endtime="20200727 10:29:14.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.049" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.068" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 10:29:14.047" endtime="20200727 10:29:14.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.069" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 10:29:14.068" endtime="20200727 10:29:14.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.069" endtime="20200727 10:29:14.070"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.046" endtime="20200727 10:29:14.070"></status>
</kw>
<msg timestamp="20200727 10:29:14.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.046" endtime="20200727 10:29:14.070"></status>
</kw>
<msg timestamp="20200727 10:29:14.071" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":167},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200727 10:29:14.045" endtime="20200727 10:29:14.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.071" endtime="20200727 10:29:14.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.076" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.090" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:29:14.073" endtime="20200727 10:29:14.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.095" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-3-78736","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-3-83400","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-3-18947","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-2-36845","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-2-88876","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-0-33512","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-3-11163","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-0-77442","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-2-06696","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-2-83853","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-1-70456","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-1-07774","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-1-59378","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-1-43500","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-0-32442","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-0-51794","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-2-75941","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-4-85890","fileSize":16384,"count":5},{"volume":"vol-3-51193","bucket":"bucket-1-43592","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-3-78174","fileSize":16384,"count":5},{"volume":"vol-2-82332","bucket":"bucket-4-20860","fileSize":16384,"count":5},{"volume":"vol-0-16260","bucket":"bucket-0-15651","fileSize":16384,"count":5},{"volume":"vol-4-11242","bucket":"bucket-4-87283","fileSize":16384,"count":5},{"volume":"94882-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"80343-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"80343-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"80343-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-35537","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-44346","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-64207","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-79673","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-64207","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-93659","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-01829","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-04758","fileSize":1024,"count":1},{"volume":"vol-0-45798","bucket":"bucket-0-67614","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200727 10:29:14.094" endtime="20200727 10:29:14.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.095" endtime="20200727 10:29:14.096"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.072" endtime="20200727 10:29:14.096"></status>
</kw>
<msg timestamp="20200727 10:29:14.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.072" endtime="20200727 10:29:14.096"></status>
</kw>
<msg timestamp="20200727 10:29:14.097" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol-3-51193","bucket":"bucket-4-64518","fileSize":16384,"count":5},{"volume":"vol-1-23555","bucket":"bucket-4-54861","fileSize...</msg>
<status status="PASS" starttime="20200727 10:29:14.071" endtime="20200727 10:29:14.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.097" endtime="20200727 10:29:14.097"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.044" endtime="20200727 10:29:14.097"></status>
</kw>
<status status="PASS" starttime="20200727 10:28:33.645" endtime="20200727 10:29:14.097"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:28:33.645" endtime="20200727 10:29:14.098" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.106" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.135" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"46b94b35-5774-4b00-b041-92a50957aa3a","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595845739680,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200727 10:29:14.103" endtime="20200727 10:29:14.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.136" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"46b94b35-5774-4b00-b041-92a50957aa3a","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595845739680,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24702914560},"pipelines":[{"pipelineID":"2ed3e510-e37f-43f7-88d9-f08b07c9fa51","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"ee0ba515-9899-4dd9-9a53-9ed160247b89","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595844103971,"revision":"78875bb2617849e4cd55489aa4661234282fa628","buildDate":"2020-07-27T09:34Z"},{"uuid":"b4f8b9cd-2c51-4573-ad25-97e4b8f0c160","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1595845739792,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24702914560},"pipelines":[{"pipelineID":"2ed3e510-e37f-43f7-88d9-f08b07c9fa51","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"c2225063-fc0b-4d0e-9f2b-49c155db40a9","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595844104776,"revision":"78875bb2617849e4cd55489aa4661234282fa628","buildDate":"2020-07-27T09:34Z"},{"uuid":"8e35db7a-a0ce-4813-a04a-762c9eee3154","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1595845739785,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24702914560},"pipelines":[{"pipelineID":"2ed3e510-e37f-43f7-88d9-f08b07c9fa51","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"87220eb7-cb99-4a39-a6ca-a07de43e7531","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1595844104890,"revision":"78875bb2617849e4cd55489aa4661234282fa628","buildDate":"2020-07-27T09:34Z"}]}</msg>
<status status="PASS" starttime="20200727 10:29:14.136" endtime="20200727 10:29:14.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.136" endtime="20200727 10:29:14.137"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.102" endtime="20200727 10:29:14.137"></status>
</kw>
<msg timestamp="20200727 10:29:14.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.102" endtime="20200727 10:29:14.138"></status>
</kw>
<msg timestamp="20200727 10:29:14.138" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"46b94b35-5774-4b00-b041-92a50957aa3a","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1595845739680,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200727 10:29:14.101" endtime="20200727 10:29:14.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.138" endtime="20200727 10:29:14.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.138" endtime="20200727 10:29:14.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.139" endtime="20200727 10:29:14.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.139" endtime="20200727 10:29:14.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.143" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.169" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"2ed3e510-e37f-43f7-88d9-f08b07c9fa51","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_dat...</msg>
<status status="PASS" starttime="20200727 10:29:14.141" endtime="20200727 10:29:14.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.170" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"2ed3e510-e37f-43f7-88d9-f08b07c9fa51","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_datanode_1.ozone_default","ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1573910,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"ee0ba515-9899-4dd9-9a53-9ed160247b89","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1573936,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"c2225063-fc0b-4d0e-9f2b-49c155db40a9","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1574512,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"87220eb7-cb99-4a39-a6ca-a07de43e7531","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1574590,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200727 10:29:14.169" endtime="20200727 10:29:14.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.170" endtime="20200727 10:29:14.170"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.141" endtime="20200727 10:29:14.171"></status>
</kw>
<msg timestamp="20200727 10:29:14.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.140" endtime="20200727 10:29:14.171"></status>
</kw>
<msg timestamp="20200727 10:29:14.171" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"2ed3e510-e37f-43f7-88d9-f08b07c9fa51","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_dat...</msg>
<status status="PASS" starttime="20200727 10:29:14.140" endtime="20200727 10:29:14.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.171" endtime="20200727 10:29:14.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.172" endtime="20200727 10:29:14.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.172" endtime="20200727 10:29:14.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.173" endtime="20200727 10:29:14.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.173" endtime="20200727 10:29:14.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.174" endtime="20200727 10:29:14.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.178" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.195" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74108743680},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200727 10:29:14.176" endtime="20200727 10:29:14.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.196" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74108743680},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200727 10:29:14.196" endtime="20200727 10:29:14.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.197" endtime="20200727 10:29:14.197"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.175" endtime="20200727 10:29:14.197"></status>
</kw>
<msg timestamp="20200727 10:29:14.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.175" endtime="20200727 10:29:14.197"></status>
</kw>
<msg timestamp="20200727 10:29:14.198" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74108743680},"containers":4,"volumes":23,"buckets":80,"keys":198}</msg>
<status status="PASS" starttime="20200727 10:29:14.175" endtime="20200727 10:29:14.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.198" endtime="20200727 10:29:14.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.198" endtime="20200727 10:29:14.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.199" endtime="20200727 10:29:14.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.202" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.229" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595844232884,"lastReportTimestamp":1595845642846},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200727 10:29:14.200" endtime="20200727 10:29:14.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.231" level="INFO">[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595844232884,"lastReportTimestamp":1595845642846},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1595844232987,"lastReportTimestamp":1595845739682},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1595844232649,"lastReportTimestamp":1595845739786}]</msg>
<status status="PASS" starttime="20200727 10:29:14.230" endtime="20200727 10:29:14.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.231" endtime="20200727 10:29:14.232"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.200" endtime="20200727 10:29:14.232"></status>
</kw>
<msg timestamp="20200727 10:29:14.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.200" endtime="20200727 10:29:14.232"></status>
</kw>
<msg timestamp="20200727 10:29:14.233" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1595844232884,"lastReportTimestamp":1595845642846},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200727 10:29:14.199" endtime="20200727 10:29:14.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.233" endtime="20200727 10:29:14.233"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:29:14.100" endtime="20200727 10:29:14.234" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.235" endtime="20200727 10:29:14.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:14.239" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:14.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:14.259" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 10:29:14.237" endtime="20200727 10:29:14.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.260" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.de8738b4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.d84a7cfa.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2fc2e818.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.30b8d325.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.259" endtime="20200727 10:29:14.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:14.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:14.260" endtime="20200727 10:29:14.260"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:14.237" endtime="20200727 10:29:14.260"></status>
</kw>
<msg timestamp="20200727 10:29:14.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:14.236" endtime="20200727 10:29:14.261"></status>
</kw>
<msg timestamp="20200727 10:29:14.261" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 10:29:14.236" endtime="20200727 10:29:14.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:14.261" endtime="20200727 10:29:14.262"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:29:14.234" endtime="20200727 10:29:14.262" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 10:28:25.469" endtime="20200727 10:29:14.265"></status>
</suite>
<status status="PASS" starttime="20200727 10:28:25.445" endtime="20200727 10:29:14.268"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
