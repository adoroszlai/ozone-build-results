<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 09:48:52.822" rpa="false">
<suite id="s1" name="hadoop31-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:48:52.873" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:48:54.706" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 09:48:54.706" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:48:52.869" endtime="20200727 09:48:54.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:48:54.707" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:48:54.707" endtime="20200727 09:48:54.707"></status>
</kw>
<msg timestamp="20200727 09:48:54.708" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:48:52.869" endtime="20200727 09:48:54.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:48:54.713" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:48:56.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:48:56.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:48:54.710" endtime="20200727 09:48:56.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:48:56.424" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:48:56.424" endtime="20200727 09:48:56.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:48:56.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:48:56.425" endtime="20200727 09:48:56.425"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:54.709" endtime="20200727 09:48:56.425"></status>
</kw>
<msg timestamp="20200727 09:48:56.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:48:54.709" endtime="20200727 09:48:56.426"></status>
</kw>
<msg timestamp="20200727 09:48:56.426" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 09:48:54.709" endtime="20200727 09:48:56.426"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 09:48:56.426" endtime="20200727 09:48:56.426"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:54.708" endtime="20200727 09:48:56.426"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:54.708" endtime="20200727 09:48:56.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:48:56.433" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:48:58.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:48:58.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:48:56.430" endtime="20200727 09:48:58.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:48:58.101" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:48:58.100" endtime="20200727 09:48:58.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:48:58.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:48:58.101" endtime="20200727 09:48:58.102"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:56.429" endtime="20200727 09:48:58.102"></status>
</kw>
<msg timestamp="20200727 09:48:58.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:48:56.428" endtime="20200727 09:48:58.102"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:56.427" endtime="20200727 09:48:58.102"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:56.427" endtime="20200727 09:48:58.102"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:56.427" endtime="20200727 09:48:58.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 09:48:58.103" endtime="20200727 09:48:58.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:48:58.107" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:48:59.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:48:59.876" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:48:58.080Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 09:48:58.104" endtime="20200727 09:48:59.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:48:59.877" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:48:58.080Z",
  "modificationTime" : "2020-07-27T09:48:58.080Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 09:48:59.876" endtime="20200727 09:48:59.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:48:59.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:48:59.877" endtime="20200727 09:48:59.878"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:58.104" endtime="20200727 09:48:59.878"></status>
</kw>
<msg timestamp="20200727 09:48:59.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:48:58.104" endtime="20200727 09:48:59.878"></status>
</kw>
<msg timestamp="20200727 09:48:59.878" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:48:58.080Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 09:48:58.103" endtime="20200727 09:48:59.878"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 09:48:59.878" endtime="20200727 09:48:59.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:48:59.883" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:49:04.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:49:04.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:48:59.880" endtime="20200727 09:49:04.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:49:04.219" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:49:04.218" endtime="20200727 09:49:04.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:49:04.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:49:04.219" endtime="20200727 09:49:04.219"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:59.880" endtime="20200727 09:49:04.220"></status>
</kw>
<msg timestamp="20200727 09:49:04.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:48:59.879" endtime="20200727 09:49:04.220"></status>
</kw>
<status status="PASS" starttime="20200727 09:48:59.879" endtime="20200727 09:49:04.220"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 09:48:52.868" endtime="20200727 09:49:04.220" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:49:04.226" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:49:06.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:49:06.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:49:04.223" endtime="20200727 09:49:06.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:49:06.299" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:49:06.298" endtime="20200727 09:49:06.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:49:06.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:49:06.299" endtime="20200727 09:49:06.300"></status>
</kw>
<status status="PASS" starttime="20200727 09:49:04.223" endtime="20200727 09:49:06.300"></status>
</kw>
<msg timestamp="20200727 09:49:06.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:49:04.223" endtime="20200727 09:49:06.300"></status>
</kw>
<status status="PASS" starttime="20200727 09:49:04.222" endtime="20200727 09:49:06.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:49:06.305" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:49:08.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:49:08.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:49:06.302" endtime="20200727 09:49:08.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:49:08.381" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:49:08.381" endtime="20200727 09:49:08.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:49:08.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:49:08.381" endtime="20200727 09:49:08.382"></status>
</kw>
<status status="PASS" starttime="20200727 09:49:06.301" endtime="20200727 09:49:08.382"></status>
</kw>
<msg timestamp="20200727 09:49:08.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:49:06.301" endtime="20200727 09:49:08.382"></status>
</kw>
<status status="PASS" starttime="20200727 09:49:06.301" endtime="20200727 09:49:08.382"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 09:49:04.221" endtime="20200727 09:49:08.383" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200727 09:48:52.824" endtime="20200727 09:49:08.384"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop31-createmrenv">hadoop31-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
