<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 10:04:13.441" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200727 10:04:13.496" endtime="20200727 10:04:13.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:04:13.503" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:04:13.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:04:13.584" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 10:04:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Jul 2020 09:35:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200727 10:04:13.498" endtime="20200727 10:04:13.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:04:13.585" level="INFO">HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 10:04:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Jul 2020 09:35:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200727 10:04:13.584" endtime="20200727 10:04:13.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:04:13.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:04:13.586" endtime="20200727 10:04:13.586"></status>
</kw>
<status status="PASS" starttime="20200727 10:04:13.498" endtime="20200727 10:04:13.586"></status>
</kw>
<msg timestamp="20200727 10:04:13.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:04:13.497" endtime="20200727 10:04:13.587"></status>
</kw>
<msg timestamp="20200727 10:04:13.587" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 10:04:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 27 Jul 2020 09:35:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200727 10:04:13.497" endtime="20200727 10:04:13.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200727 10:04:13.587" endtime="20200727 10:04:13.587"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:04:13.495" endtime="20200727 10:04:13.588" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:04:13.590" endtime="20200727 10:04:13.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:04:13.598" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:01.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:01.928" level="INFO">${output} = 2020-07-27 10:04:14,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:04:15,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:04:13.592" endtime="20200727 10:05:01.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:01.929" level="INFO">2020-07-27 10:04:14,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:04:15,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:04:15,074 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:04:16,192 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 10:04:16,193 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-27 10:04:16,193 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-27 10:04:16,193 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-27 10:04:16,193 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 10:04:16,193 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 10:04:16,193 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-27 10:04:16,202 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-27 10:04:16,205 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 10:04:16,212 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-27 10:04:16,262 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-16260, with hadoop as owner.
2020-07-27 10:04:16,281 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-23555, with hadoop as owner.
2020-07-27 10:04:16,287 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-82332, with hadoop as owner.
2020-07-27 10:04:16,296 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-51193, with hadoop as owner.
2020-07-27 10:04:16,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-11242, with hadoop as owner.
2020-07-27 10:04:16,330 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-16260/bucket-0-15651, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,359 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23555/bucket-0-32442, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,368 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82332/bucket-0-51794, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,374 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51193/bucket-0-33512, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,379 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-11242/bucket-0-77442, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,383 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-16260/bucket-1-43500, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,387 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23555/bucket-1-07774, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,396 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82332/bucket-1-70456, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,404 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51193/bucket-1-43592, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,415 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-11242/bucket-1-59378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,421 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-16260/bucket-2-83853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,429 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23555/bucket-2-06696, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,441 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82332/bucket-2-88876, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,446 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51193/bucket-2-75941, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,452 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-11242/bucket-2-36845, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,461 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-16260/bucket-3-78174, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23555/bucket-3-78736, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,472 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82332/bucket-3-83400, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,477 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51193/bucket-3-18947, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,482 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-11242/bucket-3-11163, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,485 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-16260/bucket-4-85890, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,496 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23555/bucket-4-54861, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82332/bucket-4-20860, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-51193/bucket-4-64518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,508 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-11242/bucket-4-87283, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:04:16,980 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:04:17,233 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-27 10:04:18,243 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-07-27 10:04:19,243 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-07-27 10:04:20,245 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-27 10:04:21,246 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-27 10:04:22,246 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-27 10:04:23,247 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-27 10:04:24,247 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-07-27 10:04:25,248 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-07-27 10:04:26,248 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-07-27 10:04:27,249 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-27 10:04:28,250 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-27 10:04:29,250 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-27 10:04:30,251 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-07-27 10:04:31,251 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-07-27 10:04:32,252 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-07-27 10:04:33,252 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-27 10:04:34,253 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-27 10:04:35,253 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-27 10:04:36,254 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-27 10:04:37,254 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-27 10:04:38,254 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-27 10:04:39,255 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-07-27 10:04:40,255 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-07-27 10:04:41,256 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-07-27 10:04:42,256 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-27 10:04:43,257 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-27 10:04:44,257 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-27 10:04:45,258 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-07-27 10:04:46,258 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-27 10:04:47,259 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-27 10:04:48,260 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-27 10:04:49,264 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-07-27 10:04:50,265 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-07-27 10:04:51,265 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-07-27 10:04:52,266 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-07-27 10:04:53,266 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-07-27 10:04:54,267 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-27 10:04:55,267 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-27 10:04:56,267 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-27 10:04:57,268 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,095
Average Time spent in bucket creation: 00:00:00,103
Average Time spent in key creation: 00:00:01,653
Average Time spent in key write: 00:00:00,662
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:46,304
***************************************************</msg>
<status status="PASS" starttime="20200727 10:05:01.928" endtime="20200727 10:05:01.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:01.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:01.929" endtime="20200727 10:05:01.930"></status>
</kw>
<status status="PASS" starttime="20200727 10:04:13.591" endtime="20200727 10:05:01.930"></status>
</kw>
<msg timestamp="20200727 10:05:01.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:04:13.591" endtime="20200727 10:05:01.930"></status>
</kw>
<msg timestamp="20200727 10:05:01.931" level="INFO">${result} = 2020-07-27 10:04:14,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:04:15,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:04:13.591" endtime="20200727 10:05:01.931"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:01.931" endtime="20200727 10:05:01.932"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:01.931" endtime="20200727 10:05:01.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:01.932" endtime="20200727 10:05:01.932"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:04:13.589" endtime="20200727 10:05:01.933" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 10:04:13.467" endtime="20200727 10:05:01.934"></status>
</suite>
<suite id="s1-s2" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 10:05:01.947" level="INFO">${random} = 94882</msg>
<status status="PASS" starttime="20200727 10:05:01.946" endtime="20200727 10:05:01.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200727 10:05:01.948" level="INFO">${source} = 94882-source</msg>
<status status="PASS" starttime="20200727 10:05:01.947" endtime="20200727 10:05:01.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200727 10:05:01.949" level="INFO">${target} = 94882-target</msg>
<status status="PASS" starttime="20200727 10:05:01.948" endtime="20200727 10:05:01.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:01.952" level="INFO">Running command 'ozone sh volume create 94882-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:05.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:05.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:01.950" endtime="20200727 10:05:05.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:05.013" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:05.013" endtime="20200727 10:05:05.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:05.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:05.014" endtime="20200727 10:05:05.014"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:01.950" endtime="20200727 10:05:05.015"></status>
</kw>
<msg timestamp="20200727 10:05:05.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:01.949" endtime="20200727 10:05:05.015"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:01.949" endtime="20200727 10:05:05.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:05.018" level="INFO">Running command 'ozone sh volume create 94882-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:07.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:07.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:05.016" endtime="20200727 10:05:07.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:07.537" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:07.536" endtime="20200727 10:05:07.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:07.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:07.537" endtime="20200727 10:05:07.537"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:05.016" endtime="20200727 10:05:07.538"></status>
</kw>
<msg timestamp="20200727 10:05:07.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:05.016" endtime="20200727 10:05:07.538"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:05.015" endtime="20200727 10:05:07.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:07.538" endtime="20200727 10:05:07.539"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:01.946" endtime="20200727 10:05:07.539"></status>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:07.540" endtime="20200727 10:05:07.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:07.545" level="INFO">Running command 'ozone sh bucket link 94882-source/no-such-bucket 94882-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:10.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:10.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:07.542" endtime="20200727 10:05:10.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:10.104" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:10.103" endtime="20200727 10:05:10.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:10.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:10.104" endtime="20200727 10:05:10.104"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:07.541" endtime="20200727 10:05:10.105"></status>
</kw>
<msg timestamp="20200727 10:05:10.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:07.541" endtime="20200727 10:05:10.105"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:07.541" endtime="20200727 10:05:10.105"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:10.108" level="INFO">Running command 'ozone sh key list 94882-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:12.615" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:05:12.615" level="INFO">${output} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 10:05:10.106" endtime="20200727 10:05:12.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:12.616" level="INFO">BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 10:05:12.616" endtime="20200727 10:05:12.617"></status>
</kw>
<msg timestamp="20200727 10:05:12.617" level="INFO">${result} = BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" starttime="20200727 10:05:10.105" endtime="20200727 10:05:12.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:12.617" endtime="20200727 10:05:12.617"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:07.539" endtime="20200727 10:05:12.618" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:12.619" endtime="20200727 10:05:12.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:12.624" level="INFO">Running command 'ozone sh bucket link 94882-source/bucket1 94882-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:15.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:15.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:12.621" endtime="20200727 10:05:15.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:15.085" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:15.085" endtime="20200727 10:05:15.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:15.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:15.086" endtime="20200727 10:05:15.087"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:12.620" endtime="20200727 10:05:15.087"></status>
</kw>
<msg timestamp="20200727 10:05:15.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:12.620" endtime="20200727 10:05:15.087"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:12.620" endtime="20200727 10:05:15.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:15.091" level="INFO">Running command 'ozone sh bucket create 94882-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:17.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:17.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:15.089" endtime="20200727 10:05:17.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:17.656" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:17.655" endtime="20200727 10:05:17.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:17.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:17.656" endtime="20200727 10:05:17.656"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:15.088" endtime="20200727 10:05:17.657"></status>
</kw>
<msg timestamp="20200727 10:05:17.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:15.088" endtime="20200727 10:05:17.657"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:15.087" endtime="20200727 10:05:17.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:17.660" level="INFO">Running command 'ozone sh key put 94882-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:22.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:22.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:17.658" endtime="20200727 10:05:22.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:22.031" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:22.030" endtime="20200727 10:05:22.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:22.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:22.031" endtime="20200727 10:05:22.032"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:17.658" endtime="20200727 10:05:22.032"></status>
</kw>
<msg timestamp="20200727 10:05:22.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:17.658" endtime="20200727 10:05:22.032"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:17.657" endtime="20200727 10:05:22.033"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:05:22.035" level="INFO">${postfix} = 98141</msg>
<status status="PASS" starttime="20200727 10:05:22.034" endtime="20200727 10:05:22.035"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:05:22.036" level="INFO">${tmpfile} = /tmp/tempkey-98141</msg>
<status status="PASS" starttime="20200727 10:05:22.035" endtime="20200727 10:05:22.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:22.040" level="INFO">Running command 'ozone sh key get -f 94882-target/link1/key1 /tmp/tempkey-98141 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:26.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:26.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:22.038" endtime="20200727 10:05:26.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:26.235" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:26.234" endtime="20200727 10:05:26.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:26.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:26.235" endtime="20200727 10:05:26.236"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:22.037" endtime="20200727 10:05:26.236"></status>
</kw>
<msg timestamp="20200727 10:05:26.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:22.037" endtime="20200727 10:05:26.236"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:22.036" endtime="20200727 10:05:26.236"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:05:26.239" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-98141 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:26.241" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:05:26.236" endtime="20200727 10:05:26.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:26.245" level="INFO">Running command 'rm -f /tmp/tempkey-98141 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:26.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:26.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:26.243" endtime="20200727 10:05:26.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:26.249" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:26.248" endtime="20200727 10:05:26.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:26.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:26.249" endtime="20200727 10:05:26.250"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:26.243" endtime="20200727 10:05:26.250"></status>
</kw>
<msg timestamp="20200727 10:05:26.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:26.242" endtime="20200727 10:05:26.250"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:26.241" endtime="20200727 10:05:26.251"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:05:26.251" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:05:26.251" endtime="20200727 10:05:26.251"></status>
</kw>
<msg timestamp="20200727 10:05:26.251" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:05:22.033" endtime="20200727 10:05:26.251"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:26.252" endtime="20200727 10:05:26.252"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:22.033" endtime="20200727 10:05:26.252"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:12.618" endtime="20200727 10:05:26.252" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:26.254" endtime="20200727 10:05:26.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:26.258" level="INFO">Running command 'ozone sh key put 94882-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:30.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:30.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:26.256" endtime="20200727 10:05:30.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:30.874" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:30.874" endtime="20200727 10:05:30.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:30.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:30.875" endtime="20200727 10:05:30.875"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:26.255" endtime="20200727 10:05:30.876"></status>
</kw>
<msg timestamp="20200727 10:05:30.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:26.255" endtime="20200727 10:05:30.876"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:26.255" endtime="20200727 10:05:30.876"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:05:30.878" level="INFO">${postfix} = 34694</msg>
<status status="PASS" starttime="20200727 10:05:30.877" endtime="20200727 10:05:30.878"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:05:30.879" level="INFO">${tmpfile} = /tmp/tempkey-34694</msg>
<status status="PASS" starttime="20200727 10:05:30.878" endtime="20200727 10:05:30.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:30.882" level="INFO">Running command 'ozone sh key get -f 94882-source/bucket1/key2 /tmp/tempkey-34694 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:35.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:35.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:30.880" endtime="20200727 10:05:35.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:35.025" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:35.024" endtime="20200727 10:05:35.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:35.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:35.025" endtime="20200727 10:05:35.026"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:30.879" endtime="20200727 10:05:35.026"></status>
</kw>
<msg timestamp="20200727 10:05:35.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:30.879" endtime="20200727 10:05:35.026"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:30.879" endtime="20200727 10:05:35.027"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:05:35.029" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-34694 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:35.031" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:05:35.027" endtime="20200727 10:05:35.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:35.036" level="INFO">Running command 'rm -f /tmp/tempkey-34694 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:35.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:35.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:35.033" endtime="20200727 10:05:35.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:35.039" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:35.038" endtime="20200727 10:05:35.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:35.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:35.039" endtime="20200727 10:05:35.040"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:35.033" endtime="20200727 10:05:35.040"></status>
</kw>
<msg timestamp="20200727 10:05:35.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:35.032" endtime="20200727 10:05:35.040"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:35.032" endtime="20200727 10:05:35.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:05:35.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:05:35.041" endtime="20200727 10:05:35.041"></status>
</kw>
<msg timestamp="20200727 10:05:35.041" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:05:30.877" endtime="20200727 10:05:35.041"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:35.041" endtime="20200727 10:05:35.042"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:30.876" endtime="20200727 10:05:35.042"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:26.253" endtime="20200727 10:05:35.042" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:35.043" endtime="20200727 10:05:35.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:35.048" level="INFO">Running command 'ozone sh key list 94882-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:37.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:37.732" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:05:35.045" endtime="20200727 10:05:37.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:37.733" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 10:05:37.733" endtime="20200727 10:05:37.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:37.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:37.734" endtime="20200727 10:05:37.734"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:35.045" endtime="20200727 10:05:37.734"></status>
</kw>
<msg timestamp="20200727 10:05:37.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:35.044" endtime="20200727 10:05:37.735"></status>
</kw>
<msg timestamp="20200727 10:05:37.735" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:05:35.044" endtime="20200727 10:05:37.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:37.739" level="INFO">Running command 'ozone sh key list 94882-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:40.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:40.468" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:05:37.737" endtime="20200727 10:05:40.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:40.470" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20200727 10:05:40.469" endtime="20200727 10:05:40.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:40.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:40.470" endtime="20200727 10:05:40.470"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:37.736" endtime="20200727 10:05:40.471"></status>
</kw>
<msg timestamp="20200727 10:05:40.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:37.736" endtime="20200727 10:05:40.471"></status>
</kw>
<msg timestamp="20200727 10:05:40.471" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20200727 10:05:37.735" endtime="20200727 10:05:40.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:40.471" endtime="20200727 10:05:40.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:40.472" endtime="20200727 10:05:40.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:40.472" endtime="20200727 10:05:40.473"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:35.043" endtime="20200727 10:05:40.473" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:40.474" endtime="20200727 10:05:40.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:40.479" level="INFO">Running command 'ozone sh key delete 94882-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:43.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:43.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:40.476" endtime="20200727 10:05:43.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:43.170" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:43.169" endtime="20200727 10:05:43.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:43.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:43.170" endtime="20200727 10:05:43.171"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:40.475" endtime="20200727 10:05:43.171"></status>
</kw>
<msg timestamp="20200727 10:05:43.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:40.475" endtime="20200727 10:05:43.171"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:40.475" endtime="20200727 10:05:43.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:43.176" level="INFO">Running command 'ozone sh key list 94882-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:45.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:45.890" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:05:43.173" endtime="20200727 10:05:45.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:45.892" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:05:45.891" endtime="20200727 10:05:45.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:45.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:45.892" endtime="20200727 10:05:45.892"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:43.172" endtime="20200727 10:05:45.893"></status>
</kw>
<msg timestamp="20200727 10:05:45.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:43.172" endtime="20200727 10:05:45.893"></status>
</kw>
<msg timestamp="20200727 10:05:45.893" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20200727 10:05:43.171" endtime="20200727 10:05:45.893"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:45.893" endtime="20200727 10:05:45.894"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:40.473" endtime="20200727 10:05:45.894" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:45.895" endtime="20200727 10:05:45.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:45.900" level="INFO">Running command 'ozone sh bucket list 94882-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:48.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:48.929" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:05:10.051Z",
  "modificationTime"...</msg>
<status status="PASS" starttime="20200727 10:05:45.898" endtime="20200727 10:05:48.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:48.930" level="INFO">{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:05:10.051Z",
  "modificationTime" : "2020-07-27T10:05:10.051Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:05:15.011Z",
  "modificationTime" : "2020-07-27T10:05:15.011Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-source",
  "sourceBucket" : "bucket1"
}</msg>
<status status="PASS" starttime="20200727 10:05:48.929" endtime="20200727 10:05:48.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:48.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:48.930" endtime="20200727 10:05:48.931"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:45.897" endtime="20200727 10:05:48.931"></status>
</kw>
<msg timestamp="20200727 10:05:48.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:45.897" endtime="20200727 10:05:48.931"></status>
</kw>
<msg timestamp="20200727 10:05:48.931" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:05:10.051Z",
  "modificationTime"...</msg>
<status status="PASS" starttime="20200727 10:05:45.896" endtime="20200727 10:05:48.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:48.932" endtime="20200727 10:05:48.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:48.932" endtime="20200727 10:05:48.932"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:45.894" endtime="20200727 10:05:48.933" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:48.934" endtime="20200727 10:05:48.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:48.938" level="INFO">Running command 'ozone sh bucket info 94882-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:51.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:51.651" level="INFO">${output} = 94882-source bucket1</msg>
<status status="PASS" starttime="20200727 10:05:48.936" endtime="20200727 10:05:51.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:51.653" level="INFO">94882-source bucket1</msg>
<status status="PASS" starttime="20200727 10:05:51.652" endtime="20200727 10:05:51.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:51.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:51.653" endtime="20200727 10:05:51.653"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:48.935" endtime="20200727 10:05:51.653"></status>
</kw>
<msg timestamp="20200727 10:05:51.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:48.935" endtime="20200727 10:05:51.654"></status>
</kw>
<msg timestamp="20200727 10:05:51.654" level="INFO">${result} = 94882-source bucket1</msg>
<status status="PASS" starttime="20200727 10:05:48.935" endtime="20200727 10:05:51.654"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:51.654" endtime="20200727 10:05:51.655"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:48.933" endtime="20200727 10:05:51.655" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:51.656" endtime="20200727 10:05:51.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:51.661" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 94882-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:54.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:54.103" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:05:51.658" endtime="20200727 10:05:54.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:54.104" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:05:54.103" endtime="20200727 10:05:54.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:54.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:54.104" endtime="20200727 10:05:54.105"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:51.658" endtime="20200727 10:05:54.105"></status>
</kw>
<msg timestamp="20200727 10:05:54.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:51.657" endtime="20200727 10:05:54.105"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:51.657" endtime="20200727 10:05:54.105"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:54.111" level="INFO">Running command 'ozone sh bucket getacl 94882-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:56.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:56.915" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 10:05:54.109" endtime="20200727 10:05:56.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:56.916" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 10:05:56.915" endtime="20200727 10:05:56.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:56.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:56.916" endtime="20200727 10:05:56.917"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:54.108" endtime="20200727 10:05:56.917"></status>
</kw>
<msg timestamp="20200727 10:05:56.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:54.107" endtime="20200727 10:05:56.917"></status>
</kw>
<msg timestamp="20200727 10:05:56.917" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20200727 10:05:54.106" endtime="20200727 10:05:56.917"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:56.918" endtime="20200727 10:05:56.918"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:54.105" endtime="20200727 10:05:56.918"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:56.924" level="INFO">Running command 'ozone sh bucket getacl 94882-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:05:59.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:05:59.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:05:56.920" endtime="20200727 10:05:59.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:05:59.373" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:05:59.373" endtime="20200727 10:05:59.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:05:59.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:05:59.374" endtime="20200727 10:05:59.374"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:56.920" endtime="20200727 10:05:59.374"></status>
</kw>
<msg timestamp="20200727 10:05:59.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:56.920" endtime="20200727 10:05:59.375"></status>
</kw>
<msg timestamp="20200727 10:05:59.375" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 10:05:56.919" endtime="20200727 10:05:59.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:05:59.375" endtime="20200727 10:05:59.376"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:56.918" endtime="20200727 10:05:59.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:05:59.379" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 94882-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:01.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:01.842" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:05:59.377" endtime="20200727 10:06:01.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:01.844" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:06:01.843" endtime="20200727 10:06:01.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:01.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:01.844" endtime="20200727 10:06:01.844"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:59.377" endtime="20200727 10:06:01.845"></status>
</kw>
<msg timestamp="20200727 10:06:01.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:05:59.377" endtime="20200727 10:06:01.845"></status>
</kw>
<status status="PASS" starttime="20200727 10:05:59.376" endtime="20200727 10:06:01.845"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:01.850" level="INFO">Running command 'ozone sh bucket getacl 94882-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:04.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:04.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:01.848" endtime="20200727 10:06:04.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:04.560" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:04.559" endtime="20200727 10:06:04.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:04.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:04.560" endtime="20200727 10:06:04.560"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:01.847" endtime="20200727 10:06:04.561"></status>
</kw>
<msg timestamp="20200727 10:06:04.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:01.847" endtime="20200727 10:06:04.561"></status>
</kw>
<msg timestamp="20200727 10:06:04.561" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20200727 10:06:01.846" endtime="20200727 10:06:04.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:04.561" endtime="20200727 10:06:04.562"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:01.845" endtime="20200727 10:06:04.562"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:04.566" level="INFO">Running command 'ozone sh bucket getacl 94882-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:07.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:07.217" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20200727 10:06:04.565" endtime="20200727 10:06:07.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:07.218" level="INFO">READ</msg>
<status status="PASS" starttime="20200727 10:06:07.218" endtime="20200727 10:06:07.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:07.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:07.219" endtime="20200727 10:06:07.219"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:04.564" endtime="20200727 10:06:07.219"></status>
</kw>
<msg timestamp="20200727 10:06:07.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:04.564" endtime="20200727 10:06:07.220"></status>
</kw>
<msg timestamp="20200727 10:06:07.220" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20200727 10:06:04.563" endtime="20200727 10:06:07.220"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:07.220" endtime="20200727 10:06:07.220"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:04.562" endtime="20200727 10:06:07.221"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:05:51.655" endtime="20200727 10:06:07.221" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:07.223" endtime="20200727 10:06:07.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:07.227" level="INFO">Running command 'ozone sh bucket link 94882-source/bucket2 94882-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:09.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:09.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:07.225" endtime="20200727 10:06:09.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:09.412" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:09.411" endtime="20200727 10:06:09.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:09.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:09.412" endtime="20200727 10:06:09.413"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:07.224" endtime="20200727 10:06:09.413"></status>
</kw>
<msg timestamp="20200727 10:06:09.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:07.224" endtime="20200727 10:06:09.413"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:07.223" endtime="20200727 10:06:09.413"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:09.416" level="INFO">Running command 'ozone sh bucket create 94882-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:12.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:06:12.096" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:06:09.414" endtime="20200727 10:06:12.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:12.097" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:06:12.096" endtime="20200727 10:06:12.097"></status>
</kw>
<msg timestamp="20200727 10:06:12.097" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:06:09.414" endtime="20200727 10:06:12.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:12.098" endtime="20200727 10:06:12.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:12.102" level="INFO">Running command 'ozone sh bucket create 94882-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:14.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:14.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:12.100" endtime="20200727 10:06:14.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:14.510" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:14.509" endtime="20200727 10:06:14.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:14.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:14.510" endtime="20200727 10:06:14.511"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:12.099" endtime="20200727 10:06:14.511"></status>
</kw>
<msg timestamp="20200727 10:06:14.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:12.099" endtime="20200727 10:06:14.511"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:12.098" endtime="20200727 10:06:14.511"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:14.514" level="INFO">Running command 'ozone sh bucket link 94882-source/bucket1 94882-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:17.098" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:06:17.098" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:06:14.512" endtime="20200727 10:06:17.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:17.099" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:06:17.098" endtime="20200727 10:06:17.099"></status>
</kw>
<msg timestamp="20200727 10:06:17.100" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20200727 10:06:14.512" endtime="20200727 10:06:17.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.100" endtime="20200727 10:06:17.100"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:07.222" endtime="20200727 10:06:17.100" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.104" endtime="20200727 10:06:17.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.104" endtime="20200727 10:06:17.105"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:17.103" endtime="20200727 10:06:17.105" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.106" endtime="20200727 10:06:17.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.106" endtime="20200727 10:06:17.107"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:17.105" endtime="20200727 10:06:17.107" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.108" endtime="20200727 10:06:17.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.108" endtime="20200727 10:06:17.109"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:17.107" endtime="20200727 10:06:17.109" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:17.110" endtime="20200727 10:06:17.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:17.115" level="INFO">Running command 'ozone sh bucket link 94882-target/loop1 94882-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:19.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:19.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:17.112" endtime="20200727 10:06:19.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:19.348" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:19.348" endtime="20200727 10:06:19.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:19.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:19.349" endtime="20200727 10:06:19.349"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:17.111" endtime="20200727 10:06:19.349"></status>
</kw>
<msg timestamp="20200727 10:06:19.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:17.111" endtime="20200727 10:06:19.349"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:17.110" endtime="20200727 10:06:19.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:19.353" level="INFO">Running command 'ozone sh bucket link 94882-target/loop2 94882-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:21.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:21.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:19.351" endtime="20200727 10:06:21.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:21.809" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:21.808" endtime="20200727 10:06:21.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:21.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:21.809" endtime="20200727 10:06:21.810"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:19.351" endtime="20200727 10:06:21.810"></status>
</kw>
<msg timestamp="20200727 10:06:21.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:19.350" endtime="20200727 10:06:21.810"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:19.350" endtime="20200727 10:06:21.811"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:21.814" level="INFO">Running command 'ozone sh bucket link 94882-target/loop3 94882-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:24.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:24.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:21.812" endtime="20200727 10:06:24.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:24.239" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:24.238" endtime="20200727 10:06:24.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:24.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:24.239" endtime="20200727 10:06:24.240"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:21.812" endtime="20200727 10:06:24.240"></status>
</kw>
<msg timestamp="20200727 10:06:24.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:21.811" endtime="20200727 10:06:24.240"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:21.811" endtime="20200727 10:06:24.240"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:24.243" level="INFO">Running command 'ozone sh key list 94882-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:26.556" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:06:26.556" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 10:06:24.241" endtime="20200727 10:06:26.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:26.557" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 10:06:26.556" endtime="20200727 10:06:26.557"></status>
</kw>
<msg timestamp="20200727 10:06:26.558" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" starttime="20200727 10:06:24.240" endtime="20200727 10:06:26.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:26.558" endtime="20200727 10:06:26.558"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:17.109" endtime="20200727 10:06:26.558" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:26.560" endtime="20200727 10:06:26.560"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:26.565" level="INFO">Running command 'ozone sh bucket link 94882-source/bucket1 94882-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:28.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:28.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:26.562" endtime="20200727 10:06:28.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:28.989" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:28.989" endtime="20200727 10:06:28.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:28.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:28.990" endtime="20200727 10:06:28.990"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:26.561" endtime="20200727 10:06:28.991"></status>
</kw>
<msg timestamp="20200727 10:06:28.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:26.561" endtime="20200727 10:06:28.991"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:26.560" endtime="20200727 10:06:28.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:28.995" level="INFO">Running command 'ozone sh key put 94882-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:33.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:33.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:28.992" endtime="20200727 10:06:33.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:33.625" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:33.624" endtime="20200727 10:06:33.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:33.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:33.625" endtime="20200727 10:06:33.625"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:28.992" endtime="20200727 10:06:33.626"></status>
</kw>
<msg timestamp="20200727 10:06:33.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:28.992" endtime="20200727 10:06:33.626"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:28.991" endtime="20200727 10:06:33.626"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200727 10:06:33.628" level="INFO">${postfix} = 34800</msg>
<status status="PASS" starttime="20200727 10:06:33.627" endtime="20200727 10:06:33.628"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200727 10:06:33.629" level="INFO">${tmpfile} = /tmp/tempkey-34800</msg>
<status status="PASS" starttime="20200727 10:06:33.628" endtime="20200727 10:06:33.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:33.632" level="INFO">Running command 'ozone sh key get -f 94882-target/link1/key3 /tmp/tempkey-34800 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:37.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:37.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:33.630" endtime="20200727 10:06:37.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:37.899" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:37.898" endtime="20200727 10:06:37.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:37.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:37.899" endtime="20200727 10:06:37.900"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:33.630" endtime="20200727 10:06:37.900"></status>
</kw>
<msg timestamp="20200727 10:06:37.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:33.629" endtime="20200727 10:06:37.900"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:33.629" endtime="20200727 10:06:37.900"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200727 10:06:37.904" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-34800 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:37.906" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20200727 10:06:37.901" endtime="20200727 10:06:37.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:37.910" level="INFO">Running command 'rm -f /tmp/tempkey-34800 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:37.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:37.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:37.908" endtime="20200727 10:06:37.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:37.914" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:37.913" endtime="20200727 10:06:37.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:37.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:37.914" endtime="20200727 10:06:37.915"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:37.908" endtime="20200727 10:06:37.915"></status>
</kw>
<msg timestamp="20200727 10:06:37.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:37.907" endtime="20200727 10:06:37.915"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:37.907" endtime="20200727 10:06:37.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200727 10:06:37.916" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200727 10:06:37.915" endtime="20200727 10:06:37.916"></status>
</kw>
<msg timestamp="20200727 10:06:37.916" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20200727 10:06:33.627" endtime="20200727 10:06:37.916"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:37.916" endtime="20200727 10:06:37.917"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:33.626" endtime="20200727 10:06:37.917"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:26.559" endtime="20200727 10:06:37.917" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:37.919" endtime="20200727 10:06:37.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:37.922" level="INFO">Running command 'ozone sh bucket delete 94882-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:40.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:40.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:37.920" endtime="20200727 10:06:40.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:40.313" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:40.312" endtime="20200727 10:06:40.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:40.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:40.313" endtime="20200727 10:06:40.313"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:37.920" endtime="20200727 10:06:40.314"></status>
</kw>
<msg timestamp="20200727 10:06:40.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:37.920" endtime="20200727 10:06:40.314"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:37.919" endtime="20200727 10:06:40.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:40.319" level="INFO">Running command 'ozone sh bucket list 94882-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:43.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:43.074" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:14.322Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20200727 10:06:40.316" endtime="20200727 10:06:43.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:43.075" level="INFO">{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:14.322Z",
  "modificationTime" : "2020-07-27T10:06:14.322Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:05:10.051Z",
  "modificationTime" : "2020-07-27T10:05:10.051Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:09.363Z",
  "modificationTime" : "2020-07-27T10:06:09.363Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:28.853Z",
  "modificationTime" : "2020-07-27T10:06:28.853Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:24.132Z",
  "modificationTime" : "2020-07-27T10:06:24.132Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:19.223Z",
  "modificationTime" : "2020-07-27T10:06:19.223Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:21.661Z",
  "modificationTime" : "2020-07-27T10:06:21.661Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94882-target",
  "sourceBucket" : "loop2"
}</msg>
<status status="PASS" starttime="20200727 10:06:43.074" endtime="20200727 10:06:43.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:43.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:43.075" endtime="20200727 10:06:43.076"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:40.315" endtime="20200727 10:06:43.076"></status>
</kw>
<msg timestamp="20200727 10:06:43.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:40.315" endtime="20200727 10:06:43.076"></status>
</kw>
<msg timestamp="20200727 10:06:43.077" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "94882-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T10:06:14.322Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20200727 10:06:40.314" endtime="20200727 10:06:43.077"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:43.077" endtime="20200727 10:06:43.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:43.081" level="INFO">Running command 'ozone sh key list 94882-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:45.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:45.743" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20200727 10:06:43.079" endtime="20200727 10:06:45.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:45.744" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20200727 10:06:45.744" endtime="20200727 10:06:45.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:45.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:45.745" endtime="20200727 10:06:45.745"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:43.078" endtime="20200727 10:06:45.745"></status>
</kw>
<msg timestamp="20200727 10:06:45.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:43.078" endtime="20200727 10:06:45.745"></status>
</kw>
<msg timestamp="20200727 10:06:45.746" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20200727 10:06:43.077" endtime="20200727 10:06:45.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:45.746" endtime="20200727 10:06:45.746"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:37.918" endtime="20200727 10:06:45.746" critical="yes"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20200727 10:05:01.935" endtime="20200727 10:06:45.749"></status>
</suite>
<suite id="s1-s3" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200727 10:06:45.762" level="INFO">${random} = 80343</msg>
<status status="PASS" starttime="20200727 10:06:45.762" endtime="20200727 10:06:45.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200727 10:06:45.763" level="INFO">${prefix} = 80343</msg>
<status status="PASS" starttime="20200727 10:06:45.762" endtime="20200727 10:06:45.763"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:45.762" endtime="20200727 10:06:45.763"></status>
</kw>
<test id="s1-s3-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:45.764" endtime="20200727 10:06:45.764"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:45.768" level="INFO">Running command 'ozone sh volume info o3://om:9862/80343-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:48.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:06:48.089" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80343-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 10:06:45.765" endtime="20200727 10:06:48.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:48.091" level="INFO">VOLUME_NOT_FOUND Volume 80343-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 10:06:48.090" endtime="20200727 10:06:48.091"></status>
</kw>
<msg timestamp="20200727 10:06:48.091" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80343-rpcwoport is not found</msg>
<status status="PASS" starttime="20200727 10:06:45.765" endtime="20200727 10:06:48.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:48.091" endtime="20200727 10:06:48.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:48.095" level="INFO">Running command 'ozone sh volume create o3://om:9862/80343-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:50.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:50.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:06:48.093" endtime="20200727 10:06:50.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:50.422" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:06:50.422" endtime="20200727 10:06:50.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:50.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:50.423" endtime="20200727 10:06:50.423"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:48.093" endtime="20200727 10:06:50.424"></status>
</kw>
<msg timestamp="20200727 10:06:50.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:48.092" endtime="20200727 10:06:50.424"></status>
</kw>
<msg timestamp="20200727 10:06:50.424" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 10:06:48.092" endtime="20200727 10:06:50.424"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:50.424" endtime="20200727 10:06:50.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:50.430" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="80343-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:52.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:52.984" level="INFO">${output} = {
  "metadata": {},
  "name": "80343-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:06:50.365Z",
  "modificationTime": "2020-07-27T10:06:50.365Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 10:06:50.426" endtime="20200727 10:06:52.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:52.985" level="INFO">{
  "metadata": {},
  "name": "80343-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:06:50.365Z",
  "modificationTime": "2020-07-27T10:06:50.365Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:06:52.984" endtime="20200727 10:06:52.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:52.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:52.985" endtime="20200727 10:06:52.986"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:50.426" endtime="20200727 10:06:52.986"></status>
</kw>
<msg timestamp="20200727 10:06:52.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:50.425" endtime="20200727 10:06:52.986"></status>
</kw>
<msg timestamp="20200727 10:06:52.987" level="INFO">${result} = {
  "metadata": {},
  "name": "80343-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:06:50.365Z",
  "modificationTime": "2020-07-27T10:06:50.365Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 10:06:50.425" endtime="20200727 10:06:52.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:52.987" endtime="20200727 10:06:52.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:52.992" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80343-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:55.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:55.672" level="INFO">${output} = {
  "metadata": {},
  "name": "80343-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:06:50.365Z",
  "modificationTime": "2020-07-27T10:06:50.365Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 10:06:52.989" endtime="20200727 10:06:55.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:55.673" level="INFO">{
  "metadata": {},
  "name": "80343-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:06:50.365Z",
  "modificationTime": "2020-07-27T10:06:50.365Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:06:55.672" endtime="20200727 10:06:55.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:55.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:55.673" endtime="20200727 10:06:55.673"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:52.989" endtime="20200727 10:06:55.674"></status>
</kw>
<msg timestamp="20200727 10:06:55.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:52.988" endtime="20200727 10:06:55.674"></status>
</kw>
<msg timestamp="20200727 10:06:55.674" level="INFO">${result} = {
  "metadata": {},
  "name": "80343-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:06:50.365Z",
  "modificationTime": "2020-07-27T10:06:50.365Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200727 10:06:52.988" endtime="20200727 10:06:55.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:06:55.674" endtime="20200727 10:06:55.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:55.680" level="INFO">Running command 'ozone sh volume update o3://om:9862/80343-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:06:58.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:06:58.216" level="INFO">${output} = {
  "metadata" : { },
  "name" : "80343-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T10:06:50.365Z",
  "modificationTime" : "2020-07-27T10:06:57.861Z",
  "acl...</msg>
<status status="PASS" starttime="20200727 10:06:55.676" endtime="20200727 10:06:58.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:06:58.217" level="INFO">{
  "metadata" : { },
  "name" : "80343-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T10:06:50.365Z",
  "modificationTime" : "2020-07-27T10:06:57.861Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 10:06:58.216" endtime="20200727 10:06:58.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:06:58.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:06:58.217" endtime="20200727 10:06:58.218"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:55.676" endtime="20200727 10:06:58.218"></status>
</kw>
<msg timestamp="20200727 10:06:58.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:55.676" endtime="20200727 10:06:58.218"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:55.675" endtime="20200727 10:06:58.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:06:58.224" level="INFO">Running command 'ozone sh volume info o3://om:9862/80343-rpcwoport | jq -r '. | select(.name=="80343-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:00.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:00.863" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:06:58.220" endtime="20200727 10:07:00.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:00.864" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 10:07:00.863" endtime="20200727 10:07:00.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:00.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:00.865" endtime="20200727 10:07:00.865"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:58.220" endtime="20200727 10:07:00.865"></status>
</kw>
<msg timestamp="20200727 10:07:00.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:06:58.220" endtime="20200727 10:07:00.866"></status>
</kw>
<msg timestamp="20200727 10:07:00.866" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:06:58.219" endtime="20200727 10:07:00.866"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:00.866" endtime="20200727 10:07:00.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:00.870" level="INFO">Running command 'ozone sh bucket create o3://om:9862/80343-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:03.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:03.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:00.868" endtime="20200727 10:07:03.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:03.324" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:03.323" endtime="20200727 10:07:03.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:03.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:03.324" endtime="20200727 10:07:03.325"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:00.868" endtime="20200727 10:07:03.325"></status>
</kw>
<msg timestamp="20200727 10:07:03.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:00.867" endtime="20200727 10:07:03.325"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:00.867" endtime="20200727 10:07:03.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:03.329" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80343-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:05.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:05.916" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 10:07:03.327" endtime="20200727 10:07:05.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:05.917" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 10:07:05.916" endtime="20200727 10:07:05.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:05.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:05.917" endtime="20200727 10:07:05.918"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:03.327" endtime="20200727 10:07:05.918"></status>
</kw>
<msg timestamp="20200727 10:07:05.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:03.326" endtime="20200727 10:07:05.918"></status>
</kw>
<msg timestamp="20200727 10:07:05.919" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 10:07:03.325" endtime="20200727 10:07:05.919"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:05.919" endtime="20200727 10:07:05.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:05.924" level="INFO">Running command 'ozone sh bucket list o3://om:9862/80343-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:08.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:08.534" level="INFO">${output} = 80343-rpcwoport</msg>
<status status="PASS" starttime="20200727 10:07:05.921" endtime="20200727 10:07:08.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:08.535" level="INFO">80343-rpcwoport</msg>
<status status="PASS" starttime="20200727 10:07:08.535" endtime="20200727 10:07:08.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:08.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:08.535" endtime="20200727 10:07:08.536"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:05.920" endtime="20200727 10:07:08.536"></status>
</kw>
<msg timestamp="20200727 10:07:08.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:05.920" endtime="20200727 10:07:08.536"></status>
</kw>
<msg timestamp="20200727 10:07:08.537" level="INFO">${result} = 80343-rpcwoport</msg>
<status status="PASS" starttime="20200727 10:07:05.919" endtime="20200727 10:07:08.537"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:08.537" endtime="20200727 10:07:08.537"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:08.543" level="INFO">Running command 'ozone sh key put o3://om:9862/80343-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:12.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:12.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:08.540" endtime="20200727 10:07:12.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:12.839" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:12.838" endtime="20200727 10:07:12.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:12.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:12.839" endtime="20200727 10:07:12.840"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:08.539" endtime="20200727 10:07:12.841"></status>
</kw>
<msg timestamp="20200727 10:07:12.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:08.539" endtime="20200727 10:07:12.841"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:08.538" endtime="20200727 10:07:12.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:12.846" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:12.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:12.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:12.843" endtime="20200727 10:07:12.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:12.848" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:12.848" endtime="20200727 10:07:12.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:12.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:12.848" endtime="20200727 10:07:12.849"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:12.842" endtime="20200727 10:07:12.849"></status>
</kw>
<msg timestamp="20200727 10:07:12.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:12.842" endtime="20200727 10:07:12.849"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:12.841" endtime="20200727 10:07:12.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:12.854" level="INFO">Running command 'ozone sh key get o3://om:9862/80343-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:17.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:17.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:12.852" endtime="20200727 10:07:17.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:17.158" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:17.157" endtime="20200727 10:07:17.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:17.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:17.158" endtime="20200727 10:07:17.159"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:12.851" endtime="20200727 10:07:17.159"></status>
</kw>
<msg timestamp="20200727 10:07:17.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:12.850" endtime="20200727 10:07:17.159"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:12.850" endtime="20200727 10:07:17.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:17.163" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:17.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:17.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:17.161" endtime="20200727 10:07:17.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:17.166" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:17.166" endtime="20200727 10:07:17.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:17.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:17.167" endtime="20200727 10:07:17.167"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:17.160" endtime="20200727 10:07:17.167"></status>
</kw>
<msg timestamp="20200727 10:07:17.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:17.160" endtime="20200727 10:07:17.168"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:17.160" endtime="20200727 10:07:17.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:17.171" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/80343-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:21.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:21.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:17.169" endtime="20200727 10:07:21.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:21.407" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:21.407" endtime="20200727 10:07:21.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:21.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:21.408" endtime="20200727 10:07:21.408"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:17.169" endtime="20200727 10:07:21.408"></status>
</kw>
<msg timestamp="20200727 10:07:21.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:17.168" endtime="20200727 10:07:21.409"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:17.168" endtime="20200727 10:07:21.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:21.412" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:21.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:21.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:21.410" endtime="20200727 10:07:21.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:21.416" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:21.415" endtime="20200727 10:07:21.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:21.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:21.416" endtime="20200727 10:07:21.416"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:21.410" endtime="20200727 10:07:21.417"></status>
</kw>
<msg timestamp="20200727 10:07:21.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:21.409" endtime="20200727 10:07:21.417"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:21.409" endtime="20200727 10:07:21.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:21.421" level="INFO">Running command 'ozone sh key get o3://om:9862/80343-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:25.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:25.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:21.418" endtime="20200727 10:07:25.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:25.664" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:25.664" endtime="20200727 10:07:25.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:25.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:25.665" endtime="20200727 10:07:25.665"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:21.418" endtime="20200727 10:07:25.665"></status>
</kw>
<msg timestamp="20200727 10:07:25.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:21.418" endtime="20200727 10:07:25.666"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:21.417" endtime="20200727 10:07:25.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:25.671" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:25.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:25.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:25.667" endtime="20200727 10:07:25.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:25.673" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:25.673" endtime="20200727 10:07:25.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:25.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:25.673" endtime="20200727 10:07:25.674"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:25.667" endtime="20200727 10:07:25.674"></status>
</kw>
<msg timestamp="20200727 10:07:25.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:25.667" endtime="20200727 10:07:25.674"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:25.666" endtime="20200727 10:07:25.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:25.679" level="INFO">Running command 'ozone sh key info o3://om:9862/80343-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:28.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:28.377" level="INFO">${output} = {
  "volumeName": "80343-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:07:19.421Z",
  "modificationTime": "2020-07-27T10:07:21.014Z",...</msg>
<status status="PASS" starttime="20200727 10:07:25.676" endtime="20200727 10:07:28.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:28.378" level="INFO">{
  "volumeName": "80343-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:07:19.421Z",
  "modificationTime": "2020-07-27T10:07:21.014Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585261181829250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:07:28.377" endtime="20200727 10:07:28.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:28.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:28.378" endtime="20200727 10:07:28.379"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:25.676" endtime="20200727 10:07:28.379"></status>
</kw>
<msg timestamp="20200727 10:07:28.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:25.676" endtime="20200727 10:07:28.379"></status>
</kw>
<msg timestamp="20200727 10:07:28.379" level="INFO">${result} = {
  "volumeName": "80343-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:07:19.421Z",
  "modificationTime": "2020-07-27T10:07:21.014Z",...</msg>
<status status="PASS" starttime="20200727 10:07:25.675" endtime="20200727 10:07:28.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:28.380" endtime="20200727 10:07:28.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:28.383" level="INFO">Running command 'ozone sh key delete o3://om:9862/80343-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:30.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:30.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:28.381" endtime="20200727 10:07:30.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:30.810" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:30.809" endtime="20200727 10:07:30.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:30.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:30.811" endtime="20200727 10:07:30.811"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:28.381" endtime="20200727 10:07:30.811"></status>
</kw>
<msg timestamp="20200727 10:07:30.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:28.381" endtime="20200727 10:07:30.812"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:28.380" endtime="20200727 10:07:30.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:30.816" level="INFO">Running command 'ozone sh key cp o3://om:9862/80343-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:35.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:35.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:30.813" endtime="20200727 10:07:35.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:35.430" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:35.429" endtime="20200727 10:07:35.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:35.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:35.430" endtime="20200727 10:07:35.431"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:30.813" endtime="20200727 10:07:35.431"></status>
</kw>
<msg timestamp="20200727 10:07:35.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:30.813" endtime="20200727 10:07:35.431"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:30.812" endtime="20200727 10:07:35.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:35.435" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:35.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:35.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:35.433" endtime="20200727 10:07:35.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:35.438" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:35.438" endtime="20200727 10:07:35.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:35.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:35.439" endtime="20200727 10:07:35.439"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:35.432" endtime="20200727 10:07:35.440"></status>
</kw>
<msg timestamp="20200727 10:07:35.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:35.432" endtime="20200727 10:07:35.440"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:35.431" endtime="20200727 10:07:35.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:35.444" level="INFO">Running command 'ozone sh key get o3://om:9862/80343-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:39.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:39.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:35.442" endtime="20200727 10:07:39.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:39.563" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:39.562" endtime="20200727 10:07:39.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:39.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:39.563" endtime="20200727 10:07:39.564"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:35.441" endtime="20200727 10:07:39.564"></status>
</kw>
<msg timestamp="20200727 10:07:39.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:35.441" endtime="20200727 10:07:39.564"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:35.440" endtime="20200727 10:07:39.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:39.568" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:39.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:39.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:39.566" endtime="20200727 10:07:39.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:39.571" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:39.571" endtime="20200727 10:07:39.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:39.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:39.572" endtime="20200727 10:07:39.572"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:39.565" endtime="20200727 10:07:39.572"></status>
</kw>
<msg timestamp="20200727 10:07:39.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:39.565" endtime="20200727 10:07:39.572"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:39.565" endtime="20200727 10:07:39.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:39.576" level="INFO">Running command 'ozone sh key delete o3://om:9862/80343-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:41.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:41.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:39.574" endtime="20200727 10:07:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:41.966" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:41.965" endtime="20200727 10:07:41.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:41.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:41.966" endtime="20200727 10:07:41.967"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:39.574" endtime="20200727 10:07:41.967"></status>
</kw>
<msg timestamp="20200727 10:07:41.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:39.573" endtime="20200727 10:07:41.967"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:39.573" endtime="20200727 10:07:41.967"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:41.970" level="INFO">Running command 'ozone sh key get o3://om:9862/80343-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:44.456" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:07:44.456" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:07:41.968" endtime="20200727 10:07:44.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:44.457" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:07:44.457" endtime="20200727 10:07:44.457"></status>
</kw>
<msg timestamp="20200727 10:07:44.458" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:07:41.968" endtime="20200727 10:07:44.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:44.458" endtime="20200727 10:07:44.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:44.462" level="INFO">Running command 'ozone sh key get --force o3://om:9862/80343-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:48.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:48.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:44.460" endtime="20200727 10:07:48.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:48.444" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:48.444" endtime="20200727 10:07:48.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:48.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:48.444" endtime="20200727 10:07:48.445"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:44.459" endtime="20200727 10:07:48.445"></status>
</kw>
<msg timestamp="20200727 10:07:48.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:44.459" endtime="20200727 10:07:48.446"></status>
</kw>
<msg timestamp="20200727 10:07:48.446" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 10:07:44.458" endtime="20200727 10:07:48.446"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:48.446" endtime="20200727 10:07:48.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:48.451" level="INFO">Running command 'ozone sh key info o3://om:9862/80343-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:51.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:51.177" level="INFO">${output} = {
  "volumeName": "80343-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:07:10.810Z",
  "modificationTime": "2020-07-27T10:07:12.356Z",
  "re...</msg>
<status status="PASS" starttime="20200727 10:07:48.448" endtime="20200727 10:07:51.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:51.178" level="INFO">{
  "volumeName": "80343-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:07:10.810Z",
  "modificationTime": "2020-07-27T10:07:12.356Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585260617498750,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:07:51.177" endtime="20200727 10:07:51.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:51.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:51.178" endtime="20200727 10:07:51.179"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:48.448" endtime="20200727 10:07:51.179"></status>
</kw>
<msg timestamp="20200727 10:07:51.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:48.447" endtime="20200727 10:07:51.179"></status>
</kw>
<msg timestamp="20200727 10:07:51.179" level="INFO">${result} = {
  "volumeName": "80343-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:07:10.810Z",
  "modificationTime": "2020-07-27T10:07:12.356Z",
  "re...</msg>
<status status="PASS" starttime="20200727 10:07:48.446" endtime="20200727 10:07:51.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:51.180" endtime="20200727 10:07:51.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:51.185" level="INFO">Running command 'ozone sh key list o3://om:9862/80343-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:53.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:53.958" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:07:51.182" endtime="20200727 10:07:53.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:53.959" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:07:53.959" endtime="20200727 10:07:53.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:53.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:53.960" endtime="20200727 10:07:53.960"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:51.181" endtime="20200727 10:07:53.960"></status>
</kw>
<msg timestamp="20200727 10:07:53.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:51.181" endtime="20200727 10:07:53.960"></status>
</kw>
<msg timestamp="20200727 10:07:53.961" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 10:07:51.180" endtime="20200727 10:07:53.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:53.961" endtime="20200727 10:07:53.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:53.966" level="INFO">Running command 'ozone sh key rename o3://om:9862/80343-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:56.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:56.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:53.963" endtime="20200727 10:07:56.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:56.456" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:07:56.456" endtime="20200727 10:07:56.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:56.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:56.457" endtime="20200727 10:07:56.457"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:53.962" endtime="20200727 10:07:56.457"></status>
</kw>
<msg timestamp="20200727 10:07:56.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:53.962" endtime="20200727 10:07:56.458"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:53.961" endtime="20200727 10:07:56.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:56.462" level="INFO">Running command 'ozone sh key list o3://om:9862/80343-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:07:59.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:07:59.146" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 10:07:56.459" endtime="20200727 10:07:59.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:07:59.147" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 10:07:59.146" endtime="20200727 10:07:59.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:07:59.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:07:59.147" endtime="20200727 10:07:59.148"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:56.459" endtime="20200727 10:07:59.148"></status>
</kw>
<msg timestamp="20200727 10:07:59.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:56.459" endtime="20200727 10:07:59.148"></status>
</kw>
<msg timestamp="20200727 10:07:59.148" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 10:07:56.458" endtime="20200727 10:07:59.148"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:07:59.149" endtime="20200727 10:07:59.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:07:59.154" level="INFO">Running command 'ozone sh key delete o3://om:9862/80343-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:01.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:01.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:07:59.151" endtime="20200727 10:08:01.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:01.527" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:08:01.527" endtime="20200727 10:08:01.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:01.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:01.528" endtime="20200727 10:08:01.528"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:59.150" endtime="20200727 10:08:01.528"></status>
</kw>
<msg timestamp="20200727 10:08:01.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:07:59.150" endtime="20200727 10:08:01.529"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:59.149" endtime="20200727 10:08:01.529"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:08.538" endtime="20200727 10:08:01.529"></status>
</kw>
<status status="PASS" starttime="20200727 10:07:08.538" endtime="20200727 10:08:01.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:01.533" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/80343-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:03.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:03.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:08:01.531" endtime="20200727 10:08:03.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:03.910" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:08:03.909" endtime="20200727 10:08:03.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:03.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:03.910" endtime="20200727 10:08:03.910"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:01.530" endtime="20200727 10:08:03.911"></status>
</kw>
<msg timestamp="20200727 10:08:03.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:01.530" endtime="20200727 10:08:03.911"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:01.529" endtime="20200727 10:08:03.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:03.916" level="INFO">Running command 'ozone sh volume delete o3://om:9862/80343-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:06.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:06.109" level="INFO">${output} = Volume 80343-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200727 10:08:03.912" endtime="20200727 10:08:06.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:06.110" level="INFO">Volume 80343-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200727 10:08:06.109" endtime="20200727 10:08:06.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:06.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:06.110" endtime="20200727 10:08:06.111"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:03.912" endtime="20200727 10:08:06.111"></status>
</kw>
<msg timestamp="20200727 10:08:06.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:03.912" endtime="20200727 10:08:06.111"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:03.911" endtime="20200727 10:08:06.112"></status>
</kw>
<status status="PASS" starttime="20200727 10:06:45.764" endtime="20200727 10:08:06.112"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:06:45.763" endtime="20200727 10:08:06.112" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:06.113" endtime="20200727 10:08:06.113"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:06.117" level="INFO">Running command 'ozone sh volume create o3://om:9862/80343-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:08.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:08.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:08:06.115" endtime="20200727 10:08:08.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:08.493" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:08:08.492" endtime="20200727 10:08:08.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:08.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:08.493" endtime="20200727 10:08:08.494"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:06.115" endtime="20200727 10:08:08.494"></status>
</kw>
<msg timestamp="20200727 10:08:08.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:06.114" endtime="20200727 10:08:08.494"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:06.114" endtime="20200727 10:08:08.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:08.498" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80343-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:11.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:11.180" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:08.496" endtime="20200727 10:08:11.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:11.181" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:11.180" endtime="20200727 10:08:11.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:11.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:11.182" endtime="20200727 10:08:11.182"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:08.496" endtime="20200727 10:08:11.182"></status>
</kw>
<msg timestamp="20200727 10:08:11.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:08.495" endtime="20200727 10:08:11.183"></status>
</kw>
<msg timestamp="20200727 10:08:11.183" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:08.495" endtime="20200727 10:08:11.183"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:11.183" endtime="20200727 10:08:11.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:11.189" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/80343-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:13.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:13.753" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 10:08:11.185" endtime="20200727 10:08:13.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:13.754" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 10:08:13.754" endtime="20200727 10:08:13.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:13.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:13.755" endtime="20200727 10:08:13.755"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:11.185" endtime="20200727 10:08:13.755"></status>
</kw>
<msg timestamp="20200727 10:08:13.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:11.185" endtime="20200727 10:08:13.756"></status>
</kw>
<msg timestamp="20200727 10:08:13.756" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200727 10:08:11.184" endtime="20200727 10:08:13.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:13.761" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80343-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:16.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:16.639" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:13.757" endtime="20200727 10:08:16.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:16.640" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:16.639" endtime="20200727 10:08:16.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:16.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:16.640" endtime="20200727 10:08:16.641"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:13.757" endtime="20200727 10:08:16.641"></status>
</kw>
<msg timestamp="20200727 10:08:16.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:13.757" endtime="20200727 10:08:16.641"></status>
</kw>
<msg timestamp="20200727 10:08:16.641" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:13.756" endtime="20200727 10:08:16.641"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:16.642" endtime="20200727 10:08:16.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:16.647" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/80343-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:18.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:18.929" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:08:16.645" endtime="20200727 10:08:18.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:18.930" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:08:18.929" endtime="20200727 10:08:18.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:18.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:18.930" endtime="20200727 10:08:18.931"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:16.644" endtime="20200727 10:08:18.931"></status>
</kw>
<msg timestamp="20200727 10:08:18.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:16.643" endtime="20200727 10:08:18.931"></status>
</kw>
<msg timestamp="20200727 10:08:18.931" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200727 10:08:16.643" endtime="20200727 10:08:18.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:18.936" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80343-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:21.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:21.681" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:18.933" endtime="20200727 10:08:21.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:21.682" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:21.682" endtime="20200727 10:08:21.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:21.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:21.683" endtime="20200727 10:08:21.683"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:18.933" endtime="20200727 10:08:21.684"></status>
</kw>
<msg timestamp="20200727 10:08:21.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:18.932" endtime="20200727 10:08:21.684"></status>
</kw>
<msg timestamp="20200727 10:08:21.684" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:18.932" endtime="20200727 10:08:21.684"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:21.684" endtime="20200727 10:08:21.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:21.689" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/80343-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:24.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:24.125" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:08:21.687" endtime="20200727 10:08:24.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:24.127" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:08:24.126" endtime="20200727 10:08:24.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:24.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:24.127" endtime="20200727 10:08:24.127"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:21.686" endtime="20200727 10:08:24.128"></status>
</kw>
<msg timestamp="20200727 10:08:24.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:21.686" endtime="20200727 10:08:24.128"></status>
</kw>
<msg timestamp="20200727 10:08:24.128" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:08:21.685" endtime="20200727 10:08:24.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:24.131" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80343-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:26.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:26.783" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200727 10:08:24.129" endtime="20200727 10:08:26.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:26.784" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:26.784" endtime="20200727 10:08:26.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:26.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:26.785" endtime="20200727 10:08:26.785"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:24.129" endtime="20200727 10:08:26.785"></status>
</kw>
<msg timestamp="20200727 10:08:26.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:24.129" endtime="20200727 10:08:26.785"></status>
</kw>
<msg timestamp="20200727 10:08:26.786" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200727 10:08:24.128" endtime="20200727 10:08:26.786"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:26.786" endtime="20200727 10:08:26.786"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:26.786" endtime="20200727 10:08:26.787"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:06.114" endtime="20200727 10:08:26.787"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:08:06.112" endtime="20200727 10:08:26.788" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:26.789" endtime="20200727 10:08:26.790"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:26.794" level="INFO">Running command 'ozone sh bucket create o3://om:9862/80343-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:29.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:29.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:08:26.792" endtime="20200727 10:08:29.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:29.225" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:08:29.224" endtime="20200727 10:08:29.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:29.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:29.225" endtime="20200727 10:08:29.226"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:26.792" endtime="20200727 10:08:29.226"></status>
</kw>
<msg timestamp="20200727 10:08:29.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:26.791" endtime="20200727 10:08:29.226"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:26.791" endtime="20200727 10:08:29.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:29.231" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80343-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:31.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:31.776" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:29.228" endtime="20200727 10:08:31.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:31.777" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:31.777" endtime="20200727 10:08:31.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:31.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:31.777" endtime="20200727 10:08:31.778"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:29.227" endtime="20200727 10:08:31.778"></status>
</kw>
<msg timestamp="20200727 10:08:31.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:29.227" endtime="20200727 10:08:31.779"></status>
</kw>
<msg timestamp="20200727 10:08:31.779" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:29.226" endtime="20200727 10:08:31.779"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:31.779" endtime="20200727 10:08:31.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:31.783" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/80343-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:34.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:34.245" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 10:08:31.781" endtime="20200727 10:08:34.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:34.246" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 10:08:34.245" endtime="20200727 10:08:34.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:34.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:34.246" endtime="20200727 10:08:34.247"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:31.781" endtime="20200727 10:08:34.247"></status>
</kw>
<msg timestamp="20200727 10:08:34.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:31.780" endtime="20200727 10:08:34.247"></status>
</kw>
<msg timestamp="20200727 10:08:34.247" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200727 10:08:31.779" endtime="20200727 10:08:34.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:34.251" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80343-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:37.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:37.155" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:34.249" endtime="20200727 10:08:37.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:37.156" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:37.155" endtime="20200727 10:08:37.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:37.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:37.156" endtime="20200727 10:08:37.157"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:34.248" endtime="20200727 10:08:37.157"></status>
</kw>
<msg timestamp="20200727 10:08:37.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:34.248" endtime="20200727 10:08:37.157"></status>
</kw>
<msg timestamp="20200727 10:08:37.158" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:34.247" endtime="20200727 10:08:37.158"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:37.158" endtime="20200727 10:08:37.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:37.164" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/80343-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:39.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:39.505" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:08:37.161" endtime="20200727 10:08:39.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:39.506" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:08:39.506" endtime="20200727 10:08:39.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:39.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:39.507" endtime="20200727 10:08:39.507"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:37.160" endtime="20200727 10:08:39.507"></status>
</kw>
<msg timestamp="20200727 10:08:39.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:37.159" endtime="20200727 10:08:39.508"></status>
</kw>
<msg timestamp="20200727 10:08:39.508" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:08:37.159" endtime="20200727 10:08:39.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:39.511" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80343-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:42.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:42.151" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:39.509" endtime="20200727 10:08:42.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:42.152" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:42.151" endtime="20200727 10:08:42.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:42.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:42.152" endtime="20200727 10:08:42.153"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:39.509" endtime="20200727 10:08:42.153"></status>
</kw>
<msg timestamp="20200727 10:08:42.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:39.509" endtime="20200727 10:08:42.153"></status>
</kw>
<msg timestamp="20200727 10:08:42.153" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:39.508" endtime="20200727 10:08:42.153"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:42.154" endtime="20200727 10:08:42.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:42.158" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/80343-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:44.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:44.873" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:08:42.156" endtime="20200727 10:08:44.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:44.874" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:08:44.873" endtime="20200727 10:08:44.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:44.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:44.874" endtime="20200727 10:08:44.875"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:42.155" endtime="20200727 10:08:44.875"></status>
</kw>
<msg timestamp="20200727 10:08:44.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:42.155" endtime="20200727 10:08:44.875"></status>
</kw>
<msg timestamp="20200727 10:08:44.875" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:08:42.155" endtime="20200727 10:08:44.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:44.880" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80343-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:47.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:47.548" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 10:08:44.877" endtime="20200727 10:08:47.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:47.549" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:47.548" endtime="20200727 10:08:47.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:47.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:47.549" endtime="20200727 10:08:47.550"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:44.876" endtime="20200727 10:08:47.550"></status>
</kw>
<msg timestamp="20200727 10:08:47.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:44.876" endtime="20200727 10:08:47.550"></status>
</kw>
<msg timestamp="20200727 10:08:47.550" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 10:08:44.875" endtime="20200727 10:08:47.550"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:47.550" endtime="20200727 10:08:47.551"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:47.551" endtime="20200727 10:08:47.551"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:26.790" endtime="20200727 10:08:47.552"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:08:26.789" endtime="20200727 10:08:47.552" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:47.553" endtime="20200727 10:08:47.554"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:47.558" level="INFO">Running command 'ozone sh key put o3://om:9862/80343-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:51.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:51.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:08:47.555" endtime="20200727 10:08:51.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:51.967" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:08:51.966" endtime="20200727 10:08:51.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:51.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:51.967" endtime="20200727 10:08:51.968"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:47.555" endtime="20200727 10:08:51.968"></status>
</kw>
<msg timestamp="20200727 10:08:51.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:47.555" endtime="20200727 10:08:51.968"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:47.554" endtime="20200727 10:08:51.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:51.972" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80343-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:54.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:54.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:51.970" endtime="20200727 10:08:54.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:54.740" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:54.739" endtime="20200727 10:08:54.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:54.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:54.740" endtime="20200727 10:08:54.741"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:51.970" endtime="20200727 10:08:54.741"></status>
</kw>
<msg timestamp="20200727 10:08:54.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:51.969" endtime="20200727 10:08:54.742"></status>
</kw>
<msg timestamp="20200727 10:08:54.742" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:51.969" endtime="20200727 10:08:54.742"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:54.742" endtime="20200727 10:08:54.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:54.746" level="INFO">Running command 'ozone sh key addacl o3://om:9862/80343-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:57.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:57.121" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:08:54.744" endtime="20200727 10:08:57.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:57.123" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:08:57.122" endtime="20200727 10:08:57.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:57.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:57.123" endtime="20200727 10:08:57.124"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:54.744" endtime="20200727 10:08:57.124"></status>
</kw>
<msg timestamp="20200727 10:08:57.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:54.743" endtime="20200727 10:08:57.124"></status>
</kw>
<msg timestamp="20200727 10:08:57.124" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200727 10:08:54.743" endtime="20200727 10:08:57.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:57.129" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80343-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:08:59.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:08:59.669" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:57.126" endtime="20200727 10:08:59.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:08:59.671" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:08:59.670" endtime="20200727 10:08:59.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:08:59.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:08:59.671" endtime="20200727 10:08:59.671"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:57.125" endtime="20200727 10:08:59.672"></status>
</kw>
<msg timestamp="20200727 10:08:59.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:57.125" endtime="20200727 10:08:59.672"></status>
</kw>
<msg timestamp="20200727 10:08:59.672" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:08:57.125" endtime="20200727 10:08:59.672"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:08:59.672" endtime="20200727 10:08:59.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:08:59.677" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/80343-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:02.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:02.031" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:08:59.675" endtime="20200727 10:09:02.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:02.032" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:09:02.032" endtime="20200727 10:09:02.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:02.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:02.033" endtime="20200727 10:09:02.033"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:59.674" endtime="20200727 10:09:02.033"></status>
</kw>
<msg timestamp="20200727 10:09:02.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:08:59.674" endtime="20200727 10:09:02.034"></status>
</kw>
<msg timestamp="20200727 10:09:02.034" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200727 10:08:59.673" endtime="20200727 10:09:02.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:02.037" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80343-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:05.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:05.054" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:09:02.035" endtime="20200727 10:09:05.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:05.055" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:09:05.055" endtime="20200727 10:09:05.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:05.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:05.056" endtime="20200727 10:09:05.057"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:02.035" endtime="20200727 10:09:05.057"></status>
</kw>
<msg timestamp="20200727 10:09:05.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:02.035" endtime="20200727 10:09:05.057"></status>
</kw>
<msg timestamp="20200727 10:09:05.057" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200727 10:09:02.034" endtime="20200727 10:09:05.057"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:05.057" endtime="20200727 10:09:05.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:05.063" level="INFO">Running command 'ozone sh key setacl o3://om:9862/80343-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:07.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:07.335" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:09:05.059" endtime="20200727 10:09:07.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:07.336" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:09:07.336" endtime="20200727 10:09:07.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:07.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:07.337" endtime="20200727 10:09:07.337"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:05.059" endtime="20200727 10:09:07.337"></status>
</kw>
<msg timestamp="20200727 10:09:07.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:05.059" endtime="20200727 10:09:07.337"></status>
</kw>
<msg timestamp="20200727 10:09:07.338" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200727 10:09:05.058" endtime="20200727 10:09:07.338"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:07.341" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80343-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:10.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:10.060" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 10:09:07.339" endtime="20200727 10:09:10.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:10.061" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200727 10:09:10.060" endtime="20200727 10:09:10.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:10.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:10.061" endtime="20200727 10:09:10.062"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:07.339" endtime="20200727 10:09:10.062"></status>
</kw>
<msg timestamp="20200727 10:09:10.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:07.338" endtime="20200727 10:09:10.062"></status>
</kw>
<msg timestamp="20200727 10:09:10.063" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200727 10:09:07.338" endtime="20200727 10:09:10.063"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:10.063" endtime="20200727 10:09:10.063"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:10.063" endtime="20200727 10:09:10.064"></status>
</kw>
<status status="PASS" starttime="20200727 10:08:47.554" endtime="20200727 10:09:10.064"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:08:47.552" endtime="20200727 10:09:10.065" critical="yes"></status>
</test>
<test id="s1-s3-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:10.066" endtime="20200727 10:09:10.066"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:10.069" level="INFO">Running command 'ozone sh volume info o3:///80343-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:12.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:09:12.324" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80343-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 10:09:10.067" endtime="20200727 10:09:12.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:12.325" level="INFO">VOLUME_NOT_FOUND Volume 80343-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 10:09:12.324" endtime="20200727 10:09:12.325"></status>
</kw>
<msg timestamp="20200727 10:09:12.325" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80343-rpcwport is not found</msg>
<status status="PASS" starttime="20200727 10:09:10.067" endtime="20200727 10:09:12.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:12.325" endtime="20200727 10:09:12.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:12.330" level="INFO">Running command 'ozone sh volume create o3:///80343-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:14.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:14.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:12.327" endtime="20200727 10:09:14.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:14.729" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:14.728" endtime="20200727 10:09:14.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:14.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:14.729" endtime="20200727 10:09:14.730"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:12.327" endtime="20200727 10:09:14.730"></status>
</kw>
<msg timestamp="20200727 10:09:14.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:12.327" endtime="20200727 10:09:14.730"></status>
</kw>
<msg timestamp="20200727 10:09:14.730" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 10:09:12.326" endtime="20200727 10:09:14.731"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:14.731" endtime="20200727 10:09:14.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:14.737" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="80343-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:17.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:17.465" level="INFO">${output} = {
  "metadata": {},
  "name": "80343-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:09:14.616Z",
  "modificationTime": "2020-07-27T10:09:14.616Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 10:09:14.733" endtime="20200727 10:09:17.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:17.466" level="INFO">{
  "metadata": {},
  "name": "80343-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:09:14.616Z",
  "modificationTime": "2020-07-27T10:09:14.616Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:09:17.465" endtime="20200727 10:09:17.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:17.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:17.466" endtime="20200727 10:09:17.467"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:14.732" endtime="20200727 10:09:17.467"></status>
</kw>
<msg timestamp="20200727 10:09:17.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:14.732" endtime="20200727 10:09:17.467"></status>
</kw>
<msg timestamp="20200727 10:09:17.468" level="INFO">${result} = {
  "metadata": {},
  "name": "80343-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:09:14.616Z",
  "modificationTime": "2020-07-27T10:09:14.616Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 10:09:14.731" endtime="20200727 10:09:17.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:17.468" endtime="20200727 10:09:17.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:17.472" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80343-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:20.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:20.198" level="INFO">${output} = {
  "metadata": {},
  "name": "80343-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:09:14.616Z",
  "modificationTime": "2020-07-27T10:09:14.616Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 10:09:17.470" endtime="20200727 10:09:20.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:20.199" level="INFO">{
  "metadata": {},
  "name": "80343-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:09:14.616Z",
  "modificationTime": "2020-07-27T10:09:14.616Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:09:20.198" endtime="20200727 10:09:20.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:20.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:20.200" endtime="20200727 10:09:20.200"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:17.469" endtime="20200727 10:09:20.200"></status>
</kw>
<msg timestamp="20200727 10:09:20.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:17.469" endtime="20200727 10:09:20.201"></status>
</kw>
<msg timestamp="20200727 10:09:20.202" level="INFO">${result} = {
  "metadata": {},
  "name": "80343-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:09:14.616Z",
  "modificationTime": "2020-07-27T10:09:14.616Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200727 10:09:17.468" endtime="20200727 10:09:20.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:20.202" endtime="20200727 10:09:20.203"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:20.206" level="INFO">Running command 'ozone sh volume update o3:///80343-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:22.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:22.830" level="INFO">${output} = {
  "metadata" : { },
  "name" : "80343-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T10:09:14.616Z",
  "modificationTime" : "2020-07-27T10:09:22.494Z",
  "acls...</msg>
<status status="PASS" starttime="20200727 10:09:20.204" endtime="20200727 10:09:22.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:22.832" level="INFO">{
  "metadata" : { },
  "name" : "80343-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T10:09:14.616Z",
  "modificationTime" : "2020-07-27T10:09:22.494Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 10:09:22.831" endtime="20200727 10:09:22.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:22.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:22.832" endtime="20200727 10:09:22.833"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:20.204" endtime="20200727 10:09:22.833"></status>
</kw>
<msg timestamp="20200727 10:09:22.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:20.203" endtime="20200727 10:09:22.856"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:20.203" endtime="20200727 10:09:22.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:22.863" level="INFO">Running command 'ozone sh volume info o3:///80343-rpcwport | jq -r '. | select(.name=="80343-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:25.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:25.541" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:09:22.861" endtime="20200727 10:09:25.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:25.542" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 10:09:25.541" endtime="20200727 10:09:25.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:25.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:25.542" endtime="20200727 10:09:25.543"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:22.860" endtime="20200727 10:09:25.543"></status>
</kw>
<msg timestamp="20200727 10:09:25.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:22.859" endtime="20200727 10:09:25.544"></status>
</kw>
<msg timestamp="20200727 10:09:25.544" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:09:22.856" endtime="20200727 10:09:25.544"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:25.544" endtime="20200727 10:09:25.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:25.550" level="INFO">Running command 'ozone sh bucket create o3:///80343-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:28.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:28.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:25.546" endtime="20200727 10:09:28.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:28.044" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:28.044" endtime="20200727 10:09:28.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:28.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:28.044" endtime="20200727 10:09:28.045"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:25.546" endtime="20200727 10:09:28.046"></status>
</kw>
<msg timestamp="20200727 10:09:28.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:25.545" endtime="20200727 10:09:28.046"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:25.544" endtime="20200727 10:09:28.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:28.050" level="INFO">Running command 'ozone sh bucket info o3:///80343-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:30.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:30.706" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 10:09:28.048" endtime="20200727 10:09:30.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:30.707" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 10:09:30.707" endtime="20200727 10:09:30.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:30.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:30.708" endtime="20200727 10:09:30.708"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:28.047" endtime="20200727 10:09:30.708"></status>
</kw>
<msg timestamp="20200727 10:09:30.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:28.047" endtime="20200727 10:09:30.709"></status>
</kw>
<msg timestamp="20200727 10:09:30.709" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 10:09:28.046" endtime="20200727 10:09:30.709"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:30.709" endtime="20200727 10:09:30.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:30.713" level="INFO">Running command 'ozone sh bucket list o3:///80343-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:33.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:33.447" level="INFO">${output} = 80343-rpcwport</msg>
<status status="PASS" starttime="20200727 10:09:30.711" endtime="20200727 10:09:33.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:33.448" level="INFO">80343-rpcwport</msg>
<status status="PASS" starttime="20200727 10:09:33.448" endtime="20200727 10:09:33.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:33.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:33.449" endtime="20200727 10:09:33.449"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:30.711" endtime="20200727 10:09:33.450"></status>
</kw>
<msg timestamp="20200727 10:09:33.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:30.710" endtime="20200727 10:09:33.450"></status>
</kw>
<msg timestamp="20200727 10:09:33.450" level="INFO">${result} = 80343-rpcwport</msg>
<status status="PASS" starttime="20200727 10:09:30.710" endtime="20200727 10:09:33.450"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:33.450" endtime="20200727 10:09:33.451"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:33.457" level="INFO">Running command 'ozone sh key put o3:///80343-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:37.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:37.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:33.455" endtime="20200727 10:09:37.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:37.929" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:37.928" endtime="20200727 10:09:37.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:37.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:37.929" endtime="20200727 10:09:37.930"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:33.453" endtime="20200727 10:09:37.930"></status>
</kw>
<msg timestamp="20200727 10:09:37.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:33.453" endtime="20200727 10:09:37.930"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:33.452" endtime="20200727 10:09:37.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:37.936" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:37.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:37.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:37.932" endtime="20200727 10:09:37.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:37.939" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:37.938" endtime="20200727 10:09:37.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:37.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:37.939" endtime="20200727 10:09:37.939"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:37.932" endtime="20200727 10:09:37.940"></status>
</kw>
<msg timestamp="20200727 10:09:37.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:37.931" endtime="20200727 10:09:37.940"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:37.931" endtime="20200727 10:09:37.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:37.944" level="INFO">Running command 'ozone sh key get o3:///80343-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:42.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:42.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:37.942" endtime="20200727 10:09:42.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:42.183" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:42.182" endtime="20200727 10:09:42.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:42.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:42.183" endtime="20200727 10:09:42.183"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:37.941" endtime="20200727 10:09:42.184"></status>
</kw>
<msg timestamp="20200727 10:09:42.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:37.941" endtime="20200727 10:09:42.184"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:37.940" endtime="20200727 10:09:42.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:42.188" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:42.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:42.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:42.186" endtime="20200727 10:09:42.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:42.191" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:42.191" endtime="20200727 10:09:42.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:42.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:42.191" endtime="20200727 10:09:42.192"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:42.185" endtime="20200727 10:09:42.192"></status>
</kw>
<msg timestamp="20200727 10:09:42.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:42.185" endtime="20200727 10:09:42.192"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:42.184" endtime="20200727 10:09:42.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:42.196" level="INFO">Running command 'ozone sh key put -t RATIS o3:///80343-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:46.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:46.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:42.194" endtime="20200727 10:09:46.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:46.668" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:46.667" endtime="20200727 10:09:46.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:46.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:46.668" endtime="20200727 10:09:46.669"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:42.194" endtime="20200727 10:09:46.669"></status>
</kw>
<msg timestamp="20200727 10:09:46.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:42.193" endtime="20200727 10:09:46.669"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:42.193" endtime="20200727 10:09:46.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:46.673" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:46.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:46.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:46.671" endtime="20200727 10:09:46.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:46.676" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:46.676" endtime="20200727 10:09:46.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:46.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:46.677" endtime="20200727 10:09:46.677"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:46.670" endtime="20200727 10:09:46.677"></status>
</kw>
<msg timestamp="20200727 10:09:46.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:46.670" endtime="20200727 10:09:46.678"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:46.669" endtime="20200727 10:09:46.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:46.682" level="INFO">Running command 'ozone sh key get o3:///80343-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:50.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:50.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:46.679" endtime="20200727 10:09:50.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:50.723" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:50.722" endtime="20200727 10:09:50.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:50.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:50.723" endtime="20200727 10:09:50.724"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:46.679" endtime="20200727 10:09:50.724"></status>
</kw>
<msg timestamp="20200727 10:09:50.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:46.679" endtime="20200727 10:09:50.724"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:46.678" endtime="20200727 10:09:50.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:50.728" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:50.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:50.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:50.726" endtime="20200727 10:09:50.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:50.731" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:50.731" endtime="20200727 10:09:50.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:50.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:50.731" endtime="20200727 10:09:50.732"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:50.726" endtime="20200727 10:09:50.732"></status>
</kw>
<msg timestamp="20200727 10:09:50.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:50.725" endtime="20200727 10:09:50.732"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:50.725" endtime="20200727 10:09:50.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:50.736" level="INFO">Running command 'ozone sh key info o3:///80343-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:53.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:53.536" level="INFO">${output} = {
  "volumeName": "80343-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:09:44.654Z",
  "modificationTime": "2020-07-27T10:09:46.179Z",
...</msg>
<status status="PASS" starttime="20200727 10:09:50.734" endtime="20200727 10:09:53.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:53.538" level="INFO">{
  "volumeName": "80343-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:09:44.654Z",
  "modificationTime": "2020-07-27T10:09:46.179Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585270699753600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:09:53.536" endtime="20200727 10:09:53.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:53.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:53.538" endtime="20200727 10:09:53.538"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:50.733" endtime="20200727 10:09:53.539"></status>
</kw>
<msg timestamp="20200727 10:09:53.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:50.733" endtime="20200727 10:09:53.539"></status>
</kw>
<msg timestamp="20200727 10:09:53.539" level="INFO">${result} = {
  "volumeName": "80343-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:09:44.654Z",
  "modificationTime": "2020-07-27T10:09:46.179Z",
...</msg>
<status status="PASS" starttime="20200727 10:09:50.732" endtime="20200727 10:09:53.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:09:53.539" endtime="20200727 10:09:53.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:53.544" level="INFO">Running command 'ozone sh key delete o3:///80343-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:09:56.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:09:56.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:53.541" endtime="20200727 10:09:56.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:09:56.030" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:09:56.029" endtime="20200727 10:09:56.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:09:56.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:09:56.030" endtime="20200727 10:09:56.031"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:53.541" endtime="20200727 10:09:56.031"></status>
</kw>
<msg timestamp="20200727 10:09:56.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:53.540" endtime="20200727 10:09:56.032"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:53.540" endtime="20200727 10:09:56.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:09:56.037" level="INFO">Running command 'ozone sh key cp o3:///80343-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:00.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:00.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:09:56.034" endtime="20200727 10:10:00.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:00.521" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:00.520" endtime="20200727 10:10:00.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:00.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:00.521" endtime="20200727 10:10:00.522"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:56.033" endtime="20200727 10:10:00.522"></status>
</kw>
<msg timestamp="20200727 10:10:00.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:09:56.033" endtime="20200727 10:10:00.522"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:56.032" endtime="20200727 10:10:00.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:00.527" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:00.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:00.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:00.524" endtime="20200727 10:10:00.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:00.529" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:00.529" endtime="20200727 10:10:00.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:00.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:00.530" endtime="20200727 10:10:00.530"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:00.523" endtime="20200727 10:10:00.530"></status>
</kw>
<msg timestamp="20200727 10:10:00.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:00.523" endtime="20200727 10:10:00.531"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:00.523" endtime="20200727 10:10:00.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:00.535" level="INFO">Running command 'ozone sh key get o3:///80343-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:04.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:04.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:00.533" endtime="20200727 10:10:04.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:04.703" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:04.702" endtime="20200727 10:10:04.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:04.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:04.703" endtime="20200727 10:10:04.703"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:00.532" endtime="20200727 10:10:04.704"></status>
</kw>
<msg timestamp="20200727 10:10:04.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:00.532" endtime="20200727 10:10:04.704"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:00.531" endtime="20200727 10:10:04.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:04.707" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:04.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:04.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:04.705" endtime="20200727 10:10:04.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:04.711" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:04.710" endtime="20200727 10:10:04.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:04.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:04.711" endtime="20200727 10:10:04.712"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:04.705" endtime="20200727 10:10:04.712"></status>
</kw>
<msg timestamp="20200727 10:10:04.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:04.705" endtime="20200727 10:10:04.712"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:04.704" endtime="20200727 10:10:04.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:04.716" level="INFO">Running command 'ozone sh key delete o3:///80343-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:07.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:07.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:04.714" endtime="20200727 10:10:07.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:07.138" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:07.137" endtime="20200727 10:10:07.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:07.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:07.138" endtime="20200727 10:10:07.139"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:04.713" endtime="20200727 10:10:07.139"></status>
</kw>
<msg timestamp="20200727 10:10:07.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:04.713" endtime="20200727 10:10:07.139"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:04.713" endtime="20200727 10:10:07.139"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:07.142" level="INFO">Running command 'ozone sh key get o3:///80343-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:09.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:10:09.754" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:10:07.140" endtime="20200727 10:10:09.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:09.756" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:10:09.755" endtime="20200727 10:10:09.756"></status>
</kw>
<msg timestamp="20200727 10:10:09.756" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:10:07.140" endtime="20200727 10:10:09.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:09.756" endtime="20200727 10:10:09.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:09.760" level="INFO">Running command 'ozone sh key get --force o3:///80343-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:14.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:14.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:09.758" endtime="20200727 10:10:14.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:14.094" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:14.094" endtime="20200727 10:10:14.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:14.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:14.095" endtime="20200727 10:10:14.095"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:09.758" endtime="20200727 10:10:14.096"></status>
</kw>
<msg timestamp="20200727 10:10:14.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:09.757" endtime="20200727 10:10:14.096"></status>
</kw>
<msg timestamp="20200727 10:10:14.096" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 10:10:09.757" endtime="20200727 10:10:14.096"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:14.096" endtime="20200727 10:10:14.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:14.101" level="INFO">Running command 'ozone sh key info o3:///80343-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:16.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:16.664" level="INFO">${output} = {
  "volumeName": "80343-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:09:35.816Z",
  "modificationTime": "2020-07-27T10:09:37.499Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 10:10:14.099" endtime="20200727 10:10:16.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:16.665" level="INFO">{
  "volumeName": "80343-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:09:35.816Z",
  "modificationTime": "2020-07-27T10:09:37.499Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585270120611970,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:10:16.665" endtime="20200727 10:10:16.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:16.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:16.666" endtime="20200727 10:10:16.666"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:14.098" endtime="20200727 10:10:16.666"></status>
</kw>
<msg timestamp="20200727 10:10:16.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:14.097" endtime="20200727 10:10:16.666"></status>
</kw>
<msg timestamp="20200727 10:10:16.667" level="INFO">${result} = {
  "volumeName": "80343-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:09:35.816Z",
  "modificationTime": "2020-07-27T10:09:37.499Z",
  "rep...</msg>
<status status="PASS" starttime="20200727 10:10:14.097" endtime="20200727 10:10:16.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:16.667" endtime="20200727 10:10:16.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:16.671" level="INFO">Running command 'ozone sh key list o3:///80343-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:19.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:19.412" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:10:16.669" endtime="20200727 10:10:19.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:19.414" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:10:19.413" endtime="20200727 10:10:19.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:19.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:19.414" endtime="20200727 10:10:19.414"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:16.668" endtime="20200727 10:10:19.415"></status>
</kw>
<msg timestamp="20200727 10:10:19.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:16.668" endtime="20200727 10:10:19.415"></status>
</kw>
<msg timestamp="20200727 10:10:19.415" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 10:10:16.667" endtime="20200727 10:10:19.415"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:19.415" endtime="20200727 10:10:19.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:19.419" level="INFO">Running command 'ozone sh key rename o3:///80343-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:21.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:21.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:19.417" endtime="20200727 10:10:21.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:21.922" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:21.921" endtime="20200727 10:10:21.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:21.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:21.922" endtime="20200727 10:10:21.922"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:19.417" endtime="20200727 10:10:21.923"></status>
</kw>
<msg timestamp="20200727 10:10:21.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:19.416" endtime="20200727 10:10:21.923"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:19.416" endtime="20200727 10:10:21.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:21.927" level="INFO">Running command 'ozone sh key list o3:///80343-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:24.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:24.626" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 10:10:21.925" endtime="20200727 10:10:24.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:24.627" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 10:10:24.627" endtime="20200727 10:10:24.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:24.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:24.628" endtime="20200727 10:10:24.628"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:21.924" endtime="20200727 10:10:24.628"></status>
</kw>
<msg timestamp="20200727 10:10:24.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:21.924" endtime="20200727 10:10:24.629"></status>
</kw>
<msg timestamp="20200727 10:10:24.629" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 10:10:21.923" endtime="20200727 10:10:24.629"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:24.629" endtime="20200727 10:10:24.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:24.634" level="INFO">Running command 'ozone sh key delete o3:///80343-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:27.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:27.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:24.632" endtime="20200727 10:10:27.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:27.164" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:27.164" endtime="20200727 10:10:27.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:27.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:27.165" endtime="20200727 10:10:27.165"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:24.631" endtime="20200727 10:10:27.165"></status>
</kw>
<msg timestamp="20200727 10:10:27.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:24.630" endtime="20200727 10:10:27.166"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:24.630" endtime="20200727 10:10:27.166"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:33.451" endtime="20200727 10:10:27.166"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:33.451" endtime="20200727 10:10:27.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:27.170" level="INFO">Running command 'ozone sh bucket delete o3:///80343-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:29.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:29.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:27.168" endtime="20200727 10:10:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:29.467" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:29.467" endtime="20200727 10:10:29.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:29.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:29.468" endtime="20200727 10:10:29.473"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:27.167" endtime="20200727 10:10:29.474"></status>
</kw>
<msg timestamp="20200727 10:10:29.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:27.167" endtime="20200727 10:10:29.474"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:27.166" endtime="20200727 10:10:29.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:29.478" level="INFO">Running command 'ozone sh volume delete o3:///80343-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:32.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:32.090" level="INFO">${output} = Volume 80343-rpcwport is deleted</msg>
<status status="PASS" starttime="20200727 10:10:29.476" endtime="20200727 10:10:32.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:32.091" level="INFO">Volume 80343-rpcwport is deleted</msg>
<status status="PASS" starttime="20200727 10:10:32.091" endtime="20200727 10:10:32.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:32.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:32.092" endtime="20200727 10:10:32.092"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:29.475" endtime="20200727 10:10:32.092"></status>
</kw>
<msg timestamp="20200727 10:10:32.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:29.475" endtime="20200727 10:10:32.093"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:29.474" endtime="20200727 10:10:32.093"></status>
</kw>
<status status="PASS" starttime="20200727 10:09:10.066" endtime="20200727 10:10:32.093"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:09:10.065" endtime="20200727 10:10:32.093" critical="yes"></status>
</test>
<test id="s1-s3-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:32.095" endtime="20200727 10:10:32.095"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:32.099" level="INFO">Running command 'ozone sh volume info /80343-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:34.481" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:10:34.481" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80343-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 10:10:32.096" endtime="20200727 10:10:34.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:34.482" level="INFO">VOLUME_NOT_FOUND Volume 80343-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 10:10:34.482" endtime="20200727 10:10:34.482"></status>
</kw>
<msg timestamp="20200727 10:10:34.483" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80343-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200727 10:10:32.096" endtime="20200727 10:10:34.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:34.483" endtime="20200727 10:10:34.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:34.488" level="INFO">Running command 'ozone sh volume create /80343-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:37.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:37.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:34.485" endtime="20200727 10:10:37.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:37.084" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:37.083" endtime="20200727 10:10:37.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:37.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:37.084" endtime="20200727 10:10:37.085"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:34.485" endtime="20200727 10:10:37.085"></status>
</kw>
<msg timestamp="20200727 10:10:37.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:34.484" endtime="20200727 10:10:37.085"></status>
</kw>
<msg timestamp="20200727 10:10:37.085" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 10:10:34.484" endtime="20200727 10:10:37.085"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:37.085" endtime="20200727 10:10:37.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:37.090" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="80343-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:39.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:39.828" level="INFO">${output} = {
  "metadata": {},
  "name": "80343-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:10:36.980Z",
  "modificationTime": "2020-07-27T10:10:36.980Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 10:10:37.088" endtime="20200727 10:10:39.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:39.829" level="INFO">{
  "metadata": {},
  "name": "80343-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:10:36.980Z",
  "modificationTime": "2020-07-27T10:10:36.980Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:10:39.828" endtime="20200727 10:10:39.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:39.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:39.829" endtime="20200727 10:10:39.830"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:37.087" endtime="20200727 10:10:39.830"></status>
</kw>
<msg timestamp="20200727 10:10:39.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:37.087" endtime="20200727 10:10:39.830"></status>
</kw>
<msg timestamp="20200727 10:10:39.831" level="INFO">${result} = {
  "metadata": {},
  "name": "80343-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:10:36.980Z",
  "modificationTime": "2020-07-27T10:10:36.980Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 10:10:37.086" endtime="20200727 10:10:39.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:39.831" endtime="20200727 10:10:39.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:39.835" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80343-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:42.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:42.563" level="INFO">${output} = {
  "metadata": {},
  "name": "80343-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:10:36.980Z",
  "modificationTime": "2020-07-27T10:10:36.980Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 10:10:39.833" endtime="20200727 10:10:42.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:42.564" level="INFO">{
  "metadata": {},
  "name": "80343-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:10:36.980Z",
  "modificationTime": "2020-07-27T10:10:36.980Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200727 10:10:42.563" endtime="20200727 10:10:42.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:42.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:42.564" endtime="20200727 10:10:42.565"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:39.832" endtime="20200727 10:10:42.565"></status>
</kw>
<msg timestamp="20200727 10:10:42.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:39.832" endtime="20200727 10:10:42.565"></status>
</kw>
<msg timestamp="20200727 10:10:42.566" level="INFO">${result} = {
  "metadata": {},
  "name": "80343-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-27T10:10:36.980Z",
  "modificationTime": "2020-07-27T10:10:36.980Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200727 10:10:39.831" endtime="20200727 10:10:42.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:42.566" endtime="20200727 10:10:42.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:42.571" level="INFO">Running command 'ozone sh volume update /80343-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:45.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:45.259" level="INFO">${output} = {
  "metadata" : { },
  "name" : "80343-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T10:10:36.980Z",
  "modificationTime" : "2020-07-27T10:10:44.856Z",
  "a...</msg>
<status status="PASS" starttime="20200727 10:10:42.568" endtime="20200727 10:10:45.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:45.260" level="INFO">{
  "metadata" : { },
  "name" : "80343-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-27T10:10:36.980Z",
  "modificationTime" : "2020-07-27T10:10:44.856Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200727 10:10:45.259" endtime="20200727 10:10:45.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:45.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:45.260" endtime="20200727 10:10:45.261"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:42.567" endtime="20200727 10:10:45.261"></status>
</kw>
<msg timestamp="20200727 10:10:45.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:42.567" endtime="20200727 10:10:45.261"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:42.566" endtime="20200727 10:10:45.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:45.266" level="INFO">Running command 'ozone sh volume info /80343-rpcwoscheme | jq -r '. | select(.name=="80343-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:47.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:47.927" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:10:45.264" endtime="20200727 10:10:47.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:47.928" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200727 10:10:47.928" endtime="20200727 10:10:47.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:47.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:47.928" endtime="20200727 10:10:47.929"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:45.263" endtime="20200727 10:10:47.929"></status>
</kw>
<msg timestamp="20200727 10:10:47.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:45.263" endtime="20200727 10:10:47.929"></status>
</kw>
<msg timestamp="20200727 10:10:47.930" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200727 10:10:45.262" endtime="20200727 10:10:47.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:47.930" endtime="20200727 10:10:47.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:47.934" level="INFO">Running command 'ozone sh bucket create /80343-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:50.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:50.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:47.932" endtime="20200727 10:10:50.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:50.438" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:10:50.437" endtime="20200727 10:10:50.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:50.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:50.438" endtime="20200727 10:10:50.439"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:47.931" endtime="20200727 10:10:50.439"></status>
</kw>
<msg timestamp="20200727 10:10:50.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:47.931" endtime="20200727 10:10:50.439"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:47.930" endtime="20200727 10:10:50.439"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:50.443" level="INFO">Running command 'ozone sh bucket info /80343-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:53.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:53.130" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200727 10:10:50.441" endtime="20200727 10:10:53.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:53.131" level="INFO">DISK</msg>
<status status="PASS" starttime="20200727 10:10:53.131" endtime="20200727 10:10:53.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:53.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:53.132" endtime="20200727 10:10:53.132"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:50.441" endtime="20200727 10:10:53.133"></status>
</kw>
<msg timestamp="20200727 10:10:53.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:50.440" endtime="20200727 10:10:53.133"></status>
</kw>
<msg timestamp="20200727 10:10:53.133" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200727 10:10:50.439" endtime="20200727 10:10:53.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:53.133" endtime="20200727 10:10:53.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:53.138" level="INFO">Running command 'ozone sh bucket list /80343-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:10:55.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:10:55.825" level="INFO">${output} = 80343-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 10:10:53.135" endtime="20200727 10:10:55.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:10:55.826" level="INFO">80343-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 10:10:55.826" endtime="20200727 10:10:55.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:10:55.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:10:55.826" endtime="20200727 10:10:55.827"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:53.135" endtime="20200727 10:10:55.827"></status>
</kw>
<msg timestamp="20200727 10:10:55.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:53.134" endtime="20200727 10:10:55.827"></status>
</kw>
<msg timestamp="20200727 10:10:55.827" level="INFO">${result} = 80343-rpcwoscheme</msg>
<status status="PASS" starttime="20200727 10:10:53.134" endtime="20200727 10:10:55.828"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200727 10:10:55.828" endtime="20200727 10:10:55.828"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:10:55.834" level="INFO">Running command 'ozone sh key put /80343-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:00.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:00.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:10:55.831" endtime="20200727 10:11:00.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:00.171" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:00.170" endtime="20200727 10:11:00.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:00.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:00.171" endtime="20200727 10:11:00.172"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:55.830" endtime="20200727 10:11:00.172"></status>
</kw>
<msg timestamp="20200727 10:11:00.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:10:55.830" endtime="20200727 10:11:00.172"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:55.829" endtime="20200727 10:11:00.172"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:00.176" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:00.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:00.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:00.174" endtime="20200727 10:11:00.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:00.180" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:00.179" endtime="20200727 10:11:00.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:00.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:00.180" endtime="20200727 10:11:00.180"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:00.173" endtime="20200727 10:11:00.181"></status>
</kw>
<msg timestamp="20200727 10:11:00.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:00.173" endtime="20200727 10:11:00.181"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:00.173" endtime="20200727 10:11:00.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:00.184" level="INFO">Running command 'ozone sh key get /80343-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:04.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:04.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:00.182" endtime="20200727 10:11:04.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:04.308" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:04.307" endtime="20200727 10:11:04.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:04.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:04.309" endtime="20200727 10:11:04.309"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:00.182" endtime="20200727 10:11:04.310"></status>
</kw>
<msg timestamp="20200727 10:11:04.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:00.182" endtime="20200727 10:11:04.310"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:00.181" endtime="20200727 10:11:04.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:04.314" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:04.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:04.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:04.312" endtime="20200727 10:11:04.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:04.318" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:04.317" endtime="20200727 10:11:04.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:04.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:04.318" endtime="20200727 10:11:04.319"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:04.311" endtime="20200727 10:11:04.319"></status>
</kw>
<msg timestamp="20200727 10:11:04.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:04.311" endtime="20200727 10:11:04.319"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:04.310" endtime="20200727 10:11:04.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:04.323" level="INFO">Running command 'ozone sh key put -t RATIS /80343-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:08.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:08.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:04.321" endtime="20200727 10:11:08.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:08.684" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:08.683" endtime="20200727 10:11:08.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:08.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:08.684" endtime="20200727 10:11:08.684"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:04.320" endtime="20200727 10:11:08.685"></status>
</kw>
<msg timestamp="20200727 10:11:08.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:04.320" endtime="20200727 10:11:08.685"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:04.320" endtime="20200727 10:11:08.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:08.689" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:08.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:08.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:08.687" endtime="20200727 10:11:08.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:08.692" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:08.692" endtime="20200727 10:11:08.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:08.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:08.693" endtime="20200727 10:11:08.693"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:08.686" endtime="20200727 10:11:08.693"></status>
</kw>
<msg timestamp="20200727 10:11:08.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:08.686" endtime="20200727 10:11:08.694"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:08.685" endtime="20200727 10:11:08.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:08.698" level="INFO">Running command 'ozone sh key get /80343-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:12.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:12.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:08.695" endtime="20200727 10:11:12.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:12.732" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:12.732" endtime="20200727 10:11:12.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:12.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:12.733" endtime="20200727 10:11:12.733"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:08.695" endtime="20200727 10:11:12.733"></status>
</kw>
<msg timestamp="20200727 10:11:12.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:08.695" endtime="20200727 10:11:12.734"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:08.694" endtime="20200727 10:11:12.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:12.739" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:12.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:12.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:12.735" endtime="20200727 10:11:12.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:12.742" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:12.741" endtime="20200727 10:11:12.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:12.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:12.742" endtime="20200727 10:11:12.743"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:12.735" endtime="20200727 10:11:12.743"></status>
</kw>
<msg timestamp="20200727 10:11:12.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:12.735" endtime="20200727 10:11:12.743"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:12.734" endtime="20200727 10:11:12.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:12.748" level="INFO">Running command 'ozone sh key info /80343-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:15.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:15.294" level="INFO">${output} = {
  "volumeName": "80343-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:11:06.661Z",
  "modificationTime": "2020-07-27T10:11:08.296Z...</msg>
<status status="PASS" starttime="20200727 10:11:12.745" endtime="20200727 10:11:15.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:15.295" level="INFO">{
  "volumeName": "80343-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:11:06.661Z",
  "modificationTime": "2020-07-27T10:11:08.296Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585276074164370,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:11:15.295" endtime="20200727 10:11:15.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:15.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:15.296" endtime="20200727 10:11:15.296"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:12.745" endtime="20200727 10:11:15.296"></status>
</kw>
<msg timestamp="20200727 10:11:15.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:12.745" endtime="20200727 10:11:15.297"></status>
</kw>
<msg timestamp="20200727 10:11:15.297" level="INFO">${result} = {
  "volumeName": "80343-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:11:06.661Z",
  "modificationTime": "2020-07-27T10:11:08.296Z...</msg>
<status status="PASS" starttime="20200727 10:11:12.744" endtime="20200727 10:11:15.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 10:11:15.297" endtime="20200727 10:11:15.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:15.302" level="INFO">Running command 'ozone sh key delete /80343-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:17.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:17.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:15.299" endtime="20200727 10:11:17.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:17.635" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:17.634" endtime="20200727 10:11:17.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:17.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:17.635" endtime="20200727 10:11:17.636"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:15.298" endtime="20200727 10:11:17.636"></status>
</kw>
<msg timestamp="20200727 10:11:17.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:15.298" endtime="20200727 10:11:17.636"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:15.297" endtime="20200727 10:11:17.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:17.641" level="INFO">Running command 'ozone sh key cp /80343-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:22.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:22.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:17.638" endtime="20200727 10:11:22.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:22.319" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:22.318" endtime="20200727 10:11:22.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:22.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:22.319" endtime="20200727 10:11:22.320"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:17.637" endtime="20200727 10:11:22.320"></status>
</kw>
<msg timestamp="20200727 10:11:22.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:17.637" endtime="20200727 10:11:22.320"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:17.636" endtime="20200727 10:11:22.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:22.324" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:22.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:22.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:22.322" endtime="20200727 10:11:22.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:22.327" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:22.327" endtime="20200727 10:11:22.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:22.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:22.327" endtime="20200727 10:11:22.328"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:22.321" endtime="20200727 10:11:22.328"></status>
</kw>
<msg timestamp="20200727 10:11:22.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:22.321" endtime="20200727 10:11:22.328"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:22.320" endtime="20200727 10:11:22.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:22.332" level="INFO">Running command 'ozone sh key get /80343-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:26.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:26.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:22.330" endtime="20200727 10:11:26.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:26.499" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:26.499" endtime="20200727 10:11:26.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:26.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:26.500" endtime="20200727 10:11:26.500"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:22.329" endtime="20200727 10:11:26.501"></status>
</kw>
<msg timestamp="20200727 10:11:26.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:22.329" endtime="20200727 10:11:26.501"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:22.328" endtime="20200727 10:11:26.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:26.504" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:26.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:26.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:26.502" endtime="20200727 10:11:26.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:26.508" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:26.507" endtime="20200727 10:11:26.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:26.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:26.508" endtime="20200727 10:11:26.509"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:26.502" endtime="20200727 10:11:26.509"></status>
</kw>
<msg timestamp="20200727 10:11:26.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:26.502" endtime="20200727 10:11:26.509"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:26.501" endtime="20200727 10:11:26.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:26.512" level="INFO">Running command 'ozone sh key delete /80343-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:28.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:28.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:26.511" endtime="20200727 10:11:28.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:28.848" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:28.848" endtime="20200727 10:11:28.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:28.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:28.849" endtime="20200727 10:11:28.849"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:26.510" endtime="20200727 10:11:28.849"></status>
</kw>
<msg timestamp="20200727 10:11:28.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:26.510" endtime="20200727 10:11:28.850"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:26.509" endtime="20200727 10:11:28.850"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:28.853" level="INFO">Running command 'ozone sh key get /80343-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:31.062" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 10:11:31.062" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:11:28.851" endtime="20200727 10:11:31.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:31.063" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:11:31.062" endtime="20200727 10:11:31.063"></status>
</kw>
<msg timestamp="20200727 10:11:31.064" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200727 10:11:28.850" endtime="20200727 10:11:31.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:11:31.064" endtime="20200727 10:11:31.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:31.069" level="INFO">Running command 'ozone sh key get --force /80343-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:35.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:35.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:31.067" endtime="20200727 10:11:35.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:35.144" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:35.143" endtime="20200727 10:11:35.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:35.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:35.144" endtime="20200727 10:11:35.145"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:31.065" endtime="20200727 10:11:35.145"></status>
</kw>
<msg timestamp="20200727 10:11:35.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:31.065" endtime="20200727 10:11:35.145"></status>
</kw>
<msg timestamp="20200727 10:11:35.146" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 10:11:31.064" endtime="20200727 10:11:35.146"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200727 10:11:35.146" endtime="20200727 10:11:35.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:35.150" level="INFO">Running command 'ozone sh key info /80343-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:37.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:37.957" level="INFO">${output} = {
  "volumeName": "80343-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:10:58.240Z",
  "modificationTime": "2020-07-27T10:10:59.748Z",
  "...</msg>
<status status="PASS" starttime="20200727 10:11:35.148" endtime="20200727 10:11:37.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:37.958" level="INFO">{
  "volumeName": "80343-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:10:58.240Z",
  "modificationTime": "2020-07-27T10:10:59.748Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104585275522416770,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200727 10:11:37.957" endtime="20200727 10:11:37.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:37.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:37.958" endtime="20200727 10:11:37.959"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:35.148" endtime="20200727 10:11:37.959"></status>
</kw>
<msg timestamp="20200727 10:11:37.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:35.147" endtime="20200727 10:11:37.959"></status>
</kw>
<msg timestamp="20200727 10:11:37.960" level="INFO">${result} = {
  "volumeName": "80343-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-27T10:10:58.240Z",
  "modificationTime": "2020-07-27T10:10:59.748Z",
  "...</msg>
<status status="PASS" starttime="20200727 10:11:35.147" endtime="20200727 10:11:37.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200727 10:11:37.960" endtime="20200727 10:11:37.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:37.965" level="INFO">Running command 'ozone sh key list /80343-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:40.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:40.600" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200727 10:11:37.962" endtime="20200727 10:11:40.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:40.601" level="INFO">key1</msg>
<status status="PASS" starttime="20200727 10:11:40.601" endtime="20200727 10:11:40.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:40.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:40.602" endtime="20200727 10:11:40.602"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:37.961" endtime="20200727 10:11:40.602"></status>
</kw>
<msg timestamp="20200727 10:11:40.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:37.961" endtime="20200727 10:11:40.603"></status>
</kw>
<msg timestamp="20200727 10:11:40.603" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200727 10:11:37.960" endtime="20200727 10:11:40.603"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:11:40.603" endtime="20200727 10:11:40.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:40.608" level="INFO">Running command 'ozone sh key rename /80343-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:43.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:43.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:40.605" endtime="20200727 10:11:43.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:43.013" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:43.012" endtime="20200727 10:11:43.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:43.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:43.013" endtime="20200727 10:11:43.014"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:40.604" endtime="20200727 10:11:43.014"></status>
</kw>
<msg timestamp="20200727 10:11:43.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:40.604" endtime="20200727 10:11:43.014"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:40.603" endtime="20200727 10:11:43.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:43.029" level="INFO">Running command 'ozone sh key list /80343-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:45.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:45.861" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200727 10:11:43.027" endtime="20200727 10:11:45.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:45.862" level="INFO">key2</msg>
<status status="PASS" starttime="20200727 10:11:45.861" endtime="20200727 10:11:45.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:45.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:45.862" endtime="20200727 10:11:45.863"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:43.026" endtime="20200727 10:11:45.863"></status>
</kw>
<msg timestamp="20200727 10:11:45.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:43.015" endtime="20200727 10:11:45.863"></status>
</kw>
<msg timestamp="20200727 10:11:45.863" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200727 10:11:43.015" endtime="20200727 10:11:45.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200727 10:11:45.864" endtime="20200727 10:11:45.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:45.868" level="INFO">Running command 'ozone sh key delete /80343-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:48.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:48.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:45.866" endtime="20200727 10:11:48.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:48.199" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:48.198" endtime="20200727 10:11:48.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:48.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:48.199" endtime="20200727 10:11:48.199"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:45.865" endtime="20200727 10:11:48.200"></status>
</kw>
<msg timestamp="20200727 10:11:48.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:45.865" endtime="20200727 10:11:48.200"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:45.864" endtime="20200727 10:11:48.200"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:55.828" endtime="20200727 10:11:48.200"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:55.828" endtime="20200727 10:11:48.200"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:48.205" level="INFO">Running command 'ozone sh bucket delete /80343-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:50.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:50.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 10:11:48.202" endtime="20200727 10:11:50.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:50.453" level="INFO"></msg>
<status status="PASS" starttime="20200727 10:11:50.452" endtime="20200727 10:11:50.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:50.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:50.453" endtime="20200727 10:11:50.454"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:48.201" endtime="20200727 10:11:50.454"></status>
</kw>
<msg timestamp="20200727 10:11:50.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:48.201" endtime="20200727 10:11:50.454"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:48.200" endtime="20200727 10:11:50.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:11:50.459" level="INFO">Running command 'ozone sh volume delete /80343-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:11:52.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:11:52.779" level="INFO">${output} = Volume 80343-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200727 10:11:50.457" endtime="20200727 10:11:52.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:11:52.781" level="INFO">Volume 80343-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200727 10:11:52.780" endtime="20200727 10:11:52.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:11:52.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:11:52.781" endtime="20200727 10:11:52.781"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:50.456" endtime="20200727 10:11:52.782"></status>
</kw>
<msg timestamp="20200727 10:11:52.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:11:50.455" endtime="20200727 10:11:52.782"></status>
</kw>
<status status="PASS" starttime="20200727 10:11:50.455" endtime="20200727 10:11:52.782"></status>
</kw>
<status status="PASS" starttime="20200727 10:10:32.095" endtime="20200727 10:11:52.782"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 10:10:32.094" endtime="20200727 10:11:52.782" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200727 10:06:45.754" endtime="20200727 10:11:52.784"></status>
</suite>
<status status="PASS" starttime="20200727 10:04:13.442" endtime="20200727 10:11:52.790"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="0">Critical Tests</stat>
<stat pass="23" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="23" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="15" fail="0" id="s1-s2" name="Links">ozone-basic.Links</stat>
<stat pass="6" fail="0" id="s1-s3" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
