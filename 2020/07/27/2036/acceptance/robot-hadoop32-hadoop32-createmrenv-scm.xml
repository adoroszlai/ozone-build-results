<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 09:51:53.950" rpa="false">
<suite id="s1" name="hadoop32-createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:51:54.008" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:51:57.549" level="INFO">${rc} = 255</msg>
<msg timestamp="20200727 09:51:57.550" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:51:54.004" endtime="20200727 09:51:57.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:51:57.551" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:51:57.550" endtime="20200727 09:51:57.551"></status>
</kw>
<msg timestamp="20200727 09:51:57.551" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20200727 09:51:54.003" endtime="20200727 09:51:57.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:51:57.555" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:52:00.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:52:00.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:51:57.553" endtime="20200727 09:52:00.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:52:00.369" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:52:00.368" endtime="20200727 09:52:00.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:52:00.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:52:00.369" endtime="20200727 09:52:00.369"></status>
</kw>
<status status="PASS" starttime="20200727 09:51:57.553" endtime="20200727 09:52:00.370"></status>
</kw>
<msg timestamp="20200727 09:52:00.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:51:57.553" endtime="20200727 09:52:00.370"></status>
</kw>
<msg timestamp="20200727 09:52:00.370" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200727 09:51:57.552" endtime="20200727 09:52:00.370"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200727 09:52:00.370" endtime="20200727 09:52:00.371"></status>
</kw>
<status status="PASS" starttime="20200727 09:51:57.552" endtime="20200727 09:52:00.371"></status>
</kw>
<status status="PASS" starttime="20200727 09:51:57.551" endtime="20200727 09:52:00.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:52:00.376" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:52:03.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:52:03.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:52:00.374" endtime="20200727 09:52:03.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:52:03.055" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:52:03.054" endtime="20200727 09:52:03.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:52:03.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:52:03.056" endtime="20200727 09:52:03.056"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:00.373" endtime="20200727 09:52:03.056"></status>
</kw>
<msg timestamp="20200727 09:52:03.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:52:00.372" endtime="20200727 09:52:03.057"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:00.372" endtime="20200727 09:52:03.057"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:00.371" endtime="20200727 09:52:03.057"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:00.371" endtime="20200727 09:52:03.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200727 09:52:03.057" endtime="20200727 09:52:03.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:52:03.062" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:52:05.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:52:05.792" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:52:02.809Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 09:52:03.059" endtime="20200727 09:52:05.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:52:05.793" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:52:02.809Z",
  "modificationTime" : "2020-07-27T09:52:02.809Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" starttime="20200727 09:52:05.793" endtime="20200727 09:52:05.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:52:05.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:52:05.793" endtime="20200727 09:52:05.794"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:03.059" endtime="20200727 09:52:05.794"></status>
</kw>
<msg timestamp="20200727 09:52:05.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:52:03.058" endtime="20200727 09:52:05.795"></status>
</kw>
<msg timestamp="20200727 09:52:05.795" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-27T09:52:02.809Z",
  "modificationTime" : "2020-07...</msg>
<status status="PASS" starttime="20200727 09:52:03.058" endtime="20200727 09:52:05.795"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200727 09:52:05.795" endtime="20200727 09:52:05.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /volume1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:52:05.801" level="INFO">Running command 'ozone sh key put /volume1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:52:11.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:52:11.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:52:05.797" endtime="20200727 09:52:11.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:52:11.974" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:52:11.974" endtime="20200727 09:52:11.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:52:11.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:52:11.975" endtime="20200727 09:52:11.975"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:05.796" endtime="20200727 09:52:11.975"></status>
</kw>
<msg timestamp="20200727 09:52:11.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:52:05.796" endtime="20200727 09:52:11.976"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:05.795" endtime="20200727 09:52:11.976"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 09:51:54.002" endtime="20200727 09:52:11.976" critical="yes"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:52:11.981" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:52:14.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:52:14.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:52:11.979" endtime="20200727 09:52:14.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:52:14.989" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:52:14.988" endtime="20200727 09:52:14.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:52:14.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:52:14.989" endtime="20200727 09:52:14.990"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:11.978" endtime="20200727 09:52:14.990"></status>
</kw>
<msg timestamp="20200727 09:52:14.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:52:11.978" endtime="20200727 09:52:14.990"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:11.977" endtime="20200727 09:52:14.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 09:52:14.994" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 09:52:18.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 09:52:18.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 09:52:14.992" endtime="20200727 09:52:18.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 09:52:18.010" level="INFO"></msg>
<status status="PASS" starttime="20200727 09:52:18.009" endtime="20200727 09:52:18.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 09:52:18.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 09:52:18.010" endtime="20200727 09:52:18.011"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:14.991" endtime="20200727 09:52:18.011"></status>
</kw>
<msg timestamp="20200727 09:52:18.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 09:52:14.991" endtime="20200727 09:52:18.012"></status>
</kw>
<status status="PASS" starttime="20200727 09:52:14.990" endtime="20200727 09:52:18.012"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200727 09:52:11.977" endtime="20200727 09:52:18.012" critical="yes"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20200727 09:51:53.951" endtime="20200727 09:52:18.013"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="hadoop32-createmrenv">hadoop32-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
