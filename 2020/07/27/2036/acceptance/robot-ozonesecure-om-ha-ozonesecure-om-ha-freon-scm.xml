<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 10:37:15.165" rpa="false">
<suite id="s1" name="ozonesecure-om-ha-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:37:15.226" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:37:24.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:37:24.174" level="INFO">${output} = 2020-07-27 10:37:16,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:16,858 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:15.223" endtime="20200727 10:37:24.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:37:24.175" level="INFO">2020-07-27 10:37:16,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:16,858 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:37:16,858 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 10:37:18,689 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 10:37:18,689 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 10:37:18,690 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 10:37:18,690 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-27 10:37:18,690 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 10:37:18,690 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 10:37:18,690 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 10:37:18,692 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 10:37:18,698 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:18,732 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-79857, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:37:19,151 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79857/bucket-0-99675, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:37:19,702 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:20,705 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:21,452 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:37:21,706 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,419
Average Time spent in bucket creation: 00:00:00,150
Average Time spent in key creation: 00:00:01,118
Average Time spent in key write: 00:00:01,199
Total bytes written: 10240
Total Execution time: 00:00:06,756
***************************************************</msg>
<status status="PASS" starttime="20200727 10:37:24.174" endtime="20200727 10:37:24.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:37:24.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:37:24.175" endtime="20200727 10:37:24.176"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:15.222" endtime="20200727 10:37:24.176"></status>
</kw>
<msg timestamp="20200727 10:37:24.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:37:15.222" endtime="20200727 10:37:24.176"></status>
</kw>
<msg timestamp="20200727 10:37:24.176" level="INFO">${result} = 2020-07-27 10:37:16,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:16,858 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:15.221" endtime="20200727 10:37:24.177"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:37:24.177" endtime="20200727 10:37:24.177"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:24.177" endtime="20200727 10:37:24.178"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:37:15.221" endtime="20200727 10:37:24.178" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:37:24.184" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:37:32.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:37:32.482" level="INFO">${output} = 2020-07-27 10:37:25,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:25,742 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:24.181" endtime="20200727 10:37:32.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:37:32.485" level="INFO">2020-07-27 10:37:25,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:25,742 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:37:25,742 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:37:25,939 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pbr0i7fcne
2020-07-27 10:37:25,953 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 10:37:26,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:27,416 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 10:37:27,490 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:37:27,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:28,522 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:37:28,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:29,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:30,973 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:31,974 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 10:37:32,115 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3399.223855, max=3399.223855, mean=3399.223855, stddev=0.0, median=3399.223855, p75=3399.223855, p95=3399.223855, p98=3399.223855, p99=3399.223855, p999=3399.223855, mean_rate=0.22002369442205988, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 10:37:32,116 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-07-27 10:37:32,118 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 10:37:32,118 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 10:37:32.483" endtime="20200727 10:37:32.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:37:32.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:37:32.485" endtime="20200727 10:37:32.486"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:24.181" endtime="20200727 10:37:32.486"></status>
</kw>
<msg timestamp="20200727 10:37:32.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:37:24.180" endtime="20200727 10:37:32.486"></status>
</kw>
<msg timestamp="20200727 10:37:32.486" level="INFO">${result} = 2020-07-27 10:37:25,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:25,742 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:24.180" endtime="20200727 10:37:32.486"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:37:32.487" endtime="20200727 10:37:32.487"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:32.487" endtime="20200727 10:37:32.487"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:37:24.179" endtime="20200727 10:37:32.488" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:37:32.494" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:37:36.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:37:36.891" level="INFO">${output} = 2020-07-27 10:37:33,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:34,126 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:32.490" endtime="20200727 10:37:36.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:37:36.893" level="INFO">2020-07-27 10:37:33,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:34,126 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:37:34,126 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:37:34,294 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ugrvg4hsv1
2020-07-27 10:37:34,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 10:37:35,334 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:36,334 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 10:37:36,819 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=187.580076, max=187.580076, mean=187.580076, stddev=0.0, median=187.580076, p75=187.580076, p95=187.580076, p98=187.580076, p99=187.580076, p999=187.580076, mean_rate=0.8950739333082829, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 10:37:36,823 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-27 10:37:36,828 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 10:37:36,828 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 10:37:36.892" endtime="20200727 10:37:36.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:37:36.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:37:36.893" endtime="20200727 10:37:36.893"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:32.490" endtime="20200727 10:37:36.894"></status>
</kw>
<msg timestamp="20200727 10:37:36.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:37:32.489" endtime="20200727 10:37:36.894"></status>
</kw>
<msg timestamp="20200727 10:37:36.894" level="INFO">${result} = 2020-07-27 10:37:33,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:34,126 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:32.489" endtime="20200727 10:37:36.894"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:37:36.895" endtime="20200727 10:37:36.895"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:36.894" endtime="20200727 10:37:36.895"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:37:32.488" endtime="20200727 10:37:36.895" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:37:36.901" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:37:41.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:37:41.096" level="INFO">${output} = 2020-07-27 10:37:38,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:38,426 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:36.899" endtime="20200727 10:37:41.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:37:41.097" level="INFO">2020-07-27 10:37:38,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:38,426 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:37:38,426 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:37:38,577 [main] INFO freon.BaseFreonGenerator: Executing test with prefix vws8zjevcq
2020-07-27 10:37:38,594 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 10:37:39,595 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:37:40,595 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 10:37:41,047 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=54.634588, max=54.634588, mean=54.634588, stddev=0.0, median=54.634588, p75=54.634588, p95=54.634588, p98=54.634588, p99=54.634588, p999=54.634588, mean_rate=0.8965732307655948, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 10:37:41,058 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 10:37:41,065 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 10:37:41,065 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 10:37:41.096" endtime="20200727 10:37:41.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:37:41.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:37:41.097" endtime="20200727 10:37:41.098"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:36.898" endtime="20200727 10:37:41.098"></status>
</kw>
<msg timestamp="20200727 10:37:41.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:37:36.898" endtime="20200727 10:37:41.098"></status>
</kw>
<msg timestamp="20200727 10:37:41.098" level="INFO">${result} = 2020-07-27 10:37:38,262 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:37:38,426 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:37:36.897" endtime="20200727 10:37:41.098"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:37:41.099" endtime="20200727 10:37:41.099"></status>
</kw>
<status status="PASS" starttime="20200727 10:37:41.099" endtime="20200727 10:37:41.099"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:37:36.896" endtime="20200727 10:37:41.100" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 10:37:15.196" endtime="20200727 10:37:41.101"></status>
</suite>
<status status="PASS" starttime="20200727 10:37:15.167" endtime="20200727 10:37:41.104"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-om-ha-freon">ozonesecure-om-ha-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozonesecure-om-ha-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
