<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 11:10:05.033" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:05.094" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:05.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:05.095" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:10:05.088" endtime="20200727 11:10:05.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:05.096" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:10:05.095" endtime="20200727 11:10:05.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:05.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:05.096" endtime="20200727 11:10:05.096"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.087" endtime="20200727 11:10:05.097"></status>
</kw>
<msg timestamp="20200727 11:10:05.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:05.087" endtime="20200727 11:10:05.097"></status>
</kw>
<msg timestamp="20200727 11:10:05.097" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:10:05.087" endtime="20200727 11:10:05.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:10:05.098" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:10:05.097" endtime="20200727 11:10:05.099"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:05.103" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:05.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:05.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:10:05.100" endtime="20200727 11:10:05.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:05.116" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:10:05.115" endtime="20200727 11:10:05.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:05.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:05.116" endtime="20200727 11:10:05.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.100" endtime="20200727 11:10:05.117"></status>
</kw>
<msg timestamp="20200727 11:10:05.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:05.100" endtime="20200727 11:10:05.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.099" endtime="20200727 11:10:05.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.099" endtime="20200727 11:10:05.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.086" endtime="20200727 11:10:05.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.086" endtime="20200727 11:10:05.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:05.121" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:13.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:13.447" level="INFO">${output} = 2020-07-27 11:10:06,464 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 11:10:06,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 11:10:05.119" endtime="20200727 11:10:13.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.448" level="INFO">2020-07-27 11:10:06,464 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 11:10:06,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 11:10:06,666 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 11:10:07,923 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-27 11:10:07,924 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 11:10:07,924 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 11:10:07,924 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-27 11:10:07,924 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-27 11:10:07,924 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 11:10:07,924 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 11:10:07,936 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 11:10:07,940 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-27 11:10:07,981 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-98886, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 11:10:08,016 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-98886/bucket-0-73520, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 11:10:08,504 [pool-2-thread-9] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 11:10:08,940 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,140
Average Time spent in key write: 00:00:00,424
Total bytes written: 10250
Total Execution time: 00:00:06,234
***************************************************</msg>
<status status="PASS" starttime="20200727 11:10:13.448" endtime="20200727 11:10:13.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:13.449" endtime="20200727 11:10:13.449"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.118" endtime="20200727 11:10:13.450"></status>
</kw>
<msg timestamp="20200727 11:10:13.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:05.118" endtime="20200727 11:10:13.450"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:05.118" endtime="20200727 11:10:13.450"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:10:05.085" endtime="20200727 11:10:13.450" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:13.456" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:13.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:13.458" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:10:13.454" endtime="20200727 11:10:13.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.459" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:10:13.459" endtime="20200727 11:10:13.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:13.460" endtime="20200727 11:10:13.460"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.454" endtime="20200727 11:10:13.460"></status>
</kw>
<msg timestamp="20200727 11:10:13.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:13.453" endtime="20200727 11:10:13.460"></status>
</kw>
<msg timestamp="20200727 11:10:13.461" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:10:13.453" endtime="20200727 11:10:13.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:13.465" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:13.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:13.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:10:13.463" endtime="20200727 11:10:13.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.482" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:10:13.481" endtime="20200727 11:10:13.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:13.482" endtime="20200727 11:10:13.482"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.462" endtime="20200727 11:10:13.483"></status>
</kw>
<msg timestamp="20200727 11:10:13.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:13.462" endtime="20200727 11:10:13.483"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.461" endtime="20200727 11:10:13.483"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.461" endtime="20200727 11:10:13.483"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.453" endtime="20200727 11:10:13.483"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.452" endtime="20200727 11:10:13.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:13.487" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:13.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:13.678" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:13.485" endtime="20200727 11:10:13.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.680" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:13.679" endtime="20200727 11:10:13.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:13.680" endtime="20200727 11:10:13.680"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.484" endtime="20200727 11:10:13.681"></status>
</kw>
<msg timestamp="20200727 11:10:13.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:13.484" endtime="20200727 11:10:13.681"></status>
</kw>
<msg timestamp="20200727 11:10:13.681" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:13.483" endtime="20200727 11:10:13.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:10:13.681" endtime="20200727 11:10:13.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:13.687" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:13.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:13.740" level="INFO">${output} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:13.683" endtime="20200727 11:10:13.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.741" level="INFO">[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 11:10:13.740" endtime="20200727 11:10:13.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:13.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:13.741" endtime="20200727 11:10:13.742"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.682" endtime="20200727 11:10:13.742"></status>
</kw>
<msg timestamp="20200727 11:10:13.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:13.682" endtime="20200727 11:10:13.742"></status>
</kw>
<msg timestamp="20200727 11:10:13.743" level="INFO">${result} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:13.682" endtime="20200727 11:10:13.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 11:10:13.744" level="FAIL">'[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 11:10:13.743" endtime="20200727 11:10:13.744"></status>
</kw>
<status status="FAIL" starttime="20200727 11:10:13.452" endtime="20200727 11:10:13.744"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:23.751" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:23.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:23.754" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:10:23.748" endtime="20200727 11:10:23.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.755" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:10:23.755" endtime="20200727 11:10:23.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:23.756" endtime="20200727 11:10:23.756"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.747" endtime="20200727 11:10:23.756"></status>
</kw>
<msg timestamp="20200727 11:10:23.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:23.747" endtime="20200727 11:10:23.757"></status>
</kw>
<msg timestamp="20200727 11:10:23.757" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:10:23.746" endtime="20200727 11:10:23.757"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:23.761" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:23.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:23.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:10:23.759" endtime="20200727 11:10:23.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.782" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:10:23.781" endtime="20200727 11:10:23.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:23.782" endtime="20200727 11:10:23.783"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.758" endtime="20200727 11:10:23.783"></status>
</kw>
<msg timestamp="20200727 11:10:23.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:23.758" endtime="20200727 11:10:23.783"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.757" endtime="20200727 11:10:23.783"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.757" endtime="20200727 11:10:23.783"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.746" endtime="20200727 11:10:23.784"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.745" endtime="20200727 11:10:23.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:23.787" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:23.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:23.806" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:23.785" endtime="20200727 11:10:23.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.807" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:23.806" endtime="20200727 11:10:23.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:23.807" endtime="20200727 11:10:23.807"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.785" endtime="20200727 11:10:23.808"></status>
</kw>
<msg timestamp="20200727 11:10:23.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:23.784" endtime="20200727 11:10:23.808"></status>
</kw>
<msg timestamp="20200727 11:10:23.808" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:23.784" endtime="20200727 11:10:23.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:10:23.808" endtime="20200727 11:10:23.809"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:23.813" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:23.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:23.831" level="INFO">${output} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:23.810" endtime="20200727 11:10:23.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.832" level="INFO">[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 11:10:23.832" endtime="20200727 11:10:23.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:23.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:23.832" endtime="20200727 11:10:23.833"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:23.809" endtime="20200727 11:10:23.833"></status>
</kw>
<msg timestamp="20200727 11:10:23.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:23.809" endtime="20200727 11:10:23.833"></status>
</kw>
<msg timestamp="20200727 11:10:23.834" level="INFO">${result} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:23.809" endtime="20200727 11:10:23.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 11:10:23.836" level="FAIL">'[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 11:10:23.835" endtime="20200727 11:10:23.836"></status>
</kw>
<status status="FAIL" starttime="20200727 11:10:23.744" endtime="20200727 11:10:23.836"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:33.842" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:33.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:33.845" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:10:33.840" endtime="20200727 11:10:33.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.846" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:10:33.845" endtime="20200727 11:10:33.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:33.846" endtime="20200727 11:10:33.847"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.839" endtime="20200727 11:10:33.847"></status>
</kw>
<msg timestamp="20200727 11:10:33.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:33.839" endtime="20200727 11:10:33.847"></status>
</kw>
<msg timestamp="20200727 11:10:33.848" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:10:33.838" endtime="20200727 11:10:33.848"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:33.851" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:33.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:33.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:10:33.849" endtime="20200727 11:10:33.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.866" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:10:33.865" endtime="20200727 11:10:33.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:33.866" endtime="20200727 11:10:33.867"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.849" endtime="20200727 11:10:33.867"></status>
</kw>
<msg timestamp="20200727 11:10:33.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:33.849" endtime="20200727 11:10:33.867"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.848" endtime="20200727 11:10:33.867"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.848" endtime="20200727 11:10:33.868"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.838" endtime="20200727 11:10:33.868"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.838" endtime="20200727 11:10:33.868"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:33.871" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:33.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:33.887" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:33.869" endtime="20200727 11:10:33.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.888" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:33.887" endtime="20200727 11:10:33.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:33.888" endtime="20200727 11:10:33.889"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.869" endtime="20200727 11:10:33.889"></status>
</kw>
<msg timestamp="20200727 11:10:33.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:33.868" endtime="20200727 11:10:33.889"></status>
</kw>
<msg timestamp="20200727 11:10:33.890" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:33.868" endtime="20200727 11:10:33.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:10:33.890" endtime="20200727 11:10:33.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:33.894" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:33.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:33.912" level="INFO">${output} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:33.892" endtime="20200727 11:10:33.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.913" level="INFO">[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 11:10:33.913" endtime="20200727 11:10:33.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:33.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:33.914" endtime="20200727 11:10:33.914"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:33.891" endtime="20200727 11:10:33.915"></status>
</kw>
<msg timestamp="20200727 11:10:33.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:33.891" endtime="20200727 11:10:33.915"></status>
</kw>
<msg timestamp="20200727 11:10:33.915" level="INFO">${result} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:33.890" endtime="20200727 11:10:33.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 11:10:33.916" level="FAIL">'[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 11:10:33.916" endtime="20200727 11:10:33.916"></status>
</kw>
<status status="FAIL" starttime="20200727 11:10:33.837" endtime="20200727 11:10:33.917"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:43.923" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:43.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:43.926" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:10:43.920" endtime="20200727 11:10:43.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.927" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:10:43.926" endtime="20200727 11:10:43.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:43.927" endtime="20200727 11:10:43.928"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.920" endtime="20200727 11:10:43.928"></status>
</kw>
<msg timestamp="20200727 11:10:43.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:43.919" endtime="20200727 11:10:43.929"></status>
</kw>
<msg timestamp="20200727 11:10:43.929" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:10:43.919" endtime="20200727 11:10:43.929"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:43.933" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:43.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:43.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:10:43.931" endtime="20200727 11:10:43.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.951" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:10:43.950" endtime="20200727 11:10:43.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:43.951" endtime="20200727 11:10:43.952"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.930" endtime="20200727 11:10:43.952"></status>
</kw>
<msg timestamp="20200727 11:10:43.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:43.930" endtime="20200727 11:10:43.952"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.929" endtime="20200727 11:10:43.952"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.929" endtime="20200727 11:10:43.952"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.918" endtime="20200727 11:10:43.952"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.918" endtime="20200727 11:10:43.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:43.957" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:43.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:43.972" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:43.954" endtime="20200727 11:10:43.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.973" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:43.973" endtime="20200727 11:10:43.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:43.974" endtime="20200727 11:10:43.974"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.954" endtime="20200727 11:10:43.977"></status>
</kw>
<msg timestamp="20200727 11:10:43.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:43.953" endtime="20200727 11:10:43.978"></status>
</kw>
<msg timestamp="20200727 11:10:43.978" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:43.953" endtime="20200727 11:10:43.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:10:43.978" endtime="20200727 11:10:43.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:43.982" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:43.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:43.997" level="INFO">${output} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:43.980" endtime="20200727 11:10:43.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.998" level="INFO">[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 11:10:43.997" endtime="20200727 11:10:43.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:43.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:43.998" endtime="20200727 11:10:43.999"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:43.979" endtime="20200727 11:10:43.999"></status>
</kw>
<msg timestamp="20200727 11:10:43.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:43.979" endtime="20200727 11:10:44.000"></status>
</kw>
<msg timestamp="20200727 11:10:44.000" level="INFO">${result} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:43.979" endtime="20200727 11:10:44.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 11:10:44.001" level="FAIL">'[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 11:10:44.000" endtime="20200727 11:10:44.001"></status>
</kw>
<status status="FAIL" starttime="20200727 11:10:43.917" endtime="20200727 11:10:44.001"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:54.009" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:54.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:54.010" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:10:54.005" endtime="20200727 11:10:54.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.011" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:10:54.011" endtime="20200727 11:10:54.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:54.011" endtime="20200727 11:10:54.012"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.005" endtime="20200727 11:10:54.012"></status>
</kw>
<msg timestamp="20200727 11:10:54.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:54.004" endtime="20200727 11:10:54.012"></status>
</kw>
<msg timestamp="20200727 11:10:54.013" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:10:54.004" endtime="20200727 11:10:54.013"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:54.016" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:54.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:54.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:10:54.014" endtime="20200727 11:10:54.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.031" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:10:54.031" endtime="20200727 11:10:54.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:54.031" endtime="20200727 11:10:54.032"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.014" endtime="20200727 11:10:54.032"></status>
</kw>
<msg timestamp="20200727 11:10:54.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:54.014" endtime="20200727 11:10:54.033"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.013" endtime="20200727 11:10:54.033"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.013" endtime="20200727 11:10:54.033"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.004" endtime="20200727 11:10:54.033"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.003" endtime="20200727 11:10:54.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:54.037" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:54.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:54.056" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:54.034" endtime="20200727 11:10:54.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.060" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:54.056" endtime="20200727 11:10:54.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:54.061" endtime="20200727 11:10:54.062"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.034" endtime="20200727 11:10:54.062"></status>
</kw>
<msg timestamp="20200727 11:10:54.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:54.034" endtime="20200727 11:10:54.062"></status>
</kw>
<msg timestamp="20200727 11:10:54.062" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":172}]}}</msg>
<status status="PASS" starttime="20200727 11:10:54.033" endtime="20200727 11:10:54.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:10:54.063" endtime="20200727 11:10:54.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:10:54.067" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:10:54.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:10:54.082" level="INFO">${output} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:54.065" endtime="20200727 11:10:54.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.083" level="INFO">[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200727 11:10:54.082" endtime="20200727 11:10:54.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:10:54.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:10:54.083" endtime="20200727 11:10:54.084"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:54.065" endtime="20200727 11:10:54.084"></status>
</kw>
<msg timestamp="20200727 11:10:54.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:10:54.064" endtime="20200727 11:10:54.084"></status>
</kw>
<msg timestamp="20200727 11:10:54.084" level="INFO">${result} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:10:54.063" endtime="20200727 11:10:54.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200727 11:10:54.085" level="FAIL">'[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200727 11:10:54.085" endtime="20200727 11:10:54.085"></status>
</kw>
<status status="FAIL" starttime="20200727 11:10:54.002" endtime="20200727 11:10:54.085"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.092" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.095" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:04.089" endtime="20200727 11:11:04.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.096" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:04.095" endtime="20200727 11:11:04.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.096" endtime="20200727 11:11:04.097"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.089" endtime="20200727 11:11:04.097"></status>
</kw>
<msg timestamp="20200727 11:11:04.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.088" endtime="20200727 11:11:04.097"></status>
</kw>
<msg timestamp="20200727 11:11:04.097" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:04.088" endtime="20200727 11:11:04.097"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.101" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:04.099" endtime="20200727 11:11:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.116" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:04.115" endtime="20200727 11:11:04.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.116" endtime="20200727 11:11:04.116"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.099" endtime="20200727 11:11:04.117"></status>
</kw>
<msg timestamp="20200727 11:11:04.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.098" endtime="20200727 11:11:04.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.098" endtime="20200727 11:11:04.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.097" endtime="20200727 11:11:04.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.087" endtime="20200727 11:11:04.117"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.087" endtime="20200727 11:11:04.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.121" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.135" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":172},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200727 11:11:04.119" endtime="20200727 11:11:04.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.136" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":172},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200727 11:11:04.135" endtime="20200727 11:11:04.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.136" endtime="20200727 11:11:04.137"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.118" endtime="20200727 11:11:04.137"></status>
</kw>
<msg timestamp="20200727 11:11:04.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.118" endtime="20200727 11:11:04.137"></status>
</kw>
<msg timestamp="20200727 11:11:04.137" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":172},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200727 11:11:04.117" endtime="20200727 11:11:04.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.138" endtime="20200727 11:11:04.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.141" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.155" level="INFO">${output} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:11:04.139" endtime="20200727 11:11:04.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.156" level="INFO">[{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-67954","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-3-04539","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-4-07158","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-1-96802","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-1-03179","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-0-32291","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-1-78284","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-2-35571","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-1-71909","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-4-92540","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-1-79197","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-4-01489","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-2-93883","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-0-41695","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-2-86155","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-0-34803","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-3-68457","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-0-29207","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-3-92427","fileSize":16384,"count":5},{"volume":"vol-2-36267","bucket":"bucket-3-44906","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-3-86305","fileSize":16384,"count":5},{"volume":"vol-4-29475","bucket":"bucket-2-06912","fileSize":16384,"count":5},{"volume":"vol-1-58086","bucket":"bucket-4-70947","fileSize":16384,"count":5},{"volume":"30946-source","bucket":"readable-bucket","fileSize":1024,"count":1},{"volume":"30946-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"75312-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"75312-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"75312-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"vol-ttnms","bucket":"encrypted-bucket","fileSize":1024,"count":1},{"volume":"fstest398","bucket":"bk1","fileSize":32768,"count":1},{"volume":"s3v","bucket":"bucket-test123","fileSize":32768,"count":3},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-ofs-src","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":1024,"count":4},{"volume":"fstest1-src","bucket":"link1-o3fs-src","fileSize":32768,"count":3},{"volume":"fstest2-src","bucket":"link3-o3fs-src","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"legacy","bucket":"source-bucket","fileSize":1024,"count":6},{"volume":"legacy","bucket":"source-bucket","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-95841","fileSize":1024,"count":1},{"volume":"legacy","bucket":"source-bucket","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-10655","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-21122","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-21122","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-17086","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99909","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-53578","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02875","fileSize":1024,"count":1},{"volume":"vol-0-98886","bucket":"bucket-0-73520","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200727 11:11:04.155" endtime="20200727 11:11:04.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.156" endtime="20200727 11:11:04.157"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.139" endtime="20200727 11:11:04.157"></status>
</kw>
<msg timestamp="20200727 11:11:04.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.139" endtime="20200727 11:11:04.157"></status>
</kw>
<msg timestamp="20200727 11:11:04.158" level="INFO">${result} = [{"volume":"vol-4-29475","bucket":"bucket-4-67813","fileSize":16384,"count":5},{"volume":"vol-0-63621","bucket":"bucket-2-51631","fileSize":16384,"count":5},{"volume":"vol-3-26183","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200727 11:11:04.138" endtime="20200727 11:11:04.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.158" endtime="20200727 11:11:04.158"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.086" endtime="20200727 11:11:04.159"></status>
</kw>
<status status="PASS" starttime="20200727 11:10:13.452" endtime="20200727 11:11:04.159"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:10:13.451" endtime="20200727 11:11:04.159" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.165" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.202" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"e20a8d67-e4fe-4f3c-98cc-a991e7baf858","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595848239410,"storageReport":{"ca...</msg>
<status status="PASS" starttime="20200727 11:11:04.162" endtime="20200727 11:11:04.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.203" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"e20a8d67-e4fe-4f3c-98cc-a991e7baf858","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595848239410,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24472190976},"pipelines":[{"pipelineID":"8168206c-e7f7-49ec-bfab-4aae42b57f6b","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"7b453fd1-165d-414c-98bc-e0e61b8d5e26","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":1,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595846295464,"revision":"78875bb2617849e4cd55489aa4661234282fa628","buildDate":"2020-07-27T09:34Z"},{"uuid":"4aee4160-8f53-442e-bbda-83e1ec50546b","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595848239412,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24472182784},"pipelines":[{"pipelineID":"9b54455d-e92a-4ec2-960b-5e5a022e8eef","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"8168206c-e7f7-49ec-bfab-4aae42b57f6b","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1595846298350,"revision":"78875bb2617849e4cd55489aa4661234282fa628","buildDate":"2020-07-27T09:34Z"},{"uuid":"79d62a18-7da8-4b88-aa24-661ca809abb7","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595848239375,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24472203264},"pipelines":[{"pipelineID":"8168206c-e7f7-49ec-bfab-4aae42b57f6b","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"69b23677-fb9c-413b-8cde-00d6656b9016","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1595846299907,"revision":"78875bb2617849e4cd55489aa4661234282fa628","buildDate":"2020-07-27T09:34Z"}]}</msg>
<status status="PASS" starttime="20200727 11:11:04.202" endtime="20200727 11:11:04.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.203" endtime="20200727 11:11:04.204"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.162" endtime="20200727 11:11:04.204"></status>
</kw>
<msg timestamp="20200727 11:11:04.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.161" endtime="20200727 11:11:04.204"></status>
</kw>
<msg timestamp="20200727 11:11:04.204" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"e20a8d67-e4fe-4f3c-98cc-a991e7baf858","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1595848239410,"storageReport":{"ca...</msg>
<status status="PASS" starttime="20200727 11:11:04.161" endtime="20200727 11:11:04.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.205" endtime="20200727 11:11:04.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.205" endtime="20200727 11:11:04.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.206" endtime="20200727 11:11:04.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.206" endtime="20200727 11:11:04.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.211" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.237" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"9b54455d-e92a-4ec2-960b-5e5a022e8eef","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonese...</msg>
<status status="PASS" starttime="20200727 11:11:04.208" endtime="20200727 11:11:04.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.238" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"9b54455d-e92a-4ec2-960b-5e5a022e8eef","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1930711,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"8168206c-e7f7-49ec-bfab-4aae42b57f6b","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1930695,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"7b453fd1-165d-414c-98bc-e0e61b8d5e26","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1931028,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"69b23677-fb9c-413b-8cde-00d6656b9016","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1931302,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200727 11:11:04.237" endtime="20200727 11:11:04.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.238" endtime="20200727 11:11:04.239"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.208" endtime="20200727 11:11:04.239"></status>
</kw>
<msg timestamp="20200727 11:11:04.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.208" endtime="20200727 11:11:04.239"></status>
</kw>
<msg timestamp="20200727 11:11:04.240" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"9b54455d-e92a-4ec2-960b-5e5a022e8eef","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonese...</msg>
<status status="PASS" starttime="20200727 11:11:04.207" endtime="20200727 11:11:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.240" endtime="20200727 11:11:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.240" endtime="20200727 11:11:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.241" endtime="20200727 11:11:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.241" endtime="20200727 11:11:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.242" endtime="20200727 11:11:04.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.242" endtime="20200727 11:11:04.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.245" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.261" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":73416577024},"containers":4,"volumes":33,"buckets":93,"keys":206}</msg>
<status status="PASS" starttime="20200727 11:11:04.244" endtime="20200727 11:11:04.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.262" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":73416577024},"containers":4,"volumes":33,"buckets":93,"keys":206}</msg>
<status status="PASS" starttime="20200727 11:11:04.262" endtime="20200727 11:11:04.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.263" endtime="20200727 11:11:04.263"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.243" endtime="20200727 11:11:04.263"></status>
</kw>
<msg timestamp="20200727 11:11:04.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.243" endtime="20200727 11:11:04.264"></status>
</kw>
<msg timestamp="20200727 11:11:04.264" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":73416577024},"containers":4,"volumes":33,"buckets":93,"keys":206}</msg>
<status status="PASS" starttime="20200727 11:11:04.242" endtime="20200727 11:11:04.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.264" endtime="20200727 11:11:04.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.264" endtime="20200727 11:11:04.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.265" endtime="20200727 11:11:04.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.269" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.294" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595846366671,"lastReportTimestamp":1595848209527},{"containerId":1,"datanodeHost":"ozonesecure_dat...</msg>
<status status="PASS" starttime="20200727 11:11:04.266" endtime="20200727 11:11:04.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.295" level="INFO">[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595846366671,"lastReportTimestamp":1595848209527},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1595846366490,"lastReportTimestamp":1595848239414},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1595846366230,"lastReportTimestamp":1595848195896}]</msg>
<status status="PASS" starttime="20200727 11:11:04.295" endtime="20200727 11:11:04.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.296" endtime="20200727 11:11:04.296"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.266" endtime="20200727 11:11:04.297"></status>
</kw>
<msg timestamp="20200727 11:11:04.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.266" endtime="20200727 11:11:04.297"></status>
</kw>
<msg timestamp="20200727 11:11:04.297" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1595846366671,"lastReportTimestamp":1595848209527},{"containerId":1,"datanodeHost":"ozonesecure_dat...</msg>
<status status="PASS" starttime="20200727 11:11:04.265" endtime="20200727 11:11:04.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.297" endtime="20200727 11:11:04.298"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:04.160" endtime="20200727 11:11:04.298" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.305" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.308" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:04.302" endtime="20200727 11:11:04.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.309" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:04.308" endtime="20200727 11:11:04.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.309" endtime="20200727 11:11:04.309"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.301" endtime="20200727 11:11:04.310"></status>
</kw>
<msg timestamp="20200727 11:11:04.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.301" endtime="20200727 11:11:04.310"></status>
</kw>
<msg timestamp="20200727 11:11:04.310" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:04.300" endtime="20200727 11:11:04.310"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.314" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:04.312" endtime="20200727 11:11:04.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.329" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:04.329" endtime="20200727 11:11:04.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.330" endtime="20200727 11:11:04.330"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.312" endtime="20200727 11:11:04.331"></status>
</kw>
<msg timestamp="20200727 11:11:04.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.311" endtime="20200727 11:11:04.331"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.311" endtime="20200727 11:11:04.331"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.310" endtime="20200727 11:11:04.331"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.300" endtime="20200727 11:11:04.331"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.300" endtime="20200727 11:11:04.331"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:04.335" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:04.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:04.376" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 11:11:04.333" endtime="20200727 11:11:04.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.377" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.de8738b4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.d84a7cfa.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2fc2e818.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.30b8d325.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.376" endtime="20200727 11:11:04.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:04.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:04.377" endtime="20200727 11:11:04.378"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:04.332" endtime="20200727 11:11:04.378"></status>
</kw>
<msg timestamp="20200727 11:11:04.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:04.332" endtime="20200727 11:11:04.378"></status>
</kw>
<msg timestamp="20200727 11:11:04.379" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200727 11:11:04.331" endtime="20200727 11:11:04.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:04.379" endtime="20200727 11:11:04.379"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:04.299" endtime="20200727 11:11:04.380" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 11:10:05.060" endtime="20200727 11:11:04.381"></status>
</suite>
<status status="PASS" starttime="20200727 11:10:05.035" endtime="20200727 11:11:04.384"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
