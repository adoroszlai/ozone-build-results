<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 10:29:27.581" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:27.637" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:35.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:35.712" level="INFO">${output} = 2020-07-27 10:29:28,915 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:29,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:27.633" endtime="20200727 10:29:35.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:35.714" level="INFO">2020-07-27 10:29:28,915 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:29,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:29:29,058 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:29:30,196 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-27 10:29:30,197 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 10:29:30,197 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 10:29:30,197 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-27 10:29:30,197 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-27 10:29:30,197 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 10:29:30,197 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 10:29:30,204 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 10:29:30,214 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:30,263 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-80811, with hadoop as owner.
2020-07-27 10:29:30,311 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-80811/bucket-0-54228, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:29:30,776 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:29:31,215 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,087
Average Time spent in bucket creation: 00:00:00,014
Average Time spent in key creation: 00:00:00,116
Average Time spent in key write: 00:00:00,506
Total bytes written: 10240
Total Execution time: 00:00:06,114
***************************************************</msg>
<status status="PASS" starttime="20200727 10:29:35.713" endtime="20200727 10:29:35.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:35.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:35.714" endtime="20200727 10:29:35.715"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:27.632" endtime="20200727 10:29:35.715"></status>
</kw>
<msg timestamp="20200727 10:29:35.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:27.632" endtime="20200727 10:29:35.716"></status>
</kw>
<msg timestamp="20200727 10:29:35.716" level="INFO">${result} = 2020-07-27 10:29:28,915 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:29,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:27.631" endtime="20200727 10:29:35.716"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:35.716" endtime="20200727 10:29:35.717"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:35.716" endtime="20200727 10:29:35.717"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:29:27.630" endtime="20200727 10:29:35.717" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:35.722" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:40.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:40.923" level="INFO">${output} = 2020-07-27 10:29:37,037 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:37,182 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:35.720" endtime="20200727 10:29:40.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:40.926" level="INFO">2020-07-27 10:29:37,037 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:37,182 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:29:37,182 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:29:37,346 [main] INFO freon.BaseFreonGenerator: Executing test with prefix t1ymmqhcew
2020-07-27 10:29:37,360 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:38,361 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:38,409 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 10:29:38,976 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 10:29:39,361 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:40,362 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 10:29:40,585 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1398.035437, max=1398.035437, mean=1398.035437, stddev=0.0, median=1398.035437, p75=1398.035437, p95=1398.035437, p98=1398.035437, p99=1398.035437, p999=1398.035437, mean_rate=0.4641612937621955, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 10:29:40,586 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-27 10:29:40,592 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 10:29:40,592 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 10:29:40.924" endtime="20200727 10:29:40.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:40.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:40.926" endtime="20200727 10:29:40.927"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:35.720" endtime="20200727 10:29:40.927"></status>
</kw>
<msg timestamp="20200727 10:29:40.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:35.719" endtime="20200727 10:29:40.927"></status>
</kw>
<msg timestamp="20200727 10:29:40.928" level="INFO">${result} = 2020-07-27 10:29:37,037 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:37,182 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:35.719" endtime="20200727 10:29:40.928"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:40.928" endtime="20200727 10:29:40.929"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:40.928" endtime="20200727 10:29:40.929"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:29:35.718" endtime="20200727 10:29:40.929" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:40.934" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:44.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:44.712" level="INFO">${output} = 2020-07-27 10:29:42,168 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:42,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:40.932" endtime="20200727 10:29:44.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:44.713" level="INFO">2020-07-27 10:29:42,168 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:42,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:29:42,366 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:29:42,533 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ffr2zwutaf
2020-07-27 10:29:42,547 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:43,556 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:44,558 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 10:29:44,670 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=58.613552, max=58.613552, mean=58.613552, stddev=0.0, median=58.613552, p75=58.613552, p95=58.613552, p98=58.613552, p99=58.613552, p999=58.613552, mean_rate=0.8947599633620132, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 10:29:44,670 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 10:29:44,678 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 10:29:44,678 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 10:29:44.712" endtime="20200727 10:29:44.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:44.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:44.713" endtime="20200727 10:29:44.714"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:40.931" endtime="20200727 10:29:44.714"></status>
</kw>
<msg timestamp="20200727 10:29:44.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:40.931" endtime="20200727 10:29:44.714"></status>
</kw>
<msg timestamp="20200727 10:29:44.714" level="INFO">${result} = 2020-07-27 10:29:42,168 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:42,366 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:40.930" endtime="20200727 10:29:44.715"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:44.715" endtime="20200727 10:29:44.716"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:44.715" endtime="20200727 10:29:44.716"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:29:40.930" endtime="20200727 10:29:44.716" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 10:29:44.722" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 10:29:48.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 10:29:48.516" level="INFO">${output} = 2020-07-27 10:29:46,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:46,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:44.719" endtime="20200727 10:29:48.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 10:29:48.517" level="INFO">2020-07-27 10:29:46,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:46,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 10:29:46,212 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-27 10:29:46,386 [main] INFO freon.BaseFreonGenerator: Executing test with prefix go4torv6sh
2020-07-27 10:29:46,394 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-27 10:29:47,417 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-27 10:29:48,474 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=11.708183, max=11.708183, mean=11.708183, stddev=0.0, median=11.708183, p75=11.708183, p95=11.708183, p98=11.708183, p99=11.708183, p999=11.708183, mean_rate=0.8664144665271996, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-27 10:29:48,475 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-27 10:29:48,482 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-27 10:29:48,482 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200727 10:29:48.517" endtime="20200727 10:29:48.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 10:29:48.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 10:29:48.518" endtime="20200727 10:29:48.518"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:44.718" endtime="20200727 10:29:48.518"></status>
</kw>
<msg timestamp="20200727 10:29:48.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 10:29:44.718" endtime="20200727 10:29:48.518"></status>
</kw>
<msg timestamp="20200727 10:29:48.519" level="INFO">${result} = 2020-07-27 10:29:46,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 10:29:46,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 10:29:44.717" endtime="20200727 10:29:48.519"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200727 10:29:48.519" endtime="20200727 10:29:48.520"></status>
</kw>
<status status="PASS" starttime="20200727 10:29:48.519" endtime="20200727 10:29:48.520"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 10:29:44.716" endtime="20200727 10:29:48.520" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200727 10:29:27.607" endtime="20200727 10:29:48.522"></status>
</suite>
<status status="PASS" starttime="20200727 10:29:27.582" endtime="20200727 10:29:48.525"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
