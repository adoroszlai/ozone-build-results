<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on linux)" generated="20200727 11:11:26.315" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:26.372" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:26.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:26.374" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:26.368" endtime="20200727 11:11:26.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:26.375" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:26.375" endtime="20200727 11:11:26.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:26.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:26.375" endtime="20200727 11:11:26.377"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.368" endtime="20200727 11:11:26.377"></status>
</kw>
<msg timestamp="20200727 11:11:26.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:26.368" endtime="20200727 11:11:26.377"></status>
</kw>
<msg timestamp="20200727 11:11:26.377" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:26.367" endtime="20200727 11:11:26.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:11:26.379" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:11:26.377" endtime="20200727 11:11:26.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:26.383" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:26.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:26.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:26.381" endtime="20200727 11:11:26.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:26.397" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:26.396" endtime="20200727 11:11:26.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:26.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:26.397" endtime="20200727 11:11:26.398"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.380" endtime="20200727 11:11:26.398"></status>
</kw>
<msg timestamp="20200727 11:11:26.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:26.380" endtime="20200727 11:11:26.398"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.379" endtime="20200727 11:11:26.398"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.379" endtime="20200727 11:11:26.398"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.367" endtime="20200727 11:11:26.399"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.366" endtime="20200727 11:11:26.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:26.403" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.829" level="INFO">${output} = 2020-07-27 11:11:27,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 11:11:27,754 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200727 11:11:26.400" endtime="20200727 11:11:34.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.830" level="INFO">2020-07-27 11:11:27,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-27 11:11:27,754 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-27 11:11:27,754 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-27 11:11:29,299 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-27 11:11:29,301 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-27 11:11:29,301 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-27 11:11:29,301 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-27 11:11:29,301 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-27 11:11:29,301 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-27 11:11:29,301 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-27 11:11:29,329 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-27 11:11:29,342 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-27 11:11:29,373 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-37028, with testuser/scm@EXAMPLE.COM as owner.
2020-07-27 11:11:29,417 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-37028/bucket-0-64434, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-27 11:11:29,942 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-27 11:11:30,349 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,026
Average Time spent in key write: 00:00:00,092
Total bytes written: 2050
Total Execution time: 00:00:06,519
***************************************************</msg>
<status status="PASS" starttime="20200727 11:11:34.829" endtime="20200727 11:11:34.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.831" endtime="20200727 11:11:34.831"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.399" endtime="20200727 11:11:34.831"></status>
</kw>
<msg timestamp="20200727 11:11:34.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:26.399" endtime="20200727 11:11:34.832"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:26.399" endtime="20200727 11:11:34.832"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:26.366" endtime="20200727 11:11:34.832" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.838" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:34.836" endtime="20200727 11:11:34.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.843" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:34.843" endtime="20200727 11:11:34.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.843" endtime="20200727 11:11:34.844"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.836" endtime="20200727 11:11:34.844"></status>
</kw>
<msg timestamp="20200727 11:11:34.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.835" endtime="20200727 11:11:34.844"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.835" endtime="20200727 11:11:34.844"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.834" endtime="20200727 11:11:34.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.848" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.866" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200727 11:11:34.846" endtime="20200727 11:11:34.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.867" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200727 11:11:34.867" endtime="20200727 11:11:34.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.868" endtime="20200727 11:11:34.868"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.845" endtime="20200727 11:11:34.868"></status>
</kw>
<msg timestamp="20200727 11:11:34.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.845" endtime="20200727 11:11:34.868"></status>
</kw>
<msg timestamp="20200727 11:11:34.869" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200727 11:11:34.845" endtime="20200727 11:11:34.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:34.869" endtime="20200727 11:11:34.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.874" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.875" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:34.871" endtime="20200727 11:11:34.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.876" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:34.875" endtime="20200727 11:11:34.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.876" endtime="20200727 11:11:34.877"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.871" endtime="20200727 11:11:34.877"></status>
</kw>
<msg timestamp="20200727 11:11:34.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.870" endtime="20200727 11:11:34.877"></status>
</kw>
<msg timestamp="20200727 11:11:34.877" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:34.870" endtime="20200727 11:11:34.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:11:34.878" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:11:34.877" endtime="20200727 11:11:34.878"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.882" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:34.880" endtime="20200727 11:11:34.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.894" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:34.893" endtime="20200727 11:11:34.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.894" endtime="20200727 11:11:34.894"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.879" endtime="20200727 11:11:34.895"></status>
</kw>
<msg timestamp="20200727 11:11:34.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.879" endtime="20200727 11:11:34.895"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.878" endtime="20200727 11:11:34.895"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.878" endtime="20200727 11:11:34.895"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.870" endtime="20200727 11:11:34.895"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.869" endtime="20200727 11:11:34.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.899" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.929" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200727 11:11:34.897" endtime="20200727 11:11:34.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.931" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0xd36f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQY45m4QUPTgaCimrJv73ulnloWtZQx+JKOlz2T7vhrI1usRuufOLsws0bN8vz5Vo/d4wp9WCux5xMJQFDtYj92tBOvsn8BvfAqsnDZt73UmdXkjNhUvRqND/2mpFGwVgt+5FIiDCE6g0IxSEQcny8u509AePcvX1UU5r6hmkg/sD0QwcY/GxMBYZd1dHMwGF6BtyKkoRuAjxEsKFC+sxvKJU6YgLtGO2Ooxmuv1ObmZ/JsnbEVzD9bYoblixSS4Uu6ATn/j5HZjSp90A0KNg62VAZ4tA7I63PjyEahJVWym/YsowfBXkPjbEClPfUkMOM+CUDRdhqznlqe6T3dyc/nywTeRZSEEpIHWMIHToAMCARKigcsEgcjkDUHpogs/AtPefw4Ogy+lw+BuQUEfLn86N35xFCgtuK5mofpuqefk09PVlSS1bN7NiMMGJflV6D0qVK+EmJNVF+vL02i5JAoWCvYke4zkZfeYBzyBF1CshXutvuKdIwhcai7WSF9Sd9Oc+W1aHJ9q88TWOIloNsCF3clEPyz8R16mgWtX6x2Ej4MyAw7QdfAtT3sHalSsT3IHyCGHhdJosVWMfDXlfQ11MW7z38xOz1HtgdSh9EiVKtvkBdzZTm4J111Ga4OBrA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 11:11:34 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 11:11:34 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:34 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 27 Jul 2020 11:11:34 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:34 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCOZ/6VxsVOH4GmZpPHp0ON1y5F9JoA3rUZcT06pqaw+gvqMJOItej/9fKAgTRKC4Rx3ql2ViXWZovKalUWVRYI1IF
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884294924&amp;s=SSaychhXKkRRxatU+BUJ9njVIWSB4/FOxTFUTLE3CYk="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 27 Jul 2020 09:35:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 11:11:34 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 11:11:34 GMT
Date: Mon, 27 Jul 2020 11:11:34 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 27 Jul 2020 11:11:34 GMT
Date: Mon, 27 Jul 2020 11:11:34 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCOZ/6VxsVOH4GmZpPHp0ON1y5F9JoA3rUZcT06pqaw+gvqMJOItej/9fKAgTRKC4Rx3ql2ViXWZovKalUWVRYI1IF
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884294924&amp;s=SSaychhXKkRRxatU+BUJ9njVIWSB4/FOxTFUTLE3CYk="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 09:35:38 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200727 11:11:34.930" endtime="20200727 11:11:34.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.931" endtime="20200727 11:11:34.932"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.896" endtime="20200727 11:11:34.932"></status>
</kw>
<msg timestamp="20200727 11:11:34.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.896" endtime="20200727 11:11:34.932"></status>
</kw>
<msg timestamp="20200727 11:11:34.932" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1...</msg>
<status status="PASS" starttime="20200727 11:11:34.895" endtime="20200727 11:11:34.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:34.933" endtime="20200727 11:11:34.933"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.834" endtime="20200727 11:11:34.933"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:34.833" endtime="20200727 11:11:34.933" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.940" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:34.937" endtime="20200727 11:11:34.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.944" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:34.943" endtime="20200727 11:11:34.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.944" endtime="20200727 11:11:34.944"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.936" endtime="20200727 11:11:34.945"></status>
</kw>
<msg timestamp="20200727 11:11:34.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.936" endtime="20200727 11:11:34.945"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.936" endtime="20200727 11:11:34.945"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.935" endtime="20200727 11:11:34.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.949" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.961" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200727 11:11:34.947" endtime="20200727 11:11:34.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.962" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200727 11:11:34.961" endtime="20200727 11:11:34.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.962" endtime="20200727 11:11:34.962"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.946" endtime="20200727 11:11:34.963"></status>
</kw>
<msg timestamp="20200727 11:11:34.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.946" endtime="20200727 11:11:34.963"></status>
</kw>
<msg timestamp="20200727 11:11:34.963" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200727 11:11:34.945" endtime="20200727 11:11:34.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:34.963" endtime="20200727 11:11:34.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.969" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.970" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:34.966" endtime="20200727 11:11:34.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.971" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:34.970" endtime="20200727 11:11:34.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.971" endtime="20200727 11:11:34.972"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.965" endtime="20200727 11:11:34.972"></status>
</kw>
<msg timestamp="20200727 11:11:34.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.965" endtime="20200727 11:11:34.972"></status>
</kw>
<msg timestamp="20200727 11:11:34.972" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:34.965" endtime="20200727 11:11:34.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:11:34.973" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:11:34.972" endtime="20200727 11:11:34.973"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.978" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:34.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:34.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:34.975" endtime="20200727 11:11:34.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.990" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:34.990" endtime="20200727 11:11:34.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:34.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:34.991" endtime="20200727 11:11:34.991"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.974" endtime="20200727 11:11:34.992"></status>
</kw>
<msg timestamp="20200727 11:11:34.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.974" endtime="20200727 11:11:34.992"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.974" endtime="20200727 11:11:34.992"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.973" endtime="20200727 11:11:34.992"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.964" endtime="20200727 11:11:34.992"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.964" endtime="20200727 11:11:34.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:34.997" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.061" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200727 11:11:34.994" endtime="20200727 11:11:35.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.062" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x23bcf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICagYJKoZIhvcSAQICAQBuggJZMIICVaADAgEFoQMCAQ6iBwMFACAAAACjggFmYYIBYjCCAV6gAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBLzCCASugAwIBEqEDAgECooIBHQSCARmqi0yksZZA4kRosp6dBpgetTVZOu6zPbw5orRyhb8QVpI0Wd2tjvkZx9ybrlynKPGb4OtNlaCGpNiUPXjE8cJ1ZRO0XETByDwLReWN1UEag+pnNYIRYfBPV248WN53joY6LlcBhgwu+mErwRsd2bU2O8GnXs9aKsjGHuchc9y/tR5FavPLZzbDHl1E3HKFZ0WG/tAlIgETj9n5iYpSuiz2cLGYVyBmln/wIX76aAoRv0XP9qRK73/aPsKQiYR7QkQcVBjStfC7mN443Jjn+zYJXyNDxhRdGtxuQCGS1QuEl71g2mD5zfW9GBumy3fX/85AKLoLQTOMqxcQ8xf9vZl6uByvfaXaK7jogRIECxguUXg4Jv9VmzoRDKSB1TCB0qADAgESooHKBIHH2x6d1TywIgWjcQhTrd4o3QlHzd4gsiAYQamRmq4MK49vneIwF42ED97yKTL82bOtrUDgJI7rrm45vmI33hyrLJCEpJJDxjgK/sYMfuhFdOuCdp6I6VkUiE2OetYw1P6IdTX6nTF929mDKEyv9dn1wdGir/pk+9xTXdlm9AhpRCArwSrrRkVA3V4cEcVfE02dtqXEEQmLWxwdMlelpNiS+PLcsH91x8nsPulTXpEqq/HBiHQB740KysUewdUKfeXZtq7fxdfFJw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBo57zCosM8lnjLpwVWtgiy6BfACXzYegNiOSPx7QMHNycr/JoAIfsnmZJOKw3Wug7b9dZsVWMVXVDrXDIi2gb8ew=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295026&amp;s=6zrDZa+iWICE1N2qHiTzwTXJF8LqSBh7PIcMwczaCuE="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1595848295026.tgz"
&lt; Content-Length: 90107
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 11:11:35 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 11:11:35 GMT
Date: Mon, 27 Jul 2020 11:11:35 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBo57zCosM8lnjLpwVWtgiy6BfACXzYegNiOSPx7QMHNycr/JoAIfsnmZJOKw3Wug7b9dZsVWMVXVDrXDIi2gb8ew=
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295026&amp;s=6zrDZa+iWICE1N2qHiTzwTXJF8LqSBh7PIcMwczaCuE="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1595848295026.tgz"
Content-Length: 90107
</msg>
<status status="PASS" starttime="20200727 11:11:35.061" endtime="20200727 11:11:35.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.062" endtime="20200727 11:11:35.063"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.993" endtime="20200727 11:11:35.063"></status>
</kw>
<msg timestamp="20200727 11:11:35.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:34.993" endtime="20200727 11:11:35.063"></status>
</kw>
<msg timestamp="20200727 11:11:35.064" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*...</msg>
<status status="PASS" starttime="20200727 11:11:34.992" endtime="20200727 11:11:35.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.064" endtime="20200727 11:11:35.064"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:34.935" endtime="20200727 11:11:35.064"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:34.934" endtime="20200727 11:11:35.065" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.070" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:35.068" endtime="20200727 11:11:35.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.075" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:35.074" endtime="20200727 11:11:35.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.076" endtime="20200727 11:11:35.076"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.068" endtime="20200727 11:11:35.076"></status>
</kw>
<msg timestamp="20200727 11:11:35.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.067" endtime="20200727 11:11:35.077"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.067" endtime="20200727 11:11:35.077"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.066" endtime="20200727 11:11:35.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.081" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.092" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200727 11:11:35.078" endtime="20200727 11:11:35.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.093" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200727 11:11:35.093" endtime="20200727 11:11:35.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.094" endtime="20200727 11:11:35.094"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.078" endtime="20200727 11:11:35.094"></status>
</kw>
<msg timestamp="20200727 11:11:35.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.078" endtime="20200727 11:11:35.095"></status>
</kw>
<msg timestamp="20200727 11:11:35.095" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200727 11:11:35.077" endtime="20200727 11:11:35.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.095" endtime="20200727 11:11:35.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.101" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.102" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:35.098" endtime="20200727 11:11:35.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.103" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:35.103" endtime="20200727 11:11:35.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.104" endtime="20200727 11:11:35.104"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.097" endtime="20200727 11:11:35.104"></status>
</kw>
<msg timestamp="20200727 11:11:35.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.097" endtime="20200727 11:11:35.105"></status>
</kw>
<msg timestamp="20200727 11:11:35.105" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:35.096" endtime="20200727 11:11:35.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:11:35.105" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:11:35.105" endtime="20200727 11:11:35.106"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.110" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:35.107" endtime="20200727 11:11:35.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.128" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:35.127" endtime="20200727 11:11:35.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.128" endtime="20200727 11:11:35.129"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.107" endtime="20200727 11:11:35.129"></status>
</kw>
<msg timestamp="20200727 11:11:35.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.107" endtime="20200727 11:11:35.129"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.106" endtime="20200727 11:11:35.129"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.106" endtime="20200727 11:11:35.130"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.096" endtime="20200727 11:11:35.130"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.096" endtime="20200727 11:11:35.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.134" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.166" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200727 11:11:35.131" endtime="20200727 11:11:35.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.167" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1e8bf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.10) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQanhR20NT7+Kjyb4hcdheyZzz0BVTarRAky25ggr5xNjmsTvXvxNpWa+bYpXMcLyQULLgbfFfyUFZHKp6Ha2ZvxQXLZ4sW2pHQ3LMA+xkdUr5p5k8HP2YhpSAJmhC6LUYglVouyXwKmcvXhXZh70dl+5fM+OyQt8BwpIuksyq8uiQBKSH/7F9FWSoJP4ginxsjZjKWidlSR+z9/i8rSzc1TJOvzLJDmuKjlHA38CpF0YiP5YYytAQ3IuZk57jdc8LjCKEZ9maJ1rkh/46ZOSKeXbPiNY3/V4+MZxVYpK7AinOwIqdex74SlCGBbY4n0svhcdRwkEvRro26YEbS09MvV23KsadFypIHWMIHToAMCARKigcsEgcguaTEKqJ7Wv6m6I/bXiz7BEdmqULNEY/wCnKvKYeEoXY006ZGhzDrIz2zIX0jGOpeu6KnJdiLy0BVvivymSDKgeaKqt1vuwmRr2ZJPe/kK8DbxKSJaBA5tjltax846OYPEzt6oUufZ37+EXLAbaEoEgATCQGFOgcqBhD+iyt4acdknohK61PDRAmY1Qe9Op6dKfEFfXYmvj28K+wEh/1T2PRdQLB91VMMLJXyi/EC7M8HZssRRPwLwW8Wp5OJBpBVer9JA3uV2KQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/3+vxmJQrn8rxxTBRMYpD5cB/8Ee9jFhGCmA4vFwAc6HK7WLDPJXiJTLu4jRHSZ+xWOkImymciwjCSh65OK2YHko
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295156&amp;s=ZDBkBXeJjKur//InNjYaKjSTyhaLCsQoAAOoDBK1jrs="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 11:11:35 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 11:11:35 GMT
Date: Mon, 27 Jul 2020 11:11:35 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/3+vxmJQrn8rxxTBRMYpD5cB/8Ee9jFhGCmA4vFwAc6HK7WLDPJXiJTLu4jRHSZ+xWOkImymciwjCSh65OK2YHko
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295156&amp;s=ZDBkBXeJjKur//InNjYaKjSTyhaLCsQoAAOoDBK1jrs="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200727 11:11:35.166" endtime="20200727 11:11:35.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.168" endtime="20200727 11:11:35.168"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.131" endtime="20200727 11:11:35.168"></status>
</kw>
<msg timestamp="20200727 11:11:35.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.130" endtime="20200727 11:11:35.169"></status>
</kw>
<msg timestamp="20200727 11:11:35.169" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.10...
* Connected to om (172.26.0.10) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
...</msg>
<status status="PASS" starttime="20200727 11:11:35.130" endtime="20200727 11:11:35.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.169" endtime="20200727 11:11:35.169"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.066" endtime="20200727 11:11:35.170"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:35.065" endtime="20200727 11:11:35.170" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.177" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:35.174" endtime="20200727 11:11:35.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.182" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:35.181" endtime="20200727 11:11:35.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.182" endtime="20200727 11:11:35.183"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.174" endtime="20200727 11:11:35.183"></status>
</kw>
<msg timestamp="20200727 11:11:35.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.173" endtime="20200727 11:11:35.183"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.173" endtime="20200727 11:11:35.183"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.172" endtime="20200727 11:11:35.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.188" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.202" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 11:11:35.185" endtime="20200727 11:11:35.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.204" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200727 11:11:35.203" endtime="20200727 11:11:35.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.204" endtime="20200727 11:11:35.204"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.184" endtime="20200727 11:11:35.205"></status>
</kw>
<msg timestamp="20200727 11:11:35.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.184" endtime="20200727 11:11:35.205"></status>
</kw>
<msg timestamp="20200727 11:11:35.205" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 11:11:35.183" endtime="20200727 11:11:35.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.205" endtime="20200727 11:11:35.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.211" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.213" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:35.208" endtime="20200727 11:11:35.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.214" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:35.213" endtime="20200727 11:11:35.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.214" endtime="20200727 11:11:35.215"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.208" endtime="20200727 11:11:35.215"></status>
</kw>
<msg timestamp="20200727 11:11:35.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.207" endtime="20200727 11:11:35.215"></status>
</kw>
<msg timestamp="20200727 11:11:35.215" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:35.207" endtime="20200727 11:11:35.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:11:35.216" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:11:35.216" endtime="20200727 11:11:35.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.220" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:35.218" endtime="20200727 11:11:35.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.233" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:35.233" endtime="20200727 11:11:35.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.234" endtime="20200727 11:11:35.234"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.217" endtime="20200727 11:11:35.234"></status>
</kw>
<msg timestamp="20200727 11:11:35.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.217" endtime="20200727 11:11:35.235"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.217" endtime="20200727 11:11:35.235"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.216" endtime="20200727 11:11:35.235"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.206" endtime="20200727 11:11:35.235"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.206" endtime="20200727 11:11:35.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.239" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.268" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 11:11:35.236" endtime="20200727 11:11:35.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.269" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x9a3f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.5) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGeS5HBw35JlqU/qfec94LXBgPKwpTkGA3gkfT5RujPbHOrBLm28S64+jGc3pAURCKdEHtkqXPdzlSu9zjUycVj6y142/j+22nXNxmY2pWBLCXzqqgI43oatuUmGd2ulFzs1yE1HEz78Oavt4XswPDvOXZUEfYwrllA1DMgtFobuXYi5mnmWKvVMwcN7SuSESCiJw5JMeo66ijOgHfJLlMXNEBnclvUpk/hD8D+UOvb6LhadNGykqMC/7rciiYj9/qQKRWzk9Nb7+kpJrxqe+6tax9x115nlQF6M7G68l7QgRB4u0Rro2H2PoHp4iZatQ/3Y3MXzPCD7xvFEPfaQoQ2sq4mY7+56SB1jCB06ADAgESooHLBIHIkkCj5+7gqXoFaAqifM72fdwle3lMFqyPlTjtlPJSHQdvyg6LGchL24+e61AY//Xmm5jhkdILzJIRktYQgpCZ3mFlH4ymzUBoJpICHGTUbCc8z6S8X+4bV2xlODvdnGhRgZTsBsM36RA7kvog6Ya+/4whXqlbuLu2tgHHXxqjH1F3C4WvYkOaUtNzGnb3qho6O+NAgDnfngnQU7bZ4XRIzvjYtmTi6H5FobFrlzIejJev8PYPkPuCrr3uF1iS3YSqx4BXZW6vwOc=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLCKWLLsBI1JZ0nmy1CgS8zWQ/LVwrTf2BNwqBrUXb0A5yrNmcxTUNAmjesdRfCnh41w2+GFU/QwF8WrLo4jJWu0G
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295263&amp;s=J3Ukeg94ffQ916jOEKtzgdnSqkxMkbeiIZZXSmFfdew="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 27 Jul 2020 09:35:16 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 11:11:35 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 11:11:35 GMT
Date: Mon, 27 Jul 2020 11:11:35 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 27 Jul 2020 11:11:35 GMT
Date: Mon, 27 Jul 2020 11:11:35 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLCKWLLsBI1JZ0nmy1CgS8zWQ/LVwrTf2BNwqBrUXb0A5yrNmcxTUNAmjesdRfCnh41w2+GFU/QwF8WrLo4jJWu0G
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295263&amp;s=J3Ukeg94ffQ916jOEKtzgdnSqkxMkbeiIZZXSmFfdew="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 09:35:16 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200727 11:11:35.269" endtime="20200727 11:11:35.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.270" endtime="20200727 11:11:35.270"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.236" endtime="20200727 11:11:35.271"></status>
</kw>
<msg timestamp="20200727 11:11:35.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.236" endtime="20200727 11:11:35.271"></status>
</kw>
<msg timestamp="20200727 11:11:35.271" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.5...
* Connected to scm (172.26.0.5) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200727 11:11:35.235" endtime="20200727 11:11:35.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.272" endtime="20200727 11:11:35.272"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.172" endtime="20200727 11:11:35.272"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:35.171" endtime="20200727 11:11:35.272" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.279" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:35.276" endtime="20200727 11:11:35.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.282" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:35.281" endtime="20200727 11:11:35.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.282" endtime="20200727 11:11:35.283"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.275" endtime="20200727 11:11:35.283"></status>
</kw>
<msg timestamp="20200727 11:11:35.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.275" endtime="20200727 11:11:35.283"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.274" endtime="20200727 11:11:35.283"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.274" endtime="20200727 11:11:35.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.287" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.302" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 11:11:35.285" endtime="20200727 11:11:35.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.304" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200727 11:11:35.303" endtime="20200727 11:11:35.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.304" endtime="20200727 11:11:35.305"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.284" endtime="20200727 11:11:35.305"></status>
</kw>
<msg timestamp="20200727 11:11:35.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.284" endtime="20200727 11:11:35.305"></status>
</kw>
<msg timestamp="20200727 11:11:35.305" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 11:11:35.283" endtime="20200727 11:11:35.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.305" endtime="20200727 11:11:35.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.310" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.312" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200727 11:11:35.308" endtime="20200727 11:11:35.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.313" level="INFO">scm</msg>
<status status="PASS" starttime="20200727 11:11:35.313" endtime="20200727 11:11:35.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.313" endtime="20200727 11:11:35.314"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.307" endtime="20200727 11:11:35.314"></status>
</kw>
<msg timestamp="20200727 11:11:35.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.307" endtime="20200727 11:11:35.314"></status>
</kw>
<msg timestamp="20200727 11:11:35.314" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200727 11:11:35.307" endtime="20200727 11:11:35.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200727 11:11:35.315" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200727 11:11:35.315" endtime="20200727 11:11:35.315"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.320" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200727 11:11:35.317" endtime="20200727 11:11:35.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.335" level="INFO"></msg>
<status status="PASS" starttime="20200727 11:11:35.334" endtime="20200727 11:11:35.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.335" endtime="20200727 11:11:35.336"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.317" endtime="20200727 11:11:35.336"></status>
</kw>
<msg timestamp="20200727 11:11:35.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.316" endtime="20200727 11:11:35.336"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.316" endtime="20200727 11:11:35.336"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.315" endtime="20200727 11:11:35.336"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.306" endtime="20200727 11:11:35.336"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.306" endtime="20200727 11:11:35.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200727 11:11:35.341" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200727 11:11:35.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200727 11:11:35.370" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 11:11:35.338" endtime="20200727 11:11:35.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.371" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1ceff20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZbVs4za5TLOciX8b+VoMkfCzwpvCya9SSJZqIWeGnLaj/K/g+mJ1XHEnEQB7svl7c6lBrNbtkQ9AlHqZ7HkADRLNpaGIU7cMLZNZ8/6HgwZmUb6ShOxa2fqb7IzJqn4mDiL+2hYrVUJFaN6HVYtmTphfiEQsVmVyBtucfcK+Up/XaR/5Ik507waBmqBXEtkVuoX9rzGSYn2078+XlND42ucwZjZgnQItaB7pbZ1Khmd/PbWxWyA4Ptayh0AUo/JdxsWNg+C5ATE493jovrt72GTgztNOjqPqAGbGkzra75e300p7Gp5b7eYvGnxm5vBtHDNzviySue3UnfQDpjUAQZc8RcflD8pIHWMIHToAMCARKigcsEgch5zfpogwNXHlrxSgRGV4M7IOnrWq8aNgdtc1578C8yRNEssRq+rPSVvOH0tgDAvq+wXKvdqSjHeA/OCIA5wVIvWFwnMUR9YmtJejBzodc/Xvr/akFQO5GkruOKxfDbWc7sgOjgwcbUXLfSNIWQcjIPyhd0yTUJdXSPzsysvlsMosHp8Cb6DRNh3s0vATy1HKSzy8GjccQHIhCNmUFr5EokJ4v8e2VoNNtvBFx5Dmp/m2fKn2ihmmjIKnyhbYb8oom2DbbhDYq7iA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Date: Mon, 27 Jul 2020 11:11:35 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCr2dmNkHfyzVK1K3wwrASiS5lxXO8Yr7ZO7WurLeKe6Mc2nOPAUBSVJApEyU3RF8WKzn1yGB6u90kLLOFhVWLdAgq
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295366&amp;s=8putebDUe6oTakbrKGL03SfBROOFPA7Q/4BphqIfMZM="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 27 Jul 2020 09:39:54 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 27 Jul 2020 11:11:35 GMT
Cache-Control: no-cache
Expires: Mon, 27 Jul 2020 11:11:35 GMT
Date: Mon, 27 Jul 2020 11:11:35 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 27 Jul 2020 11:11:35 GMT
Date: Mon, 27 Jul 2020 11:11:35 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCr2dmNkHfyzVK1K3wwrASiS5lxXO8Yr7ZO7WurLeKe6Mc2nOPAUBSVJApEyU3RF8WKzn1yGB6u90kLLOFhVWLdAgq
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1595884295366&amp;s=8putebDUe6oTakbrKGL03SfBROOFPA7Q/4BphqIfMZM="; Path=/; HttpOnly
Last-Modified: Mon, 27 Jul 2020 09:39:54 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200727 11:11:35.370" endtime="20200727 11:11:35.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200727 11:11:35.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200727 11:11:35.372" endtime="20200727 11:11:35.372"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.337" endtime="20200727 11:11:35.372"></status>
</kw>
<msg timestamp="20200727 11:11:35.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20200727 11:11:35.337" endtime="20200727 11:11:35.372"></status>
</kw>
<msg timestamp="20200727 11:11:35.373" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200727 11:11:35.337" endtime="20200727 11:11:35.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200727 11:11:35.373" endtime="20200727 11:11:35.373"></status>
</kw>
<status status="PASS" starttime="20200727 11:11:35.274" endtime="20200727 11:11:35.373"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200727 11:11:35.273" endtime="20200727 11:11:35.374" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200727 11:11:26.342" endtime="20200727 11:11:35.375"></status>
</suite>
<status status="PASS" starttime="20200727 11:11:26.317" endtime="20200727 11:11:35.377"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
