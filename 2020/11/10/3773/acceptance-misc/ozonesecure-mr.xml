<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201110 15:50:04.284" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:33.674" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:37.859" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:45:37.859" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:37.859" starttime="20201110 15:45:33.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:37.860" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:45:37.861" starttime="20201110 15:45:37.860"></status>
</kw>
<msg timestamp="20201110 15:45:37.861" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:37.861" starttime="20201110 15:45:33.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:37.868" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:41.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:45:41.384" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:41.384" starttime="20201110 15:45:37.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:41.385" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:45:41.385" starttime="20201110 15:45:41.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:45:41.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:45:41.386" starttime="20201110 15:45:41.385"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:41.386" starttime="20201110 15:45:37.863"></status>
</kw>
<msg timestamp="20201110 15:45:41.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:45:41.386" starttime="20201110 15:45:37.863"></status>
</kw>
<msg timestamp="20201110 15:45:41.387" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:41.387" starttime="20201110 15:45:37.862"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201110 15:45:41.387" starttime="20201110 15:45:41.387"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:41.387" starttime="20201110 15:45:37.862"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:41.387" starttime="20201110 15:45:37.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:41.393" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:44.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:45:44.956" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:44.956" starttime="20201110 15:45:41.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:44.958" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:45:44.958" starttime="20201110 15:45:44.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:45:44.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:45:44.958" starttime="20201110 15:45:44.958"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:44.959" starttime="20201110 15:45:41.389"></status>
</kw>
<msg timestamp="20201110 15:45:44.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:45:44.959" starttime="20201110 15:45:41.389"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:44.959" starttime="20201110 15:45:41.389"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:44.959" starttime="20201110 15:45:41.388"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:44.960" starttime="20201110 15:45:41.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201110 15:45:44.960" starttime="20201110 15:45:44.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:44.964" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:48.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:45:48.620" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:48.620" starttime="20201110 15:45:44.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:48.621" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:45:44.682Z",
  "modificationTime" : "2020-11-10T15:45:44.682Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 15:45:48.622" starttime="20201110 15:45:48.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:45:48.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:45:48.622" starttime="20201110 15:45:48.622"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:48.623" starttime="20201110 15:45:44.961"></status>
</kw>
<msg timestamp="20201110 15:45:48.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:45:48.623" starttime="20201110 15:45:44.961"></status>
</kw>
<msg timestamp="20201110 15:45:48.623" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:48.623" starttime="20201110 15:45:44.960"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201110 15:45:48.624" starttime="20201110 15:45:48.623"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:45:48.628" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:45:48.628" starttime="20201110 15:45:48.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:45:48.628" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:45:48.628" starttime="20201110 15:45:48.628"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:48.628" starttime="20201110 15:45:48.627"></status>
</kw>
<msg timestamp="20201110 15:45:48.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:45:48.629" starttime="20201110 15:45:48.626"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:48.629" starttime="20201110 15:45:48.625"></status>
</kw>
<msg timestamp="20201110 15:45:48.629" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 15:45:48.629" starttime="20201110 15:45:48.625"></status>
</kw>
<msg timestamp="20201110 15:45:48.629" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 15:45:48.629" starttime="20201110 15:45:48.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:48.634" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:52.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:45:52.355" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:45:52.355" starttime="20201110 15:45:48.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:52.356" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:45:52.356" starttime="20201110 15:45:52.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:45:52.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:45:52.357" starttime="20201110 15:45:52.356"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:52.357" starttime="20201110 15:45:48.630"></status>
</kw>
<msg timestamp="20201110 15:45:52.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:45:52.357" starttime="20201110 15:45:48.630"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:52.357" starttime="20201110 15:45:48.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:52.361" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:00.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:00.744" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:46:00.744" starttime="20201110 15:45:52.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:00.745" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:46:00.746" starttime="20201110 15:46:00.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:00.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:00.746" starttime="20201110 15:46:00.746"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:00.747" starttime="20201110 15:45:52.359"></status>
</kw>
<msg timestamp="20201110 15:46:00.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:00.747" starttime="20201110 15:45:52.358"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:00.747" starttime="20201110 15:45:52.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:00.751" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:06.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:06.371" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:46:06.372" starttime="20201110 15:46:00.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:06.373" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:46:06.373" starttime="20201110 15:46:06.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:06.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:06.374" starttime="20201110 15:46:06.373"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:06.374" starttime="20201110 15:46:00.748"></status>
</kw>
<msg timestamp="20201110 15:46:06.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:06.374" starttime="20201110 15:46:00.748"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:06.374" starttime="20201110 15:46:00.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:06.378" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:11.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:11.978" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:46:11.978" starttime="20201110 15:46:06.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:11.979" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:46:11.979" starttime="20201110 15:46:11.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:11.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:11.980" starttime="20201110 15:46:11.979"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:11.980" starttime="20201110 15:46:06.375"></status>
</kw>
<msg timestamp="20201110 15:46:11.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:11.980" starttime="20201110 15:46:06.375"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:11.981" starttime="20201110 15:46:06.375"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:46:11.981" critical="yes" starttime="20201110 15:45:33.668"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:46:11.986" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:46:11.986" starttime="20201110 15:46:11.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:46:11.987" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:46:11.987" starttime="20201110 15:46:11.986"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:11.987" starttime="20201110 15:46:11.985"></status>
</kw>
<msg timestamp="20201110 15:46:11.987" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:46:11.987" starttime="20201110 15:46:11.985"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:11.987" starttime="20201110 15:46:11.984"></status>
</kw>
<msg timestamp="20201110 15:46:11.987" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:46:11.987" starttime="20201110 15:46:11.983"></status>
</kw>
<msg timestamp="20201110 15:46:11.988" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:46:11.988" starttime="20201110 15:46:11.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:11.992" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:15.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:15.701" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:46:15.702" starttime="20201110 15:46:11.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:15.703" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:46:15.703" starttime="20201110 15:46:15.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:15.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:15.704" starttime="20201110 15:46:15.703"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:15.704" starttime="20201110 15:46:11.989"></status>
</kw>
<msg timestamp="20201110 15:46:15.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:15.704" starttime="20201110 15:46:11.988"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:15.704" starttime="20201110 15:46:11.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:15.708" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:19.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:19.175" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:46:19.175" starttime="20201110 15:46:15.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:19.176" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:46:19.176" starttime="20201110 15:46:19.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:19.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:19.177" starttime="20201110 15:46:19.176"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:19.177" starttime="20201110 15:46:15.705"></status>
</kw>
<msg timestamp="20201110 15:46:19.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:19.177" starttime="20201110 15:46:15.705"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:19.177" starttime="20201110 15:46:15.704"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:46:19.178" critical="yes" starttime="20201110 15:46:11.982"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201110 15:46:19.179" starttime="20201110 15:45:33.617"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:48:27.963" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:48:27.963" starttime="20201110 15:48:27.963"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:48:27.964" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:48:27.964" starttime="20201110 15:48:27.963"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:27.964" starttime="20201110 15:48:27.962"></status>
</kw>
<msg timestamp="20201110 15:48:27.964" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:48:27.964" starttime="20201110 15:48:27.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:48:27.965" starttime="20201110 15:48:27.965"></status>
</kw>
<msg timestamp="20201110 15:48:27.965" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:48:27.965" starttime="20201110 15:48:27.964"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:27.965" starttime="20201110 15:48:27.954"></status>
</kw>
<msg timestamp="20201110 15:48:27.966" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:48:27.966" starttime="20201110 15:48:27.953"></status>
</kw>
<msg timestamp="20201110 15:48:27.966" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:48:27.966" starttime="20201110 15:48:27.951"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:48:27.966" level="INFO">${random} = 12616</msg>
<status status="PASS" endtime="20201110 15:48:27.966" starttime="20201110 15:48:27.966"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:48:27.973" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-12616 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:48:32.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:48:32.801" level="INFO">${output} = 2020-11-10 15:48:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:48:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:48:32.801" starttime="20201110 15:48:27.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:48:32.802" level="INFO">2020-11-10 15:48:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:48:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:48:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:48:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:48:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E8FDA36624BB-&gt;9fd21506-870e-4293-a399-580cc677c079
2020-11-10 15:48:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201110 15:48:32.802" starttime="20201110 15:48:32.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:48:32.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:48:32.803" starttime="20201110 15:48:32.802"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:32.803" starttime="20201110 15:48:27.967"></status>
</kw>
<msg timestamp="20201110 15:48:32.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:48:32.804" starttime="20201110 15:48:27.967"></status>
</kw>
<msg timestamp="20201110 15:48:32.804" level="INFO">${result} = 2020-11-10 15:48:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:48:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:48:32.804" starttime="20201110 15:48:27.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:48:32.809" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:48:34.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:48:34.982" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:48 ofs://om/volume1/bucket1/ozone-12616
-rw-...</msg>
<status status="PASS" endtime="20201110 15:48:34.982" starttime="20201110 15:48:32.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:48:34.983" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:48 ofs://om/volume1/bucket1/ozone-12616
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:46 ofs://om/volume1/bucket1/ozone-29553
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:47 ofs://om/volume1/bucket1/wordcount-32.txt</msg>
<status status="PASS" endtime="20201110 15:48:34.983" starttime="20201110 15:48:34.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:48:34.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:48:34.984" starttime="20201110 15:48:34.983"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:34.984" starttime="20201110 15:48:32.806"></status>
</kw>
<msg timestamp="20201110 15:48:34.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:48:34.984" starttime="20201110 15:48:32.806"></status>
</kw>
<msg timestamp="20201110 15:48:34.984" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:45 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:48 ofs://om/volume1/bucket1/ozone-12616
-rw-...</msg>
<status status="PASS" endtime="20201110 15:48:34.984" starttime="20201110 15:48:32.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:48:34.985" starttime="20201110 15:48:34.984"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:48:34.985" critical="yes" starttime="20201110 15:48:27.950"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:48:34.986" starttime="20201110 15:48:27.884"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:46:52.830" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:46:52.830" starttime="20201110 15:46:52.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:46:52.831" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:46:52.831" starttime="20201110 15:46:52.830"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:52.831" starttime="20201110 15:46:52.829"></status>
</kw>
<msg timestamp="20201110 15:46:52.831" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:46:52.831" starttime="20201110 15:46:52.829"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:52.831" starttime="20201110 15:46:52.828"></status>
</kw>
<msg timestamp="20201110 15:46:52.831" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:46:52.831" starttime="20201110 15:46:52.827"></status>
</kw>
<msg timestamp="20201110 15:46:52.831" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:46:52.832" starttime="20201110 15:46:52.826"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:46:52.832" level="INFO">${random} = 29553</msg>
<status status="PASS" endtime="20201110 15:46:52.832" starttime="20201110 15:46:52.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:52.838" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-29553 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:57.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:57.041" level="INFO">${output} = 2020-11-10 15:46:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:46:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:46:57.041" starttime="20201110 15:46:52.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:57.042" level="INFO">2020-11-10 15:46:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:46:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:46:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:46:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:46:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-78B2939BCCFA-&gt;9fd21506-870e-4293-a399-580cc677c079
2020-11-10 15:46:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201110 15:46:57.042" starttime="20201110 15:46:57.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:57.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:57.043" starttime="20201110 15:46:57.042"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:57.043" starttime="20201110 15:46:52.833"></status>
</kw>
<msg timestamp="20201110 15:46:57.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:57.043" starttime="20201110 15:46:52.833"></status>
</kw>
<msg timestamp="20201110 15:46:57.044" level="INFO">${result} = 2020-11-10 15:46:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:46:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:46:57.044" starttime="20201110 15:46:52.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:57.048" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:59.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:59.068" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:46 o3fs://bucket1.volume1.om/ozone-29553
dr...</msg>
<status status="PASS" endtime="20201110 15:46:59.068" starttime="20201110 15:46:57.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:59.069" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:46 o3fs://bucket1.volume1.om/ozone-29553
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:46 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:46:59.069" starttime="20201110 15:46:59.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:59.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:59.070" starttime="20201110 15:46:59.069"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:59.070" starttime="20201110 15:46:57.046"></status>
</kw>
<msg timestamp="20201110 15:46:59.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:59.070" starttime="20201110 15:46:57.044"></status>
</kw>
<msg timestamp="20201110 15:46:59.070" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:45 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:46 o3fs://bucket1.volume1.om/ozone-29553
dr...</msg>
<status status="PASS" endtime="20201110 15:46:59.070" starttime="20201110 15:46:57.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:46:59.071" starttime="20201110 15:46:59.071"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:46:59.071" critical="yes" starttime="20201110 15:46:52.826"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:46:59.072" starttime="20201110 15:46:52.775"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:47.669" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:47.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:47.672" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201110 15:46:47.672" starttime="20201110 15:46:47.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:47.673" level="INFO">rm</msg>
<status status="PASS" endtime="20201110 15:46:47.673" starttime="20201110 15:46:47.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:47.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:47.674" starttime="20201110 15:46:47.674"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:47.674" starttime="20201110 15:46:47.665"></status>
</kw>
<msg timestamp="20201110 15:46:47.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:47.675" starttime="20201110 15:46:47.665"></status>
</kw>
<msg timestamp="20201110 15:46:47.675" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201110 15:46:47.675" starttime="20201110 15:46:47.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:46:47.676" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:46:47.676" starttime="20201110 15:46:47.675"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:46:47.680" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:46:47.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:46:47.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:46:47.701" starttime="20201110 15:46:47.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:46:47.702" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:46:47.702" starttime="20201110 15:46:47.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:46:47.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:46:47.702" starttime="20201110 15:46:47.702"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:47.703" starttime="20201110 15:46:47.677"></status>
</kw>
<msg timestamp="20201110 15:46:47.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:46:47.703" starttime="20201110 15:46:47.677"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:47.703" starttime="20201110 15:46:47.677"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:47.703" starttime="20201110 15:46:47.676"></status>
</kw>
<status status="PASS" endtime="20201110 15:46:47.703" starttime="20201110 15:46:47.664"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:46:47.703" critical="yes" starttime="20201110 15:46:47.663"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201110 15:46:47.704" starttime="20201110 15:46:47.617"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:28.457" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:28.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:45:28.458" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201110 15:45:28.458" starttime="20201110 15:45:28.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:28.459" level="INFO">om</msg>
<status status="PASS" endtime="20201110 15:45:28.459" starttime="20201110 15:45:28.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:45:28.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:45:28.460" starttime="20201110 15:45:28.460"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:28.460" starttime="20201110 15:45:28.452"></status>
</kw>
<msg timestamp="20201110 15:45:28.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:45:28.461" starttime="20201110 15:45:28.451"></status>
</kw>
<msg timestamp="20201110 15:45:28.461" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201110 15:45:28.461" starttime="20201110 15:45:28.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:45:28.461" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:45:28.462" starttime="20201110 15:45:28.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:45:28.465" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:45:28.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:45:28.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:45:28.495" starttime="20201110 15:45:28.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:45:28.496" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:45:28.496" starttime="20201110 15:45:28.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:45:28.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:45:28.497" starttime="20201110 15:45:28.496"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:28.497" starttime="20201110 15:45:28.463"></status>
</kw>
<msg timestamp="20201110 15:45:28.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:45:28.497" starttime="20201110 15:45:28.463"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:28.497" starttime="20201110 15:45:28.462"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:28.497" starttime="20201110 15:45:28.462"></status>
</kw>
<status status="PASS" endtime="20201110 15:45:28.498" starttime="20201110 15:45:28.450"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:45:28.498" critical="yes" starttime="20201110 15:45:28.449"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201110 15:45:28.502" starttime="20201110 15:45:28.403"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:48:40.357" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:48:40.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:48:40.361" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:48:40.361" starttime="20201110 15:48:40.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:48:40.362" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:48:40.362" starttime="20201110 15:48:40.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:48:40.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:48:40.363" starttime="20201110 15:48:40.362"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:40.363" starttime="20201110 15:48:40.351"></status>
</kw>
<msg timestamp="20201110 15:48:40.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:48:40.363" starttime="20201110 15:48:40.350"></status>
</kw>
<msg timestamp="20201110 15:48:40.364" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:48:40.364" starttime="20201110 15:48:40.350"></status>
</kw>
<msg timestamp="20201110 15:48:40.364" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:48:40.364" starttime="20201110 15:48:40.350"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:48:40.369" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:48:40.369" starttime="20201110 15:48:40.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:48:40.369" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:48:40.369" starttime="20201110 15:48:40.369"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:40.369" starttime="20201110 15:48:40.367"></status>
</kw>
<msg timestamp="20201110 15:48:40.370" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:48:40.370" starttime="20201110 15:48:40.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:48:40.370" starttime="20201110 15:48:40.370"></status>
</kw>
<msg timestamp="20201110 15:48:40.371" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:48:40.371" starttime="20201110 15:48:40.370"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:40.371" starttime="20201110 15:48:40.365"></status>
</kw>
<msg timestamp="20201110 15:48:40.371" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:48:40.371" starttime="20201110 15:48:40.365"></status>
</kw>
<msg timestamp="20201110 15:48:40.371" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:48:40.371" starttime="20201110 15:48:40.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:48:40.376" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:49:20.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:49:20.628" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:48:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:48:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:49:20.628" starttime="20201110 15:48:40.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:49:20.630" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:48:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:48:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:48:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:48:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:48:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2BB76DD9D639-&gt;9fd21506-870e-4293-a399-580cc677c079
2020-11-10 15:48:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:48:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:48:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-10 15:48:44 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023324553, maxDate=1605628124553, sequenceNumber=3, masterKeyId=2))
2020-11-10 15:48:44 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 b2 e1 96 db 2e 38 b4 ba 93 b7 dd 2e 40 03 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-10 15:48:44 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023324553, maxDate=1605628124553, sequenceNumber=3, masterKeyId=2)
2020-11-10 15:48:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:48:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:48:45 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:48:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605023085824_0003
2020-11-10 15:48:45 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 b2 e1 96 db 2e 38 b4 ba 93 b7 dd 2e 40 03 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023324553, maxDate=1605628124553, sequenceNumber=3, masterKeyId=2)]
2020-11-10 15:48:45 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:48:45 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:48:45 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-10 15:48:46 INFO  YarnClientImpl:329 - Submitted application application_1605023085824_0003
2020-11-10 15:48:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605023085824_0003/
2020-11-10 15:48:46 INFO  Job:1619 - Running job: job_1605023085824_0003
2020-11-10 15:48:54 INFO  Job:1640 - Job job_1605023085824_0003 running in uber mode : false
2020-11-10 15:48:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:49:06 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:49:07 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:49:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:49:19 INFO  Job:1658 - Job job_1605023085824_0003 completed successfully
2020-11-10 15:49:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1070937
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53470
		Total time spent by all reduces in occupied slots (ms)=7906
		Total time spent by all map tasks (ms)=26735
		Total time spent by all reduce tasks (ms)=3953
		Total vcore-milliseconds taken by all map tasks=26735
		Total vcore-milliseconds taken by all reduce tasks=3953
		Total megabyte-milliseconds taken by all map tasks=54753280
		Total megabyte-milliseconds taken by all reduce tasks=8095744
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1260
		CPU time spent (ms)=8320
		Physical memory (bytes) snapshot=1395503104
		Virtual memory (bytes) snapshot=14056300544
		Total committed heap usage (bytes)=1197473792
		Peak Map Physical memory (bytes)=384614400
		Peak Map Virtual memory (bytes)=3511050240
		Peak Reduce Physical memory (bytes)=300507136
		Peak Reduce Virtual memory (bytes)=3529064448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.941 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201110 15:49:20.630" starttime="20201110 15:49:20.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:49:20.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:49:20.630" starttime="20201110 15:49:20.630"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.631" starttime="20201110 15:48:40.372"></status>
</kw>
<msg timestamp="20201110 15:49:20.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:49:20.631" starttime="20201110 15:48:40.372"></status>
</kw>
<msg timestamp="20201110 15:49:20.631" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:48:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:48:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:49:20.631" starttime="20201110 15:48:40.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:49:20.632" starttime="20201110 15:49:20.631"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:49:20.632" critical="yes" starttime="20201110 15:48:40.349"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:49:20.637" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:49:20.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:49:20.644" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:49:20.644" starttime="20201110 15:49:20.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:49:20.645" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:49:20.645" starttime="20201110 15:49:20.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:49:20.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:49:20.645" starttime="20201110 15:49:20.645"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.646" starttime="20201110 15:49:20.635"></status>
</kw>
<msg timestamp="20201110 15:49:20.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:49:20.646" starttime="20201110 15:49:20.634"></status>
</kw>
<msg timestamp="20201110 15:49:20.646" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:49:20.646" starttime="20201110 15:49:20.634"></status>
</kw>
<msg timestamp="20201110 15:49:20.646" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:49:20.646" starttime="20201110 15:49:20.633"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:49:20.647" level="INFO">${random} = 88</msg>
<status status="PASS" endtime="20201110 15:49:20.647" starttime="20201110 15:49:20.647"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:49:20.652" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:49:20.652" starttime="20201110 15:49:20.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:49:20.653" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:49:20.653" starttime="20201110 15:49:20.652"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.653" starttime="20201110 15:49:20.651"></status>
</kw>
<msg timestamp="20201110 15:49:20.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:49:20.653" starttime="20201110 15:49:20.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:49:20.654" starttime="20201110 15:49:20.654"></status>
</kw>
<msg timestamp="20201110 15:49:20.654" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:49:20.654" starttime="20201110 15:49:20.653"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.655" starttime="20201110 15:49:20.649"></status>
</kw>
<msg timestamp="20201110 15:49:20.655" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:49:20.655" starttime="20201110 15:49:20.648"></status>
</kw>
<msg timestamp="20201110 15:49:20.655" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:49:20.655" starttime="20201110 15:49:20.647"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:49:20.658" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:49:20.658" starttime="20201110 15:49:20.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:49:20.659" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:49:20.659" starttime="20201110 15:49:20.658"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.659" starttime="20201110 15:49:20.657"></status>
</kw>
<msg timestamp="20201110 15:49:20.659" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:49:20.659" starttime="20201110 15:49:20.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:49:20.661" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201110 15:49:20.661" starttime="20201110 15:49:20.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:49:20.661" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201110 15:49:20.661" starttime="20201110 15:49:20.661"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.662" starttime="20201110 15:49:20.660"></status>
</kw>
<msg timestamp="20201110 15:49:20.662" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201110 15:49:20.662" starttime="20201110 15:49:20.659"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.662" starttime="20201110 15:49:20.656"></status>
</kw>
<msg timestamp="20201110 15:49:20.662" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:49:20.662" starttime="20201110 15:49:20.656"></status>
</kw>
<msg timestamp="20201110 15:49:20.662" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:49:20.662" starttime="20201110 15:49:20.655"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:49:20.666" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:49:20.666" starttime="20201110 15:49:20.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:49:20.666" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:49:20.667" starttime="20201110 15:49:20.666"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.667" starttime="20201110 15:49:20.665"></status>
</kw>
<msg timestamp="20201110 15:49:20.667" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:49:20.667" starttime="20201110 15:49:20.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:49:20.668" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201110 15:49:20.668" starttime="20201110 15:49:20.668"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:49:20.669" level="INFO">${result} = /wordcount-88.txt</msg>
<status status="PASS" endtime="20201110 15:49:20.669" starttime="20201110 15:49:20.669"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.669" starttime="20201110 15:49:20.667"></status>
</kw>
<msg timestamp="20201110 15:49:20.669" level="INFO">${path_with_leading} = /wordcount-88.txt</msg>
<status status="PASS" endtime="20201110 15:49:20.669" starttime="20201110 15:49:20.667"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:20.670" starttime="20201110 15:49:20.664"></status>
</kw>
<msg timestamp="20201110 15:49:20.670" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-88.txt</msg>
<status status="PASS" endtime="20201110 15:49:20.670" starttime="20201110 15:49:20.663"></status>
</kw>
<msg timestamp="20201110 15:49:20.670" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-88.txt</msg>
<status status="PASS" endtime="20201110 15:49:20.670" starttime="20201110 15:49:20.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:49:20.675" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-88.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:49:55.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:49:55.831" level="INFO">${output} = 2020-11-10 15:49:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:49:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201110 15:49:55.831" starttime="20201110 15:49:20.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:49:55.833" level="INFO">2020-11-10 15:49:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:49:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-10 15:49:23 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023363313, maxDate=1605628163313, sequenceNumber=4, masterKeyId=2))
2020-11-10 15:49:23 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8b e1 e3 96 db 2e 38 8b e9 95 b7 dd 2e 40 04 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-10 15:49:23 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023363313, maxDate=1605628163313, sequenceNumber=4, masterKeyId=2)
2020-11-10 15:49:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:49:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:49:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:49:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:49:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:49:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CEF153472336-&gt;9fd21506-870e-4293-a399-580cc677c079
2020-11-10 15:49:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:49:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:49:25 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:49:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605023085824_0004
2020-11-10 15:49:25 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8b e1 e3 96 db 2e 38 8b e9 95 b7 dd 2e 40 04 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023363313, maxDate=1605628163313, sequenceNumber=4, masterKeyId=2)]
2020-11-10 15:49:26 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:49:26 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:49:26 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-10 15:49:26 INFO  YarnClientImpl:329 - Submitted application application_1605023085824_0004
2020-11-10 15:49:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605023085824_0004/
2020-11-10 15:49:26 INFO  Job:1619 - Running job: job_1605023085824_0004
2020-11-10 15:49:35 INFO  Job:1640 - Job job_1605023085824_0004 running in uber mode : false
2020-11-10 15:49:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:49:45 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:49:47 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:49:48 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:49:52 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:49:55 INFO  Job:1658 - Job job_1605023085824_0004 completed successfully
2020-11-10 15:49:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1133311
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47586
		Total time spent by all reduces in occupied slots (ms)=7850
		Total time spent by all map tasks (ms)=23793
		Total time spent by all reduce tasks (ms)=3925
		Total vcore-milliseconds taken by all map tasks=23793
		Total vcore-milliseconds taken by all reduce tasks=3925
		Total megabyte-milliseconds taken by all map tasks=48728064
		Total megabyte-milliseconds taken by all reduce tasks=8038400
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1731
		CPU time spent (ms)=8490
		Physical memory (bytes) snapshot=1598889984
		Virtual memory (bytes) snapshot=14057738240
		Total committed heap usage (bytes)=1406664704
		Peak Map Physical memory (bytes)=533123072
		Peak Map Virtual memory (bytes)=3511029760
		Peak Reduce Physical memory (bytes)=295612416
		Peak Reduce Virtual memory (bytes)=3526148096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201110 15:49:55.833" starttime="20201110 15:49:55.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:49:55.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:49:55.834" starttime="20201110 15:49:55.833"></status>
</kw>
<status status="PASS" endtime="20201110 15:49:55.834" starttime="20201110 15:49:20.671"></status>
</kw>
<msg timestamp="20201110 15:49:55.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:49:55.834" starttime="20201110 15:49:20.671"></status>
</kw>
<msg timestamp="20201110 15:49:55.835" level="INFO">${output} = 2020-11-10 15:49:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:49:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201110 15:49:55.835" starttime="20201110 15:49:20.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:49:55.836" starttime="20201110 15:49:55.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:49:55.836" starttime="20201110 15:49:55.836"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:49:55.836" critical="yes" starttime="20201110 15:49:20.633"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:49:55.838" starttime="20201110 15:48:40.296"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:47:04.290" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:47:04.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:47:04.294" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:04.294" starttime="20201110 15:47:04.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:47:04.295" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:04.295" starttime="20201110 15:47:04.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:47:04.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:47:04.296" starttime="20201110 15:47:04.295"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:04.296" starttime="20201110 15:47:04.283"></status>
</kw>
<msg timestamp="20201110 15:47:04.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:47:04.296" starttime="20201110 15:47:04.283"></status>
</kw>
<msg timestamp="20201110 15:47:04.297" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:04.297" starttime="20201110 15:47:04.282"></status>
</kw>
<msg timestamp="20201110 15:47:04.297" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:04.297" starttime="20201110 15:47:04.282"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:47:04.302" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:47:04.302" starttime="20201110 15:47:04.301"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:47:04.302" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:47:04.302" starttime="20201110 15:47:04.302"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:04.303" starttime="20201110 15:47:04.300"></status>
</kw>
<msg timestamp="20201110 15:47:04.303" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:47:04.303" starttime="20201110 15:47:04.299"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:04.303" starttime="20201110 15:47:04.298"></status>
</kw>
<msg timestamp="20201110 15:47:04.303" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:47:04.303" starttime="20201110 15:47:04.298"></status>
</kw>
<msg timestamp="20201110 15:47:04.303" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:47:04.303" starttime="20201110 15:47:04.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:47:04.308" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:47:45.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:47:45.064" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:47:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:47:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:47:45.064" starttime="20201110 15:47:04.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:47:45.065" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:47:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:47:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:47:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:47:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:47:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5B2CB104F5AB-&gt;9fd21506-870e-4293-a399-580cc677c079
2020-11-10 15:47:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:47:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:47:08 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-10 15:47:08 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023228646, maxDate=1605628028646, sequenceNumber=1, masterKeyId=2))
2020-11-10 15:47:08 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 be c3 db 96 db 2e 38 be cb 8d b7 dd 2e 40 01 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-10 15:47:08 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023228646, maxDate=1605628028646, sequenceNumber=1, masterKeyId=2)
2020-11-10 15:47:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:47:09 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:47:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605023085824_0001
2020-11-10 15:47:09 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 be c3 db 96 db 2e 38 be cb 8d b7 dd 2e 40 01 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023228646, maxDate=1605628028646, sequenceNumber=1, masterKeyId=2)]
2020-11-10 15:47:10 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:47:10 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:47:10 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-10 15:47:11 INFO  YarnClientImpl:329 - Submitted application application_1605023085824_0001
2020-11-10 15:47:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605023085824_0001/
2020-11-10 15:47:11 INFO  Job:1619 - Running job: job_1605023085824_0001
2020-11-10 15:47:23 INFO  Job:1640 - Job job_1605023085824_0001 running in uber mode : false
2020-11-10 15:47:23 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:47:34 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:47:36 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:47:40 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:47:44 INFO  Job:1658 - Job job_1605023085824_0001 completed successfully
2020-11-10 15:47:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1071149
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47514
		Total time spent by all reduces in occupied slots (ms)=8170
		Total time spent by all map tasks (ms)=23757
		Total time spent by all reduce tasks (ms)=4085
		Total vcore-milliseconds taken by all map tasks=23757
		Total vcore-milliseconds taken by all reduce tasks=4085
		Total megabyte-milliseconds taken by all map tasks=48654336
		Total megabyte-milliseconds taken by all reduce tasks=8366080
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1017
		CPU time spent (ms)=7560
		Physical memory (bytes) snapshot=1393156096
		Virtual memory (bytes) snapshot=14052917248
		Total committed heap usage (bytes)=1162346496
		Peak Map Physical memory (bytes)=386813952
		Peak Map Virtual memory (bytes)=3510034432
		Peak Reduce Physical memory (bytes)=301113344
		Peak Reduce Virtual memory (bytes)=3527581696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.594 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201110 15:47:45.066" starttime="20201110 15:47:45.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:47:45.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:47:45.066" starttime="20201110 15:47:45.066"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.067" starttime="20201110 15:47:04.304"></status>
</kw>
<msg timestamp="20201110 15:47:45.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:47:45.067" starttime="20201110 15:47:04.304"></status>
</kw>
<msg timestamp="20201110 15:47:45.067" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:47:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:47:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:47:45.067" starttime="20201110 15:47:04.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:47:45.068" starttime="20201110 15:47:45.068"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:47:45.068" critical="yes" starttime="20201110 15:47:04.281"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:47:45.073" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:47:45.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:47:45.079" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:45.079" starttime="20201110 15:47:45.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:47:45.080" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:45.081" starttime="20201110 15:47:45.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:47:45.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:47:45.081" starttime="20201110 15:47:45.081"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.081" starttime="20201110 15:47:45.071"></status>
</kw>
<msg timestamp="20201110 15:47:45.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:47:45.082" starttime="20201110 15:47:45.070"></status>
</kw>
<msg timestamp="20201110 15:47:45.082" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:45.082" starttime="20201110 15:47:45.070"></status>
</kw>
<msg timestamp="20201110 15:47:45.082" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:47:45.082" starttime="20201110 15:47:45.070"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:47:45.083" level="INFO">${random} = 32</msg>
<status status="PASS" endtime="20201110 15:47:45.083" starttime="20201110 15:47:45.082"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:47:45.086" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:47:45.086" starttime="20201110 15:47:45.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:47:45.087" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:47:45.087" starttime="20201110 15:47:45.086"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.087" starttime="20201110 15:47:45.085"></status>
</kw>
<msg timestamp="20201110 15:47:45.087" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:47:45.087" starttime="20201110 15:47:45.085"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.087" starttime="20201110 15:47:45.084"></status>
</kw>
<msg timestamp="20201110 15:47:45.088" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:47:45.088" starttime="20201110 15:47:45.084"></status>
</kw>
<msg timestamp="20201110 15:47:45.088" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:47:45.088" starttime="20201110 15:47:45.083"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:47:45.091" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:47:45.091" starttime="20201110 15:47:45.091"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:47:45.092" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:47:45.092" starttime="20201110 15:47:45.091"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.092" starttime="20201110 15:47:45.090"></status>
</kw>
<msg timestamp="20201110 15:47:45.092" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:47:45.092" starttime="20201110 15:47:45.090"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.092" starttime="20201110 15:47:45.089"></status>
</kw>
<msg timestamp="20201110 15:47:45.092" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:47:45.092" starttime="20201110 15:47:45.089"></status>
</kw>
<msg timestamp="20201110 15:47:45.093" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:47:45.093" starttime="20201110 15:47:45.088"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:47:45.096" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:47:45.096" starttime="20201110 15:47:45.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:47:45.096" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:47:45.096" starttime="20201110 15:47:45.096"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.096" starttime="20201110 15:47:45.095"></status>
</kw>
<msg timestamp="20201110 15:47:45.097" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:47:45.097" starttime="20201110 15:47:45.094"></status>
</kw>
<status status="PASS" endtime="20201110 15:47:45.097" starttime="20201110 15:47:45.094"></status>
</kw>
<msg timestamp="20201110 15:47:45.097" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201110 15:47:45.097" starttime="20201110 15:47:45.093"></status>
</kw>
<msg timestamp="20201110 15:47:45.097" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201110 15:47:45.097" starttime="20201110 15:47:45.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:47:45.102" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-32.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:48:22.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:48:22.094" level="INFO">${output} = 2020-11-10 15:47:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:47:47 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201110 15:48:22.094" starttime="20201110 15:47:45.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:48:22.095" level="INFO">2020-11-10 15:47:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:47:47 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-11-10 15:47:47 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023267562, maxDate=1605628067562, sequenceNumber=2, masterKeyId=2))
2020-11-10 15:47:47 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fb f4 dd 96 db 2e 38 fb fc 8f b7 dd 2e 40 02 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-10 15:47:47 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023267562, maxDate=1605628067562, sequenceNumber=2, masterKeyId=2)
2020-11-10 15:47:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:47:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:47:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:47:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:47:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:47:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A2DCBF434A2C-&gt;9fd21506-870e-4293-a399-580cc677c079
2020-11-10 15:47:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:47:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:47:49 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:47:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605023085824_0002
2020-11-10 15:47:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fb f4 dd 96 db 2e 38 fb fc 8f b7 dd 2e 40 02 48 01 5a 0d 33 38 31 33 32 35 37 35 39 39 35 36 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1605023267562, maxDate=1605628067562, sequenceNumber=2, masterKeyId=2)]
2020-11-10 15:47:50 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:47:50 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:47:50 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-10 15:47:51 INFO  YarnClientImpl:329 - Submitted application application_1605023085824_0002
2020-11-10 15:47:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605023085824_0002/
2020-11-10 15:47:51 INFO  Job:1619 - Running job: job_1605023085824_0002
2020-11-10 15:47:59 INFO  Job:1640 - Job job_1605023085824_0002 running in uber mode : false
2020-11-10 15:47:59 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:48:09 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:48:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:48:12 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:48:16 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:48:21 INFO  Job:1658 - Job job_1605023085824_0002 completed successfully
2020-11-10 15:48:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1133395
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47590
		Total time spent by all reduces in occupied slots (ms)=7900
		Total time spent by all map tasks (ms)=23795
		Total time spent by all reduce tasks (ms)=3950
		Total vcore-milliseconds taken by all map tasks=23795
		Total vcore-milliseconds taken by all reduce tasks=3950
		Total megabyte-milliseconds taken by all map tasks=48732160
		Total megabyte-milliseconds taken by all reduce tasks=8089600
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1046
		CPU time spent (ms)=8180
		Physical memory (bytes) snapshot=1384632320
		Virtual memory (bytes) snapshot=14051954688
		Total committed heap usage (bytes)=1160249344
		Peak Map Physical memory (bytes)=385400832
		Peak Map Virtual memory (bytes)=3508482048
		Peak Reduce Physical memory (bytes)=297517056
		Peak Reduce Virtual memory (bytes)=3527274496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201110 15:48:22.096" starttime="20201110 15:48:22.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:48:22.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:48:22.097" starttime="20201110 15:48:22.096"></status>
</kw>
<status status="PASS" endtime="20201110 15:48:22.097" starttime="20201110 15:47:45.098"></status>
</kw>
<msg timestamp="20201110 15:48:22.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:48:22.097" starttime="20201110 15:47:45.098"></status>
</kw>
<msg timestamp="20201110 15:48:22.098" level="INFO">${output} = 2020-11-10 15:47:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.9:8032
2020-11-10 15:47:47 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201110 15:48:22.098" starttime="20201110 15:47:45.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:48:22.098" starttime="20201110 15:48:22.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:48:22.099" starttime="20201110 15:48:22.098"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:48:22.099" critical="yes" starttime="20201110 15:47:45.069"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:48:22.100" starttime="20201110 15:47:04.230"></status>
</suite>
<status status="PASS" elapsedtime="212559" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
