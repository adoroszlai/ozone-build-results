<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201110 15:56:33.973" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:12.117" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:22.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:22.383" level="INFO">${output} = 2020-11-10 15:52:13,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:14,153 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:22.383" starttime="20201110 15:52:12.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:22.385" level="INFO">2020-11-10 15:52:13,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:14,153 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:52:14,153 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-10 15:52:16,875 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-10 15:52:16,876 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-10 15:52:16,876 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-10 15:52:16,876 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-10 15:52:16,876 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-10 15:52:16,876 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-10 15:52:16,878 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-10 15:52:16,884 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-10 15:52:16,895 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:16,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-47519, with testuser/scm@EXAMPLE.COM as owner.
2020-11-10 15:52:17,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-47519/bucket-0-64148, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-10 15:52:17,909 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:18,911 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:19,912 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:20,055 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-10 15:52:20,912 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,458
Average Time spent in bucket creation: 00:00:00,206
Average Time spent in key creation: 00:00:01,270
Average Time spent in key write: 00:00:01,389
Total bytes written: 10240
Total Execution time: 00:00:07,679
***************************************************</msg>
<status status="PASS" endtime="20201110 15:52:22.385" starttime="20201110 15:52:22.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:22.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:22.385" starttime="20201110 15:52:22.385"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:22.386" starttime="20201110 15:52:12.113"></status>
</kw>
<msg timestamp="20201110 15:52:22.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:22.386" starttime="20201110 15:52:12.112"></status>
</kw>
<msg timestamp="20201110 15:52:22.386" level="INFO">${result} = 2020-11-10 15:52:13,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:14,153 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:22.386" starttime="20201110 15:52:12.112"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:52:22.387" starttime="20201110 15:52:22.387"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:22.387" starttime="20201110 15:52:22.387"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:52:22.388" critical="yes" starttime="20201110 15:52:12.111"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:22.394" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:33.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:33.209" level="INFO">${output} = 2020-11-10 15:52:24,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:24,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:33.209" starttime="20201110 15:52:22.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:33.212" level="INFO">2020-11-10 15:52:24,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:24,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:52:24,501 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-10 15:52:24,672 [main] INFO freon.BaseFreonGenerator: Executing test with prefix chpesrvduz
2020-11-10 15:52:24,689 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-10 15:52:25,690 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:26,250 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-10 15:52:26,311 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-10 15:52:26,691 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:26,906 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-10 15:52:27,275 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:52:27,276 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A6D51F786683-&gt;3699225d-bd94-4a72-8c54-01e6df457684
2020-11-10 15:52:27,277 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:52:27,691 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:28,692 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:29,693 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:30,694 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:31,694 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:32,695 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-10 15:52:32,838 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5612.825525, max=5612.825525, mean=5612.825525, stddev=0.0, median=5612.825525, p75=5612.825525, p95=5612.825525, p98=5612.825525, p99=5612.825525, p999=5612.825525, mean_rate=0.1551802023784285, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-10 15:52:32,840 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-11-10 15:52:32,848 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-10 15:52:32,848 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201110 15:52:33.212" starttime="20201110 15:52:33.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:33.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:33.212" starttime="20201110 15:52:33.212"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:33.213" starttime="20201110 15:52:22.391"></status>
</kw>
<msg timestamp="20201110 15:52:33.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:33.213" starttime="20201110 15:52:22.390"></status>
</kw>
<msg timestamp="20201110 15:52:33.213" level="INFO">${result} = 2020-11-10 15:52:24,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:24,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:33.213" starttime="20201110 15:52:22.390"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:52:33.214" starttime="20201110 15:52:33.214"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:33.214" starttime="20201110 15:52:33.213"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:52:33.215" critical="yes" starttime="20201110 15:52:22.389"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:33.220" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:38.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:38.043" level="INFO">${output} = 2020-11-10 15:52:35,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:35,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:38.043" starttime="20201110 15:52:33.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:38.044" level="INFO">2020-11-10 15:52:35,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:35,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:52:35,250 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-10 15:52:35,440 [main] INFO freon.BaseFreonGenerator: Executing test with prefix cpyr7k6a79
2020-11-10 15:52:35,462 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-10 15:52:36,470 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:37,471 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-10 15:52:38,001 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=287.876883, max=287.876883, mean=287.876883, stddev=0.0, median=287.876883, p75=287.876883, p95=287.876883, p98=287.876883, p99=287.876883, p999=287.876883, mean_rate=0.8797743399228862, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-10 15:52:38,006 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-10 15:52:38,009 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-10 15:52:38,009 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201110 15:52:38.044" starttime="20201110 15:52:38.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:38.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:38.045" starttime="20201110 15:52:38.044"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:38.045" starttime="20201110 15:52:33.217"></status>
</kw>
<msg timestamp="20201110 15:52:38.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:38.045" starttime="20201110 15:52:33.217"></status>
</kw>
<msg timestamp="20201110 15:52:38.046" level="INFO">${result} = 2020-11-10 15:52:35,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:35,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:38.046" starttime="20201110 15:52:33.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:52:38.047" starttime="20201110 15:52:38.046"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:38.047" starttime="20201110 15:52:38.046"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:52:38.047" critical="yes" starttime="20201110 15:52:33.215"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:38.053" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:42.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:42.709" level="INFO">${output} = 2020-11-10 15:52:39,816 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:40,041 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:42.709" starttime="20201110 15:52:38.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:42.711" level="INFO">2020-11-10 15:52:39,816 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:40,041 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:52:40,041 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-10 15:52:40,198 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ymvuaxbmg2
2020-11-10 15:52:40,212 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-10 15:52:41,234 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-10 15:52:42,235 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-10 15:52:42,690 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=92.805032, max=92.805032, mean=92.805032, stddev=0.0, median=92.805032, p75=92.805032, p95=92.805032, p98=92.805032, p99=92.805032, p999=92.805032, mean_rate=0.8701439789042572, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-10 15:52:42,695 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-11-10 15:52:42,696 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-10 15:52:42,696 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201110 15:52:42.711" starttime="20201110 15:52:42.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:42.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:42.712" starttime="20201110 15:52:42.711"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:42.712" starttime="20201110 15:52:38.050"></status>
</kw>
<msg timestamp="20201110 15:52:42.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:42.712" starttime="20201110 15:52:38.050"></status>
</kw>
<msg timestamp="20201110 15:52:42.712" level="INFO">${result} = 2020-11-10 15:52:39,816 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-10 15:52:40,041 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201110 15:52:42.712" starttime="20201110 15:52:38.049"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:52:42.713" starttime="20201110 15:52:42.713"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:42.713" starttime="20201110 15:52:42.713"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:52:42.714" critical="yes" starttime="20201110 15:52:38.048"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201110 15:52:42.716" starttime="20201110 15:52:12.085"></status>
</suite>
<status status="PASS" endtime="20201110 15:52:42.719" starttime="20201110 15:52:12.059"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:05.779" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:05.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:05.783" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:52:05.783" starttime="20201110 15:52:05.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:05.784" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:52:05.784" starttime="20201110 15:52:05.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:05.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:05.785" starttime="20201110 15:52:05.784"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:05.785" starttime="20201110 15:52:05.767"></status>
</kw>
<msg timestamp="20201110 15:52:05.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:05.785" starttime="20201110 15:52:05.767"></status>
</kw>
<msg timestamp="20201110 15:52:05.785" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:52:05.785" starttime="20201110 15:52:05.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:52:05.786" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:52:05.786" starttime="20201110 15:52:05.786"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:05.802" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:05.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:05.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:52:05.823" starttime="20201110 15:52:05.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:05.824" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:52:05.825" starttime="20201110 15:52:05.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:05.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:05.825" starttime="20201110 15:52:05.825"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:05.826" starttime="20201110 15:52:05.787"></status>
</kw>
<msg timestamp="20201110 15:52:05.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:05.826" starttime="20201110 15:52:05.787"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:05.826" starttime="20201110 15:52:05.787"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:05.826" starttime="20201110 15:52:05.786"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:05.826" starttime="20201110 15:52:05.766"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:52:05.826" critical="yes" starttime="20201110 15:52:05.763"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201110 15:52:05.831" starttime="20201110 15:52:05.651"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:52:48.372" level="INFO">${random} = 36105</msg>
<status status="PASS" endtime="20201110 15:52:48.372" starttime="20201110 15:52:48.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201110 15:52:48.374" level="INFO">${source} = 36105-source</msg>
<status status="PASS" endtime="20201110 15:52:48.374" starttime="20201110 15:52:48.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201110 15:52:48.375" level="INFO">${target} = 36105-target</msg>
<status status="PASS" endtime="20201110 15:52:48.375" starttime="20201110 15:52:48.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:48.380" level="INFO">Running command 'ozone sh volume create 36105-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:51.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:51.869" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:52:51.869" starttime="20201110 15:52:48.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:51.870" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:52:51.870" starttime="20201110 15:52:51.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:51.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:51.871" starttime="20201110 15:52:51.870"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:51.871" starttime="20201110 15:52:48.376"></status>
</kw>
<msg timestamp="20201110 15:52:51.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:51.871" starttime="20201110 15:52:48.375"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:51.871" starttime="20201110 15:52:48.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:51.875" level="INFO">Running command 'ozone sh volume create 36105-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:52:55.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:52:55.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:52:55.963" starttime="20201110 15:52:51.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:52:55.964" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:52:55.965" starttime="20201110 15:52:55.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:52:55.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:52:55.965" starttime="20201110 15:52:55.965"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:55.965" starttime="20201110 15:52:51.872"></status>
</kw>
<msg timestamp="20201110 15:52:55.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:52:55.966" starttime="20201110 15:52:51.872"></status>
</kw>
<status status="PASS" endtime="20201110 15:52:55.966" starttime="20201110 15:52:51.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:52:55.971" level="INFO">Running command 'ozone sh bucket create 36105-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:00.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:00.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:00.886" starttime="20201110 15:52:55.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:00.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:00.887" starttime="20201110 15:53:00.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:00.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:00.888" starttime="20201110 15:53:00.887"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:00.888" starttime="20201110 15:52:55.968"></status>
</kw>
<msg timestamp="20201110 15:53:00.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:00.888" starttime="20201110 15:52:55.967"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:00.888" starttime="20201110 15:52:55.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:00.893" level="INFO">Running command 'ozone sh key put 36105-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:09.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:09.199" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:09.199" starttime="20201110 15:53:00.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:09.200" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:09.200" starttime="20201110 15:53:09.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:09.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:09.201" starttime="20201110 15:53:09.200"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:09.201" starttime="20201110 15:53:00.889"></status>
</kw>
<msg timestamp="20201110 15:53:09.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:09.201" starttime="20201110 15:53:00.889"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:09.201" starttime="20201110 15:53:00.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:09.205" level="INFO">Running command 'ozone sh bucket create 36105-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:12.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:12.729" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:12.729" starttime="20201110 15:53:09.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:12.730" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:12.730" starttime="20201110 15:53:12.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:12.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:12.731" starttime="20201110 15:53:12.730"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:12.731" starttime="20201110 15:53:09.202"></status>
</kw>
<msg timestamp="20201110 15:53:12.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:12.731" starttime="20201110 15:53:09.202"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:12.732" starttime="20201110 15:53:09.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:12.735" level="INFO">Running command 'ozone sh bucket link 36105-source/readable-bucket 36105-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:16.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:16.417" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:16.417" starttime="20201110 15:53:12.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:16.419" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:16.419" starttime="20201110 15:53:16.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:16.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:16.419" starttime="20201110 15:53:16.419"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:16.420" starttime="20201110 15:53:12.733"></status>
</kw>
<msg timestamp="20201110 15:53:16.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:16.420" starttime="20201110 15:53:12.732"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:16.420" starttime="20201110 15:53:12.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:16.424" level="INFO">Running command 'ozone sh bucket link 36105-source/readable-bucket 36105-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:19.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:19.714" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:19.715" starttime="20201110 15:53:16.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:19.715" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:19.716" starttime="20201110 15:53:19.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:19.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:19.716" starttime="20201110 15:53:19.716"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:19.716" starttime="20201110 15:53:16.421"></status>
</kw>
<msg timestamp="20201110 15:53:19.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:19.717" starttime="20201110 15:53:16.421"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:19.717" starttime="20201110 15:53:16.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:19.720" level="INFO">Running command 'ozone sh bucket link 36105-source/unreadable-bucket 36105-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:23.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:23.270" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:23.270" starttime="20201110 15:53:19.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:23.271" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:23.271" starttime="20201110 15:53:23.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:23.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:23.272" starttime="20201110 15:53:23.271"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:23.272" starttime="20201110 15:53:19.718"></status>
</kw>
<msg timestamp="20201110 15:53:23.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:23.272" starttime="20201110 15:53:19.718"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:23.273" starttime="20201110 15:53:19.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:23.276" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36105-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:27.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:27.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:27.005" starttime="20201110 15:53:23.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:27.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:53:27.006" starttime="20201110 15:53:27.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:27.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:27.007" starttime="20201110 15:53:27.007"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:27.007" starttime="20201110 15:53:23.274"></status>
</kw>
<msg timestamp="20201110 15:53:27.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:27.008" starttime="20201110 15:53:23.273"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:27.008" starttime="20201110 15:53:23.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:27.012" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 36105-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:30.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:30.663" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:30.663" starttime="20201110 15:53:27.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:30.664" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:53:30.664" starttime="20201110 15:53:30.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:30.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:30.664" starttime="20201110 15:53:30.664"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:30.665" starttime="20201110 15:53:27.009"></status>
</kw>
<msg timestamp="20201110 15:53:30.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:30.665" starttime="20201110 15:53:27.009"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:30.665" starttime="20201110 15:53:27.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:30.670" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 36105-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:34.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:34.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:34.208" starttime="20201110 15:53:30.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:34.209" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:53:34.209" starttime="20201110 15:53:34.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:34.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:34.210" starttime="20201110 15:53:34.209"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:34.210" starttime="20201110 15:53:30.666"></status>
</kw>
<msg timestamp="20201110 15:53:34.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:34.210" starttime="20201110 15:53:30.666"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:34.210" starttime="20201110 15:53:30.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:34.215" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36105-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:37.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:37.578" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:37.578" starttime="20201110 15:53:34.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:37.579" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:53:37.579" starttime="20201110 15:53:37.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:37.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:37.580" starttime="20201110 15:53:37.579"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:37.580" starttime="20201110 15:53:34.212"></status>
</kw>
<msg timestamp="20201110 15:53:37.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:37.580" starttime="20201110 15:53:34.211"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:37.580" starttime="20201110 15:53:34.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:37.585" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36105-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:41.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:41.224" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:41.224" starttime="20201110 15:53:37.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:41.225" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:53:41.225" starttime="20201110 15:53:41.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:41.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:41.225" starttime="20201110 15:53:41.225"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.226" starttime="20201110 15:53:37.581"></status>
</kw>
<msg timestamp="20201110 15:53:41.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:41.226" starttime="20201110 15:53:37.581"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.226" starttime="20201110 15:53:37.581"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.226" starttime="20201110 15:52:55.967"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.226" starttime="20201110 15:52:55.966"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.226" starttime="20201110 15:52:48.371"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:41.234" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:41.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:41.235" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:53:41.235" starttime="20201110 15:53:41.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:41.236" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:53:41.236" starttime="20201110 15:53:41.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:41.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:41.237" starttime="20201110 15:53:41.237"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.237" starttime="20201110 15:53:41.230"></status>
</kw>
<msg timestamp="20201110 15:53:41.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:41.238" starttime="20201110 15:53:41.229"></status>
</kw>
<msg timestamp="20201110 15:53:41.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:53:41.238" starttime="20201110 15:53:41.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:53:41.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:53:41.239" starttime="20201110 15:53:41.238"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:41.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:41.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:41.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:53:41.262" starttime="20201110 15:53:41.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:41.263" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:53:41.263" starttime="20201110 15:53:41.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:41.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:41.264" starttime="20201110 15:53:41.263"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.264" starttime="20201110 15:53:41.241"></status>
</kw>
<msg timestamp="20201110 15:53:41.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:41.264" starttime="20201110 15:53:41.240"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.264" starttime="20201110 15:53:41.240"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.264" starttime="20201110 15:53:41.239"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.265" starttime="20201110 15:53:41.228"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:41.265" starttime="20201110 15:53:41.228"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:41.270" level="INFO">Running command 'ozone sh bucket link 36105-source/no-such-bucket 36105-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:44.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:44.740" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:44.740" starttime="20201110 15:53:41.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:44.741" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:44.741" starttime="20201110 15:53:44.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:44.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:44.742" starttime="20201110 15:53:44.742"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:44.742" starttime="20201110 15:53:41.266"></status>
</kw>
<msg timestamp="20201110 15:53:44.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:44.743" starttime="20201110 15:53:41.266"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:44.743" starttime="20201110 15:53:41.265"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:44.747" level="INFO">Running command 'ozone sh key list 36105-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:48.237" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:53:48.237" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:48.237" starttime="20201110 15:53:44.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:48.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201110 15:53:48.238" starttime="20201110 15:53:48.237"></status>
</kw>
<msg timestamp="20201110 15:53:48.239" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:48.239" starttime="20201110 15:53:44.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201110 15:53:48.239" starttime="20201110 15:53:48.239"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:53:48.239" critical="yes" starttime="20201110 15:53:41.227"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:48.246" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:48.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:48.249" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:53:48.249" starttime="20201110 15:53:48.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:48.250" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:53:48.250" starttime="20201110 15:53:48.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:48.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:48.251" starttime="20201110 15:53:48.250"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:48.251" starttime="20201110 15:53:48.243"></status>
</kw>
<msg timestamp="20201110 15:53:48.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:48.251" starttime="20201110 15:53:48.243"></status>
</kw>
<msg timestamp="20201110 15:53:48.251" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:53:48.251" starttime="20201110 15:53:48.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:53:48.252" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:53:48.252" starttime="20201110 15:53:48.252"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:48.257" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:48.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:48.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:53:48.270" starttime="20201110 15:53:48.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:48.271" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:53:48.271" starttime="20201110 15:53:48.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:48.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:48.272" starttime="20201110 15:53:48.271"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:48.272" starttime="20201110 15:53:48.253"></status>
</kw>
<msg timestamp="20201110 15:53:48.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:48.272" starttime="20201110 15:53:48.253"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:48.272" starttime="20201110 15:53:48.253"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:48.273" starttime="20201110 15:53:48.252"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:48.273" starttime="20201110 15:53:48.242"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:48.273" starttime="20201110 15:53:48.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:48.277" level="INFO">Running command 'ozone sh bucket link 36105-source/bucket1 36105-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:52.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:52.084" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:52.084" starttime="20201110 15:53:48.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:52.085" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:52.085" starttime="20201110 15:53:52.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:52.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:52.086" starttime="20201110 15:53:52.086"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:52.086" starttime="20201110 15:53:48.274"></status>
</kw>
<msg timestamp="20201110 15:53:52.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:52.087" starttime="20201110 15:53:48.273"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:52.087" starttime="20201110 15:53:48.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:52.091" level="INFO">Running command 'ozone sh bucket create 36105-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:53:55.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:53:55.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:53:55.723" starttime="20201110 15:53:52.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:53:55.726" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:53:55.726" starttime="20201110 15:53:55.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:53:55.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:53:55.727" starttime="20201110 15:53:55.726"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:55.727" starttime="20201110 15:53:52.088"></status>
</kw>
<msg timestamp="20201110 15:53:55.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:53:55.727" starttime="20201110 15:53:52.088"></status>
</kw>
<status status="PASS" endtime="20201110 15:53:55.728" starttime="20201110 15:53:52.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:53:55.732" level="INFO">Running command 'ozone sh key put 36105-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:04.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:04.383" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:04.383" starttime="20201110 15:53:55.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:04.385" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:54:04.385" starttime="20201110 15:54:04.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:04.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:04.385" starttime="20201110 15:54:04.385"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:04.386" starttime="20201110 15:53:55.729"></status>
</kw>
<msg timestamp="20201110 15:54:04.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:04.386" starttime="20201110 15:53:55.728"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:04.386" starttime="20201110 15:53:55.728"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201110 15:54:04.388" level="INFO">${postfix} = 12533</msg>
<status status="PASS" endtime="20201110 15:54:04.388" starttime="20201110 15:54:04.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201110 15:54:04.388" level="INFO">${tmpfile} = /tmp/tempkey-12533</msg>
<status status="PASS" endtime="20201110 15:54:04.388" starttime="20201110 15:54:04.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:04.393" level="INFO">Running command 'ozone sh key get -f 36105-target/link1/key1 /tmp/tempkey-12533 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:10.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:10.287" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:10.287" starttime="20201110 15:54:04.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.288" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:54:10.288" starttime="20201110 15:54:10.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:10.289" starttime="20201110 15:54:10.289"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.289" starttime="20201110 15:54:04.389"></status>
</kw>
<msg timestamp="20201110 15:54:10.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:10.290" starttime="20201110 15:54:04.389"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.290" starttime="20201110 15:54:04.388"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201110 15:54:10.292" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-12533 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:10.296" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201110 15:54:10.296" starttime="20201110 15:54:10.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:10.302" level="INFO">Running command 'rm -f /tmp/tempkey-12533 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:10.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:10.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:10.304" starttime="20201110 15:54:10.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.305" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:10.305" starttime="20201110 15:54:10.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:10.306" starttime="20201110 15:54:10.305"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.306" starttime="20201110 15:54:10.298"></status>
</kw>
<msg timestamp="20201110 15:54:10.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:10.306" starttime="20201110 15:54:10.298"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.306" starttime="20201110 15:54:10.297"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:54:10.307" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201110 15:54:10.307" starttime="20201110 15:54:10.306"></status>
</kw>
<msg timestamp="20201110 15:54:10.307" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201110 15:54:10.307" starttime="20201110 15:54:04.387"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:10.308" starttime="20201110 15:54:10.307"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.308" starttime="20201110 15:54:04.386"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:54:10.308" critical="yes" starttime="20201110 15:53:48.240"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:10.318" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:10.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:10.322" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:54:10.323" starttime="20201110 15:54:10.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.324" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:54:10.324" starttime="20201110 15:54:10.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:10.325" starttime="20201110 15:54:10.324"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.325" starttime="20201110 15:54:10.314"></status>
</kw>
<msg timestamp="20201110 15:54:10.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:10.325" starttime="20201110 15:54:10.314"></status>
</kw>
<msg timestamp="20201110 15:54:10.325" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:54:10.325" starttime="20201110 15:54:10.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:54:10.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:54:10.326" starttime="20201110 15:54:10.326"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:10.331" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:10.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:10.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:10.355" starttime="20201110 15:54:10.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.356" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:10.356" starttime="20201110 15:54:10.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:10.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:10.356" starttime="20201110 15:54:10.356"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.357" starttime="20201110 15:54:10.328"></status>
</kw>
<msg timestamp="20201110 15:54:10.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:10.357" starttime="20201110 15:54:10.328"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.357" starttime="20201110 15:54:10.327"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.357" starttime="20201110 15:54:10.326"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.357" starttime="20201110 15:54:10.312"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:10.357" starttime="20201110 15:54:10.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:10.362" level="INFO">Running command 'ozone sh key put 36105-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:18.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:18.829" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:18.829" starttime="20201110 15:54:10.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:18.830" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:54:18.830" starttime="20201110 15:54:18.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:18.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:18.831" starttime="20201110 15:54:18.830"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:18.831" starttime="20201110 15:54:10.359"></status>
</kw>
<msg timestamp="20201110 15:54:18.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:18.831" starttime="20201110 15:54:10.358"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:18.832" starttime="20201110 15:54:10.358"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201110 15:54:18.833" level="INFO">${postfix} = 81625</msg>
<status status="PASS" endtime="20201110 15:54:18.833" starttime="20201110 15:54:18.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201110 15:54:18.834" level="INFO">${tmpfile} = /tmp/tempkey-81625</msg>
<status status="PASS" endtime="20201110 15:54:18.834" starttime="20201110 15:54:18.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:18.838" level="INFO">Running command 'ozone sh key get -f 36105-source/bucket1/key2 /tmp/tempkey-81625 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:24.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:24.269" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:24.269" starttime="20201110 15:54:18.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.270" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:54:24.270" starttime="20201110 15:54:24.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:24.271" starttime="20201110 15:54:24.271"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.271" starttime="20201110 15:54:18.835"></status>
</kw>
<msg timestamp="20201110 15:54:24.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:24.272" starttime="20201110 15:54:18.835"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.272" starttime="20201110 15:54:18.834"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201110 15:54:24.274" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-81625 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:24.277" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201110 15:54:24.277" starttime="20201110 15:54:24.272"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:24.281" level="INFO">Running command 'rm -f /tmp/tempkey-81625 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:24.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:24.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:24.285" starttime="20201110 15:54:24.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.286" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:24.286" starttime="20201110 15:54:24.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:24.286" starttime="20201110 15:54:24.286"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.287" starttime="20201110 15:54:24.279"></status>
</kw>
<msg timestamp="20201110 15:54:24.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:24.287" starttime="20201110 15:54:24.278"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.287" starttime="20201110 15:54:24.278"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:54:24.288" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201110 15:54:24.288" starttime="20201110 15:54:24.287"></status>
</kw>
<msg timestamp="20201110 15:54:24.288" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201110 15:54:24.288" starttime="20201110 15:54:18.832"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:24.288" starttime="20201110 15:54:24.288"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.289" starttime="20201110 15:54:18.832"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:54:24.289" critical="yes" starttime="20201110 15:54:10.309"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:24.295" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:24.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:24.298" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:54:24.298" starttime="20201110 15:54:24.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.299" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:54:24.299" starttime="20201110 15:54:24.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:24.300" starttime="20201110 15:54:24.299"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.300" starttime="20201110 15:54:24.292"></status>
</kw>
<msg timestamp="20201110 15:54:24.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:24.300" starttime="20201110 15:54:24.292"></status>
</kw>
<msg timestamp="20201110 15:54:24.301" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:54:24.301" starttime="20201110 15:54:24.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:54:24.301" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:54:24.301" starttime="20201110 15:54:24.301"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:24.306" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:24.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:24.323" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:24.323" starttime="20201110 15:54:24.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.324" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:24.324" starttime="20201110 15:54:24.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:24.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:24.325" starttime="20201110 15:54:24.324"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.325" starttime="20201110 15:54:24.303"></status>
</kw>
<msg timestamp="20201110 15:54:24.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:24.325" starttime="20201110 15:54:24.302"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.325" starttime="20201110 15:54:24.302"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.325" starttime="20201110 15:54:24.302"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.326" starttime="20201110 15:54:24.291"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:24.326" starttime="20201110 15:54:24.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:24.329" level="INFO">Running command 'ozone sh key list 36105-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:28.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:28.310" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201110 15:54:28.310" starttime="20201110 15:54:24.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:28.311" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201110 15:54:28.311" starttime="20201110 15:54:28.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:28.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:28.312" starttime="20201110 15:54:28.311"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:28.312" starttime="20201110 15:54:24.327"></status>
</kw>
<msg timestamp="20201110 15:54:28.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:28.312" starttime="20201110 15:54:24.326"></status>
</kw>
<msg timestamp="20201110 15:54:28.313" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201110 15:54:28.313" starttime="20201110 15:54:24.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:28.317" level="INFO">Running command 'ozone sh key list 36105-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:32.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:32.485" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201110 15:54:32.485" starttime="20201110 15:54:28.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:32.487" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201110 15:54:32.487" starttime="20201110 15:54:32.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:32.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:32.487" starttime="20201110 15:54:32.487"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.488" starttime="20201110 15:54:28.314"></status>
</kw>
<msg timestamp="20201110 15:54:32.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:32.488" starttime="20201110 15:54:28.313"></status>
</kw>
<msg timestamp="20201110 15:54:32.488" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201110 15:54:32.488" starttime="20201110 15:54:28.313"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:32.489" starttime="20201110 15:54:32.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:32.489" starttime="20201110 15:54:32.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:32.490" starttime="20201110 15:54:32.489"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:54:32.490" critical="yes" starttime="20201110 15:54:24.290"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:32.497" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:32.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:32.499" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:54:32.499" starttime="20201110 15:54:32.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:32.500" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:54:32.500" starttime="20201110 15:54:32.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:32.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:32.501" starttime="20201110 15:54:32.500"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.501" starttime="20201110 15:54:32.493"></status>
</kw>
<msg timestamp="20201110 15:54:32.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:32.501" starttime="20201110 15:54:32.493"></status>
</kw>
<msg timestamp="20201110 15:54:32.501" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:54:32.501" starttime="20201110 15:54:32.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:54:32.502" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:54:32.502" starttime="20201110 15:54:32.502"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:32.507" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:32.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:32.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:32.526" starttime="20201110 15:54:32.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:32.527" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:32.527" starttime="20201110 15:54:32.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:32.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:32.527" starttime="20201110 15:54:32.527"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.528" starttime="20201110 15:54:32.504"></status>
</kw>
<msg timestamp="20201110 15:54:32.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:32.528" starttime="20201110 15:54:32.503"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.528" starttime="20201110 15:54:32.503"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.528" starttime="20201110 15:54:32.502"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.528" starttime="20201110 15:54:32.492"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:32.528" starttime="20201110 15:54:32.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:32.540" level="INFO">Running command 'ozone sh key delete 36105-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:36.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:36.294" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:36.294" starttime="20201110 15:54:32.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:36.295" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:54:36.296" starttime="20201110 15:54:36.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:36.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:36.296" starttime="20201110 15:54:36.296"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:36.297" starttime="20201110 15:54:32.529"></status>
</kw>
<msg timestamp="20201110 15:54:36.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:36.297" starttime="20201110 15:54:32.529"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:36.297" starttime="20201110 15:54:32.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:36.301" level="INFO">Running command 'ozone sh key list 36105-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:40.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:40.089" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201110 15:54:40.089" starttime="20201110 15:54:36.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:40.091" level="INFO">key1</msg>
<status status="PASS" endtime="20201110 15:54:40.091" starttime="20201110 15:54:40.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:40.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:40.092" starttime="20201110 15:54:40.091"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.092" starttime="20201110 15:54:36.298"></status>
</kw>
<msg timestamp="20201110 15:54:40.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:40.092" starttime="20201110 15:54:36.298"></status>
</kw>
<msg timestamp="20201110 15:54:40.092" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201110 15:54:40.092" starttime="20201110 15:54:36.297"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:40.093" starttime="20201110 15:54:40.093"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:54:40.093" critical="yes" starttime="20201110 15:54:32.491"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:40.099" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:40.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:40.103" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:54:40.103" starttime="20201110 15:54:40.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:40.104" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:54:40.104" starttime="20201110 15:54:40.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:40.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:40.104" starttime="20201110 15:54:40.104"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.105" starttime="20201110 15:54:40.096"></status>
</kw>
<msg timestamp="20201110 15:54:40.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:40.105" starttime="20201110 15:54:40.096"></status>
</kw>
<msg timestamp="20201110 15:54:40.105" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:54:40.105" starttime="20201110 15:54:40.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:54:40.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:54:40.106" starttime="20201110 15:54:40.105"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:40.111" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:40.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:40.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:40.122" starttime="20201110 15:54:40.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:40.123" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:40.123" starttime="20201110 15:54:40.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:40.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:40.124" starttime="20201110 15:54:40.123"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.124" starttime="20201110 15:54:40.107"></status>
</kw>
<msg timestamp="20201110 15:54:40.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:40.124" starttime="20201110 15:54:40.107"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.125" starttime="20201110 15:54:40.106"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.125" starttime="20201110 15:54:40.106"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.125" starttime="20201110 15:54:40.095"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:40.125" starttime="20201110 15:54:40.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:40.130" level="INFO">Running command 'ozone sh bucket list 36105-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:44.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:44.100" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:44.100" starttime="20201110 15:54:40.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:44.101" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:44.654Z",
  "modificationTime" : "2020-11-10T15:53:44.654Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:23.053Z",
  "modificationTime" : "2020-11-10T15:53:41.027Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:51.828Z",
  "modificationTime" : "2020-11-10T15:53:51.828Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:16.230Z",
  "modificationTime" : "2020-11-10T15:53:37.484Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:19.525Z",
  "modificationTime" : "2020-11-10T15:53:19.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 15:54:44.101" starttime="20201110 15:54:44.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:44.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:44.102" starttime="20201110 15:54:44.101"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.102" starttime="20201110 15:54:40.126"></status>
</kw>
<msg timestamp="20201110 15:54:44.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:44.103" starttime="20201110 15:54:40.126"></status>
</kw>
<msg timestamp="20201110 15:54:44.103" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:44.103" starttime="20201110 15:54:40.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:44.103" starttime="20201110 15:54:44.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:44.104" starttime="20201110 15:54:44.104"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:54:44.104" critical="yes" starttime="20201110 15:54:40.094"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:44.111" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:44.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:44.114" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:54:44.115" starttime="20201110 15:54:44.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:44.116" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:54:44.116" starttime="20201110 15:54:44.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:44.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:44.117" starttime="20201110 15:54:44.116"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.117" starttime="20201110 15:54:44.107"></status>
</kw>
<msg timestamp="20201110 15:54:44.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:44.117" starttime="20201110 15:54:44.107"></status>
</kw>
<msg timestamp="20201110 15:54:44.117" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:54:44.117" starttime="20201110 15:54:44.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:54:44.118" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:54:44.118" starttime="20201110 15:54:44.118"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:44.123" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:44.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:44.135" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:44.135" starttime="20201110 15:54:44.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:44.136" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:44.137" starttime="20201110 15:54:44.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:44.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:44.137" starttime="20201110 15:54:44.137"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.138" starttime="20201110 15:54:44.120"></status>
</kw>
<msg timestamp="20201110 15:54:44.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:44.138" starttime="20201110 15:54:44.119"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.138" starttime="20201110 15:54:44.119"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.138" starttime="20201110 15:54:44.118"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.138" starttime="20201110 15:54:44.106"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:44.138" starttime="20201110 15:54:44.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:44.143" level="INFO">Running command 'ozone sh bucket info 36105-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:47.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:47.960" level="INFO">${output} = 36105-source bucket1</msg>
<status status="PASS" endtime="20201110 15:54:47.960" starttime="20201110 15:54:44.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:47.961" level="INFO">36105-source bucket1</msg>
<status status="PASS" endtime="20201110 15:54:47.962" starttime="20201110 15:54:47.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:47.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:47.962" starttime="20201110 15:54:47.962"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.963" starttime="20201110 15:54:44.139"></status>
</kw>
<msg timestamp="20201110 15:54:47.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:47.963" starttime="20201110 15:54:44.139"></status>
</kw>
<msg timestamp="20201110 15:54:47.963" level="INFO">${result} = 36105-source bucket1</msg>
<status status="PASS" endtime="20201110 15:54:47.963" starttime="20201110 15:54:44.138"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:47.964" starttime="20201110 15:54:47.963"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:54:47.964" critical="yes" starttime="20201110 15:54:44.105"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:47.971" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:47.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:47.972" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:54:47.972" starttime="20201110 15:54:47.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:47.973" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:54:47.973" starttime="20201110 15:54:47.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:47.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:47.974" starttime="20201110 15:54:47.973"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.974" starttime="20201110 15:54:47.967"></status>
</kw>
<msg timestamp="20201110 15:54:47.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:47.974" starttime="20201110 15:54:47.967"></status>
</kw>
<msg timestamp="20201110 15:54:47.975" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:54:47.975" starttime="20201110 15:54:47.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:54:47.975" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:54:47.975" starttime="20201110 15:54:47.975"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:47.981" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:47.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:47.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:47.992" starttime="20201110 15:54:47.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:47.994" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:47.994" starttime="20201110 15:54:47.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:47.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.994"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.977"></status>
</kw>
<msg timestamp="20201110 15:54:47.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.976"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.976"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.976"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.966"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:47.995" starttime="20201110 15:54:47.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:48.000" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 36105-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:51.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:51.582" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:54:51.583" starttime="20201110 15:54:47.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:51.584" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:54:51.584" starttime="20201110 15:54:51.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:51.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:51.585" starttime="20201110 15:54:51.584"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:51.585" starttime="20201110 15:54:47.996"></status>
</kw>
<msg timestamp="20201110 15:54:51.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:51.585" starttime="20201110 15:54:47.996"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:51.585" starttime="20201110 15:54:47.996"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:51.591" level="INFO">Running command 'ozone sh bucket getacl 36105-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:55.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:55.227" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201110 15:54:55.227" starttime="20201110 15:54:51.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:55.228" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201110 15:54:55.228" starttime="20201110 15:54:55.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:55.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:55.229" starttime="20201110 15:54:55.228"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:55.229" starttime="20201110 15:54:51.588"></status>
</kw>
<msg timestamp="20201110 15:54:55.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:55.229" starttime="20201110 15:54:51.587"></status>
</kw>
<msg timestamp="20201110 15:54:55.230" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201110 15:54:55.230" starttime="20201110 15:54:51.586"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:55.230" starttime="20201110 15:54:55.230"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:55.231" starttime="20201110 15:54:51.586"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:55.237" level="INFO">Running command 'ozone sh bucket getacl 36105-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:54:58.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:54:58.984" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:54:58.984" starttime="20201110 15:54:55.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:54:58.985" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:54:58.985" starttime="20201110 15:54:58.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:54:58.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:54:58.986" starttime="20201110 15:54:58.985"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:58.986" starttime="20201110 15:54:55.232"></status>
</kw>
<msg timestamp="20201110 15:54:58.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:54:58.986" starttime="20201110 15:54:55.232"></status>
</kw>
<msg timestamp="20201110 15:54:58.987" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201110 15:54:58.987" starttime="20201110 15:54:55.231"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:54:58.987" starttime="20201110 15:54:58.987"></status>
</kw>
<status status="PASS" endtime="20201110 15:54:58.987" starttime="20201110 15:54:55.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:54:58.993" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 36105-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:02.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:02.808" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:02.808" starttime="20201110 15:54:58.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:02.810" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201110 15:55:02.810" starttime="20201110 15:55:02.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:02.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:02.810" starttime="20201110 15:55:02.810"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:02.811" starttime="20201110 15:54:58.989"></status>
</kw>
<msg timestamp="20201110 15:55:02.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:02.811" starttime="20201110 15:54:58.988"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:02.811" starttime="20201110 15:54:58.988"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:02.826" level="INFO">Running command 'ozone sh bucket getacl 36105-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:06.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:06.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:06.696" starttime="20201110 15:55:02.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:06.697" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:06.698" starttime="20201110 15:55:06.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:06.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:06.698" starttime="20201110 15:55:06.698"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:06.699" starttime="20201110 15:55:02.815"></status>
</kw>
<msg timestamp="20201110 15:55:06.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:06.699" starttime="20201110 15:55:02.814"></status>
</kw>
<msg timestamp="20201110 15:55:06.699" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201110 15:55:06.699" starttime="20201110 15:55:02.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:06.700" starttime="20201110 15:55:06.699"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:06.700" starttime="20201110 15:55:02.811"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:06.704" level="INFO">Running command 'ozone sh bucket getacl 36105-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:10.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:10.100" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201110 15:55:10.100" starttime="20201110 15:55:06.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:10.101" level="INFO">READ</msg>
<status status="PASS" endtime="20201110 15:55:10.101" starttime="20201110 15:55:10.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:10.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:10.102" starttime="20201110 15:55:10.101"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.102" starttime="20201110 15:55:06.701"></status>
</kw>
<msg timestamp="20201110 15:55:10.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:10.102" starttime="20201110 15:55:06.701"></status>
</kw>
<msg timestamp="20201110 15:55:10.103" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201110 15:55:10.103" starttime="20201110 15:55:06.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:10.103" starttime="20201110 15:55:10.103"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.103" starttime="20201110 15:55:06.700"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:55:10.104" critical="yes" starttime="20201110 15:54:47.964"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:10.112" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:10.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:10.113" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:10.113" starttime="20201110 15:55:10.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:10.114" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:10.114" starttime="20201110 15:55:10.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:10.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:10.115" starttime="20201110 15:55:10.114"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.115" starttime="20201110 15:55:10.107"></status>
</kw>
<msg timestamp="20201110 15:55:10.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:10.115" starttime="20201110 15:55:10.107"></status>
</kw>
<msg timestamp="20201110 15:55:10.116" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:10.116" starttime="20201110 15:55:10.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:10.116" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:10.116" starttime="20201110 15:55:10.116"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:10.121" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:10.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:10.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:10.137" starttime="20201110 15:55:10.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:10.138" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:10.138" starttime="20201110 15:55:10.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:10.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:10.139" starttime="20201110 15:55:10.139"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.139" starttime="20201110 15:55:10.118"></status>
</kw>
<msg timestamp="20201110 15:55:10.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:10.139" starttime="20201110 15:55:10.117"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.140" starttime="20201110 15:55:10.117"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.140" starttime="20201110 15:55:10.116"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.140" starttime="20201110 15:55:10.106"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:10.140" starttime="20201110 15:55:10.105"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:10.145" level="INFO">Running command 'ozone sh bucket link 36105-source/bucket2 36105-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:14.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:14.090" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:14.090" starttime="20201110 15:55:10.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:14.091" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:55:14.091" starttime="20201110 15:55:14.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:14.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:14.092" starttime="20201110 15:55:14.091"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:14.092" starttime="20201110 15:55:10.141"></status>
</kw>
<msg timestamp="20201110 15:55:14.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:14.093" starttime="20201110 15:55:10.141"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:14.093" starttime="20201110 15:55:10.140"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:14.096" level="INFO">Running command 'ozone sh bucket create 36105-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:18.264" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:55:18.264" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:18.265" starttime="20201110 15:55:14.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:18.266" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201110 15:55:18.266" starttime="20201110 15:55:18.265"></status>
</kw>
<msg timestamp="20201110 15:55:18.266" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:18.266" starttime="20201110 15:55:14.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:18.267" starttime="20201110 15:55:18.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:18.271" level="INFO">Running command 'ozone sh bucket create 36105-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:21.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:21.582" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:21.582" starttime="20201110 15:55:18.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:21.583" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:55:21.583" starttime="20201110 15:55:21.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:21.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:21.584" starttime="20201110 15:55:21.584"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:21.585" starttime="20201110 15:55:18.268"></status>
</kw>
<msg timestamp="20201110 15:55:21.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:21.585" starttime="20201110 15:55:18.268"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:21.585" starttime="20201110 15:55:18.267"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:21.588" level="INFO">Running command 'ozone sh bucket link 36105-source/bucket1 36105-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:25.464" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:55:25.464" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:25.464" starttime="20201110 15:55:21.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.466" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201110 15:55:25.466" starttime="20201110 15:55:25.465"></status>
</kw>
<msg timestamp="20201110 15:55:25.466" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:25.466" starttime="20201110 15:55:21.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:25.467" starttime="20201110 15:55:25.466"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:55:25.467" critical="yes" starttime="20201110 15:55:10.105"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:25.474" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:25.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:25.476" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:25.476" starttime="20201110 15:55:25.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.477" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:25.477" starttime="20201110 15:55:25.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:25.478" starttime="20201110 15:55:25.477"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.478" starttime="20201110 15:55:25.470"></status>
</kw>
<msg timestamp="20201110 15:55:25.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:25.478" starttime="20201110 15:55:25.470"></status>
</kw>
<msg timestamp="20201110 15:55:25.479" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:25.479" starttime="20201110 15:55:25.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:25.479" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:25.479" starttime="20201110 15:55:25.479"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:25.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:25.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:25.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:25.495" starttime="20201110 15:55:25.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.496" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:25.496" starttime="20201110 15:55:25.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:25.497" starttime="20201110 15:55:25.496"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.497" starttime="20201110 15:55:25.481"></status>
</kw>
<msg timestamp="20201110 15:55:25.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:25.497" starttime="20201110 15:55:25.481"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.497" starttime="20201110 15:55:25.480"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.497" starttime="20201110 15:55:25.480"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.497" starttime="20201110 15:55:25.469"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.498" starttime="20201110 15:55:25.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:25.503" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:25.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:25.506" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:25.506" starttime="20201110 15:55:25.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.507" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:25.507" starttime="20201110 15:55:25.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:25.508" starttime="20201110 15:55:25.507"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.508" starttime="20201110 15:55:25.500"></status>
</kw>
<msg timestamp="20201110 15:55:25.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:25.508" starttime="20201110 15:55:25.499"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.508" starttime="20201110 15:55:25.499"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:25.514" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:25.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:25.515" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:25.515" starttime="20201110 15:55:25.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.516" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:25.516" starttime="20201110 15:55:25.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:25.517" starttime="20201110 15:55:25.516"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.517" starttime="20201110 15:55:25.510"></status>
</kw>
<msg timestamp="20201110 15:55:25.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:25.517" starttime="20201110 15:55:25.510"></status>
</kw>
<msg timestamp="20201110 15:55:25.517" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:25.518" starttime="20201110 15:55:25.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:25.518" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:25.518" starttime="20201110 15:55:25.518"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:25.522" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:25.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:25.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:25.539" starttime="20201110 15:55:25.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.540" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:25.540" starttime="20201110 15:55:25.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:25.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:25.541" starttime="20201110 15:55:25.541"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.542" starttime="20201110 15:55:25.520"></status>
</kw>
<msg timestamp="20201110 15:55:25.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:25.542" starttime="20201110 15:55:25.519"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.542" starttime="20201110 15:55:25.519"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.542" starttime="20201110 15:55:25.518"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.542" starttime="20201110 15:55:25.509"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:25.542" starttime="20201110 15:55:25.509"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:25.546" level="INFO">Running command 'ozone sh key list 36105-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:29.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:29.620" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:29.620" starttime="20201110 15:55:25.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.622" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "36105-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-10T15:53:04.462Z",
  "modificationTime" : "2020-11-10T15:53:08.628Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201110 15:55:29.622" starttime="20201110 15:55:29.621"></status>
</kw>
<msg timestamp="20201110 15:55:29.622" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:29.622" starttime="20201110 15:55:25.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:29.623" starttime="20201110 15:55:29.622"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.623" starttime="20201110 15:55:25.498"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.623" starttime="20201110 15:55:25.498"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:55:29.623" critical="yes" starttime="20201110 15:55:25.467"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:29.630" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:29.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:29.633" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:29.633" starttime="20201110 15:55:29.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.634" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:29.634" starttime="20201110 15:55:29.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:29.635" starttime="20201110 15:55:29.634"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.635" starttime="20201110 15:55:29.627"></status>
</kw>
<msg timestamp="20201110 15:55:29.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:29.635" starttime="20201110 15:55:29.627"></status>
</kw>
<msg timestamp="20201110 15:55:29.635" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:29.635" starttime="20201110 15:55:29.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:29.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:29.636" starttime="20201110 15:55:29.636"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:29.641" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:29.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:29.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:29.658" starttime="20201110 15:55:29.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.659" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:29.660" starttime="20201110 15:55:29.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:29.660" starttime="20201110 15:55:29.660"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.660" starttime="20201110 15:55:29.637"></status>
</kw>
<msg timestamp="20201110 15:55:29.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:29.661" starttime="20201110 15:55:29.637"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.661" starttime="20201110 15:55:29.637"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.661" starttime="20201110 15:55:29.636"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.661" starttime="20201110 15:55:29.626"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.661" starttime="20201110 15:55:29.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:29.667" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:29.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:29.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:29.669" starttime="20201110 15:55:29.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.670" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:29.671" starttime="20201110 15:55:29.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:29.671" starttime="20201110 15:55:29.671"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.671" starttime="20201110 15:55:29.663"></status>
</kw>
<msg timestamp="20201110 15:55:29.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:29.672" starttime="20201110 15:55:29.663"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.672" starttime="20201110 15:55:29.662"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:29.680" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:29.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:29.682" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:29.682" starttime="20201110 15:55:29.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.683" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:29.683" starttime="20201110 15:55:29.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:29.684" starttime="20201110 15:55:29.684"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.684" starttime="20201110 15:55:29.674"></status>
</kw>
<msg timestamp="20201110 15:55:29.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:29.685" starttime="20201110 15:55:29.673"></status>
</kw>
<msg timestamp="20201110 15:55:29.685" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:29.685" starttime="20201110 15:55:29.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:29.686" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:29.686" starttime="20201110 15:55:29.685"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:29.689" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:29.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:29.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:29.763" starttime="20201110 15:55:29.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.764" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:29.764" starttime="20201110 15:55:29.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:29.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:29.765" starttime="20201110 15:55:29.765"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.766" starttime="20201110 15:55:29.687"></status>
</kw>
<msg timestamp="20201110 15:55:29.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:29.766" starttime="20201110 15:55:29.687"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.766" starttime="20201110 15:55:29.686"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.766" starttime="20201110 15:55:29.686"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.766" starttime="20201110 15:55:29.672"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:29.766" starttime="20201110 15:55:29.672"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:29.770" level="INFO">Running command 'ozone sh key list 36105-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:33.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:55:33.408" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:33.408" starttime="20201110 15:55:29.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.409" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201110 15:55:33.409" starttime="20201110 15:55:33.409"></status>
</kw>
<msg timestamp="20201110 15:55:33.410" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:33.410" starttime="20201110 15:55:29.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:33.411" starttime="20201110 15:55:33.410"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.411" starttime="20201110 15:55:29.662"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.411" starttime="20201110 15:55:29.661"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:55:33.411" critical="yes" starttime="20201110 15:55:29.624"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:33.418" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:33.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:33.421" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:33.421" starttime="20201110 15:55:33.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.422" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:33.422" starttime="20201110 15:55:33.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:33.423" starttime="20201110 15:55:33.422"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.423" starttime="20201110 15:55:33.415"></status>
</kw>
<msg timestamp="20201110 15:55:33.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:33.423" starttime="20201110 15:55:33.415"></status>
</kw>
<msg timestamp="20201110 15:55:33.424" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:33.424" starttime="20201110 15:55:33.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:33.424" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:33.424" starttime="20201110 15:55:33.424"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:33.429" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:33.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:33.445" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:33.445" starttime="20201110 15:55:33.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.446" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:33.447" starttime="20201110 15:55:33.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:33.447" starttime="20201110 15:55:33.447"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.447" starttime="20201110 15:55:33.426"></status>
</kw>
<msg timestamp="20201110 15:55:33.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:33.448" starttime="20201110 15:55:33.426"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.448" starttime="20201110 15:55:33.425"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.448" starttime="20201110 15:55:33.424"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.448" starttime="20201110 15:55:33.414"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.448" starttime="20201110 15:55:33.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:33.453" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:33.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:33.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:33.456" starttime="20201110 15:55:33.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.457" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:33.457" starttime="20201110 15:55:33.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:33.458" starttime="20201110 15:55:33.457"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.458" starttime="20201110 15:55:33.450"></status>
</kw>
<msg timestamp="20201110 15:55:33.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:33.458" starttime="20201110 15:55:33.449"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.458" starttime="20201110 15:55:33.449"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:33.462" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:33.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:33.465" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:33.465" starttime="20201110 15:55:33.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.466" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:33.466" starttime="20201110 15:55:33.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:33.467" starttime="20201110 15:55:33.466"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.467" starttime="20201110 15:55:33.460"></status>
</kw>
<msg timestamp="20201110 15:55:33.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:33.467" starttime="20201110 15:55:33.460"></status>
</kw>
<msg timestamp="20201110 15:55:33.467" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:33.467" starttime="20201110 15:55:33.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:33.468" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:33.468" starttime="20201110 15:55:33.467"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:33.473" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:33.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:33.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:33.483" starttime="20201110 15:55:33.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.483" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:33.484" starttime="20201110 15:55:33.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:33.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:33.484" starttime="20201110 15:55:33.484"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.485" starttime="20201110 15:55:33.469"></status>
</kw>
<msg timestamp="20201110 15:55:33.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:33.485" starttime="20201110 15:55:33.469"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.485" starttime="20201110 15:55:33.468"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.485" starttime="20201110 15:55:33.468"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.485" starttime="20201110 15:55:33.459"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:33.485" starttime="20201110 15:55:33.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:33.490" level="INFO">Running command 'ozone sh bucket info 36105-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:37.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:37.435" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:37.435" starttime="20201110 15:55:33.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:37.436" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:23.053Z",
  "modificationTime" : "2020-11-10T15:53:41.027Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 15:55:37.436" starttime="20201110 15:55:37.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:37.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:37.437" starttime="20201110 15:55:37.436"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:37.437" starttime="20201110 15:55:33.486"></status>
</kw>
<msg timestamp="20201110 15:55:37.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:37.438" starttime="20201110 15:55:33.486"></status>
</kw>
<msg timestamp="20201110 15:55:37.438" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:37.438" starttime="20201110 15:55:33.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:37.438" starttime="20201110 15:55:37.438"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:37.439" starttime="20201110 15:55:37.438"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:37.442" level="INFO">Running command 'ozone sh key list 36105-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:41.124" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:55:41.124" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:41.125" starttime="20201110 15:55:37.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:41.126" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201110 15:55:41.126" starttime="20201110 15:55:41.125"></status>
</kw>
<msg timestamp="20201110 15:55:41.126" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:41.126" starttime="20201110 15:55:37.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:41.127" starttime="20201110 15:55:41.126"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.127" starttime="20201110 15:55:33.449"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.127" starttime="20201110 15:55:33.448"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:55:41.127" critical="yes" starttime="20201110 15:55:33.412"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:41.133" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:41.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:41.136" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:41.137" starttime="20201110 15:55:41.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:41.137" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:41.138" starttime="20201110 15:55:41.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:41.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:41.138" starttime="20201110 15:55:41.138"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.138" starttime="20201110 15:55:41.131"></status>
</kw>
<msg timestamp="20201110 15:55:41.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:41.139" starttime="20201110 15:55:41.130"></status>
</kw>
<msg timestamp="20201110 15:55:41.139" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:41.139" starttime="20201110 15:55:41.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:41.140" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:41.140" starttime="20201110 15:55:41.139"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:41.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:41.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:41.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:41.173" starttime="20201110 15:55:41.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:41.174" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:41.174" starttime="20201110 15:55:41.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:41.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:41.175" starttime="20201110 15:55:41.174"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.175" starttime="20201110 15:55:41.141"></status>
</kw>
<msg timestamp="20201110 15:55:41.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:41.175" starttime="20201110 15:55:41.141"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.175" starttime="20201110 15:55:41.140"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.175" starttime="20201110 15:55:41.140"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.175" starttime="20201110 15:55:41.129"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:41.176" starttime="20201110 15:55:41.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:41.180" level="INFO">Running command 'ozone sh bucket link 36105-target/loop1 36105-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:44.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:44.574" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:44.574" starttime="20201110 15:55:41.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:44.575" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:55:44.575" starttime="20201110 15:55:44.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:44.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:44.576" starttime="20201110 15:55:44.575"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:44.576" starttime="20201110 15:55:41.177"></status>
</kw>
<msg timestamp="20201110 15:55:44.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:44.576" starttime="20201110 15:55:41.176"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:44.577" starttime="20201110 15:55:41.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:44.580" level="INFO">Running command 'ozone sh bucket link 36105-target/loop2 36105-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:48.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:48.192" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:48.192" starttime="20201110 15:55:44.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:48.193" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:55:48.193" starttime="20201110 15:55:48.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:48.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:48.194" starttime="20201110 15:55:48.193"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:48.194" starttime="20201110 15:55:44.578"></status>
</kw>
<msg timestamp="20201110 15:55:48.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:48.194" starttime="20201110 15:55:44.577"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:48.195" starttime="20201110 15:55:44.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:48.198" level="INFO">Running command 'ozone sh bucket link 36105-target/loop3 36105-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:51.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:51.786" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:51.786" starttime="20201110 15:55:48.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:51.787" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:55:51.787" starttime="20201110 15:55:51.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:51.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:51.788" starttime="20201110 15:55:51.788"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:51.788" starttime="20201110 15:55:48.196"></status>
</kw>
<msg timestamp="20201110 15:55:51.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:51.789" starttime="20201110 15:55:48.195"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:51.789" starttime="20201110 15:55:48.195"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:51.792" level="INFO">Running command 'ozone sh key list 36105-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:55.582" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:55:55.582" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:55.582" starttime="20201110 15:55:51.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:55.583" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201110 15:55:55.583" starttime="20201110 15:55:55.583"></status>
</kw>
<msg timestamp="20201110 15:55:55.584" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:55.584" starttime="20201110 15:55:51.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201110 15:55:55.584" starttime="20201110 15:55:55.584"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:55:55.585" critical="yes" starttime="20201110 15:55:41.128"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:55.591" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:55.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:55.595" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:55:55.595" starttime="20201110 15:55:55.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:55.596" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:55:55.596" starttime="20201110 15:55:55.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:55.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:55.597" starttime="20201110 15:55:55.596"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:55.597" starttime="20201110 15:55:55.588"></status>
</kw>
<msg timestamp="20201110 15:55:55.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:55.597" starttime="20201110 15:55:55.588"></status>
</kw>
<msg timestamp="20201110 15:55:55.598" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:55:55.598" starttime="20201110 15:55:55.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:55:55.598" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:55:55.598" starttime="20201110 15:55:55.598"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:55.604" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:55.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:55.623" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:55:55.623" starttime="20201110 15:55:55.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:55.624" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:55:55.624" starttime="20201110 15:55:55.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:55.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:55.624" starttime="20201110 15:55:55.624"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:55.625" starttime="20201110 15:55:55.600"></status>
</kw>
<msg timestamp="20201110 15:55:55.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:55.625" starttime="20201110 15:55:55.600"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:55.625" starttime="20201110 15:55:55.599"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:55.625" starttime="20201110 15:55:55.599"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:55.625" starttime="20201110 15:55:55.587"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:55.625" starttime="20201110 15:55:55.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:55.630" level="INFO">Running command 'ozone sh bucket link 36105-source/bucket1 36105-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:55:59.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:55:59.495" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:55:59.495" starttime="20201110 15:55:55.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:55:59.497" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:55:59.497" starttime="20201110 15:55:59.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:55:59.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:55:59.497" starttime="20201110 15:55:59.497"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:59.498" starttime="20201110 15:55:55.626"></status>
</kw>
<msg timestamp="20201110 15:55:59.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:55:59.498" starttime="20201110 15:55:55.626"></status>
</kw>
<status status="PASS" endtime="20201110 15:55:59.498" starttime="20201110 15:55:55.626"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:55:59.502" level="INFO">Running command 'ozone sh key put 36105-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:08.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:08.065" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:56:08.065" starttime="20201110 15:55:59.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:08.066" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:56:08.066" starttime="20201110 15:56:08.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:08.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:08.067" starttime="20201110 15:56:08.066"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:08.067" starttime="20201110 15:55:59.499"></status>
</kw>
<msg timestamp="20201110 15:56:08.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:08.067" starttime="20201110 15:55:59.499"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:08.067" starttime="20201110 15:55:59.498"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201110 15:56:08.070" level="INFO">${postfix} = 54263</msg>
<status status="PASS" endtime="20201110 15:56:08.070" starttime="20201110 15:56:08.069"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201110 15:56:08.070" level="INFO">${tmpfile} = /tmp/tempkey-54263</msg>
<status status="PASS" endtime="20201110 15:56:08.070" starttime="20201110 15:56:08.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:08.074" level="INFO">Running command 'ozone sh key get -f 36105-target/link1/key3 /tmp/tempkey-54263 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:13.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:13.322" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:56:13.322" starttime="20201110 15:56:08.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.323" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:56:13.323" starttime="20201110 15:56:13.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:13.324" starttime="20201110 15:56:13.323"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.324" starttime="20201110 15:56:08.071"></status>
</kw>
<msg timestamp="20201110 15:56:13.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:13.324" starttime="20201110 15:56:08.071"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.324" starttime="20201110 15:56:08.070"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201110 15:56:13.327" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-54263 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:13.330" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201110 15:56:13.330" starttime="20201110 15:56:13.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:13.334" level="INFO">Running command 'rm -f /tmp/tempkey-54263 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:13.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:13.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:56:13.337" starttime="20201110 15:56:13.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.338" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:56:13.338" starttime="20201110 15:56:13.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:13.339" starttime="20201110 15:56:13.338"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.339" starttime="20201110 15:56:13.331"></status>
</kw>
<msg timestamp="20201110 15:56:13.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:13.339" starttime="20201110 15:56:13.331"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.339" starttime="20201110 15:56:13.330"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:56:13.340" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201110 15:56:13.340" starttime="20201110 15:56:13.339"></status>
</kw>
<msg timestamp="20201110 15:56:13.340" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201110 15:56:13.340" starttime="20201110 15:56:08.068"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:56:13.341" starttime="20201110 15:56:13.340"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.341" starttime="20201110 15:56:08.068"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:56:13.341" critical="yes" starttime="20201110 15:55:55.585"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:13.347" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:13.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:13.349" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201110 15:56:13.349" starttime="20201110 15:56:13.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.350" level="INFO">scm</msg>
<status status="PASS" endtime="20201110 15:56:13.351" starttime="20201110 15:56:13.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:13.352" starttime="20201110 15:56:13.351"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.352" starttime="20201110 15:56:13.344"></status>
</kw>
<msg timestamp="20201110 15:56:13.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:13.352" starttime="20201110 15:56:13.344"></status>
</kw>
<msg timestamp="20201110 15:56:13.352" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201110 15:56:13.352" starttime="20201110 15:56:13.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201110 15:56:13.353" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201110 15:56:13.353" starttime="20201110 15:56:13.353"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:13.358" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:13.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:13.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:56:13.382" starttime="20201110 15:56:13.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.383" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:56:13.383" starttime="20201110 15:56:13.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:13.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:13.384" starttime="20201110 15:56:13.383"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.384" starttime="20201110 15:56:13.354"></status>
</kw>
<msg timestamp="20201110 15:56:13.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:13.384" starttime="20201110 15:56:13.354"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.384" starttime="20201110 15:56:13.354"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.384" starttime="20201110 15:56:13.353"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.384" starttime="20201110 15:56:13.343"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:13.385" starttime="20201110 15:56:13.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:13.390" level="INFO">Running command 'ozone sh bucket delete 36105-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:16.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:16.950" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:56:16.950" starttime="20201110 15:56:13.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:16.951" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201110 15:56:16.951" starttime="20201110 15:56:16.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:16.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:16.952" starttime="20201110 15:56:16.951"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:16.952" starttime="20201110 15:56:13.386"></status>
</kw>
<msg timestamp="20201110 15:56:16.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:16.952" starttime="20201110 15:56:13.385"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:16.953" starttime="20201110 15:56:13.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:16.959" level="INFO">Running command 'ozone sh bucket list 36105-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:20.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:20.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:56:20.678" starttime="20201110 15:56:16.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:20.679" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:55:21.423Z",
  "modificationTime" : "2020-11-10T15:55:21.423Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:44.654Z",
  "modificationTime" : "2020-11-10T15:53:44.654Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:23.053Z",
  "modificationTime" : "2020-11-10T15:53:41.027Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:55:13.709Z",
  "modificationTime" : "2020-11-10T15:55:13.709Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:55:59.381Z",
  "modificationTime" : "2020-11-10T15:55:59.381Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:55:51.615Z",
  "modificationTime" : "2020-11-10T15:55:51.615Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:55:44.402Z",
  "modificationTime" : "2020-11-10T15:55:44.402Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:55:48.107Z",
  "modificationTime" : "2020-11-10T15:55:48.107Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:16.230Z",
  "modificationTime" : "2020-11-10T15:53:37.484Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "36105-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:53:19.525Z",
  "modificationTime" : "2020-11-10T15:53:19.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36105-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 15:56:20.679" starttime="20201110 15:56:20.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:20.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:20.680" starttime="20201110 15:56:20.679"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:20.680" starttime="20201110 15:56:16.954"></status>
</kw>
<msg timestamp="20201110 15:56:20.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:20.680" starttime="20201110 15:56:16.953"></status>
</kw>
<msg timestamp="20201110 15:56:20.681" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201110 15:56:20.681" starttime="20201110 15:56:16.953"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:56:20.681" starttime="20201110 15:56:20.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:56:20.687" level="INFO">Running command 'ozone sh key list 36105-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:56:24.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:56:24.770" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201110 15:56:24.771" starttime="20201110 15:56:20.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:56:24.772" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201110 15:56:24.772" starttime="20201110 15:56:24.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:56:24.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:56:24.773" starttime="20201110 15:56:24.772"></status>
</kw>
<status status="PASS" endtime="20201110 15:56:24.773" starttime="20201110 15:56:20.682"></status>
</kw>
<msg timestamp="20201110 15:56:24.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:56:24.773" starttime="20201110 15:56:20.682"></status>
</kw>
<msg timestamp="20201110 15:56:24.773" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201110 15:56:24.773" starttime="20201110 15:56:20.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201110 15:56:24.774" starttime="20201110 15:56:24.773"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:56:24.774" critical="yes" starttime="20201110 15:56:13.342"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201110 15:56:24.777" starttime="20201110 15:52:48.316"></status>
</suite>
<status status="PASS" elapsedtime="247301" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
