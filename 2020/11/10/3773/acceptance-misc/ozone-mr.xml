<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201110 15:13:15.067" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:42.033" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 14:59:44.556" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 14:59:44.557" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 14:59:44.557" starttime="20201110 14:59:42.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 14:59:44.558" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 14:59:44.558" starttime="20201110 14:59:44.557"></status>
</kw>
<msg timestamp="20201110 14:59:44.558" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 14:59:44.558" starttime="20201110 14:59:42.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:44.565" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 14:59:46.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 14:59:46.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 14:59:46.902" starttime="20201110 14:59:44.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 14:59:46.904" level="INFO"></msg>
<status status="PASS" endtime="20201110 14:59:46.904" starttime="20201110 14:59:46.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 14:59:46.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 14:59:46.904" starttime="20201110 14:59:46.904"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:46.905" starttime="20201110 14:59:44.561"></status>
</kw>
<msg timestamp="20201110 14:59:46.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 14:59:46.905" starttime="20201110 14:59:44.560"></status>
</kw>
<msg timestamp="20201110 14:59:46.905" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201110 14:59:46.905" starttime="20201110 14:59:44.560"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201110 14:59:46.906" starttime="20201110 14:59:46.905"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:46.906" starttime="20201110 14:59:44.559"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:46.906" starttime="20201110 14:59:44.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:46.912" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 14:59:48.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 14:59:48.935" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 14:59:48.935" starttime="20201110 14:59:46.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 14:59:48.936" level="INFO"></msg>
<status status="PASS" endtime="20201110 14:59:48.936" starttime="20201110 14:59:48.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 14:59:48.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 14:59:48.937" starttime="20201110 14:59:48.936"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:48.937" starttime="20201110 14:59:46.908"></status>
</kw>
<msg timestamp="20201110 14:59:48.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 14:59:48.937" starttime="20201110 14:59:46.907"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:48.938" starttime="20201110 14:59:46.907"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:48.938" starttime="20201110 14:59:46.906"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:48.938" starttime="20201110 14:59:46.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201110 14:59:48.938" starttime="20201110 14:59:48.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:48.943" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 14:59:51.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 14:59:51.034" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T14:59:48.901Z",
  "modificat...</msg>
<status status="PASS" endtime="20201110 14:59:51.034" starttime="20201110 14:59:48.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 14:59:51.035" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T14:59:48.901Z",
  "modificationTime" : "2020-11-10T14:59:48.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 14:59:51.035" starttime="20201110 14:59:51.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 14:59:51.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 14:59:51.036" starttime="20201110 14:59:51.036"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:51.036" starttime="20201110 14:59:48.939"></status>
</kw>
<msg timestamp="20201110 14:59:51.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 14:59:51.037" starttime="20201110 14:59:48.939"></status>
</kw>
<msg timestamp="20201110 14:59:51.037" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T14:59:48.901Z",
  "modificat...</msg>
<status status="PASS" endtime="20201110 14:59:51.037" starttime="20201110 14:59:48.938"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201110 14:59:51.038" starttime="20201110 14:59:51.037"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 14:59:51.042" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 14:59:51.042" starttime="20201110 14:59:51.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 14:59:51.042" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 14:59:51.042" starttime="20201110 14:59:51.042"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:51.042" starttime="20201110 14:59:51.041"></status>
</kw>
<msg timestamp="20201110 14:59:51.043" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 14:59:51.043" starttime="20201110 14:59:51.040"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:51.043" starttime="20201110 14:59:51.039"></status>
</kw>
<msg timestamp="20201110 14:59:51.043" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 14:59:51.043" starttime="20201110 14:59:51.039"></status>
</kw>
<msg timestamp="20201110 14:59:51.043" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 14:59:51.043" starttime="20201110 14:59:51.038"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:51.047" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 14:59:53.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 14:59:53.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 14:59:53.256" starttime="20201110 14:59:51.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 14:59:53.257" level="INFO"></msg>
<status status="PASS" endtime="20201110 14:59:53.257" starttime="20201110 14:59:53.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 14:59:53.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 14:59:53.258" starttime="20201110 14:59:53.258"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:53.258" starttime="20201110 14:59:51.044"></status>
</kw>
<msg timestamp="20201110 14:59:53.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 14:59:53.259" starttime="20201110 14:59:51.044"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:53.259" starttime="20201110 14:59:51.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:53.263" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 14:59:58.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 14:59:58.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 14:59:58.964" starttime="20201110 14:59:53.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 14:59:58.966" level="INFO"></msg>
<status status="PASS" endtime="20201110 14:59:58.966" starttime="20201110 14:59:58.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 14:59:58.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 14:59:58.967" starttime="20201110 14:59:58.966"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:58.967" starttime="20201110 14:59:53.260"></status>
</kw>
<msg timestamp="20201110 14:59:58.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 14:59:58.967" starttime="20201110 14:59:53.260"></status>
</kw>
<status status="PASS" endtime="20201110 14:59:58.968" starttime="20201110 14:59:53.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 14:59:58.972" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:03.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:03.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:00:03.355" starttime="20201110 14:59:58.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:03.357" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:00:03.357" starttime="20201110 15:00:03.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:03.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:03.357" starttime="20201110 15:00:03.357"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:03.358" starttime="20201110 14:59:58.969"></status>
</kw>
<msg timestamp="20201110 15:00:03.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:03.358" starttime="20201110 14:59:58.969"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:03.358" starttime="20201110 14:59:58.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:03.363" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:07.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:07.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:00:07.558" starttime="20201110 15:00:03.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:07.559" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:00:07.559" starttime="20201110 15:00:07.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:07.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:07.560" starttime="20201110 15:00:07.559"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:07.560" starttime="20201110 15:00:03.359"></status>
</kw>
<msg timestamp="20201110 15:00:07.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:07.560" starttime="20201110 15:00:03.359"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:07.561" starttime="20201110 15:00:03.358"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:00:07.561" critical="yes" starttime="20201110 14:59:42.026"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:00:07.567" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:00:07.567" starttime="20201110 15:00:07.566"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:00:07.568" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:00:07.568" starttime="20201110 15:00:07.567"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:07.568" starttime="20201110 15:00:07.566"></status>
</kw>
<msg timestamp="20201110 15:00:07.568" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:00:07.568" starttime="20201110 15:00:07.565"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:07.569" starttime="20201110 15:00:07.564"></status>
</kw>
<msg timestamp="20201110 15:00:07.569" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:00:07.569" starttime="20201110 15:00:07.564"></status>
</kw>
<msg timestamp="20201110 15:00:07.569" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:00:07.569" starttime="20201110 15:00:07.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:07.573" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:09.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:09.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:00:09.753" starttime="20201110 15:00:07.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:09.754" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:00:09.754" starttime="20201110 15:00:09.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:09.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:09.755" starttime="20201110 15:00:09.755"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:09.756" starttime="20201110 15:00:07.570"></status>
</kw>
<msg timestamp="20201110 15:00:09.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:09.756" starttime="20201110 15:00:07.570"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:09.756" starttime="20201110 15:00:07.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:09.761" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:11.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:11.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:00:11.999" starttime="20201110 15:00:09.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:12.000" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:00:12.000" starttime="20201110 15:00:11.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:12.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:12.001" starttime="20201110 15:00:12.000"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:12.001" starttime="20201110 15:00:09.757"></status>
</kw>
<msg timestamp="20201110 15:00:12.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:12.001" starttime="20201110 15:00:09.757"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:12.002" starttime="20201110 15:00:09.756"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:00:12.002" critical="yes" starttime="20201110 15:00:07.562"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201110 15:00:12.003" starttime="20201110 14:59:41.970"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:01:45.855" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:01:45.855" starttime="20201110 15:01:45.855"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:01:45.856" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:01:45.856" starttime="20201110 15:01:45.855"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:45.856" starttime="20201110 15:01:45.854"></status>
</kw>
<msg timestamp="20201110 15:01:45.856" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:01:45.856" starttime="20201110 15:01:45.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:01:45.858" starttime="20201110 15:01:45.857"></status>
</kw>
<msg timestamp="20201110 15:01:45.859" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:01:45.859" starttime="20201110 15:01:45.856"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:45.859" starttime="20201110 15:01:45.853"></status>
</kw>
<msg timestamp="20201110 15:01:45.859" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:01:45.860" starttime="20201110 15:01:45.851"></status>
</kw>
<msg timestamp="20201110 15:01:45.860" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:01:45.860" starttime="20201110 15:01:45.846"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:01:45.862" level="INFO">${random} = 23110</msg>
<status status="PASS" endtime="20201110 15:01:45.862" starttime="20201110 15:01:45.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:01:45.873" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-23110 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:01:49.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:01:49.412" level="INFO">${output} = 2020-11-10 15:01:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 ...</msg>
<status status="PASS" endtime="20201110 15:01:49.412" starttime="20201110 15:01:45.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:01:49.413" level="INFO">2020-11-10 15:01:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 15:01:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-10 15:01:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:01:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-54F1E3074BE4-&gt;ec105698-f8cd-4447-b8c9-010a1ec338d0
2020-11-10 15:01:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201110 15:01:49.414" starttime="20201110 15:01:49.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:01:49.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:01:49.414" starttime="20201110 15:01:49.414"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:49.415" starttime="20201110 15:01:45.866"></status>
</kw>
<msg timestamp="20201110 15:01:49.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:01:49.415" starttime="20201110 15:01:45.865"></status>
</kw>
<msg timestamp="20201110 15:01:49.415" level="INFO">${result} = 2020-11-10 15:01:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 ...</msg>
<status status="PASS" endtime="20201110 15:01:49.415" starttime="20201110 15:01:45.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:01:49.420" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:01:51.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:01:51.232" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 14:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:00 ofs://om/volume1/bucket1/ozone-14649
-rw-...</msg>
<status status="PASS" endtime="20201110 15:01:51.232" starttime="20201110 15:01:49.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:01:51.233" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 14:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:00 ofs://om/volume1/bucket1/ozone-14649
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:01 ofs://om/volume1/bucket1/ozone-23110
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:01 ofs://om/volume1/bucket1/wordcount-59.txt</msg>
<status status="PASS" endtime="20201110 15:01:51.233" starttime="20201110 15:01:51.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:01:51.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:01:51.234" starttime="20201110 15:01:51.233"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:51.234" starttime="20201110 15:01:49.418"></status>
</kw>
<msg timestamp="20201110 15:01:51.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:01:51.234" starttime="20201110 15:01:49.417"></status>
</kw>
<msg timestamp="20201110 15:01:51.235" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 14:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:00 ofs://om/volume1/bucket1/ozone-14649
-rw-...</msg>
<status status="PASS" endtime="20201110 15:01:51.235" starttime="20201110 15:01:49.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:01:51.235" starttime="20201110 15:01:51.235"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:01:51.235" critical="yes" starttime="20201110 15:01:45.842"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:01:51.236" starttime="20201110 15:01:45.784"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:00:17.053" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:00:17.053" starttime="20201110 15:00:17.053"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:00:17.054" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:00:17.054" starttime="20201110 15:00:17.053"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:17.054" starttime="20201110 15:00:17.052"></status>
</kw>
<msg timestamp="20201110 15:00:17.054" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:00:17.054" starttime="20201110 15:00:17.052"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:17.055" starttime="20201110 15:00:17.051"></status>
</kw>
<msg timestamp="20201110 15:00:17.055" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:00:17.055" starttime="20201110 15:00:17.051"></status>
</kw>
<msg timestamp="20201110 15:00:17.055" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:00:17.055" starttime="20201110 15:00:17.050"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:00:17.055" level="INFO">${random} = 14649</msg>
<status status="PASS" endtime="20201110 15:00:17.055" starttime="20201110 15:00:17.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:17.062" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-14649 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:20.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:20.600" level="INFO">${output} = 2020-11-10 15:00:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:00:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 ...</msg>
<status status="PASS" endtime="20201110 15:00:20.600" starttime="20201110 15:00:17.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:20.602" level="INFO">2020-11-10 15:00:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:00:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 15:00:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-10 15:00:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:00:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1E94DDA05CA4-&gt;ec105698-f8cd-4447-b8c9-010a1ec338d0
2020-11-10 15:00:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201110 15:00:20.602" starttime="20201110 15:00:20.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:20.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:20.602" starttime="20201110 15:00:20.602"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:20.603" starttime="20201110 15:00:17.056"></status>
</kw>
<msg timestamp="20201110 15:00:20.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:20.603" starttime="20201110 15:00:17.056"></status>
</kw>
<msg timestamp="20201110 15:00:20.603" level="INFO">${result} = 2020-11-10 15:00:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:00:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 ...</msg>
<status status="PASS" endtime="20201110 15:00:20.603" starttime="20201110 15:00:17.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:20.608" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:22.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:22.621" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 14:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:00 o3fs://bucket1.volume1.om/ozone-14649
dr...</msg>
<status status="PASS" endtime="20201110 15:00:22.621" starttime="20201110 15:00:20.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:22.622" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 14:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:00 o3fs://bucket1.volume1.om/ozone-14649
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:00:22.622" starttime="20201110 15:00:22.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:22.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:22.623" starttime="20201110 15:00:22.622"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:22.623" starttime="20201110 15:00:20.605"></status>
</kw>
<msg timestamp="20201110 15:00:22.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:22.623" starttime="20201110 15:00:20.604"></status>
</kw>
<msg timestamp="20201110 15:00:22.624" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 14:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-10 15:00 o3fs://bucket1.volume1.om/ozone-14649
dr...</msg>
<status status="PASS" endtime="20201110 15:00:22.624" starttime="20201110 15:00:20.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:00:22.624" starttime="20201110 15:00:22.624"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:00:22.624" critical="yes" starttime="20201110 15:00:17.049"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:00:22.626" starttime="20201110 15:00:16.994"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:01:56.137" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:01:56.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:01:56.142" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:56.142" starttime="20201110 15:01:56.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:01:56.143" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:56.143" starttime="20201110 15:01:56.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:01:56.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:01:56.144" starttime="20201110 15:01:56.143"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:56.144" starttime="20201110 15:01:56.132"></status>
</kw>
<msg timestamp="20201110 15:01:56.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:01:56.144" starttime="20201110 15:01:56.132"></status>
</kw>
<msg timestamp="20201110 15:01:56.145" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:56.145" starttime="20201110 15:01:56.131"></status>
</kw>
<msg timestamp="20201110 15:01:56.145" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:56.145" starttime="20201110 15:01:56.131"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:01:56.150" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:01:56.150" starttime="20201110 15:01:56.149"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:01:56.150" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:01:56.150" starttime="20201110 15:01:56.150"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:56.151" starttime="20201110 15:01:56.148"></status>
</kw>
<msg timestamp="20201110 15:01:56.151" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:01:56.151" starttime="20201110 15:01:56.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:01:56.152" starttime="20201110 15:01:56.151"></status>
</kw>
<msg timestamp="20201110 15:01:56.152" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:01:56.152" starttime="20201110 15:01:56.151"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:56.152" starttime="20201110 15:01:56.147"></status>
</kw>
<msg timestamp="20201110 15:01:56.152" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:01:56.152" starttime="20201110 15:01:56.146"></status>
</kw>
<msg timestamp="20201110 15:01:56.153" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:01:56.153" starttime="20201110 15:01:56.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:01:56.158" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:02:33.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:02:33.115" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:01:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201110 15:02:33.115" starttime="20201110 15:01:56.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:02:33.116" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:01:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 15:01:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-10 15:01:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:01:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC2D8BBF2F92-&gt;ec105698-f8cd-4447-b8c9-010a1ec338d0
2020-11-10 15:01:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:01:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:01:59 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:01:59 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-10 15:02:02 INFO  JobSubmitter:198 - number of splits:3
2020-11-10 15:02:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605020349163_0003
2020-11-10 15:02:03 INFO  YarnClientImpl:273 - Submitted application application_1605020349163_0003
2020-11-10 15:02:03 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605020349163_0003/
2020-11-10 15:02:03 INFO  Job:1339 - Running job: job_1605020349163_0003
2020-11-10 15:02:10 INFO  Job:1360 - Job job_1605020349163_0003 running in uber mode : false
2020-11-10 15:02:10 INFO  Job:1367 -  map 0% reduce 0%
2020-11-10 15:02:17 INFO  Job:1367 -  map 33% reduce 0%
2020-11-10 15:02:21 INFO  Job:1367 -  map 67% reduce 0%
2020-11-10 15:02:26 INFO  Job:1367 -  map 100% reduce 0%
2020-11-10 15:02:31 INFO  Job:1367 -  map 100% reduce 100%
2020-11-10 15:02:32 INFO  Job:1378 - Job job_1605020349163_0003 completed successfully
2020-11-10 15:02:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40432
		Total time spent by all reduces in occupied slots (ms)=14988
		Total time spent by all map tasks (ms)=10108
		Total time spent by all reduce tasks (ms)=3747
		Total vcore-milliseconds taken by all map tasks=10108
		Total vcore-milliseconds taken by all reduce tasks=3747
		Total megabyte-milliseconds taken by all map tasks=41402368
		Total megabyte-milliseconds taken by all reduce tasks=15347712
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=635
		CPU time spent (ms)=7300
		Physical memory (bytes) snapshot=1146630144
		Virtual memory (bytes) snapshot=15784996864
		Total committed heap usage (bytes)=1057488896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.073 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201110 15:02:33.117" starttime="20201110 15:02:33.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:02:33.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:02:33.117" starttime="20201110 15:02:33.117"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.118" starttime="20201110 15:01:56.154"></status>
</kw>
<msg timestamp="20201110 15:02:33.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:02:33.118" starttime="20201110 15:01:56.153"></status>
</kw>
<msg timestamp="20201110 15:02:33.118" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:01:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:58 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201110 15:02:33.118" starttime="20201110 15:01:56.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:02:33.119" starttime="20201110 15:02:33.118"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:02:33.119" critical="yes" starttime="20201110 15:01:56.130"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:02:33.125" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:02:33.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:02:33.132" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:02:33.132" starttime="20201110 15:02:33.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:02:33.133" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:02:33.133" starttime="20201110 15:02:33.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:02:33.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:02:33.134" starttime="20201110 15:02:33.133"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.134" starttime="20201110 15:02:33.122"></status>
</kw>
<msg timestamp="20201110 15:02:33.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:02:33.134" starttime="20201110 15:02:33.121"></status>
</kw>
<msg timestamp="20201110 15:02:33.134" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:02:33.134" starttime="20201110 15:02:33.121"></status>
</kw>
<msg timestamp="20201110 15:02:33.135" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:02:33.135" starttime="20201110 15:02:33.121"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:02:33.135" level="INFO">${random} = 15</msg>
<status status="PASS" endtime="20201110 15:02:33.135" starttime="20201110 15:02:33.135"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:02:33.139" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:02:33.139" starttime="20201110 15:02:33.139"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:02:33.140" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:02:33.140" starttime="20201110 15:02:33.139"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.140" starttime="20201110 15:02:33.138"></status>
</kw>
<msg timestamp="20201110 15:02:33.140" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:02:33.140" starttime="20201110 15:02:33.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:02:33.141" starttime="20201110 15:02:33.141"></status>
</kw>
<msg timestamp="20201110 15:02:33.141" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:02:33.141" starttime="20201110 15:02:33.140"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.142" starttime="20201110 15:02:33.137"></status>
</kw>
<msg timestamp="20201110 15:02:33.142" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:02:33.142" starttime="20201110 15:02:33.136"></status>
</kw>
<msg timestamp="20201110 15:02:33.142" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:02:33.142" starttime="20201110 15:02:33.135"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:02:33.145" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:02:33.145" starttime="20201110 15:02:33.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:02:33.146" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:02:33.146" starttime="20201110 15:02:33.145"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.146" starttime="20201110 15:02:33.144"></status>
</kw>
<msg timestamp="20201110 15:02:33.146" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:02:33.146" starttime="20201110 15:02:33.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:02:33.148" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201110 15:02:33.148" starttime="20201110 15:02:33.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:02:33.148" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201110 15:02:33.148" starttime="20201110 15:02:33.148"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.149" starttime="20201110 15:02:33.147"></status>
</kw>
<msg timestamp="20201110 15:02:33.149" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201110 15:02:33.149" starttime="20201110 15:02:33.146"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.149" starttime="20201110 15:02:33.143"></status>
</kw>
<msg timestamp="20201110 15:02:33.149" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:02:33.149" starttime="20201110 15:02:33.143"></status>
</kw>
<msg timestamp="20201110 15:02:33.149" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:02:33.149" starttime="20201110 15:02:33.142"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:02:33.153" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:02:33.153" starttime="20201110 15:02:33.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:02:33.153" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:02:33.153" starttime="20201110 15:02:33.153"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.153" starttime="20201110 15:02:33.152"></status>
</kw>
<msg timestamp="20201110 15:02:33.154" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:02:33.154" starttime="20201110 15:02:33.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:02:33.155" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201110 15:02:33.155" starttime="20201110 15:02:33.155"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:02:33.156" level="INFO">${result} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201110 15:02:33.156" starttime="20201110 15:02:33.155"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.156" starttime="20201110 15:02:33.154"></status>
</kw>
<msg timestamp="20201110 15:02:33.156" level="INFO">${path_with_leading} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201110 15:02:33.156" starttime="20201110 15:02:33.154"></status>
</kw>
<status status="PASS" endtime="20201110 15:02:33.156" starttime="20201110 15:02:33.151"></status>
</kw>
<msg timestamp="20201110 15:02:33.156" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201110 15:02:33.156" starttime="20201110 15:02:33.150"></status>
</kw>
<msg timestamp="20201110 15:02:33.157" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201110 15:02:33.157" starttime="20201110 15:02:33.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:02:33.162" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-15.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:03:10.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:03:10.252" level="INFO">${output} = 2020-11-10 15:02:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:02:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201110 15:03:10.252" starttime="20201110 15:02:33.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:03:10.253" level="INFO">2020-11-10 15:02:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:02:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:02:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:02:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 15:02:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-10 15:02:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:02:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-75469A62CC12-&gt;ec105698-f8cd-4447-b8c9-010a1ec338d0
2020-11-10 15:02:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:02:36 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-10 15:02:36 INFO  JobSubmitter:198 - number of splits:3
2020-11-10 15:02:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605020349163_0004
2020-11-10 15:02:37 INFO  YarnClientImpl:273 - Submitted application application_1605020349163_0004
2020-11-10 15:02:37 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605020349163_0004/
2020-11-10 15:02:37 INFO  Job:1339 - Running job: job_1605020349163_0004
2020-11-10 15:02:45 INFO  Job:1360 - Job job_1605020349163_0004 running in uber mode : false
2020-11-10 15:02:45 INFO  Job:1367 -  map 0% reduce 0%
2020-11-10 15:02:51 INFO  Job:1367 -  map 33% reduce 0%
2020-11-10 15:02:56 INFO  Job:1367 -  map 67% reduce 0%
2020-11-10 15:03:01 INFO  Job:1367 -  map 100% reduce 0%
2020-11-10 15:03:05 INFO  Job:1367 -  map 100% reduce 100%
2020-11-10 15:03:09 INFO  Job:1378 - Job job_1605020349163_0004 completed successfully
2020-11-10 15:03:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40328
		Total time spent by all reduces in occupied slots (ms)=15928
		Total time spent by all map tasks (ms)=10082
		Total time spent by all reduce tasks (ms)=3982
		Total vcore-milliseconds taken by all map tasks=10082
		Total vcore-milliseconds taken by all reduce tasks=3982
		Total megabyte-milliseconds taken by all map tasks=41295872
		Total megabyte-milliseconds taken by all reduce tasks=16310272
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=601
		CPU time spent (ms)=7870
		Physical memory (bytes) snapshot=1156042752
		Virtual memory (bytes) snapshot=15786065920
		Total committed heap usage (bytes)=1045954560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201110 15:03:10.254" starttime="20201110 15:03:10.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:03:10.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:03:10.255" starttime="20201110 15:03:10.254"></status>
</kw>
<status status="PASS" endtime="20201110 15:03:10.255" starttime="20201110 15:02:33.158"></status>
</kw>
<msg timestamp="20201110 15:03:10.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:03:10.255" starttime="20201110 15:02:33.157"></status>
</kw>
<msg timestamp="20201110 15:03:10.255" level="INFO">${output} = 2020-11-10 15:02:35 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:02:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201110 15:03:10.256" starttime="20201110 15:02:33.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:03:10.256" starttime="20201110 15:03:10.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:03:10.257" starttime="20201110 15:03:10.256"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:03:10.257" critical="yes" starttime="20201110 15:02:33.120"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:03:10.258" starttime="20201110 15:01:56.075"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:27.588" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:00:27.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:00:27.599" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:00:27.600" starttime="20201110 15:00:27.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:00:27.601" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:00:27.601" starttime="20201110 15:00:27.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:00:27.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:00:27.602" starttime="20201110 15:00:27.601"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:27.602" starttime="20201110 15:00:27.583"></status>
</kw>
<msg timestamp="20201110 15:00:27.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:00:27.603" starttime="20201110 15:00:27.583"></status>
</kw>
<msg timestamp="20201110 15:00:27.603" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:00:27.603" starttime="20201110 15:00:27.583"></status>
</kw>
<msg timestamp="20201110 15:00:27.603" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:00:27.603" starttime="20201110 15:00:27.582"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:00:27.611" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:00:27.611" starttime="20201110 15:00:27.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:00:27.611" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:00:27.611" starttime="20201110 15:00:27.611"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:27.612" starttime="20201110 15:00:27.606"></status>
</kw>
<msg timestamp="20201110 15:00:27.612" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:00:27.612" starttime="20201110 15:00:27.606"></status>
</kw>
<status status="PASS" endtime="20201110 15:00:27.612" starttime="20201110 15:00:27.605"></status>
</kw>
<msg timestamp="20201110 15:00:27.612" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:00:27.612" starttime="20201110 15:00:27.604"></status>
</kw>
<msg timestamp="20201110 15:00:27.612" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:00:27.612" starttime="20201110 15:00:27.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:00:27.618" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:01:05.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:01:05.605" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:00:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:00:29 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201110 15:01:05.605" starttime="20201110 15:00:27.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:01:05.606" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:00:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:00:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 15:00:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-10 15:00:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:00:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7C871315F863-&gt;ec105698-f8cd-4447-b8c9-010a1ec338d0
2020-11-10 15:00:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:00:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:00:31 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-10 15:00:31 INFO  JobSubmitter:198 - number of splits:3
2020-11-10 15:00:32 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605020349163_0001
2020-11-10 15:00:32 INFO  YarnClientImpl:273 - Submitted application application_1605020349163_0001
2020-11-10 15:00:32 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605020349163_0001/
2020-11-10 15:00:32 INFO  Job:1339 - Running job: job_1605020349163_0001
2020-11-10 15:00:43 INFO  Job:1360 - Job job_1605020349163_0001 running in uber mode : false
2020-11-10 15:00:43 INFO  Job:1367 -  map 0% reduce 0%
2020-11-10 15:00:49 INFO  Job:1367 -  map 33% reduce 0%
2020-11-10 15:00:54 INFO  Job:1367 -  map 67% reduce 0%
2020-11-10 15:00:59 INFO  Job:1367 -  map 100% reduce 0%
2020-11-10 15:01:04 INFO  Job:1367 -  map 100% reduce 100%
2020-11-10 15:01:04 INFO  Job:1378 - Job job_1605020349163_0001 completed successfully
2020-11-10 15:01:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41444
		Total time spent by all reduces in occupied slots (ms)=15828
		Total time spent by all map tasks (ms)=10361
		Total time spent by all reduce tasks (ms)=3957
		Total vcore-milliseconds taken by all map tasks=10361
		Total vcore-milliseconds taken by all reduce tasks=3957
		Total megabyte-milliseconds taken by all map tasks=42438656
		Total megabyte-milliseconds taken by all reduce tasks=16207872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=7420
		Physical memory (bytes) snapshot=1166229504
		Virtual memory (bytes) snapshot=15789727744
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.866 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201110 15:01:05.606" starttime="20201110 15:01:05.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:01:05.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:01:05.607" starttime="20201110 15:01:05.606"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.607" starttime="20201110 15:00:27.614"></status>
</kw>
<msg timestamp="20201110 15:01:05.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:01:05.608" starttime="20201110 15:00:27.613"></status>
</kw>
<msg timestamp="20201110 15:01:05.608" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:00:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:00:29 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201110 15:01:05.608" starttime="20201110 15:00:27.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:01:05.609" starttime="20201110 15:01:05.608"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:01:05.609" critical="yes" starttime="20201110 15:00:27.581"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:01:05.614" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:01:05.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:01:05.620" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:05.620" starttime="20201110 15:01:05.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:01:05.622" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:05.622" starttime="20201110 15:01:05.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:01:05.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:01:05.623" starttime="20201110 15:01:05.622"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.623" starttime="20201110 15:01:05.611"></status>
</kw>
<msg timestamp="20201110 15:01:05.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:01:05.623" starttime="20201110 15:01:05.611"></status>
</kw>
<msg timestamp="20201110 15:01:05.624" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:05.624" starttime="20201110 15:01:05.611"></status>
</kw>
<msg timestamp="20201110 15:01:05.624" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201110 15:01:05.624" starttime="20201110 15:01:05.610"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:01:05.625" level="INFO">${random} = 59</msg>
<status status="PASS" endtime="20201110 15:01:05.625" starttime="20201110 15:01:05.624"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:01:05.629" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:01:05.629" starttime="20201110 15:01:05.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:01:05.629" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:01:05.629" starttime="20201110 15:01:05.629"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.630" starttime="20201110 15:01:05.628"></status>
</kw>
<msg timestamp="20201110 15:01:05.630" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:01:05.630" starttime="20201110 15:01:05.627"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.630" starttime="20201110 15:01:05.626"></status>
</kw>
<msg timestamp="20201110 15:01:05.630" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:01:05.630" starttime="20201110 15:01:05.626"></status>
</kw>
<msg timestamp="20201110 15:01:05.630" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:01:05.630" starttime="20201110 15:01:05.625"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:01:05.634" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:01:05.634" starttime="20201110 15:01:05.633"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:01:05.634" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:01:05.634" starttime="20201110 15:01:05.634"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.634" starttime="20201110 15:01:05.633"></status>
</kw>
<msg timestamp="20201110 15:01:05.635" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:01:05.635" starttime="20201110 15:01:05.632"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.635" starttime="20201110 15:01:05.632"></status>
</kw>
<msg timestamp="20201110 15:01:05.635" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:01:05.635" starttime="20201110 15:01:05.631"></status>
</kw>
<msg timestamp="20201110 15:01:05.635" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:01:05.635" starttime="20201110 15:01:05.630"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:01:05.638" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:01:05.638" starttime="20201110 15:01:05.638"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:01:05.639" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:01:05.639" starttime="20201110 15:01:05.639"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.639" starttime="20201110 15:01:05.638"></status>
</kw>
<msg timestamp="20201110 15:01:05.639" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:01:05.639" starttime="20201110 15:01:05.637"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:05.640" starttime="20201110 15:01:05.636"></status>
</kw>
<msg timestamp="20201110 15:01:05.640" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-59.txt</msg>
<status status="PASS" endtime="20201110 15:01:05.640" starttime="20201110 15:01:05.636"></status>
</kw>
<msg timestamp="20201110 15:01:05.640" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-59.txt</msg>
<status status="PASS" endtime="20201110 15:01:05.640" starttime="20201110 15:01:05.635"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:01:05.645" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-59.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:01:40.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:01:40.825" level="INFO">${output} = 2020-11-10 15:01:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:01:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201110 15:01:40.825" starttime="20201110 15:01:05.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:01:40.827" level="INFO">2020-11-10 15:01:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:01:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:01:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:01:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-10 15:01:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-10 15:01:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:01:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B2A610D20B27-&gt;ec105698-f8cd-4447-b8c9-010a1ec338d0
2020-11-10 15:01:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:01:09 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-10 15:01:09 INFO  JobSubmitter:198 - number of splits:3
2020-11-10 15:01:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1605020349163_0002
2020-11-10 15:01:09 INFO  YarnClientImpl:273 - Submitted application application_1605020349163_0002
2020-11-10 15:01:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1605020349163_0002/
2020-11-10 15:01:09 INFO  Job:1339 - Running job: job_1605020349163_0002
2020-11-10 15:01:19 INFO  Job:1360 - Job job_1605020349163_0002 running in uber mode : false
2020-11-10 15:01:19 INFO  Job:1367 -  map 0% reduce 0%
2020-11-10 15:01:25 INFO  Job:1367 -  map 33% reduce 0%
2020-11-10 15:01:30 INFO  Job:1367 -  map 67% reduce 0%
2020-11-10 15:01:35 INFO  Job:1367 -  map 100% reduce 0%
2020-11-10 15:01:39 INFO  Job:1367 -  map 100% reduce 100%
2020-11-10 15:01:40 INFO  Job:1378 - Job job_1605020349163_0002 completed successfully
2020-11-10 15:01:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41756
		Total time spent by all reduces in occupied slots (ms)=15572
		Total time spent by all map tasks (ms)=10439
		Total time spent by all reduce tasks (ms)=3893
		Total vcore-milliseconds taken by all map tasks=10439
		Total vcore-milliseconds taken by all reduce tasks=3893
		Total megabyte-milliseconds taken by all map tasks=42758144
		Total megabyte-milliseconds taken by all reduce tasks=15945728
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7600
		Physical memory (bytes) snapshot=1172062208
		Virtual memory (bytes) snapshot=15797415936
		Total committed heap usage (bytes)=1041235968
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201110 15:01:40.827" starttime="20201110 15:01:40.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:01:40.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:01:40.828" starttime="20201110 15:01:40.827"></status>
</kw>
<status status="PASS" endtime="20201110 15:01:40.828" starttime="20201110 15:01:05.641"></status>
</kw>
<msg timestamp="20201110 15:01:40.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:01:40.828" starttime="20201110 15:01:05.641"></status>
</kw>
<msg timestamp="20201110 15:01:40.829" level="INFO">${output} = 2020-11-10 15:01:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-11-10 15:01:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201110 15:01:40.829" starttime="20201110 15:01:05.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:01:40.829" starttime="20201110 15:01:40.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:01:40.830" starttime="20201110 15:01:40.829"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:01:40.830" critical="yes" starttime="20201110 15:01:05.609"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:01:40.832" starttime="20201110 15:00:27.526"></status>
</suite>
<status status="PASS" elapsedtime="188606" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:15.975" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:18.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:04:18.316" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:04:18.316" starttime="20201110 15:04:15.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:18.318" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:04:18.318" starttime="20201110 15:04:18.317"></status>
</kw>
<msg timestamp="20201110 15:04:18.318" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:04:18.318" starttime="20201110 15:04:15.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:18.324" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:20.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:20.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:20.590" starttime="20201110 15:04:18.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:20.591" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:20.591" starttime="20201110 15:04:20.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:20.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:20.592" starttime="20201110 15:04:20.591"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:20.592" starttime="20201110 15:04:18.320"></status>
</kw>
<msg timestamp="20201110 15:04:20.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:20.592" starttime="20201110 15:04:18.320"></status>
</kw>
<msg timestamp="20201110 15:04:20.592" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201110 15:04:20.592" starttime="20201110 15:04:18.319"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201110 15:04:20.593" starttime="20201110 15:04:20.593"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:20.593" starttime="20201110 15:04:18.319"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:20.593" starttime="20201110 15:04:18.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:20.598" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:22.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:22.634" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:22.634" starttime="20201110 15:04:20.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:22.635" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:22.635" starttime="20201110 15:04:22.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:22.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:22.636" starttime="20201110 15:04:22.635"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:22.636" starttime="20201110 15:04:20.595"></status>
</kw>
<msg timestamp="20201110 15:04:22.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:22.636" starttime="20201110 15:04:20.595"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:22.636" starttime="20201110 15:04:20.594"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:22.637" starttime="20201110 15:04:20.594"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:22.637" starttime="20201110 15:04:20.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201110 15:04:22.637" starttime="20201110 15:04:22.637"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:22.641" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:24.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:24.950" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:04:22.599Z",
  "modificat...</msg>
<status status="PASS" endtime="20201110 15:04:24.950" starttime="20201110 15:04:22.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:24.951" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:04:22.599Z",
  "modificationTime" : "2020-11-10T15:04:22.599Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 15:04:24.952" starttime="20201110 15:04:24.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:24.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:24.952" starttime="20201110 15:04:24.952"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:24.953" starttime="20201110 15:04:22.638"></status>
</kw>
<msg timestamp="20201110 15:04:24.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:24.953" starttime="20201110 15:04:22.638"></status>
</kw>
<msg timestamp="20201110 15:04:24.953" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:04:22.599Z",
  "modificat...</msg>
<status status="PASS" endtime="20201110 15:04:24.953" starttime="20201110 15:04:22.637"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201110 15:04:24.954" starttime="20201110 15:04:24.953"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:04:24.958" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:04:24.958" starttime="20201110 15:04:24.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:04:24.958" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:04:24.958" starttime="20201110 15:04:24.958"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:24.958" starttime="20201110 15:04:24.957"></status>
</kw>
<msg timestamp="20201110 15:04:24.958" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:04:24.958" starttime="20201110 15:04:24.956"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:24.959" starttime="20201110 15:04:24.955"></status>
</kw>
<msg timestamp="20201110 15:04:24.959" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 15:04:24.959" starttime="20201110 15:04:24.955"></status>
</kw>
<msg timestamp="20201110 15:04:24.959" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 15:04:24.959" starttime="20201110 15:04:24.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:24.963" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:27.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:27.023" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:27.023" starttime="20201110 15:04:24.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:27.025" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:27.025" starttime="20201110 15:04:27.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:27.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:27.025" starttime="20201110 15:04:27.025"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:27.026" starttime="20201110 15:04:24.960"></status>
</kw>
<msg timestamp="20201110 15:04:27.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:27.026" starttime="20201110 15:04:24.960"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:27.026" starttime="20201110 15:04:24.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:27.030" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:32.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:32.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:32.692" starttime="20201110 15:04:27.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:32.693" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:32.693" starttime="20201110 15:04:32.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:32.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:32.694" starttime="20201110 15:04:32.693"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:32.694" starttime="20201110 15:04:27.027"></status>
</kw>
<msg timestamp="20201110 15:04:32.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:32.694" starttime="20201110 15:04:27.027"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:32.694" starttime="20201110 15:04:27.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:32.699" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:36.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:36.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:36.831" starttime="20201110 15:04:32.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:36.832" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:36.832" starttime="20201110 15:04:36.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:36.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:36.832" starttime="20201110 15:04:36.832"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:36.833" starttime="20201110 15:04:32.696"></status>
</kw>
<msg timestamp="20201110 15:04:36.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:36.833" starttime="20201110 15:04:32.695"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:36.833" starttime="20201110 15:04:32.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:36.837" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:40.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:40.966" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:40.966" starttime="20201110 15:04:36.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:40.968" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:40.968" starttime="20201110 15:04:40.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:40.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:40.969" starttime="20201110 15:04:40.968"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:40.969" starttime="20201110 15:04:36.834"></status>
</kw>
<msg timestamp="20201110 15:04:40.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:40.969" starttime="20201110 15:04:36.834"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:40.969" starttime="20201110 15:04:36.833"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:04:40.970" critical="yes" starttime="20201110 15:04:15.969"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:04:40.975" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:04:40.975" starttime="20201110 15:04:40.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:04:40.975" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:04:40.975" starttime="20201110 15:04:40.975"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:40.976" starttime="20201110 15:04:40.974"></status>
</kw>
<msg timestamp="20201110 15:04:40.976" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:04:40.976" starttime="20201110 15:04:40.973"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:40.976" starttime="20201110 15:04:40.973"></status>
</kw>
<msg timestamp="20201110 15:04:40.976" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:04:40.976" starttime="20201110 15:04:40.972"></status>
</kw>
<msg timestamp="20201110 15:04:40.977" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:04:40.977" starttime="20201110 15:04:40.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:40.980" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:43.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:43.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:43.222" starttime="20201110 15:04:40.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:43.223" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:43.223" starttime="20201110 15:04:43.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:43.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:43.224" starttime="20201110 15:04:43.223"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:43.224" starttime="20201110 15:04:40.977"></status>
</kw>
<msg timestamp="20201110 15:04:43.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:43.225" starttime="20201110 15:04:40.977"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:43.225" starttime="20201110 15:04:40.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:43.230" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:45.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:45.398" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:04:45.399" starttime="20201110 15:04:43.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:45.400" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:04:45.400" starttime="20201110 15:04:45.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:45.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:45.400" starttime="20201110 15:04:45.400"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:45.401" starttime="20201110 15:04:43.226"></status>
</kw>
<msg timestamp="20201110 15:04:45.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:45.401" starttime="20201110 15:04:43.226"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:45.401" starttime="20201110 15:04:43.225"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:04:45.401" critical="yes" starttime="20201110 15:04:40.970"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201110 15:04:45.402" starttime="20201110 15:04:15.914"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:06:31.410" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:06:31.410" starttime="20201110 15:06:31.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:06:31.410" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:06:31.411" starttime="20201110 15:06:31.410"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:31.411" starttime="20201110 15:06:31.409"></status>
</kw>
<msg timestamp="20201110 15:06:31.411" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:06:31.411" starttime="20201110 15:06:31.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:06:31.412" starttime="20201110 15:06:31.411"></status>
</kw>
<msg timestamp="20201110 15:06:31.412" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:06:31.412" starttime="20201110 15:06:31.411"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:31.412" starttime="20201110 15:06:31.408"></status>
</kw>
<msg timestamp="20201110 15:06:31.412" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:06:31.412" starttime="20201110 15:06:31.407"></status>
</kw>
<msg timestamp="20201110 15:06:31.413" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:06:31.413" starttime="20201110 15:06:31.406"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:06:31.413" level="INFO">${random} = 49985</msg>
<status status="PASS" endtime="20201110 15:06:31.413" starttime="20201110 15:06:31.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:06:31.421" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-49985 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:06:35.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:06:35.079" level="INFO">${output} = 2020-11-10 15:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:06:35.079" starttime="20201110 15:06:31.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:06:35.080" level="INFO">2020-11-10 15:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-10 15:06:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:06:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:06:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:06:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:06:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E7FBD501E568-&gt;e1cded4a-a23c-44ee-918e-5d822c3697f2
2020-11-10 15:06:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:06:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:06:35.081" starttime="20201110 15:06:35.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:06:35.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:06:35.081" starttime="20201110 15:06:35.081"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:35.081" starttime="20201110 15:06:31.414"></status>
</kw>
<msg timestamp="20201110 15:06:35.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:06:35.082" starttime="20201110 15:06:31.414"></status>
</kw>
<msg timestamp="20201110 15:06:35.082" level="INFO">${result} = 2020-11-10 15:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:06:35.082" starttime="20201110 15:06:31.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:06:35.087" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:06:36.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:06:36.822" level="INFO">${output} = 2020-11-10 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:06:36.822" starttime="20201110 15:06:35.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:06:36.823" level="INFO">2020-11-10 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-10 15:06 ofs://om/volume1/bucket1/ozone-49985
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-10 15:04 ofs://om/volume1/bucket1/ozone-73749
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:04 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:05 ofs://om/volume1/bucket1/wordcount-28.txt
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:06:36.824" starttime="20201110 15:06:36.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:06:36.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:06:36.824" starttime="20201110 15:06:36.824"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:36.825" starttime="20201110 15:06:35.084"></status>
</kw>
<msg timestamp="20201110 15:06:36.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:06:36.825" starttime="20201110 15:06:35.084"></status>
</kw>
<msg timestamp="20201110 15:06:36.825" level="INFO">${result} = 2020-11-10 15:06:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:36 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:06:36.825" starttime="20201110 15:06:35.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:06:36.826" starttime="20201110 15:06:36.825"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:06:36.826" critical="yes" starttime="20201110 15:06:31.405"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:06:36.827" starttime="20201110 15:06:31.353"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:04:50.398" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:04:50.398" starttime="20201110 15:04:50.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:04:50.399" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:04:50.399" starttime="20201110 15:04:50.398"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:50.399" starttime="20201110 15:04:50.397"></status>
</kw>
<msg timestamp="20201110 15:04:50.399" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:04:50.399" starttime="20201110 15:04:50.397"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:50.399" starttime="20201110 15:04:50.396"></status>
</kw>
<msg timestamp="20201110 15:04:50.399" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:04:50.399" starttime="20201110 15:04:50.395"></status>
</kw>
<msg timestamp="20201110 15:04:50.400" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:04:50.400" starttime="20201110 15:04:50.394"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:04:50.400" level="INFO">${random} = 73749</msg>
<status status="PASS" endtime="20201110 15:04:50.400" starttime="20201110 15:04:50.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:50.406" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-73749 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:54.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:54.296" level="INFO">${output} = 2020-11-10 15:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:04:54.296" starttime="20201110 15:04:50.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:54.297" level="INFO">2020-11-10 15:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-10 15:04:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:04:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:04:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:04:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:04:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2BADAC6427A9-&gt;e1cded4a-a23c-44ee-918e-5d822c3697f2
2020-11-10 15:04:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:04:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:04:54.297" starttime="20201110 15:04:54.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:54.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:54.298" starttime="20201110 15:04:54.297"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:54.298" starttime="20201110 15:04:50.401"></status>
</kw>
<msg timestamp="20201110 15:04:54.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:54.298" starttime="20201110 15:04:50.401"></status>
</kw>
<msg timestamp="20201110 15:04:54.298" level="INFO">${result} = 2020-11-10 15:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:04:54.298" starttime="20201110 15:04:50.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:04:54.303" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:04:56.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:04:56.502" level="INFO">${output} = 2020-11-10 15:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:04:56.502" starttime="20201110 15:04:54.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:04:56.503" level="INFO">2020-11-10 15:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-10 15:04 o3fs://bucket1.volume1.om/ozone-73749
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:04 o3fs://bucket1.volume1.om/user
2020-11-10 15:04:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:04:56.503" starttime="20201110 15:04:56.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:04:56.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:04:56.504" starttime="20201110 15:04:56.503"></status>
</kw>
<status status="PASS" endtime="20201110 15:04:56.504" starttime="20201110 15:04:54.300"></status>
</kw>
<msg timestamp="20201110 15:04:56.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:04:56.504" starttime="20201110 15:04:54.299"></status>
</kw>
<msg timestamp="20201110 15:04:56.505" level="INFO">${result} = 2020-11-10 15:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:04:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:04:56.505" starttime="20201110 15:04:54.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:04:56.505" starttime="20201110 15:04:56.505"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:04:56.505" critical="yes" starttime="20201110 15:04:50.394"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:04:56.506" starttime="20201110 15:04:50.341"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:06:41.900" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:06:41.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:06:41.907" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:06:41.907" starttime="20201110 15:06:41.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:06:41.908" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:06:41.908" starttime="20201110 15:06:41.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:06:41.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:06:41.909" starttime="20201110 15:06:41.909"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:41.910" starttime="20201110 15:06:41.895"></status>
</kw>
<msg timestamp="20201110 15:06:41.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:06:41.910" starttime="20201110 15:06:41.894"></status>
</kw>
<msg timestamp="20201110 15:06:41.910" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:06:41.910" starttime="20201110 15:06:41.894"></status>
</kw>
<msg timestamp="20201110 15:06:41.910" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:06:41.910" starttime="20201110 15:06:41.894"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:06:41.915" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:06:41.915" starttime="20201110 15:06:41.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:06:41.916" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:06:41.916" starttime="20201110 15:06:41.915"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:41.916" starttime="20201110 15:06:41.913"></status>
</kw>
<msg timestamp="20201110 15:06:41.916" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:06:41.916" starttime="20201110 15:06:41.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:06:41.917" starttime="20201110 15:06:41.917"></status>
</kw>
<msg timestamp="20201110 15:06:41.917" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:06:41.917" starttime="20201110 15:06:41.916"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:41.918" starttime="20201110 15:06:41.912"></status>
</kw>
<msg timestamp="20201110 15:06:41.918" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:06:41.918" starttime="20201110 15:06:41.911"></status>
</kw>
<msg timestamp="20201110 15:06:41.918" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:06:41.918" starttime="20201110 15:06:41.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:06:41.922" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:07:21.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:07:21.009" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:06:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06...</msg>
<status status="PASS" endtime="20201110 15:07:21.009" starttime="20201110 15:06:41.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:07:21.010" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:06:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-10 15:06:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:06:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:06:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:06:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:06:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CA940587B048-&gt;e1cded4a-a23c-44ee-918e-5d822c3697f2
2020-11-10 15:06:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:06:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-10 15:06:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:06:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:45 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:06:46 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:06:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020635783_0003
2020-11-10 15:06:46 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:06:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:46 INFO  Configuration:2752 - resource-types.xml not found
2020-11-10 15:06:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-10 15:06:46 INFO  YarnClientImpl:324 - Submitted application application_1605020635783_0003
2020-11-10 15:06:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020635783_0003/
2020-11-10 15:06:46 INFO  Job:1619 - Running job: job_1605020635783_0003
2020-11-10 15:06:54 INFO  Job:1640 - Job job_1605020635783_0003 running in uber mode : false
2020-11-10 15:06:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:07:02 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:07:08 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:07:14 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:07:19 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:07:20 INFO  Job:1658 - Job job_1605020635783_0003 completed successfully
2020-11-10 15:07:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021325
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42628
		Total time spent by all reduces in occupied slots (ms)=15384
		Total time spent by all map tasks (ms)=10657
		Total time spent by all reduce tasks (ms)=3846
		Total vcore-milliseconds taken by all map tasks=10657
		Total vcore-milliseconds taken by all reduce tasks=3846
		Total megabyte-milliseconds taken by all map tasks=43651072
		Total megabyte-milliseconds taken by all reduce tasks=15753216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=641
		CPU time spent (ms)=7340
		Physical memory (bytes) snapshot=1228623872
		Virtual memory (bytes) snapshot=15801016320
		Total committed heap usage (bytes)=1072693248
		Peak Map Physical memory (bytes)=324018176
		Peak Map Virtual memory (bytes)=3949760512
		Peak Reduce Physical memory (bytes)=296337408
		Peak Reduce Virtual memory (bytes)=3966210048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.942 seconds
2020-11-10 15:07:20 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-10 15:07:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:07:21.011" starttime="20201110 15:07:21.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:07:21.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:07:21.011" starttime="20201110 15:07:21.011"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.012" starttime="20201110 15:06:41.919"></status>
</kw>
<msg timestamp="20201110 15:07:21.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:07:21.012" starttime="20201110 15:06:41.919"></status>
</kw>
<msg timestamp="20201110 15:07:21.012" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:06:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06...</msg>
<status status="PASS" endtime="20201110 15:07:21.012" starttime="20201110 15:06:41.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:07:21.013" starttime="20201110 15:07:21.012"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:07:21.013" critical="yes" starttime="20201110 15:06:41.893"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:07:21.018" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:07:21.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:07:21.024" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:07:21.025" starttime="20201110 15:07:21.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:07:21.025" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:07:21.026" starttime="20201110 15:07:21.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:07:21.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:07:21.026" starttime="20201110 15:07:21.026"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.027" starttime="20201110 15:07:21.016"></status>
</kw>
<msg timestamp="20201110 15:07:21.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:07:21.027" starttime="20201110 15:07:21.015"></status>
</kw>
<msg timestamp="20201110 15:07:21.027" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:07:21.027" starttime="20201110 15:07:21.015"></status>
</kw>
<msg timestamp="20201110 15:07:21.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:07:21.027" starttime="20201110 15:07:21.014"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:07:21.028" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201110 15:07:21.028" starttime="20201110 15:07:21.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:07:21.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:07:21.032" starttime="20201110 15:07:21.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:07:21.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:07:21.033" starttime="20201110 15:07:21.032"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.033" starttime="20201110 15:07:21.031"></status>
</kw>
<msg timestamp="20201110 15:07:21.033" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:07:21.033" starttime="20201110 15:07:21.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:07:21.034" starttime="20201110 15:07:21.034"></status>
</kw>
<msg timestamp="20201110 15:07:21.034" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:07:21.034" starttime="20201110 15:07:21.033"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.035" starttime="20201110 15:07:21.030"></status>
</kw>
<msg timestamp="20201110 15:07:21.035" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:07:21.035" starttime="20201110 15:07:21.029"></status>
</kw>
<msg timestamp="20201110 15:07:21.035" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:07:21.035" starttime="20201110 15:07:21.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:07:21.039" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:07:21.039" starttime="20201110 15:07:21.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:07:21.039" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:07:21.040" starttime="20201110 15:07:21.039"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.040" starttime="20201110 15:07:21.038"></status>
</kw>
<msg timestamp="20201110 15:07:21.040" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:07:21.040" starttime="20201110 15:07:21.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:07:21.041" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201110 15:07:21.041" starttime="20201110 15:07:21.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:07:21.042" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201110 15:07:21.042" starttime="20201110 15:07:21.042"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.042" starttime="20201110 15:07:21.040"></status>
</kw>
<msg timestamp="20201110 15:07:21.042" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201110 15:07:21.042" starttime="20201110 15:07:21.040"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.043" starttime="20201110 15:07:21.037"></status>
</kw>
<msg timestamp="20201110 15:07:21.043" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:07:21.043" starttime="20201110 15:07:21.036"></status>
</kw>
<msg timestamp="20201110 15:07:21.043" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:07:21.043" starttime="20201110 15:07:21.035"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:07:21.046" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:07:21.046" starttime="20201110 15:07:21.046"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:07:21.047" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:07:21.047" starttime="20201110 15:07:21.046"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.047" starttime="20201110 15:07:21.045"></status>
</kw>
<msg timestamp="20201110 15:07:21.047" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:07:21.047" starttime="20201110 15:07:21.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:07:21.049" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201110 15:07:21.049" starttime="20201110 15:07:21.048"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:07:21.049" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201110 15:07:21.049" starttime="20201110 15:07:21.049"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.050" starttime="20201110 15:07:21.048"></status>
</kw>
<msg timestamp="20201110 15:07:21.050" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20201110 15:07:21.050" starttime="20201110 15:07:21.047"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:21.050" starttime="20201110 15:07:21.044"></status>
</kw>
<msg timestamp="20201110 15:07:21.050" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201110 15:07:21.050" starttime="20201110 15:07:21.044"></status>
</kw>
<msg timestamp="20201110 15:07:21.050" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201110 15:07:21.050" starttime="20201110 15:07:21.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:07:21.056" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:07:57.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:07:57.637" level="INFO">${output} = 2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:07:57.638" starttime="20201110 15:07:21.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:07:57.639" level="INFO">2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-10 15:07:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:07:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-10 15:07:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:07:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:07:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:07:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:07:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-470569AA8FEA-&gt;e1cded4a-a23c-44ee-918e-5d822c3697f2
2020-11-10 15:07:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:07:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:07:25 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:07:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020635783_0004
2020-11-10 15:07:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:07:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:25 INFO  Configuration:2752 - resource-types.xml not found
2020-11-10 15:07:25 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-10 15:07:25 INFO  YarnClientImpl:324 - Submitted application application_1605020635783_0004
2020-11-10 15:07:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020635783_0004/
2020-11-10 15:07:25 INFO  Job:1619 - Running job: job_1605020635783_0004
2020-11-10 15:07:33 INFO  Job:1640 - Job job_1605020635783_0004 running in uber mode : false
2020-11-10 15:07:33 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:07:40 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:07:46 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:07:51 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:07:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:07:57 INFO  Job:1658 - Job job_1605020635783_0004 completed successfully
2020-11-10 15:07:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41932
		Total time spent by all reduces in occupied slots (ms)=15368
		Total time spent by all map tasks (ms)=10483
		Total time spent by all reduce tasks (ms)=3842
		Total vcore-milliseconds taken by all map tasks=10483
		Total vcore-milliseconds taken by all reduce tasks=3842
		Total megabyte-milliseconds taken by all map tasks=42938368
		Total megabyte-milliseconds taken by all reduce tasks=15736832
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=640
		CPU time spent (ms)=7390
		Physical memory (bytes) snapshot=1225953280
		Virtual memory (bytes) snapshot=15806255104
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=317206528
		Peak Map Virtual memory (bytes)=3954421760
		Peak Reduce Physical memory (bytes)=292364288
		Peak Reduce Virtual memory (bytes)=3964665856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-10 15:07:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:07:57.639" starttime="20201110 15:07:57.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:07:57.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:07:57.640" starttime="20201110 15:07:57.639"></status>
</kw>
<status status="PASS" endtime="20201110 15:07:57.640" starttime="20201110 15:07:21.051"></status>
</kw>
<msg timestamp="20201110 15:07:57.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:07:57.640" starttime="20201110 15:07:21.051"></status>
</kw>
<msg timestamp="20201110 15:07:57.641" level="INFO">${output} = 2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:07:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:07:57.641" starttime="20201110 15:07:21.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:07:57.641" starttime="20201110 15:07:57.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:07:57.642" starttime="20201110 15:07:57.641"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:07:57.642" critical="yes" starttime="20201110 15:07:21.014"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:07:57.643" starttime="20201110 15:06:41.838"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:05:01.492" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:05:01.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:05:01.499" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:01.499" starttime="20201110 15:05:01.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:05:01.500" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:01.500" starttime="20201110 15:05:01.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:05:01.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:05:01.501" starttime="20201110 15:05:01.500"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:01.501" starttime="20201110 15:05:01.487"></status>
</kw>
<msg timestamp="20201110 15:05:01.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:05:01.501" starttime="20201110 15:05:01.487"></status>
</kw>
<msg timestamp="20201110 15:05:01.502" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:01.502" starttime="20201110 15:05:01.486"></status>
</kw>
<msg timestamp="20201110 15:05:01.502" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:01.502" starttime="20201110 15:05:01.486"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:05:01.507" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:05:01.507" starttime="20201110 15:05:01.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:05:01.508" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:05:01.508" starttime="20201110 15:05:01.507"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:01.508" starttime="20201110 15:05:01.505"></status>
</kw>
<msg timestamp="20201110 15:05:01.508" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:05:01.508" starttime="20201110 15:05:01.504"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:01.508" starttime="20201110 15:05:01.504"></status>
</kw>
<msg timestamp="20201110 15:05:01.508" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:05:01.508" starttime="20201110 15:05:01.503"></status>
</kw>
<msg timestamp="20201110 15:05:01.509" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:05:01.509" starttime="20201110 15:05:01.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:05:01.512" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:05:45.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:05:45.555" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:05:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05...</msg>
<status status="PASS" endtime="20201110 15:05:45.555" starttime="20201110 15:05:01.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:05:45.556" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:05:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-10 15:05:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:05:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:05:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:05:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:05:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D64FD5A259E-&gt;e1cded4a-a23c-44ee-918e-5d822c3697f2
2020-11-10 15:05:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-10 15:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:08 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:05:08 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:05:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020635783_0001
2020-11-10 15:05:08 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:05:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:08 INFO  Configuration:2752 - resource-types.xml not found
2020-11-10 15:05:08 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-10 15:05:09 INFO  YarnClientImpl:324 - Submitted application application_1605020635783_0001
2020-11-10 15:05:09 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020635783_0001/
2020-11-10 15:05:09 INFO  Job:1619 - Running job: job_1605020635783_0001
2020-11-10 15:05:20 INFO  Job:1640 - Job job_1605020635783_0001 running in uber mode : false
2020-11-10 15:05:20 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:05:27 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:05:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:05:38 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:05:43 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:05:44 INFO  Job:1658 - Job job_1605020635783_0001 completed successfully
2020-11-10 15:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41996
		Total time spent by all reduces in occupied slots (ms)=15956
		Total time spent by all map tasks (ms)=10499
		Total time spent by all reduce tasks (ms)=3989
		Total vcore-milliseconds taken by all map tasks=10499
		Total vcore-milliseconds taken by all reduce tasks=3989
		Total megabyte-milliseconds taken by all map tasks=43003904
		Total megabyte-milliseconds taken by all reduce tasks=16338944
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=628
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1242943488
		Virtual memory (bytes) snapshot=15797989376
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=312127488
		Peak Map Virtual memory (bytes)=3947192320
		Peak Reduce Physical memory (bytes)=312688640
		Peak Reduce Virtual memory (bytes)=3966242816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.414 seconds
2020-11-10 15:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:44 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-10 15:05:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:05:45.557" starttime="20201110 15:05:45.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:05:45.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:05:45.558" starttime="20201110 15:05:45.557"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.558" starttime="20201110 15:05:01.510"></status>
</kw>
<msg timestamp="20201110 15:05:45.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:05:45.558" starttime="20201110 15:05:01.509"></status>
</kw>
<msg timestamp="20201110 15:05:45.558" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:05:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05...</msg>
<status status="PASS" endtime="20201110 15:05:45.559" starttime="20201110 15:05:01.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:05:45.559" starttime="20201110 15:05:45.559"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:05:45.559" critical="yes" starttime="20201110 15:05:01.485"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:05:45.565" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:05:45.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:05:45.571" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:45.571" starttime="20201110 15:05:45.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:05:45.572" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:45.572" starttime="20201110 15:05:45.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:05:45.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:05:45.573" starttime="20201110 15:05:45.573"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.573" starttime="20201110 15:05:45.562"></status>
</kw>
<msg timestamp="20201110 15:05:45.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:05:45.574" starttime="20201110 15:05:45.562"></status>
</kw>
<msg timestamp="20201110 15:05:45.574" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:45.574" starttime="20201110 15:05:45.561"></status>
</kw>
<msg timestamp="20201110 15:05:45.574" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201110 15:05:45.574" starttime="20201110 15:05:45.561"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:05:45.575" level="INFO">${random} = 28</msg>
<status status="PASS" endtime="20201110 15:05:45.575" starttime="20201110 15:05:45.574"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:05:45.579" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:05:45.579" starttime="20201110 15:05:45.578"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:05:45.579" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:05:45.579" starttime="20201110 15:05:45.579"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.579" starttime="20201110 15:05:45.578"></status>
</kw>
<msg timestamp="20201110 15:05:45.580" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:05:45.580" starttime="20201110 15:05:45.577"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.580" starttime="20201110 15:05:45.576"></status>
</kw>
<msg timestamp="20201110 15:05:45.580" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:05:45.580" starttime="20201110 15:05:45.576"></status>
</kw>
<msg timestamp="20201110 15:05:45.580" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:05:45.580" starttime="20201110 15:05:45.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:05:45.584" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:05:45.584" starttime="20201110 15:05:45.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:05:45.585" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:05:45.585" starttime="20201110 15:05:45.584"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.585" starttime="20201110 15:05:45.583"></status>
</kw>
<msg timestamp="20201110 15:05:45.585" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:05:45.585" starttime="20201110 15:05:45.583"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.585" starttime="20201110 15:05:45.582"></status>
</kw>
<msg timestamp="20201110 15:05:45.586" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:05:45.586" starttime="20201110 15:05:45.582"></status>
</kw>
<msg timestamp="20201110 15:05:45.586" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:05:45.586" starttime="20201110 15:05:45.581"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:05:45.589" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:05:45.589" starttime="20201110 15:05:45.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:05:45.590" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:05:45.590" starttime="20201110 15:05:45.589"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.590" starttime="20201110 15:05:45.588"></status>
</kw>
<msg timestamp="20201110 15:05:45.590" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:05:45.590" starttime="20201110 15:05:45.588"></status>
</kw>
<status status="PASS" endtime="20201110 15:05:45.591" starttime="20201110 15:05:45.587"></status>
</kw>
<msg timestamp="20201110 15:05:45.591" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-28.txt</msg>
<status status="PASS" endtime="20201110 15:05:45.591" starttime="20201110 15:05:45.587"></status>
</kw>
<msg timestamp="20201110 15:05:45.591" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-28.txt</msg>
<status status="PASS" endtime="20201110 15:05:45.591" starttime="20201110 15:05:45.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:05:45.595" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-28.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:06:26.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:06:26.392" level="INFO">${output} = 2020-11-10 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:06:26.392" starttime="20201110 15:05:45.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:06:26.393" level="INFO">2020-11-10 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:48 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-10 15:05:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-10 15:05:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:05:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:05:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:05:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E206CAFAA4DF-&gt;e1cded4a-a23c-44ee-918e-5d822c3697f2
2020-11-10 15:05:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:05:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:05:49 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:05:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020635783_0002
2020-11-10 15:05:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:50 INFO  Configuration:2752 - resource-types.xml not found
2020-11-10 15:05:50 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-10 15:05:50 INFO  YarnClientImpl:324 - Submitted application application_1605020635783_0002
2020-11-10 15:05:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020635783_0002/
2020-11-10 15:05:50 INFO  Job:1619 - Running job: job_1605020635783_0002
2020-11-10 15:05:58 INFO  Job:1640 - Job job_1605020635783_0002 running in uber mode : false
2020-11-10 15:05:58 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:06:05 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:06:11 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:06:17 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:06:21 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:06:25 INFO  Job:1658 - Job job_1605020635783_0002 completed successfully
2020-11-10 15:06:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:06:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42760
		Total time spent by all reduces in occupied slots (ms)=15816
		Total time spent by all map tasks (ms)=10690
		Total time spent by all reduce tasks (ms)=3954
		Total vcore-milliseconds taken by all map tasks=10690
		Total vcore-milliseconds taken by all reduce tasks=3954
		Total megabyte-milliseconds taken by all map tasks=43786240
		Total megabyte-milliseconds taken by all reduce tasks=16195584
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=633
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1228591104
		Virtual memory (bytes) snapshot=15800926208
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=312287232
		Peak Map Virtual memory (bytes)=3947466752
		Peak Reduce Physical memory (bytes)=297754624
		Peak Reduce Virtual memory (bytes)=3967975424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-10 15:06:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201110 15:06:26.393" starttime="20201110 15:06:26.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:06:26.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:06:26.394" starttime="20201110 15:06:26.394"></status>
</kw>
<status status="PASS" endtime="20201110 15:06:26.394" starttime="20201110 15:05:45.592"></status>
</kw>
<msg timestamp="20201110 15:06:26.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:06:26.395" starttime="20201110 15:05:45.592"></status>
</kw>
<msg timestamp="20201110 15:06:26.395" level="INFO">${output} = 2020-11-10 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-10 15:05:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201110 15:06:26.395" starttime="20201110 15:05:45.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:06:26.396" starttime="20201110 15:06:26.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:06:26.396" starttime="20201110 15:06:26.396"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:06:26.396" critical="yes" starttime="20201110 15:05:45.560"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:06:26.398" starttime="20201110 15:05:01.432"></status>
</suite>
<status status="PASS" elapsedtime="201898" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:08.581" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:13.640" level="INFO">${rc} = 255</msg>
<msg timestamp="20201110 15:09:13.640" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:09:13.640" starttime="20201110 15:09:08.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:13.641" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:09:13.641" starttime="20201110 15:09:13.640"></status>
</kw>
<msg timestamp="20201110 15:09:13.642" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201110 15:09:13.642" starttime="20201110 15:09:08.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:13.647" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:17.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:17.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:17.015" starttime="20201110 15:09:13.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:17.016" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:17.016" starttime="20201110 15:09:17.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:17.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:17.017" starttime="20201110 15:09:17.016"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:17.017" starttime="20201110 15:09:13.643"></status>
</kw>
<msg timestamp="20201110 15:09:17.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:17.018" starttime="20201110 15:09:13.643"></status>
</kw>
<msg timestamp="20201110 15:09:17.018" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201110 15:09:17.018" starttime="20201110 15:09:13.643"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201110 15:09:17.018" starttime="20201110 15:09:17.018"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:17.019" starttime="20201110 15:09:13.642"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:17.019" starttime="20201110 15:09:13.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:17.023" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:20.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:20.226" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:20.226" starttime="20201110 15:09:17.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:20.227" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:20.227" starttime="20201110 15:09:20.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:20.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:20.228" starttime="20201110 15:09:20.227"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:20.228" starttime="20201110 15:09:17.020"></status>
</kw>
<msg timestamp="20201110 15:09:20.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:20.228" starttime="20201110 15:09:17.020"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:20.228" starttime="20201110 15:09:17.020"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:20.228" starttime="20201110 15:09:17.019"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:20.228" starttime="20201110 15:09:17.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201110 15:09:20.229" starttime="20201110 15:09:20.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:20.234" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:23.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:23.743" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:09:19.955Z",
  "modificat...</msg>
<status status="PASS" endtime="20201110 15:09:23.743" starttime="20201110 15:09:20.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:23.745" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:09:19.955Z",
  "modificationTime" : "2020-11-10T15:09:19.955Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201110 15:09:23.745" starttime="20201110 15:09:23.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:23.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:23.745" starttime="20201110 15:09:23.745"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:23.746" starttime="20201110 15:09:20.230"></status>
</kw>
<msg timestamp="20201110 15:09:23.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:23.746" starttime="20201110 15:09:20.230"></status>
</kw>
<msg timestamp="20201110 15:09:23.746" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-10T15:09:19.955Z",
  "modificat...</msg>
<status status="PASS" endtime="20201110 15:09:23.746" starttime="20201110 15:09:20.229"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201110 15:09:23.747" starttime="20201110 15:09:23.746"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:09:23.751" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:09:23.751" starttime="20201110 15:09:23.750"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:09:23.751" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:09:23.751" starttime="20201110 15:09:23.751"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:23.751" starttime="20201110 15:09:23.750"></status>
</kw>
<msg timestamp="20201110 15:09:23.752" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:09:23.752" starttime="20201110 15:09:23.749"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:23.752" starttime="20201110 15:09:23.748"></status>
</kw>
<msg timestamp="20201110 15:09:23.752" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 15:09:23.752" starttime="20201110 15:09:23.748"></status>
</kw>
<msg timestamp="20201110 15:09:23.752" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201110 15:09:23.752" starttime="20201110 15:09:23.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:23.758" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:27.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:27.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:27.132" starttime="20201110 15:09:23.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:27.133" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:27.133" starttime="20201110 15:09:27.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:27.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:27.134" starttime="20201110 15:09:27.133"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:27.134" starttime="20201110 15:09:23.753"></status>
</kw>
<msg timestamp="20201110 15:09:27.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:27.134" starttime="20201110 15:09:23.753"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:27.135" starttime="20201110 15:09:23.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:27.139" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:34.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:34.353" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:34.353" starttime="20201110 15:09:27.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:34.355" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:34.356" starttime="20201110 15:09:34.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:34.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:34.356" starttime="20201110 15:09:34.356"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:34.357" starttime="20201110 15:09:27.136"></status>
</kw>
<msg timestamp="20201110 15:09:34.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:34.357" starttime="20201110 15:09:27.136"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:34.357" starttime="20201110 15:09:27.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:34.361" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:39.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:39.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:39.517" starttime="20201110 15:09:34.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:39.518" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:39.519" starttime="20201110 15:09:39.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:39.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:39.519" starttime="20201110 15:09:39.519"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:39.519" starttime="20201110 15:09:34.358"></status>
</kw>
<msg timestamp="20201110 15:09:39.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:39.520" starttime="20201110 15:09:34.358"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:39.520" starttime="20201110 15:09:34.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:39.524" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:44.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:44.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:44.611" starttime="20201110 15:09:39.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:44.612" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:44.612" starttime="20201110 15:09:44.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:44.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:44.613" starttime="20201110 15:09:44.612"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:44.613" starttime="20201110 15:09:39.521"></status>
</kw>
<msg timestamp="20201110 15:09:44.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:44.614" starttime="20201110 15:09:39.521"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:44.614" starttime="20201110 15:09:39.520"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:09:44.614" critical="yes" starttime="20201110 15:09:08.573"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:09:44.620" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:09:44.620" starttime="20201110 15:09:44.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:09:44.620" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:09:44.620" starttime="20201110 15:09:44.620"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:44.621" starttime="20201110 15:09:44.619"></status>
</kw>
<msg timestamp="20201110 15:09:44.621" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:09:44.621" starttime="20201110 15:09:44.618"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:44.621" starttime="20201110 15:09:44.618"></status>
</kw>
<msg timestamp="20201110 15:09:44.621" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:09:44.621" starttime="20201110 15:09:44.617"></status>
</kw>
<msg timestamp="20201110 15:09:44.621" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:09:44.621" starttime="20201110 15:09:44.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:44.625" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:47.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:47.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:47.942" starttime="20201110 15:09:44.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:47.943" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:47.943" starttime="20201110 15:09:47.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:47.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:47.944" starttime="20201110 15:09:47.944"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:47.944" starttime="20201110 15:09:44.622"></status>
</kw>
<msg timestamp="20201110 15:09:47.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:47.945" starttime="20201110 15:09:44.622"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:47.945" starttime="20201110 15:09:44.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:47.948" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:09:51.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:09:51.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201110 15:09:51.182" starttime="20201110 15:09:47.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:09:51.183" level="INFO"></msg>
<status status="PASS" endtime="20201110 15:09:51.183" starttime="20201110 15:09:51.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:09:51.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:09:51.184" starttime="20201110 15:09:51.183"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:51.184" starttime="20201110 15:09:47.946"></status>
</kw>
<msg timestamp="20201110 15:09:51.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:09:51.184" starttime="20201110 15:09:47.946"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:51.185" starttime="20201110 15:09:47.945"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201110 15:09:51.185" critical="yes" starttime="20201110 15:09:44.615"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201110 15:09:51.187" starttime="20201110 15:09:08.501"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:11:35.499" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:11:35.499" starttime="20201110 15:11:35.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:11:35.500" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:11:35.500" starttime="20201110 15:11:35.499"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:35.500" starttime="20201110 15:11:35.498"></status>
</kw>
<msg timestamp="20201110 15:11:35.500" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:11:35.500" starttime="20201110 15:11:35.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:11:35.501" starttime="20201110 15:11:35.501"></status>
</kw>
<msg timestamp="20201110 15:11:35.501" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:11:35.501" starttime="20201110 15:11:35.500"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:35.502" starttime="20201110 15:11:35.497"></status>
</kw>
<msg timestamp="20201110 15:11:35.502" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:11:35.502" starttime="20201110 15:11:35.496"></status>
</kw>
<msg timestamp="20201110 15:11:35.502" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:11:35.502" starttime="20201110 15:11:35.495"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:11:35.503" level="INFO">${random} = 94138</msg>
<status status="PASS" endtime="20201110 15:11:35.503" starttime="20201110 15:11:35.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:11:35.508" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-94138 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:11:39.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:11:39.292" level="INFO">${output} = 2020-11-10 15:11:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:11:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:11:39.292" starttime="20201110 15:11:35.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:11:39.293" level="INFO">2020-11-10 15:11:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:11:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:11:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:11:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:11:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ABED0DA3D4C1-&gt;b368d15b-7ded-459f-b4ad-b3686030775b
2020-11-10 15:11:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201110 15:11:39.293" starttime="20201110 15:11:39.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:11:39.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:11:39.294" starttime="20201110 15:11:39.294"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:39.295" starttime="20201110 15:11:35.503"></status>
</kw>
<msg timestamp="20201110 15:11:39.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:11:39.295" starttime="20201110 15:11:35.503"></status>
</kw>
<msg timestamp="20201110 15:11:39.295" level="INFO">${result} = 2020-11-10 15:11:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:11:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:11:39.295" starttime="20201110 15:11:35.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:11:39.300" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:11:41.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:11:41.190" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:09 ofs://om/volume1/bucket1/ozone-35463
-rw-...</msg>
<status status="PASS" endtime="20201110 15:11:41.190" starttime="20201110 15:11:39.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:11:41.191" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:09 ofs://om/volume1/bucket1/ozone-35463
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:11 ofs://om/volume1/bucket1/ozone-94138
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:11 ofs://om/volume1/bucket1/wordcount-04.txt</msg>
<status status="PASS" endtime="20201110 15:11:41.191" starttime="20201110 15:11:41.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:11:41.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:11:41.192" starttime="20201110 15:11:41.191"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:41.192" starttime="20201110 15:11:39.297"></status>
</kw>
<msg timestamp="20201110 15:11:41.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:11:41.192" starttime="20201110 15:11:39.297"></status>
</kw>
<msg timestamp="20201110 15:11:41.192" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:09 ofs://om/volume1/bucket1/ozone-35463
-rw-...</msg>
<status status="PASS" endtime="20201110 15:11:41.192" starttime="20201110 15:11:39.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:11:41.194" starttime="20201110 15:11:41.193"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:11:41.195" critical="yes" starttime="20201110 15:11:35.495"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:11:41.196" starttime="20201110 15:11:35.443"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:09:56.185" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:09:56.185" starttime="20201110 15:09:56.184"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:09:56.185" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:09:56.185" starttime="20201110 15:09:56.185"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:56.186" starttime="20201110 15:09:56.184"></status>
</kw>
<msg timestamp="20201110 15:09:56.186" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:09:56.186" starttime="20201110 15:09:56.183"></status>
</kw>
<status status="PASS" endtime="20201110 15:09:56.186" starttime="20201110 15:09:56.183"></status>
</kw>
<msg timestamp="20201110 15:09:56.186" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:09:56.186" starttime="20201110 15:09:56.182"></status>
</kw>
<msg timestamp="20201110 15:09:56.186" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:09:56.186" starttime="20201110 15:09:56.181"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:09:56.187" level="INFO">${random} = 35463</msg>
<status status="PASS" endtime="20201110 15:09:56.187" starttime="20201110 15:09:56.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:09:56.194" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-35463 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:10:00.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:10:00.434" level="INFO">${output} = 2020-11-10 15:09:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:09:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:10:00.434" starttime="20201110 15:09:56.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:10:00.435" level="INFO">2020-11-10 15:09:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:09:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:09:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:09:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:09:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CBBCD5EBDB24-&gt;b368d15b-7ded-459f-b4ad-b3686030775b
2020-11-10 15:09:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201110 15:10:00.435" starttime="20201110 15:10:00.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:10:00.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:10:00.436" starttime="20201110 15:10:00.435"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:00.436" starttime="20201110 15:09:56.188"></status>
</kw>
<msg timestamp="20201110 15:10:00.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:10:00.436" starttime="20201110 15:09:56.188"></status>
</kw>
<msg timestamp="20201110 15:10:00.437" level="INFO">${result} = 2020-11-10 15:09:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:09:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201110 15:10:00.437" starttime="20201110 15:09:56.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:10:00.442" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:10:02.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:10:02.335" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:09 o3fs://bucket1.volume1.om/ozone-35463
dr...</msg>
<status status="PASS" endtime="20201110 15:10:02.335" starttime="20201110 15:10:00.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:10:02.337" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:09 o3fs://bucket1.volume1.om/ozone-35463
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201110 15:10:02.337" starttime="20201110 15:10:02.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:10:02.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:10:02.337" starttime="20201110 15:10:02.337"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:02.338" starttime="20201110 15:10:00.439"></status>
</kw>
<msg timestamp="20201110 15:10:02.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:10:02.338" starttime="20201110 15:10:00.438"></status>
</kw>
<msg timestamp="20201110 15:10:02.338" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-10 15:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-10 15:09 o3fs://bucket1.volume1.om/ozone-35463
dr...</msg>
<status status="PASS" endtime="20201110 15:10:02.338" starttime="20201110 15:10:00.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:10:02.339" starttime="20201110 15:10:02.338"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201110 15:10:02.339" critical="yes" starttime="20201110 15:09:56.180"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201110 15:10:02.340" starttime="20201110 15:09:56.127"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:11:46.221" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:11:46.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:11:46.227" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:11:46.227" starttime="20201110 15:11:46.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:11:46.228" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:11:46.228" starttime="20201110 15:11:46.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:11:46.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:11:46.229" starttime="20201110 15:11:46.228"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:46.229" starttime="20201110 15:11:46.216"></status>
</kw>
<msg timestamp="20201110 15:11:46.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:11:46.229" starttime="20201110 15:11:46.216"></status>
</kw>
<msg timestamp="20201110 15:11:46.230" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:11:46.230" starttime="20201110 15:11:46.215"></status>
</kw>
<msg timestamp="20201110 15:11:46.230" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:11:46.230" starttime="20201110 15:11:46.215"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:11:46.235" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:11:46.235" starttime="20201110 15:11:46.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:11:46.235" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:11:46.235" starttime="20201110 15:11:46.235"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:46.236" starttime="20201110 15:11:46.233"></status>
</kw>
<msg timestamp="20201110 15:11:46.236" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:11:46.236" starttime="20201110 15:11:46.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:11:46.237" starttime="20201110 15:11:46.236"></status>
</kw>
<msg timestamp="20201110 15:11:46.237" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:11:46.237" starttime="20201110 15:11:46.236"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:46.237" starttime="20201110 15:11:46.232"></status>
</kw>
<msg timestamp="20201110 15:11:46.237" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:11:46.237" starttime="20201110 15:11:46.231"></status>
</kw>
<msg timestamp="20201110 15:11:46.237" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:11:46.238" starttime="20201110 15:11:46.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:11:46.242" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:12:27.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:12:27.866" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:11:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:11:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:12:27.866" starttime="20201110 15:11:46.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:12:27.868" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:11:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:11:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:11:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:11:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:11:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5B12569624BD-&gt;b368d15b-7ded-459f-b4ad-b3686030775b
2020-11-10 15:11:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:11:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:11:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:11:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:11:53 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:11:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020920724_0003
2020-11-10 15:11:53 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:11:53 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:11:53 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:11:53 INFO  YarnClientImpl:329 - Submitted application application_1605020920724_0003
2020-11-10 15:11:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020920724_0003/
2020-11-10 15:11:53 INFO  Job:1619 - Running job: job_1605020920724_0003
2020-11-10 15:12:01 INFO  Job:1640 - Job job_1605020920724_0003 running in uber mode : false
2020-11-10 15:12:01 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:12:07 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:12:14 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:12:19 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:12:24 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:12:27 INFO  Job:1658 - Job job_1605020920724_0003 completed successfully
2020-11-10 15:12:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42004
		Total time spent by all reduces in occupied slots (ms)=16144
		Total time spent by all map tasks (ms)=10501
		Total time spent by all reduce tasks (ms)=4036
		Total vcore-milliseconds taken by all map tasks=10501
		Total vcore-milliseconds taken by all reduce tasks=4036
		Total megabyte-milliseconds taken by all map tasks=43012096
		Total megabyte-milliseconds taken by all reduce tasks=16531456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=655
		CPU time spent (ms)=7640
		Physical memory (bytes) snapshot=1179746304
		Virtual memory (bytes) snapshot=15811641344
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=295235584
		Peak Map Virtual memory (bytes)=3949281280
		Peak Reduce Physical memory (bytes)=297144320
		Peak Reduce Virtual memory (bytes)=3966042112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.235 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201110 15:12:27.868" starttime="20201110 15:12:27.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:12:27.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:12:27.868" starttime="20201110 15:12:27.868"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.869" starttime="20201110 15:11:46.238"></status>
</kw>
<msg timestamp="20201110 15:12:27.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:12:27.869" starttime="20201110 15:11:46.238"></status>
</kw>
<msg timestamp="20201110 15:12:27.869" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:11:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:11:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:12:27.869" starttime="20201110 15:11:46.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:12:27.870" starttime="20201110 15:12:27.870"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:12:27.870" critical="yes" starttime="20201110 15:11:46.214"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:12:27.875" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:12:27.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:12:27.881" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:12:27.881" starttime="20201110 15:12:27.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:12:27.882" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:12:27.882" starttime="20201110 15:12:27.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:12:27.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:12:27.883" starttime="20201110 15:12:27.882"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.883" starttime="20201110 15:12:27.873"></status>
</kw>
<msg timestamp="20201110 15:12:27.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:12:27.883" starttime="20201110 15:12:27.872"></status>
</kw>
<msg timestamp="20201110 15:12:27.884" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:12:27.884" starttime="20201110 15:12:27.872"></status>
</kw>
<msg timestamp="20201110 15:12:27.884" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:12:27.884" starttime="20201110 15:12:27.872"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:12:27.885" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20201110 15:12:27.885" starttime="20201110 15:12:27.884"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:12:27.889" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:12:27.889" starttime="20201110 15:12:27.888"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:12:27.889" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:12:27.889" starttime="20201110 15:12:27.889"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.890" starttime="20201110 15:12:27.888"></status>
</kw>
<msg timestamp="20201110 15:12:27.890" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:12:27.890" starttime="20201110 15:12:27.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201110 15:12:27.891" starttime="20201110 15:12:27.890"></status>
</kw>
<msg timestamp="20201110 15:12:27.891" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201110 15:12:27.891" starttime="20201110 15:12:27.890"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.891" starttime="20201110 15:12:27.886"></status>
</kw>
<msg timestamp="20201110 15:12:27.891" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:12:27.891" starttime="20201110 15:12:27.886"></status>
</kw>
<msg timestamp="20201110 15:12:27.891" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201110 15:12:27.891" starttime="20201110 15:12:27.885"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:12:27.895" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:12:27.895" starttime="20201110 15:12:27.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:12:27.895" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:12:27.895" starttime="20201110 15:12:27.895"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.895" starttime="20201110 15:12:27.894"></status>
</kw>
<msg timestamp="20201110 15:12:27.896" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:12:27.896" starttime="20201110 15:12:27.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:12:27.897" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201110 15:12:27.897" starttime="20201110 15:12:27.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:12:27.898" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201110 15:12:27.898" starttime="20201110 15:12:27.897"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.898" starttime="20201110 15:12:27.896"></status>
</kw>
<msg timestamp="20201110 15:12:27.898" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201110 15:12:27.898" starttime="20201110 15:12:27.896"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.898" starttime="20201110 15:12:27.893"></status>
</kw>
<msg timestamp="20201110 15:12:27.899" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:12:27.899" starttime="20201110 15:12:27.892"></status>
</kw>
<msg timestamp="20201110 15:12:27.899" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201110 15:12:27.899" starttime="20201110 15:12:27.891"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201110 15:12:27.902" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201110 15:12:27.902" starttime="20201110 15:12:27.902"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:12:27.903" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201110 15:12:27.903" starttime="20201110 15:12:27.902"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.903" starttime="20201110 15:12:27.901"></status>
</kw>
<msg timestamp="20201110 15:12:27.903" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201110 15:12:27.903" starttime="20201110 15:12:27.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:12:27.905" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201110 15:12:27.905" starttime="20201110 15:12:27.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:12:27.905" level="INFO">${result} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201110 15:12:27.905" starttime="20201110 15:12:27.905"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.905" starttime="20201110 15:12:27.904"></status>
</kw>
<msg timestamp="20201110 15:12:27.906" level="INFO">${path_with_leading} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201110 15:12:27.906" starttime="20201110 15:12:27.903"></status>
</kw>
<status status="PASS" endtime="20201110 15:12:27.906" starttime="20201110 15:12:27.900"></status>
</kw>
<msg timestamp="20201110 15:12:27.906" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201110 15:12:27.906" starttime="20201110 15:12:27.900"></status>
</kw>
<msg timestamp="20201110 15:12:27.906" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201110 15:12:27.906" starttime="20201110 15:12:27.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:12:27.910" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:13:07.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:13:07.384" level="INFO">${output} = 2020-11-10 15:12:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:12:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201110 15:13:07.384" starttime="20201110 15:12:27.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:13:07.385" level="INFO">2020-11-10 15:12:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:12:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:12:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:12:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:12:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:12:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:12:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-52DBEBA7D510-&gt;b368d15b-7ded-459f-b4ad-b3686030775b
2020-11-10 15:12:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:12:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:12:31 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:12:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020920724_0004
2020-11-10 15:12:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:12:32 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:12:32 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:12:32 INFO  YarnClientImpl:329 - Submitted application application_1605020920724_0004
2020-11-10 15:12:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020920724_0004/
2020-11-10 15:12:32 INFO  Job:1619 - Running job: job_1605020920724_0004
2020-11-10 15:12:40 INFO  Job:1640 - Job job_1605020920724_0004 running in uber mode : false
2020-11-10 15:12:40 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:12:46 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:12:52 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:12:58 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:13:03 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:13:06 INFO  Job:1658 - Job job_1605020920724_0004 completed successfully
2020-11-10 15:13:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41240
		Total time spent by all reduces in occupied slots (ms)=16140
		Total time spent by all map tasks (ms)=10310
		Total time spent by all reduce tasks (ms)=4035
		Total vcore-milliseconds taken by all map tasks=10310
		Total vcore-milliseconds taken by all reduce tasks=4035
		Total megabyte-milliseconds taken by all map tasks=42229760
		Total megabyte-milliseconds taken by all reduce tasks=16527360
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1249189888
		Virtual memory (bytes) snapshot=15785873408
		Total committed heap usage (bytes)=1086849024
		Peak Map Physical memory (bytes)=302243840
		Peak Map Virtual memory (bytes)=3950211072
		Peak Reduce Physical memory (bytes)=390377472
		Peak Reduce Virtual memory (bytes)=3966734336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201110 15:13:07.385" starttime="20201110 15:13:07.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:13:07.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:13:07.386" starttime="20201110 15:13:07.386"></status>
</kw>
<status status="PASS" endtime="20201110 15:13:07.386" starttime="20201110 15:12:27.908"></status>
</kw>
<msg timestamp="20201110 15:13:07.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:13:07.387" starttime="20201110 15:12:27.907"></status>
</kw>
<msg timestamp="20201110 15:13:07.387" level="INFO">${output} = 2020-11-10 15:12:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:12:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201110 15:13:07.387" starttime="20201110 15:12:27.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:13:07.388" starttime="20201110 15:13:07.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:13:07.388" starttime="20201110 15:13:07.388"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:13:07.388" critical="yes" starttime="20201110 15:12:27.871"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:13:07.390" starttime="20201110 15:11:46.158"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:10:07.298" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:10:07.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:10:07.313" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:07.313" starttime="20201110 15:10:07.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:10:07.314" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:07.314" starttime="20201110 15:10:07.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:10:07.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:10:07.315" starttime="20201110 15:10:07.314"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:07.315" starttime="20201110 15:10:07.293"></status>
</kw>
<msg timestamp="20201110 15:10:07.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:10:07.315" starttime="20201110 15:10:07.293"></status>
</kw>
<msg timestamp="20201110 15:10:07.315" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:07.315" starttime="20201110 15:10:07.292"></status>
</kw>
<msg timestamp="20201110 15:10:07.316" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:07.316" starttime="20201110 15:10:07.292"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:10:07.321" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:10:07.321" starttime="20201110 15:10:07.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:10:07.321" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:10:07.321" starttime="20201110 15:10:07.321"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:07.321" starttime="20201110 15:10:07.319"></status>
</kw>
<msg timestamp="20201110 15:10:07.322" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:10:07.322" starttime="20201110 15:10:07.318"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:07.322" starttime="20201110 15:10:07.317"></status>
</kw>
<msg timestamp="20201110 15:10:07.322" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:10:07.322" starttime="20201110 15:10:07.317"></status>
</kw>
<msg timestamp="20201110 15:10:07.322" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:10:07.322" starttime="20201110 15:10:07.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:10:07.327" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:10:50.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:10:50.611" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:10:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:10:09 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:10:50.611" starttime="20201110 15:10:07.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:10:50.612" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:10:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:10:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:10:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:10:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:10:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C3B370FDFC92-&gt;b368d15b-7ded-459f-b4ad-b3686030775b
2020-11-10 15:10:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-10 15:10:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:10:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:10:14 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:10:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020920724_0001
2020-11-10 15:10:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:10:14 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:10:14 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:10:15 INFO  YarnClientImpl:329 - Submitted application application_1605020920724_0001
2020-11-10 15:10:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020920724_0001/
2020-11-10 15:10:15 INFO  Job:1619 - Running job: job_1605020920724_0001
2020-11-10 15:10:26 INFO  Job:1640 - Job job_1605020920724_0001 running in uber mode : false
2020-11-10 15:10:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:10:32 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:10:38 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:10:43 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:10:48 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:10:49 INFO  Job:1658 - Job job_1605020920724_0001 completed successfully
2020-11-10 15:10:49 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42140
		Total time spent by all reduces in occupied slots (ms)=20216
		Total time spent by all map tasks (ms)=10535
		Total time spent by all reduce tasks (ms)=5054
		Total vcore-milliseconds taken by all map tasks=10535
		Total vcore-milliseconds taken by all reduce tasks=5054
		Total megabyte-milliseconds taken by all map tasks=43151360
		Total megabyte-milliseconds taken by all reduce tasks=20701184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=677
		CPU time spent (ms)=7340
		Physical memory (bytes) snapshot=1272258560
		Virtual memory (bytes) snapshot=15823081472
		Total committed heap usage (bytes)=1260912640
		Peak Map Physical memory (bytes)=297705472
		Peak Map Virtual memory (bytes)=3953516544
		Peak Reduce Physical memory (bytes)=385441792
		Peak Reduce Virtual memory (bytes)=3967971328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.625 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201110 15:10:50.613" starttime="20201110 15:10:50.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:10:50.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:10:50.614" starttime="20201110 15:10:50.613"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.614" starttime="20201110 15:10:07.323"></status>
</kw>
<msg timestamp="20201110 15:10:50.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:10:50.614" starttime="20201110 15:10:07.323"></status>
</kw>
<msg timestamp="20201110 15:10:50.614" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-10 15:10:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:10:09 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201110 15:10:50.615" starttime="20201110 15:10:07.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:10:50.615" starttime="20201110 15:10:50.615"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:10:50.615" critical="yes" starttime="20201110 15:10:07.291"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:10:50.621" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:10:50.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:10:50.628" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:50.628" starttime="20201110 15:10:50.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:10:50.629" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:50.629" starttime="20201110 15:10:50.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:10:50.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:10:50.630" starttime="20201110 15:10:50.629"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.630" starttime="20201110 15:10:50.618"></status>
</kw>
<msg timestamp="20201110 15:10:50.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:10:50.630" starttime="20201110 15:10:50.618"></status>
</kw>
<msg timestamp="20201110 15:10:50.630" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:50.630" starttime="20201110 15:10:50.617"></status>
</kw>
<msg timestamp="20201110 15:10:50.630" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201110 15:10:50.631" starttime="20201110 15:10:50.617"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201110 15:10:50.631" level="INFO">${random} = 04</msg>
<status status="PASS" endtime="20201110 15:10:50.631" starttime="20201110 15:10:50.631"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:10:50.635" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:10:50.635" starttime="20201110 15:10:50.635"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:10:50.636" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:10:50.636" starttime="20201110 15:10:50.635"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.636" starttime="20201110 15:10:50.634"></status>
</kw>
<msg timestamp="20201110 15:10:50.636" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:10:50.636" starttime="20201110 15:10:50.633"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.636" starttime="20201110 15:10:50.633"></status>
</kw>
<msg timestamp="20201110 15:10:50.637" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:10:50.637" starttime="20201110 15:10:50.632"></status>
</kw>
<msg timestamp="20201110 15:10:50.637" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201110 15:10:50.637" starttime="20201110 15:10:50.631"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:10:50.640" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:10:50.640" starttime="20201110 15:10:50.640"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:10:50.641" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:10:50.641" starttime="20201110 15:10:50.640"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.641" starttime="20201110 15:10:50.639"></status>
</kw>
<msg timestamp="20201110 15:10:50.641" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:10:50.641" starttime="20201110 15:10:50.639"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.641" starttime="20201110 15:10:50.638"></status>
</kw>
<msg timestamp="20201110 15:10:50.641" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:10:50.641" starttime="20201110 15:10:50.638"></status>
</kw>
<msg timestamp="20201110 15:10:50.641" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201110 15:10:50.641" starttime="20201110 15:10:50.637"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201110 15:10:50.645" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201110 15:10:50.645" starttime="20201110 15:10:50.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201110 15:10:50.645" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201110 15:10:50.645" starttime="20201110 15:10:50.645"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.645" starttime="20201110 15:10:50.644"></status>
</kw>
<msg timestamp="20201110 15:10:50.646" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201110 15:10:50.646" starttime="20201110 15:10:50.643"></status>
</kw>
<status status="PASS" endtime="20201110 15:10:50.646" starttime="20201110 15:10:50.643"></status>
</kw>
<msg timestamp="20201110 15:10:50.646" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201110 15:10:50.646" starttime="20201110 15:10:50.642"></status>
</kw>
<msg timestamp="20201110 15:10:50.646" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201110 15:10:50.646" starttime="20201110 15:10:50.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201110 15:10:50.652" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-04.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201110 15:11:30.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201110 15:11:30.425" level="INFO">${output} = 2020-11-10 15:10:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:10:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201110 15:11:30.425" starttime="20201110 15:10:50.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201110 15:11:30.426" level="INFO">2020-11-10 15:10:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:10:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-10 15:10:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-10 15:10:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-10 15:10:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-10 15:10:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-10 15:10:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5E78AA475B39-&gt;b368d15b-7ded-459f-b4ad-b3686030775b
2020-11-10 15:10:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-10 15:10:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-10 15:10:54 INFO  JobSubmitter:202 - number of splits:3
2020-11-10 15:10:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1605020920724_0002
2020-11-10 15:10:55 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-10 15:10:55 INFO  Configuration:2795 - resource-types.xml not found
2020-11-10 15:10:55 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-10 15:10:55 INFO  YarnClientImpl:329 - Submitted application application_1605020920724_0002
2020-11-10 15:10:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1605020920724_0002/
2020-11-10 15:10:55 INFO  Job:1619 - Running job: job_1605020920724_0002
2020-11-10 15:11:03 INFO  Job:1640 - Job job_1605020920724_0002 running in uber mode : false
2020-11-10 15:11:03 INFO  Job:1647 -  map 0% reduce 0%
2020-11-10 15:11:10 INFO  Job:1647 -  map 33% reduce 0%
2020-11-10 15:11:16 INFO  Job:1647 -  map 67% reduce 0%
2020-11-10 15:11:21 INFO  Job:1647 -  map 100% reduce 0%
2020-11-10 15:11:28 INFO  Job:1647 -  map 100% reduce 100%
2020-11-10 15:11:29 INFO  Job:1658 - Job job_1605020920724_0002 completed successfully
2020-11-10 15:11:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42152
		Total time spent by all reduces in occupied slots (ms)=25324
		Total time spent by all map tasks (ms)=10538
		Total time spent by all reduce tasks (ms)=6331
		Total vcore-milliseconds taken by all map tasks=10538
		Total vcore-milliseconds taken by all reduce tasks=6331
		Total megabyte-milliseconds taken by all map tasks=43163648
		Total megabyte-milliseconds taken by all reduce tasks=25931776
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7470
		Physical memory (bytes) snapshot=1261178880
		Virtual memory (bytes) snapshot=15797035008
		Total committed heap usage (bytes)=1233649664
		Peak Map Physical memory (bytes)=297136128
		Peak Map Virtual memory (bytes)=3946946560
		Peak Reduce Physical memory (bytes)=387751936
		Peak Reduce Virtual memory (bytes)=3967524864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201110 15:11:30.426" starttime="20201110 15:11:30.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201110 15:11:30.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201110 15:11:30.427" starttime="20201110 15:11:30.427"></status>
</kw>
<status status="PASS" endtime="20201110 15:11:30.427" starttime="20201110 15:10:50.647"></status>
</kw>
<msg timestamp="20201110 15:11:30.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201110 15:11:30.428" starttime="20201110 15:10:50.647"></status>
</kw>
<msg timestamp="20201110 15:11:30.428" level="INFO">${output} = 2020-11-10 15:10:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-11-10 15:10:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201110 15:11:30.428" starttime="20201110 15:10:50.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201110 15:11:30.429" starttime="20201110 15:11:30.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201110 15:11:30.429" starttime="20201110 15:11:30.429"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201110 15:11:30.429" critical="yes" starttime="20201110 15:10:50.616"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201110 15:11:30.430" starttime="20201110 15:10:07.239"></status>
</suite>
<status status="PASS" elapsedtime="219075" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="609579" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
