<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201129 13:38:59.641" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:34:27.566" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:34:38.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:34:38.726" level="INFO">${output} = 2020-11-29 13:34:29,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:29,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:38.726" starttime="20201129 13:34:27.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:34:38.727" level="INFO">2020-11-29 13:34:29,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:29,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:34:29,710 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-29 13:34:32,808 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-29 13:34:32,809 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-29 13:34:32,809 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-29 13:34:32,809 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-29 13:34:32,809 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-29 13:34:32,809 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-29 13:34:32,809 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-29 13:34:32,812 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-29 13:34:32,824 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:32,858 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-20875, with testuser/scm@EXAMPLE.COM as owner.
2020-11-29 13:34:33,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-20875/bucket-0-43320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:34:33,826 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:34,826 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:35,827 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:36,360 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-29 13:34:36,828 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,585
Average Time spent in bucket creation: 00:00:00,214
Average Time spent in key creation: 00:00:01,444
Average Time spent in key write: 00:00:01,476
Total bytes written: 10240
Total Execution time: 00:00:08,307
***************************************************</msg>
<status status="PASS" endtime="20201129 13:34:38.727" starttime="20201129 13:34:38.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:34:38.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:34:38.728" starttime="20201129 13:34:38.727"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:38.728" starttime="20201129 13:34:27.561"></status>
</kw>
<msg timestamp="20201129 13:34:38.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:34:38.729" starttime="20201129 13:34:27.561"></status>
</kw>
<msg timestamp="20201129 13:34:38.729" level="INFO">${result} = 2020-11-29 13:34:29,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:29,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:38.729" starttime="20201129 13:34:27.560"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:34:38.730" starttime="20201129 13:34:38.730"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:38.730" starttime="20201129 13:34:38.729"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:34:38.730" critical="yes" starttime="20201129 13:34:27.559"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:34:38.736" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:34:48.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:34:48.097" level="INFO">${output} = 2020-11-29 13:34:40,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:41,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:48.097" starttime="20201129 13:34:38.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:34:48.105" level="INFO">2020-11-29 13:34:40,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:41,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:34:41,115 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-29 13:34:41,271 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xhe8c5xt6a
2020-11-29 13:34:41,305 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-29 13:34:42,309 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:42,967 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-29 13:34:43,040 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:34:43,310 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:43,643 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-29 13:34:44,046 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:34:44,046 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D4F2F6FB86E6-&gt;d9f332a2-7985-462d-b3cd-8efba1162f64
2020-11-29 13:34:44,047 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:34:44,310 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:45,311 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:46,311 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:47,312 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-29 13:34:47,488 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3471.239804, max=3471.239804, mean=3471.239804, stddev=0.0, median=3471.239804, p75=3471.239804, p95=3471.239804, p98=3471.239804, p99=3471.239804, p999=3471.239804, mean_rate=0.2291933680091806, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-29 13:34:47,493 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-29 13:34:47,495 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-29 13:34:47,495 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201129 13:34:48.105" starttime="20201129 13:34:48.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:34:48.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:34:48.106" starttime="20201129 13:34:48.106"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:48.106" starttime="20201129 13:34:38.734"></status>
</kw>
<msg timestamp="20201129 13:34:48.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:34:48.107" starttime="20201129 13:34:38.733"></status>
</kw>
<msg timestamp="20201129 13:34:48.107" level="INFO">${result} = 2020-11-29 13:34:40,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:41,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:48.107" starttime="20201129 13:34:38.733"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:34:48.108" starttime="20201129 13:34:48.108"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:48.108" starttime="20201129 13:34:48.107"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:34:48.108" critical="yes" starttime="20201129 13:34:38.732"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:34:48.114" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:34:53.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:34:53.421" level="INFO">${output} = 2020-11-29 13:34:50,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:50,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:53.421" starttime="20201129 13:34:48.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:34:53.422" level="INFO">2020-11-29 13:34:50,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:50,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:34:50,322 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-29 13:34:50,525 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kxhctbqt4t
2020-11-29 13:34:50,546 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-29 13:34:51,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:52,557 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-29 13:34:53,361 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=238.202738, max=238.202738, mean=238.202738, stddev=0.0, median=238.202738, p75=238.202738, p95=238.202738, p98=238.202738, p99=238.202738, p999=238.202738, mean_rate=0.8968613179433749, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-29 13:34:53,362 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-29 13:34:53,368 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-29 13:34:53,368 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201129 13:34:53.422" starttime="20201129 13:34:53.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:34:53.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:34:53.423" starttime="20201129 13:34:53.422"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:53.423" starttime="20201129 13:34:48.112"></status>
</kw>
<msg timestamp="20201129 13:34:53.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:34:53.424" starttime="20201129 13:34:48.111"></status>
</kw>
<msg timestamp="20201129 13:34:53.424" level="INFO">${result} = 2020-11-29 13:34:50,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:50,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:53.424" starttime="20201129 13:34:48.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:34:53.425" starttime="20201129 13:34:53.425"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:53.425" starttime="20201129 13:34:53.424"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:34:53.426" critical="yes" starttime="20201129 13:34:48.109"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:34:53.433" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:34:58.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:34:58.813" level="INFO">${output} = 2020-11-29 13:34:55,406 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:55,662 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:58.813" starttime="20201129 13:34:53.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:34:58.814" level="INFO">2020-11-29 13:34:55,406 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:55,662 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:34:55,662 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-29 13:34:55,876 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2pvyulvsup
2020-11-29 13:34:55,897 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-29 13:34:56,916 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-29 13:34:57,917 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-29 13:34:58,746 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=128.692345, max=128.692345, mean=128.692345, stddev=0.0, median=128.692345, p75=128.692345, p95=128.692345, p98=128.692345, p99=128.692345, p999=128.692345, mean_rate=0.8779785028912679, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-29 13:34:58,747 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-29 13:34:58,748 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-29 13:34:58,748 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201129 13:34:58.815" starttime="20201129 13:34:58.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:34:58.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:34:58.815" starttime="20201129 13:34:58.815"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:58.816" starttime="20201129 13:34:53.429"></status>
</kw>
<msg timestamp="20201129 13:34:58.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:34:58.816" starttime="20201129 13:34:53.428"></status>
</kw>
<msg timestamp="20201129 13:34:58.816" level="INFO">${result} = 2020-11-29 13:34:55,406 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:34:55,662 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:34:58.816" starttime="20201129 13:34:53.427"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:34:58.817" starttime="20201129 13:34:58.817"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:58.817" starttime="20201129 13:34:58.816"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:34:58.818" critical="yes" starttime="20201129 13:34:53.427"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:34:58.819" starttime="20201129 13:34:27.526"></status>
</suite>
<status status="PASS" endtime="20201129 13:34:58.823" starttime="20201129 13:34:27.490"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:34:18.956" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:34:18.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:34:18.958" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:34:18.958" starttime="20201129 13:34:18.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:34:18.960" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:34:18.961" starttime="20201129 13:34:18.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:34:18.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:34:18.962" starttime="20201129 13:34:18.961"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:18.962" starttime="20201129 13:34:18.943"></status>
</kw>
<msg timestamp="20201129 13:34:18.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:34:18.968" starttime="20201129 13:34:18.939"></status>
</kw>
<msg timestamp="20201129 13:34:18.968" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:34:18.968" starttime="20201129 13:34:18.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:34:18.969" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:34:18.969" starttime="20201129 13:34:18.968"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:34:18.978" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:34:18.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:34:18.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:34:19.000" starttime="20201129 13:34:18.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:34:19.001" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:34:19.001" starttime="20201129 13:34:19.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:34:19.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:34:19.002" starttime="20201129 13:34:19.001"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:19.002" starttime="20201129 13:34:18.971"></status>
</kw>
<msg timestamp="20201129 13:34:19.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:34:19.002" starttime="20201129 13:34:18.970"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:19.002" starttime="20201129 13:34:18.970"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:19.002" starttime="20201129 13:34:18.969"></status>
</kw>
<status status="PASS" endtime="20201129 13:34:19.003" starttime="20201129 13:34:18.937"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:34:19.003" critical="yes" starttime="20201129 13:34:18.936"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201129 13:34:19.004" starttime="20201129 13:34:18.767"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:35:05.083" level="INFO">${random} = 93228</msg>
<status status="PASS" endtime="20201129 13:35:05.083" starttime="20201129 13:35:05.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201129 13:35:05.085" level="INFO">${source} = 93228-source</msg>
<status status="PASS" endtime="20201129 13:35:05.085" starttime="20201129 13:35:05.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201129 13:35:05.086" level="INFO">${target} = 93228-target</msg>
<status status="PASS" endtime="20201129 13:35:05.086" starttime="20201129 13:35:05.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:05.093" level="INFO">Running command 'ozone sh volume create 93228-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:10.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:10.045" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:10.045" starttime="20201129 13:35:05.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:10.046" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:10.046" starttime="20201129 13:35:10.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:10.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:10.047" starttime="20201129 13:35:10.046"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:10.047" starttime="20201129 13:35:05.087"></status>
</kw>
<msg timestamp="20201129 13:35:10.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:10.047" starttime="20201129 13:35:05.087"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:10.048" starttime="20201129 13:35:05.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:10.051" level="INFO">Running command 'ozone sh volume create 93228-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:14.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:14.152" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:14.152" starttime="20201129 13:35:10.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:14.153" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:14.154" starttime="20201129 13:35:14.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:14.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:14.154" starttime="20201129 13:35:14.154"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:14.155" starttime="20201129 13:35:10.049"></status>
</kw>
<msg timestamp="20201129 13:35:14.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:14.155" starttime="20201129 13:35:10.049"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:14.155" starttime="20201129 13:35:10.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:14.160" level="INFO">Running command 'ozone sh bucket create 93228-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:18.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:18.222" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:18.222" starttime="20201129 13:35:14.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:18.223" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:18.223" starttime="20201129 13:35:18.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:18.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:18.224" starttime="20201129 13:35:18.223"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:18.224" starttime="20201129 13:35:14.157"></status>
</kw>
<msg timestamp="20201129 13:35:18.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:18.225" starttime="20201129 13:35:14.157"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:18.225" starttime="20201129 13:35:14.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:18.233" level="INFO">Running command 'ozone sh key put 93228-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:24.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:24.327" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:24.327" starttime="20201129 13:35:18.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:24.329" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:24.329" starttime="20201129 13:35:24.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:24.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:24.329" starttime="20201129 13:35:24.329"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:24.330" starttime="20201129 13:35:18.226"></status>
</kw>
<msg timestamp="20201129 13:35:24.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:24.330" starttime="20201129 13:35:18.226"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:24.330" starttime="20201129 13:35:18.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:24.334" level="INFO">Running command 'ozone sh bucket create 93228-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:28.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:28.211" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:28.211" starttime="20201129 13:35:24.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:28.212" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:28.212" starttime="20201129 13:35:28.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:28.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:28.213" starttime="20201129 13:35:28.212"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:28.213" starttime="20201129 13:35:24.331"></status>
</kw>
<msg timestamp="20201129 13:35:28.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:28.213" starttime="20201129 13:35:24.331"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:28.214" starttime="20201129 13:35:24.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:28.218" level="INFO">Running command 'ozone sh bucket link 93228-source/readable-bucket 93228-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:32.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:32.114" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:32.114" starttime="20201129 13:35:28.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:32.115" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:32.115" starttime="20201129 13:35:32.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:32.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:32.116" starttime="20201129 13:35:32.115"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:32.116" starttime="20201129 13:35:28.215"></status>
</kw>
<msg timestamp="20201129 13:35:32.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:32.116" starttime="20201129 13:35:28.214"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:32.117" starttime="20201129 13:35:28.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:32.123" level="INFO">Running command 'ozone sh bucket link 93228-source/readable-bucket 93228-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:36.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:36.234" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:36.234" starttime="20201129 13:35:32.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:36.236" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:36.236" starttime="20201129 13:35:36.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:36.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:36.237" starttime="20201129 13:35:36.236"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:36.238" starttime="20201129 13:35:32.118"></status>
</kw>
<msg timestamp="20201129 13:35:36.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:36.238" starttime="20201129 13:35:32.117"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:36.238" starttime="20201129 13:35:32.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:36.244" level="INFO">Running command 'ozone sh bucket link 93228-source/unreadable-bucket 93228-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:40.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:40.192" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:40.192" starttime="20201129 13:35:36.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:40.193" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:35:40.193" starttime="20201129 13:35:40.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:40.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:40.194" starttime="20201129 13:35:40.194"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:40.194" starttime="20201129 13:35:36.240"></status>
</kw>
<msg timestamp="20201129 13:35:40.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:40.195" starttime="20201129 13:35:36.240"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:40.195" starttime="20201129 13:35:36.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:40.199" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 93228-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:43.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:43.909" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:43.909" starttime="20201129 13:35:40.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:43.910" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:35:43.910" starttime="20201129 13:35:43.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:43.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:43.911" starttime="20201129 13:35:43.911"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:43.911" starttime="20201129 13:35:40.196"></status>
</kw>
<msg timestamp="20201129 13:35:43.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:43.912" starttime="20201129 13:35:40.196"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:43.912" starttime="20201129 13:35:40.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:43.916" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 93228-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:47.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:47.966" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:47.966" starttime="20201129 13:35:43.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:47.967" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:35:47.967" starttime="20201129 13:35:47.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:47.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:47.968" starttime="20201129 13:35:47.967"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:47.968" starttime="20201129 13:35:43.913"></status>
</kw>
<msg timestamp="20201129 13:35:47.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:47.968" starttime="20201129 13:35:43.913"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:47.969" starttime="20201129 13:35:43.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:47.972" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 93228-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:51.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:51.762" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:51.762" starttime="20201129 13:35:47.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:51.763" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:35:51.763" starttime="20201129 13:35:51.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:51.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:51.764" starttime="20201129 13:35:51.763"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:51.764" starttime="20201129 13:35:47.970"></status>
</kw>
<msg timestamp="20201129 13:35:51.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:51.765" starttime="20201129 13:35:47.969"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:51.765" starttime="20201129 13:35:47.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:51.769" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 93228-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:55.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:55.632" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:55.632" starttime="20201129 13:35:51.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:55.633" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:35:55.633" starttime="20201129 13:35:55.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:55.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:55.634" starttime="20201129 13:35:55.633"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:55.634" starttime="20201129 13:35:51.766"></status>
</kw>
<msg timestamp="20201129 13:35:55.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:55.635" starttime="20201129 13:35:51.766"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:55.635" starttime="20201129 13:35:51.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:55.638" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 93228-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:59.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:59.682" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:35:59.682" starttime="20201129 13:35:55.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:59.683" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:35:59.683" starttime="20201129 13:35:59.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:59.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:59.684" starttime="20201129 13:35:59.684"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.684" starttime="20201129 13:35:55.636"></status>
</kw>
<msg timestamp="20201129 13:35:59.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:59.685" starttime="20201129 13:35:55.636"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.685" starttime="20201129 13:35:55.635"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.685" starttime="20201129 13:35:14.156"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.685" starttime="20201129 13:35:14.155"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.685" starttime="20201129 13:35:05.081"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:59.692" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:59.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:59.695" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:35:59.695" starttime="20201129 13:35:59.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:59.697" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:35:59.697" starttime="20201129 13:35:59.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:59.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:59.698" starttime="20201129 13:35:59.697"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.698" starttime="20201129 13:35:59.689"></status>
</kw>
<msg timestamp="20201129 13:35:59.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:59.698" starttime="20201129 13:35:59.689"></status>
</kw>
<msg timestamp="20201129 13:35:59.699" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:35:59.699" starttime="20201129 13:35:59.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:35:59.701" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:35:59.701" starttime="20201129 13:35:59.699"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:59.709" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:35:59.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:35:59.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:35:59.729" starttime="20201129 13:35:59.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:35:59.731" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:35:59.731" starttime="20201129 13:35:59.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:35:59.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:35:59.732" starttime="20201129 13:35:59.731"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.732" starttime="20201129 13:35:59.703"></status>
</kw>
<msg timestamp="20201129 13:35:59.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:35:59.732" starttime="20201129 13:35:59.702"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.732" starttime="20201129 13:35:59.701"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.732" starttime="20201129 13:35:59.701"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.733" starttime="20201129 13:35:59.688"></status>
</kw>
<status status="PASS" endtime="20201129 13:35:59.733" starttime="20201129 13:35:59.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:35:59.737" level="INFO">Running command 'ozone sh bucket link 93228-source/no-such-bucket 93228-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:03.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:03.469" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:03.469" starttime="20201129 13:35:59.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:03.470" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:03.470" starttime="20201129 13:36:03.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:03.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:03.471" starttime="20201129 13:36:03.471"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:03.472" starttime="20201129 13:35:59.734"></status>
</kw>
<msg timestamp="20201129 13:36:03.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:03.472" starttime="20201129 13:35:59.734"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:03.472" starttime="20201129 13:35:59.733"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:03.475" level="INFO">Running command 'ozone sh key list 93228-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:07.318" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:36:07.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:07.318" starttime="20201129 13:36:03.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:07.320" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201129 13:36:07.320" starttime="20201129 13:36:07.319"></status>
</kw>
<msg timestamp="20201129 13:36:07.320" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:07.320" starttime="20201129 13:36:03.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:07.321" starttime="20201129 13:36:07.321"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:36:07.322" critical="yes" starttime="20201129 13:35:59.686"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:07.329" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:07.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:07.331" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:36:07.331" starttime="20201129 13:36:07.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:07.333" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:36:07.333" starttime="20201129 13:36:07.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:07.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:07.333" starttime="20201129 13:36:07.333"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:07.334" starttime="20201129 13:36:07.326"></status>
</kw>
<msg timestamp="20201129 13:36:07.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:07.334" starttime="20201129 13:36:07.326"></status>
</kw>
<msg timestamp="20201129 13:36:07.334" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:36:07.334" starttime="20201129 13:36:07.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:36:07.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:36:07.335" starttime="20201129 13:36:07.335"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:07.339" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:07.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:07.350" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:07.350" starttime="20201129 13:36:07.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:07.351" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:07.352" starttime="20201129 13:36:07.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:07.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:07.352" starttime="20201129 13:36:07.352"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:07.353" starttime="20201129 13:36:07.337"></status>
</kw>
<msg timestamp="20201129 13:36:07.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:07.353" starttime="20201129 13:36:07.336"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:07.353" starttime="20201129 13:36:07.336"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:07.353" starttime="20201129 13:36:07.335"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:07.353" starttime="20201129 13:36:07.325"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:07.354" starttime="20201129 13:36:07.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:07.358" level="INFO">Running command 'ozone sh bucket link 93228-source/bucket1 93228-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:11.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:11.443" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:11.443" starttime="20201129 13:36:07.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:11.444" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:11.444" starttime="20201129 13:36:11.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:11.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:11.445" starttime="20201129 13:36:11.444"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:11.446" starttime="20201129 13:36:07.355"></status>
</kw>
<msg timestamp="20201129 13:36:11.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:11.446" starttime="20201129 13:36:07.354"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:11.446" starttime="20201129 13:36:07.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:11.453" level="INFO">Running command 'ozone sh bucket create 93228-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:15.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:15.378" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:15.378" starttime="20201129 13:36:11.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:15.379" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:15.379" starttime="20201129 13:36:15.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:15.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:15.380" starttime="20201129 13:36:15.379"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:15.380" starttime="20201129 13:36:11.448"></status>
</kw>
<msg timestamp="20201129 13:36:15.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:15.381" starttime="20201129 13:36:11.447"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:15.381" starttime="20201129 13:36:11.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:15.385" level="INFO">Running command 'ozone sh key put 93228-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:24.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:24.281" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:24.281" starttime="20201129 13:36:15.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:24.282" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:24.283" starttime="20201129 13:36:24.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:24.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:24.283" starttime="20201129 13:36:24.283"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:24.284" starttime="20201129 13:36:15.382"></status>
</kw>
<msg timestamp="20201129 13:36:24.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:24.284" starttime="20201129 13:36:15.382"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:24.284" starttime="20201129 13:36:15.381"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201129 13:36:24.286" level="INFO">${postfix} = 77832</msg>
<status status="PASS" endtime="20201129 13:36:24.286" starttime="20201129 13:36:24.286"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201129 13:36:24.287" level="INFO">${tmpfile} = /tmp/tempkey-77832</msg>
<status status="PASS" endtime="20201129 13:36:24.287" starttime="20201129 13:36:24.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:24.291" level="INFO">Running command 'ozone sh key get -f 93228-target/link1/key1 /tmp/tempkey-77832 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:30.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:30.480" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:30.480" starttime="20201129 13:36:24.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.482" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:30.482" starttime="20201129 13:36:30.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:30.482" starttime="20201129 13:36:30.482"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.483" starttime="20201129 13:36:24.288"></status>
</kw>
<msg timestamp="20201129 13:36:30.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:30.483" starttime="20201129 13:36:24.288"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.483" starttime="20201129 13:36:24.287"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201129 13:36:30.486" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-77832 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:30.489" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201129 13:36:30.489" starttime="20201129 13:36:30.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:30.494" level="INFO">Running command 'rm -f /tmp/tempkey-77832 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:30.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:30.497" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:30.498" starttime="20201129 13:36:30.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.499" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:30.499" starttime="20201129 13:36:30.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:30.500" starttime="20201129 13:36:30.499"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.500" starttime="20201129 13:36:30.491"></status>
</kw>
<msg timestamp="20201129 13:36:30.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:30.500" starttime="20201129 13:36:30.490"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.500" starttime="20201129 13:36:30.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:36:30.501" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201129 13:36:30.501" starttime="20201129 13:36:30.501"></status>
</kw>
<msg timestamp="20201129 13:36:30.502" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201129 13:36:30.502" starttime="20201129 13:36:24.285"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:30.502" starttime="20201129 13:36:30.502"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.502" starttime="20201129 13:36:24.284"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:36:30.503" critical="yes" starttime="20201129 13:36:07.323"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:30.510" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:30.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:30.514" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:36:30.514" starttime="20201129 13:36:30.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.515" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:36:30.515" starttime="20201129 13:36:30.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:30.516" starttime="20201129 13:36:30.516"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.517" starttime="20201129 13:36:30.507"></status>
</kw>
<msg timestamp="20201129 13:36:30.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:30.517" starttime="20201129 13:36:30.507"></status>
</kw>
<msg timestamp="20201129 13:36:30.517" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:36:30.517" starttime="20201129 13:36:30.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:36:30.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:36:30.518" starttime="20201129 13:36:30.517"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:30.522" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:30.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:30.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:30.542" starttime="20201129 13:36:30.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.544" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:30.544" starttime="20201129 13:36:30.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:30.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:30.544" starttime="20201129 13:36:30.544"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.545" starttime="20201129 13:36:30.520"></status>
</kw>
<msg timestamp="20201129 13:36:30.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:30.545" starttime="20201129 13:36:30.520"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.545" starttime="20201129 13:36:30.519"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.545" starttime="20201129 13:36:30.518"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.546" starttime="20201129 13:36:30.506"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:30.546" starttime="20201129 13:36:30.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:30.550" level="INFO">Running command 'ozone sh key put 93228-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:36.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:36.672" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:36.672" starttime="20201129 13:36:30.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:36.674" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:36.674" starttime="20201129 13:36:36.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:36.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:36.675" starttime="20201129 13:36:36.674"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:36.675" starttime="20201129 13:36:30.547"></status>
</kw>
<msg timestamp="20201129 13:36:36.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:36.676" starttime="20201129 13:36:30.547"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:36.676" starttime="20201129 13:36:30.546"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201129 13:36:36.678" level="INFO">${postfix} = 40540</msg>
<status status="PASS" endtime="20201129 13:36:36.678" starttime="20201129 13:36:36.678"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201129 13:36:36.679" level="INFO">${tmpfile} = /tmp/tempkey-40540</msg>
<status status="PASS" endtime="20201129 13:36:36.679" starttime="20201129 13:36:36.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:36.683" level="INFO">Running command 'ozone sh key get -f 93228-source/bucket1/key2 /tmp/tempkey-40540 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:42.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:42.766" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:42.766" starttime="20201129 13:36:36.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.767" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:42.767" starttime="20201129 13:36:42.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:42.768" starttime="20201129 13:36:42.767"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.768" starttime="20201129 13:36:36.680"></status>
</kw>
<msg timestamp="20201129 13:36:42.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:42.768" starttime="20201129 13:36:36.680"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.768" starttime="20201129 13:36:36.679"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201129 13:36:42.772" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-40540 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:42.773" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201129 13:36:42.773" starttime="20201129 13:36:42.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:42.778" level="INFO">Running command 'rm -f /tmp/tempkey-40540 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:42.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:42.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:42.781" starttime="20201129 13:36:42.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.782" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:42.782" starttime="20201129 13:36:42.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:42.783" starttime="20201129 13:36:42.782"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.783" starttime="20201129 13:36:42.775"></status>
</kw>
<msg timestamp="20201129 13:36:42.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:42.784" starttime="20201129 13:36:42.774"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.784" starttime="20201129 13:36:42.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:36:42.785" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201129 13:36:42.785" starttime="20201129 13:36:42.784"></status>
</kw>
<msg timestamp="20201129 13:36:42.785" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201129 13:36:42.785" starttime="20201129 13:36:36.677"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:42.786" starttime="20201129 13:36:42.785"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.786" starttime="20201129 13:36:36.676"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:36:42.786" critical="yes" starttime="20201129 13:36:30.504"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:42.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:42.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:42.796" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:36:42.796" starttime="20201129 13:36:42.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.797" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:36:42.797" starttime="20201129 13:36:42.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:42.798" starttime="20201129 13:36:42.798"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.799" starttime="20201129 13:36:42.790"></status>
</kw>
<msg timestamp="20201129 13:36:42.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:42.799" starttime="20201129 13:36:42.790"></status>
</kw>
<msg timestamp="20201129 13:36:42.799" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:36:42.799" starttime="20201129 13:36:42.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:36:42.800" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:36:42.800" starttime="20201129 13:36:42.799"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:42.804" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:42.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:42.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:42.823" starttime="20201129 13:36:42.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.824" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:42.824" starttime="20201129 13:36:42.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:42.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:42.825" starttime="20201129 13:36:42.824"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.825" starttime="20201129 13:36:42.801"></status>
</kw>
<msg timestamp="20201129 13:36:42.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:42.826" starttime="20201129 13:36:42.801"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.826" starttime="20201129 13:36:42.801"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.826" starttime="20201129 13:36:42.800"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.826" starttime="20201129 13:36:42.788"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:42.826" starttime="20201129 13:36:42.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:42.830" level="INFO">Running command 'ozone sh key list 93228-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:47.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:47.007" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201129 13:36:47.007" starttime="20201129 13:36:42.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:47.008" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201129 13:36:47.008" starttime="20201129 13:36:47.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:47.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:47.009" starttime="20201129 13:36:47.009"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:47.009" starttime="20201129 13:36:42.827"></status>
</kw>
<msg timestamp="20201129 13:36:47.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:47.010" starttime="20201129 13:36:42.827"></status>
</kw>
<msg timestamp="20201129 13:36:47.010" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201129 13:36:47.010" starttime="20201129 13:36:42.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:47.014" level="INFO">Running command 'ozone sh key list 93228-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:51.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:51.156" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201129 13:36:51.156" starttime="20201129 13:36:47.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:51.157" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201129 13:36:51.157" starttime="20201129 13:36:51.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:51.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:51.158" starttime="20201129 13:36:51.157"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.159" starttime="20201129 13:36:47.011"></status>
</kw>
<msg timestamp="20201129 13:36:51.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:51.159" starttime="20201129 13:36:47.011"></status>
</kw>
<msg timestamp="20201129 13:36:51.160" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201129 13:36:51.160" starttime="20201129 13:36:47.010"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:51.160" starttime="20201129 13:36:51.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:51.161" starttime="20201129 13:36:51.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:51.161" starttime="20201129 13:36:51.161"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:36:51.162" critical="yes" starttime="20201129 13:36:42.787"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:51.170" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:51.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:51.172" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:36:51.172" starttime="20201129 13:36:51.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:51.173" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:36:51.173" starttime="20201129 13:36:51.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:51.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:51.174" starttime="20201129 13:36:51.173"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.174" starttime="20201129 13:36:51.166"></status>
</kw>
<msg timestamp="20201129 13:36:51.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:51.175" starttime="20201129 13:36:51.165"></status>
</kw>
<msg timestamp="20201129 13:36:51.175" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:36:51.175" starttime="20201129 13:36:51.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:36:51.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:36:51.176" starttime="20201129 13:36:51.175"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:51.181" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:51.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:51.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:51.194" starttime="20201129 13:36:51.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:51.194" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:51.195" starttime="20201129 13:36:51.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:51.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:51.196" starttime="20201129 13:36:51.195"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.196" starttime="20201129 13:36:51.177"></status>
</kw>
<msg timestamp="20201129 13:36:51.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:51.196" starttime="20201129 13:36:51.177"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.197" starttime="20201129 13:36:51.176"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.197" starttime="20201129 13:36:51.176"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.197" starttime="20201129 13:36:51.164"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:51.197" starttime="20201129 13:36:51.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:51.202" level="INFO">Running command 'ozone sh key delete 93228-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:54.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:54.983" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:36:54.983" starttime="20201129 13:36:51.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:54.984" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:36:54.984" starttime="20201129 13:36:54.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:54.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:54.987" starttime="20201129 13:36:54.984"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:54.987" starttime="20201129 13:36:51.198"></status>
</kw>
<msg timestamp="20201129 13:36:54.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:54.988" starttime="20201129 13:36:51.198"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:54.988" starttime="20201129 13:36:51.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:54.997" level="INFO">Running command 'ozone sh key list 93228-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:59.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:59.093" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201129 13:36:59.093" starttime="20201129 13:36:54.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:59.094" level="INFO">key1</msg>
<status status="PASS" endtime="20201129 13:36:59.094" starttime="20201129 13:36:59.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:59.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:59.095" starttime="20201129 13:36:59.095"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.096" starttime="20201129 13:36:54.990"></status>
</kw>
<msg timestamp="20201129 13:36:59.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:59.096" starttime="20201129 13:36:54.989"></status>
</kw>
<msg timestamp="20201129 13:36:59.096" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201129 13:36:59.096" starttime="20201129 13:36:54.988"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201129 13:36:59.097" starttime="20201129 13:36:59.096"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:36:59.097" critical="yes" starttime="20201129 13:36:51.162"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:59.104" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:59.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:59.107" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:36:59.107" starttime="20201129 13:36:59.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:59.108" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:36:59.108" starttime="20201129 13:36:59.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:59.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:59.109" starttime="20201129 13:36:59.108"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.109" starttime="20201129 13:36:59.101"></status>
</kw>
<msg timestamp="20201129 13:36:59.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:59.110" starttime="20201129 13:36:59.101"></status>
</kw>
<msg timestamp="20201129 13:36:59.110" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:36:59.110" starttime="20201129 13:36:59.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:36:59.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:36:59.111" starttime="20201129 13:36:59.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:59.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:36:59.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:36:59.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:36:59.128" starttime="20201129 13:36:59.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:36:59.129" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:36:59.129" starttime="20201129 13:36:59.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:36:59.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:36:59.129" starttime="20201129 13:36:59.129"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.130" starttime="20201129 13:36:59.113"></status>
</kw>
<msg timestamp="20201129 13:36:59.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:36:59.130" starttime="20201129 13:36:59.112"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.130" starttime="20201129 13:36:59.112"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.130" starttime="20201129 13:36:59.111"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.130" starttime="20201129 13:36:59.099"></status>
</kw>
<status status="PASS" endtime="20201129 13:36:59.131" starttime="20201129 13:36:59.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:36:59.135" level="INFO">Running command 'ozone sh bucket list 93228-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:03.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:03.413" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:03.413" starttime="20201129 13:36:59.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:03.414" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:36:03.373Z",
  "modificationTime" : "2020-11-29T13:36:03.373Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:40.097Z",
  "modificationTime" : "2020-11-29T13:35:59.507Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:36:11.238Z",
  "modificationTime" : "2020-11-29T13:36:11.238Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:31.946Z",
  "modificationTime" : "2020-11-29T13:35:55.314Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:35.925Z",
  "modificationTime" : "2020-11-29T13:35:35.925Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:37:03.415" starttime="20201129 13:37:03.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:03.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:03.416" starttime="20201129 13:37:03.415"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.416" starttime="20201129 13:36:59.132"></status>
</kw>
<msg timestamp="20201129 13:37:03.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:03.416" starttime="20201129 13:36:59.131"></status>
</kw>
<msg timestamp="20201129 13:37:03.417" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:03.417" starttime="20201129 13:36:59.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:03.417" starttime="20201129 13:37:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:03.418" starttime="20201129 13:37:03.417"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:37:03.418" critical="yes" starttime="20201129 13:36:59.098"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:03.424" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:03.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:03.428" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:03.428" starttime="20201129 13:37:03.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:03.429" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:03.429" starttime="20201129 13:37:03.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:03.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:03.430" starttime="20201129 13:37:03.429"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.431" starttime="20201129 13:37:03.421"></status>
</kw>
<msg timestamp="20201129 13:37:03.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:03.431" starttime="20201129 13:37:03.421"></status>
</kw>
<msg timestamp="20201129 13:37:03.432" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:03.432" starttime="20201129 13:37:03.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:03.432" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:03.433" starttime="20201129 13:37:03.432"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:03.438" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:03.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:03.449" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:03.449" starttime="20201129 13:37:03.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:03.450" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:03.450" starttime="20201129 13:37:03.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:03.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:03.451" starttime="20201129 13:37:03.451"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.452" starttime="20201129 13:37:03.434"></status>
</kw>
<msg timestamp="20201129 13:37:03.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:03.452" starttime="20201129 13:37:03.434"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.452" starttime="20201129 13:37:03.433"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.452" starttime="20201129 13:37:03.433"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.452" starttime="20201129 13:37:03.420"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:03.452" starttime="20201129 13:37:03.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:03.458" level="INFO">Running command 'ozone sh bucket info 93228-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:07.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:07.657" level="INFO">${output} = 93228-source bucket1</msg>
<status status="PASS" endtime="20201129 13:37:07.657" starttime="20201129 13:37:03.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:07.658" level="INFO">93228-source bucket1</msg>
<status status="PASS" endtime="20201129 13:37:07.658" starttime="20201129 13:37:07.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:07.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:07.659" starttime="20201129 13:37:07.658"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.659" starttime="20201129 13:37:03.454"></status>
</kw>
<msg timestamp="20201129 13:37:07.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:07.660" starttime="20201129 13:37:03.453"></status>
</kw>
<msg timestamp="20201129 13:37:07.660" level="INFO">${result} = 93228-source bucket1</msg>
<status status="PASS" endtime="20201129 13:37:07.660" starttime="20201129 13:37:03.453"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:07.661" starttime="20201129 13:37:07.660"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:37:07.661" critical="yes" starttime="20201129 13:37:03.419"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:07.668" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:07.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:07.671" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:07.671" starttime="20201129 13:37:07.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:07.672" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:07.672" starttime="20201129 13:37:07.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:07.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:07.673" starttime="20201129 13:37:07.672"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.673" starttime="20201129 13:37:07.664"></status>
</kw>
<msg timestamp="20201129 13:37:07.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:07.673" starttime="20201129 13:37:07.664"></status>
</kw>
<msg timestamp="20201129 13:37:07.674" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:07.674" starttime="20201129 13:37:07.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:07.674" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:07.675" starttime="20201129 13:37:07.674"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:07.680" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:07.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:07.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:07.694" starttime="20201129 13:37:07.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:07.696" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:07.696" starttime="20201129 13:37:07.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:07.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:07.697" starttime="20201129 13:37:07.696"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.697" starttime="20201129 13:37:07.676"></status>
</kw>
<msg timestamp="20201129 13:37:07.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:07.698" starttime="20201129 13:37:07.676"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.698" starttime="20201129 13:37:07.675"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.698" starttime="20201129 13:37:07.675"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.698" starttime="20201129 13:37:07.663"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:07.698" starttime="20201129 13:37:07.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:07.703" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 93228-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:11.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:11.999" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:11.999" starttime="20201129 13:37:07.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:12.000" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:37:12.000" starttime="20201129 13:37:11.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:12.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:12.001" starttime="20201129 13:37:12.001"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:12.002" starttime="20201129 13:37:07.700"></status>
</kw>
<msg timestamp="20201129 13:37:12.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:12.002" starttime="20201129 13:37:07.699"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:12.002" starttime="20201129 13:37:07.699"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:12.007" level="INFO">Running command 'ozone sh bucket getacl 93228-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:16.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:16.387" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201129 13:37:16.387" starttime="20201129 13:37:12.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:16.388" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201129 13:37:16.389" starttime="20201129 13:37:16.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:16.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:16.389" starttime="20201129 13:37:16.389"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:16.390" starttime="20201129 13:37:12.005"></status>
</kw>
<msg timestamp="20201129 13:37:16.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:16.390" starttime="20201129 13:37:12.004"></status>
</kw>
<msg timestamp="20201129 13:37:16.390" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201129 13:37:16.390" starttime="20201129 13:37:12.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:16.391" starttime="20201129 13:37:16.390"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:16.391" starttime="20201129 13:37:12.002"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:16.396" level="INFO">Running command 'ozone sh bucket getacl 93228-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:21.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:21.250" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:21.250" starttime="20201129 13:37:16.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:21.251" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:21.251" starttime="20201129 13:37:21.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:21.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:21.252" starttime="20201129 13:37:21.252"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:21.253" starttime="20201129 13:37:16.393"></status>
</kw>
<msg timestamp="20201129 13:37:21.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:21.253" starttime="20201129 13:37:16.393"></status>
</kw>
<msg timestamp="20201129 13:37:21.253" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201129 13:37:21.253" starttime="20201129 13:37:16.392"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:21.254" starttime="20201129 13:37:21.253"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:21.254" starttime="20201129 13:37:16.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:21.260" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 93228-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:25.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:25.987" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:25.987" starttime="20201129 13:37:21.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:25.988" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201129 13:37:25.988" starttime="20201129 13:37:25.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:25.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:25.989" starttime="20201129 13:37:25.989"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:25.990" starttime="20201129 13:37:21.256"></status>
</kw>
<msg timestamp="20201129 13:37:25.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:25.990" starttime="20201129 13:37:21.255"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:25.990" starttime="20201129 13:37:21.254"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:25.996" level="INFO">Running command 'ozone sh bucket getacl 93228-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:30.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:30.121" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:30.121" starttime="20201129 13:37:25.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:30.123" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:30.123" starttime="20201129 13:37:30.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:30.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:30.123" starttime="20201129 13:37:30.123"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:30.124" starttime="20201129 13:37:25.993"></status>
</kw>
<msg timestamp="20201129 13:37:30.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:30.124" starttime="20201129 13:37:25.992"></status>
</kw>
<msg timestamp="20201129 13:37:30.124" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201129 13:37:30.124" starttime="20201129 13:37:25.991"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:30.125" starttime="20201129 13:37:30.125"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:30.125" starttime="20201129 13:37:25.990"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:30.131" level="INFO">Running command 'ozone sh bucket getacl 93228-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:34.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:34.459" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201129 13:37:34.459" starttime="20201129 13:37:30.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:34.460" level="INFO">READ</msg>
<status status="PASS" endtime="20201129 13:37:34.460" starttime="20201129 13:37:34.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:34.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:34.462" starttime="20201129 13:37:34.461"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.462" starttime="20201129 13:37:30.128"></status>
</kw>
<msg timestamp="20201129 13:37:34.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:34.463" starttime="20201129 13:37:30.127"></status>
</kw>
<msg timestamp="20201129 13:37:34.463" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201129 13:37:34.463" starttime="20201129 13:37:30.126"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:34.464" starttime="20201129 13:37:34.463"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.464" starttime="20201129 13:37:30.126"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:37:34.465" critical="yes" starttime="20201129 13:37:07.662"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:34.473" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:34.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:34.476" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:34.476" starttime="20201129 13:37:34.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:34.477" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:34.477" starttime="20201129 13:37:34.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:34.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:34.478" starttime="20201129 13:37:34.477"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.478" starttime="20201129 13:37:34.470"></status>
</kw>
<msg timestamp="20201129 13:37:34.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:34.479" starttime="20201129 13:37:34.469"></status>
</kw>
<msg timestamp="20201129 13:37:34.479" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:34.479" starttime="20201129 13:37:34.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:34.480" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:34.480" starttime="20201129 13:37:34.479"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:34.486" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:34.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:34.497" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:34.497" starttime="20201129 13:37:34.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:34.498" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:34.498" starttime="20201129 13:37:34.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:34.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:34.499" starttime="20201129 13:37:34.498"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.499" starttime="20201129 13:37:34.481"></status>
</kw>
<msg timestamp="20201129 13:37:34.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:34.499" starttime="20201129 13:37:34.481"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.500" starttime="20201129 13:37:34.480"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.500" starttime="20201129 13:37:34.480"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.500" starttime="20201129 13:37:34.468"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:34.500" starttime="20201129 13:37:34.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:34.507" level="INFO">Running command 'ozone sh bucket link 93228-source/bucket2 93228-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:38.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:38.222" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:38.222" starttime="20201129 13:37:34.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:38.223" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:37:38.224" starttime="20201129 13:37:38.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:38.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:38.225" starttime="20201129 13:37:38.224"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:38.225" starttime="20201129 13:37:34.502"></status>
</kw>
<msg timestamp="20201129 13:37:38.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:38.225" starttime="20201129 13:37:34.501"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:38.225" starttime="20201129 13:37:34.500"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:38.230" level="INFO">Running command 'ozone sh bucket create 93228-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:41.952" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:37:41.952" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:41.952" starttime="20201129 13:37:38.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:41.953" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201129 13:37:41.953" starttime="20201129 13:37:41.952"></status>
</kw>
<msg timestamp="20201129 13:37:41.954" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:41.954" starttime="20201129 13:37:38.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:41.955" starttime="20201129 13:37:41.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:41.959" level="INFO">Running command 'ozone sh bucket create 93228-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:45.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:45.823" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:45.823" starttime="20201129 13:37:41.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:45.824" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:37:45.825" starttime="20201129 13:37:45.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:45.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:45.825" starttime="20201129 13:37:45.825"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:45.826" starttime="20201129 13:37:41.956"></status>
</kw>
<msg timestamp="20201129 13:37:45.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:45.826" starttime="20201129 13:37:41.956"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:45.826" starttime="20201129 13:37:41.955"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:45.829" level="INFO">Running command 'ozone sh bucket link 93228-source/bucket1 93228-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:49.822" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:37:49.822" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:49.822" starttime="20201129 13:37:45.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.823" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201129 13:37:49.823" starttime="20201129 13:37:49.822"></status>
</kw>
<msg timestamp="20201129 13:37:49.824" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:49.824" starttime="20201129 13:37:45.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:49.824" starttime="20201129 13:37:49.824"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:37:49.825" critical="yes" starttime="20201129 13:37:34.467"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:49.832" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:49.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:49.834" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:49.834" starttime="20201129 13:37:49.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.835" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:49.835" starttime="20201129 13:37:49.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:49.836" starttime="20201129 13:37:49.835"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.836" starttime="20201129 13:37:49.828"></status>
</kw>
<msg timestamp="20201129 13:37:49.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:49.837" starttime="20201129 13:37:49.828"></status>
</kw>
<msg timestamp="20201129 13:37:49.837" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:49.837" starttime="20201129 13:37:49.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:49.838" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:49.838" starttime="20201129 13:37:49.837"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:49.842" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:49.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:49.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:49.867" starttime="20201129 13:37:49.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.869" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:49.869" starttime="20201129 13:37:49.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:49.870" starttime="20201129 13:37:49.869"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.870" starttime="20201129 13:37:49.839"></status>
</kw>
<msg timestamp="20201129 13:37:49.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:49.871" starttime="20201129 13:37:49.839"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.871" starttime="20201129 13:37:49.838"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.871" starttime="20201129 13:37:49.838"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.871" starttime="20201129 13:37:49.827"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.871" starttime="20201129 13:37:49.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:49.876" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:49.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:49.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:49.881" starttime="20201129 13:37:49.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.882" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:49.882" starttime="20201129 13:37:49.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:49.883" starttime="20201129 13:37:49.882"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.883" starttime="20201129 13:37:49.874"></status>
</kw>
<msg timestamp="20201129 13:37:49.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:49.883" starttime="20201129 13:37:49.873"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.883" starttime="20201129 13:37:49.873"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:49.890" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:49.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:49.892" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:49.892" starttime="20201129 13:37:49.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.893" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:49.893" starttime="20201129 13:37:49.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:49.894" starttime="20201129 13:37:49.893"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.894" starttime="20201129 13:37:49.886"></status>
</kw>
<msg timestamp="20201129 13:37:49.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:49.894" starttime="20201129 13:37:49.886"></status>
</kw>
<msg timestamp="20201129 13:37:49.895" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:49.895" starttime="20201129 13:37:49.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:49.896" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:49.896" starttime="20201129 13:37:49.895"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:49.901" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:49.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:49.919" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:49.919" starttime="20201129 13:37:49.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.920" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:49.920" starttime="20201129 13:37:49.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:49.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:49.922" starttime="20201129 13:37:49.921"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.922" starttime="20201129 13:37:49.898"></status>
</kw>
<msg timestamp="20201129 13:37:49.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:49.922" starttime="20201129 13:37:49.897"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.922" starttime="20201129 13:37:49.896"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.923" starttime="20201129 13:37:49.896"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.923" starttime="20201129 13:37:49.884"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:49.923" starttime="20201129 13:37:49.883"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:49.926" level="INFO">Running command 'ozone sh key list 93228-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:54.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:54.014" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:54.014" starttime="20201129 13:37:49.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.015" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "93228-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-29T13:35:22.081Z",
  "modificationTime" : "2020-11-29T13:35:23.901Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201129 13:37:54.015" starttime="20201129 13:37:54.014"></status>
</kw>
<msg timestamp="20201129 13:37:54.016" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:54.016" starttime="20201129 13:37:49.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:54.016" starttime="20201129 13:37:54.016"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.016" starttime="20201129 13:37:49.872"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.017" starttime="20201129 13:37:49.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:37:54.017" critical="yes" starttime="20201129 13:37:49.825"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:54.025" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:54.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:54.027" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:54.027" starttime="20201129 13:37:54.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.028" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:54.028" starttime="20201129 13:37:54.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:54.029" starttime="20201129 13:37:54.028"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.029" starttime="20201129 13:37:54.021"></status>
</kw>
<msg timestamp="20201129 13:37:54.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:54.029" starttime="20201129 13:37:54.021"></status>
</kw>
<msg timestamp="20201129 13:37:54.030" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:54.030" starttime="20201129 13:37:54.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:54.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:54.030" starttime="20201129 13:37:54.030"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:54.035" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:54.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:54.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:54.065" starttime="20201129 13:37:54.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.066" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:54.066" starttime="20201129 13:37:54.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:54.067" starttime="20201129 13:37:54.066"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.067" starttime="20201129 13:37:54.032"></status>
</kw>
<msg timestamp="20201129 13:37:54.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:54.067" starttime="20201129 13:37:54.032"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.067" starttime="20201129 13:37:54.031"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.068" starttime="20201129 13:37:54.031"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.068" starttime="20201129 13:37:54.019"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.068" starttime="20201129 13:37:54.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:54.083" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:54.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:54.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:54.086" starttime="20201129 13:37:54.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.088" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:54.088" starttime="20201129 13:37:54.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:54.089" starttime="20201129 13:37:54.088"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.089" starttime="20201129 13:37:54.070"></status>
</kw>
<msg timestamp="20201129 13:37:54.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:54.089" starttime="20201129 13:37:54.070"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.089" starttime="20201129 13:37:54.069"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:54.096" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:54.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:54.105" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:54.106" starttime="20201129 13:37:54.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.107" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:54.107" starttime="20201129 13:37:54.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:54.108" starttime="20201129 13:37:54.107"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.108" starttime="20201129 13:37:54.092"></status>
</kw>
<msg timestamp="20201129 13:37:54.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:54.108" starttime="20201129 13:37:54.091"></status>
</kw>
<msg timestamp="20201129 13:37:54.109" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:54.109" starttime="20201129 13:37:54.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:54.110" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:54.110" starttime="20201129 13:37:54.109"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:54.114" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:54.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:54.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:54.132" starttime="20201129 13:37:54.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.134" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:54.134" starttime="20201129 13:37:54.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:54.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:54.134" starttime="20201129 13:37:54.134"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.135" starttime="20201129 13:37:54.112"></status>
</kw>
<msg timestamp="20201129 13:37:54.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:54.135" starttime="20201129 13:37:54.111"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.135" starttime="20201129 13:37:54.111"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.135" starttime="20201129 13:37:54.110"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.136" starttime="20201129 13:37:54.090"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:54.136" starttime="20201129 13:37:54.090"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:54.139" level="INFO">Running command 'ozone sh key list 93228-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:57.955" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:37:57.955" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:57.955" starttime="20201129 13:37:54.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:57.956" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201129 13:37:57.956" starttime="20201129 13:37:57.955"></status>
</kw>
<msg timestamp="20201129 13:37:57.957" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:37:57.957" starttime="20201129 13:37:54.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201129 13:37:57.957" starttime="20201129 13:37:57.957"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:57.958" starttime="20201129 13:37:54.069"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:57.958" starttime="20201129 13:37:54.068"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:37:57.958" critical="yes" starttime="20201129 13:37:54.018"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:57.965" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:57.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:57.968" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:57.968" starttime="20201129 13:37:57.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:57.969" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:57.969" starttime="20201129 13:37:57.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:57.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:57.970" starttime="20201129 13:37:57.969"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:57.970" starttime="20201129 13:37:57.962"></status>
</kw>
<msg timestamp="20201129 13:37:57.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:57.971" starttime="20201129 13:37:57.962"></status>
</kw>
<msg timestamp="20201129 13:37:57.971" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:57.971" starttime="20201129 13:37:57.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:57.972" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:57.972" starttime="20201129 13:37:57.971"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:57.977" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:58.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:58.006" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:58.006" starttime="20201129 13:37:57.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.007" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:58.007" starttime="20201129 13:37:58.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:58.009" starttime="20201129 13:37:58.008"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.010" starttime="20201129 13:37:57.974"></status>
</kw>
<msg timestamp="20201129 13:37:58.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:58.010" starttime="20201129 13:37:57.973"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.010" starttime="20201129 13:37:57.973"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.010" starttime="20201129 13:37:57.972"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.010" starttime="20201129 13:37:57.960"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.011" starttime="20201129 13:37:57.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:58.016" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:58.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:58.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:58.019" starttime="20201129 13:37:58.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.020" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:58.020" starttime="20201129 13:37:58.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:58.021" starttime="20201129 13:37:58.020"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.021" starttime="20201129 13:37:58.013"></status>
</kw>
<msg timestamp="20201129 13:37:58.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:58.022" starttime="20201129 13:37:58.012"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.022" starttime="20201129 13:37:58.012"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:58.026" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:58.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:58.029" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:37:58.029" starttime="20201129 13:37:58.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.029" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:37:58.030" starttime="20201129 13:37:58.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:58.030" starttime="20201129 13:37:58.030"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.031" starttime="20201129 13:37:58.024"></status>
</kw>
<msg timestamp="20201129 13:37:58.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:58.031" starttime="20201129 13:37:58.023"></status>
</kw>
<msg timestamp="20201129 13:37:58.031" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:37:58.031" starttime="20201129 13:37:58.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:37:58.032" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:37:58.032" starttime="20201129 13:37:58.031"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:58.037" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:37:58.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:37:58.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:37:58.053" starttime="20201129 13:37:58.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.054" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:37:58.055" starttime="20201129 13:37:58.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:37:58.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:37:58.056" starttime="20201129 13:37:58.055"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.057" starttime="20201129 13:37:58.033"></status>
</kw>
<msg timestamp="20201129 13:37:58.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:37:58.057" starttime="20201129 13:37:58.033"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.057" starttime="20201129 13:37:58.032"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.057" starttime="20201129 13:37:58.032"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.057" starttime="20201129 13:37:58.022"></status>
</kw>
<status status="PASS" endtime="20201129 13:37:58.057" starttime="20201129 13:37:58.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:37:58.062" level="INFO">Running command 'ozone sh bucket info 93228-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:01.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:01.929" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:01.929" starttime="20201129 13:37:58.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:01.930" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:40.097Z",
  "modificationTime" : "2020-11-29T13:35:59.507Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:38:01.931" starttime="20201129 13:38:01.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:01.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:01.931" starttime="20201129 13:38:01.931"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:01.932" starttime="20201129 13:37:58.059"></status>
</kw>
<msg timestamp="20201129 13:38:01.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:01.932" starttime="20201129 13:37:58.058"></status>
</kw>
<msg timestamp="20201129 13:38:01.932" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:01.932" starttime="20201129 13:37:58.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:01.933" starttime="20201129 13:38:01.932"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:01.933" starttime="20201129 13:38:01.933"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:01.936" level="INFO">Running command 'ozone sh key list 93228-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:05.865" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:38:05.865" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:05.865" starttime="20201129 13:38:01.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:05.866" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201129 13:38:05.866" starttime="20201129 13:38:05.865"></status>
</kw>
<msg timestamp="20201129 13:38:05.867" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:05.867" starttime="20201129 13:38:01.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:05.867" starttime="20201129 13:38:05.867"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.868" starttime="20201129 13:37:58.011"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.868" starttime="20201129 13:37:58.011"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:38:05.868" critical="yes" starttime="20201129 13:37:57.959"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:05.875" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:05.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:05.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:38:05.877" starttime="20201129 13:38:05.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:05.879" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:38:05.879" starttime="20201129 13:38:05.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:05.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:05.879" starttime="20201129 13:38:05.879"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.880" starttime="20201129 13:38:05.872"></status>
</kw>
<msg timestamp="20201129 13:38:05.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:05.880" starttime="20201129 13:38:05.872"></status>
</kw>
<msg timestamp="20201129 13:38:05.880" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:38:05.880" starttime="20201129 13:38:05.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:38:05.881" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:38:05.881" starttime="20201129 13:38:05.881"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:05.887" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:05.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:05.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:38:05.905" starttime="20201129 13:38:05.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:05.906" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:38:05.906" starttime="20201129 13:38:05.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:05.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:05.907" starttime="20201129 13:38:05.906"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.907" starttime="20201129 13:38:05.883"></status>
</kw>
<msg timestamp="20201129 13:38:05.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:05.908" starttime="20201129 13:38:05.882"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.908" starttime="20201129 13:38:05.882"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.908" starttime="20201129 13:38:05.881"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.908" starttime="20201129 13:38:05.871"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:05.908" starttime="20201129 13:38:05.870"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:05.913" level="INFO">Running command 'ozone sh bucket link 93228-target/loop1 93228-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:09.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:09.915" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:09.916" starttime="20201129 13:38:05.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:09.917" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:09.917" starttime="20201129 13:38:09.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:09.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:09.918" starttime="20201129 13:38:09.917"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:09.918" starttime="20201129 13:38:05.909"></status>
</kw>
<msg timestamp="20201129 13:38:09.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:09.918" starttime="20201129 13:38:05.909"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:09.918" starttime="20201129 13:38:05.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:09.923" level="INFO">Running command 'ozone sh bucket link 93228-target/loop2 93228-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:13.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:13.642" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:13.642" starttime="20201129 13:38:09.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:13.643" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:13.644" starttime="20201129 13:38:13.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:13.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:13.644" starttime="20201129 13:38:13.644"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:13.645" starttime="20201129 13:38:09.920"></status>
</kw>
<msg timestamp="20201129 13:38:13.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:13.645" starttime="20201129 13:38:09.919"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:13.646" starttime="20201129 13:38:09.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:13.650" level="INFO">Running command 'ozone sh bucket link 93228-target/loop3 93228-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:18.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:18.114" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:18.114" starttime="20201129 13:38:13.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:18.115" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:18.116" starttime="20201129 13:38:18.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:18.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:18.117" starttime="20201129 13:38:18.116"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:18.117" starttime="20201129 13:38:13.647"></status>
</kw>
<msg timestamp="20201129 13:38:18.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:18.117" starttime="20201129 13:38:13.647"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:18.117" starttime="20201129 13:38:13.646"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:18.122" level="INFO">Running command 'ozone sh key list 93228-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:21.955" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:38:21.955" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:21.955" starttime="20201129 13:38:18.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:21.956" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201129 13:38:21.956" starttime="20201129 13:38:21.956"></status>
</kw>
<msg timestamp="20201129 13:38:21.957" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:21.957" starttime="20201129 13:38:18.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:21.957" starttime="20201129 13:38:21.957"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:38:21.958" critical="yes" starttime="20201129 13:38:05.869"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:21.967" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:21.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:21.968" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:38:21.968" starttime="20201129 13:38:21.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:21.969" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:38:21.969" starttime="20201129 13:38:21.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:21.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:21.970" starttime="20201129 13:38:21.969"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:21.970" starttime="20201129 13:38:21.962"></status>
</kw>
<msg timestamp="20201129 13:38:21.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:21.971" starttime="20201129 13:38:21.961"></status>
</kw>
<msg timestamp="20201129 13:38:21.971" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:38:21.971" starttime="20201129 13:38:21.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:38:21.972" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:38:21.972" starttime="20201129 13:38:21.971"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:21.977" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:22.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:22.010" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:38:22.011" starttime="20201129 13:38:21.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:22.012" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:38:22.012" starttime="20201129 13:38:22.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:22.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:22.013" starttime="20201129 13:38:22.012"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:22.013" starttime="20201129 13:38:21.974"></status>
</kw>
<msg timestamp="20201129 13:38:22.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:22.013" starttime="20201129 13:38:21.973"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:22.014" starttime="20201129 13:38:21.973"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:22.014" starttime="20201129 13:38:21.972"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:22.014" starttime="20201129 13:38:21.960"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:22.014" starttime="20201129 13:38:21.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:22.018" level="INFO">Running command 'ozone sh bucket link 93228-source/bucket1 93228-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:25.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:25.834" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:25.834" starttime="20201129 13:38:22.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:25.835" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:25.835" starttime="20201129 13:38:25.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:25.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:25.836" starttime="20201129 13:38:25.835"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:25.836" starttime="20201129 13:38:22.016"></status>
</kw>
<msg timestamp="20201129 13:38:25.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:25.837" starttime="20201129 13:38:22.015"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:25.837" starttime="20201129 13:38:22.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:25.841" level="INFO">Running command 'ozone sh key put 93228-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:31.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:31.819" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:31.819" starttime="20201129 13:38:25.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:31.821" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:31.822" starttime="20201129 13:38:31.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:31.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:31.823" starttime="20201129 13:38:31.822"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:31.823" starttime="20201129 13:38:25.838"></status>
</kw>
<msg timestamp="20201129 13:38:31.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:31.824" starttime="20201129 13:38:25.838"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:31.824" starttime="20201129 13:38:25.837"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201129 13:38:31.826" level="INFO">${postfix} = 13738</msg>
<status status="PASS" endtime="20201129 13:38:31.826" starttime="20201129 13:38:31.825"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201129 13:38:31.827" level="INFO">${tmpfile} = /tmp/tempkey-13738</msg>
<status status="PASS" endtime="20201129 13:38:31.827" starttime="20201129 13:38:31.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:31.831" level="INFO">Running command 'ozone sh key get -f 93228-target/link1/key3 /tmp/tempkey-13738 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:37.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:37.594" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:37.594" starttime="20201129 13:38:31.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.596" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:37.597" starttime="20201129 13:38:37.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:37.597" starttime="20201129 13:38:37.597"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.598" starttime="20201129 13:38:31.828"></status>
</kw>
<msg timestamp="20201129 13:38:37.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:37.598" starttime="20201129 13:38:31.828"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.598" starttime="20201129 13:38:31.827"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201129 13:38:37.605" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-13738 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:37.606" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201129 13:38:37.606" starttime="20201129 13:38:37.598"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:37.610" level="INFO">Running command 'rm -f /tmp/tempkey-13738 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:37.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:37.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:38:37.613" starttime="20201129 13:38:37.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.614" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:38:37.614" starttime="20201129 13:38:37.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:37.615" starttime="20201129 13:38:37.614"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.615" starttime="20201129 13:38:37.607"></status>
</kw>
<msg timestamp="20201129 13:38:37.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:37.615" starttime="20201129 13:38:37.607"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.615" starttime="20201129 13:38:37.606"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:38:37.616" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201129 13:38:37.616" starttime="20201129 13:38:37.616"></status>
</kw>
<msg timestamp="20201129 13:38:37.616" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201129 13:38:37.616" starttime="20201129 13:38:31.825"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:37.617" starttime="20201129 13:38:37.616"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.617" starttime="20201129 13:38:31.824"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:38:37.617" critical="yes" starttime="20201129 13:38:21.959"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:37.625" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:37.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:37.628" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201129 13:38:37.628" starttime="20201129 13:38:37.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.629" level="INFO">scm</msg>
<status status="PASS" endtime="20201129 13:38:37.629" starttime="20201129 13:38:37.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:37.630" starttime="20201129 13:38:37.629"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.631" starttime="20201129 13:38:37.622"></status>
</kw>
<msg timestamp="20201129 13:38:37.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:37.631" starttime="20201129 13:38:37.622"></status>
</kw>
<msg timestamp="20201129 13:38:37.631" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201129 13:38:37.631" starttime="20201129 13:38:37.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:38:37.632" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:38:37.632" starttime="20201129 13:38:37.631"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:37.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:37.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:37.659" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:38:37.659" starttime="20201129 13:38:37.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.660" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:38:37.661" starttime="20201129 13:38:37.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:37.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:37.661" starttime="20201129 13:38:37.661"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.662" starttime="20201129 13:38:37.634"></status>
</kw>
<msg timestamp="20201129 13:38:37.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:37.662" starttime="20201129 13:38:37.633"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.662" starttime="20201129 13:38:37.633"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.662" starttime="20201129 13:38:37.632"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.662" starttime="20201129 13:38:37.620"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:37.662" starttime="20201129 13:38:37.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:37.666" level="INFO">Running command 'ozone sh bucket delete 93228-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:41.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:41.572" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:41.572" starttime="20201129 13:38:37.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:41.573" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:38:41.573" starttime="20201129 13:38:41.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:41.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:41.574" starttime="20201129 13:38:41.573"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:41.574" starttime="20201129 13:38:37.663"></status>
</kw>
<msg timestamp="20201129 13:38:41.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:41.574" starttime="20201129 13:38:37.663"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:41.575" starttime="20201129 13:38:37.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:41.580" level="INFO">Running command 'ozone sh bucket list 93228-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:45.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:45.514" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:45.514" starttime="20201129 13:38:41.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:45.516" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:37:45.654Z",
  "modificationTime" : "2020-11-29T13:37:45.654Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:36:03.373Z",
  "modificationTime" : "2020-11-29T13:36:03.373Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:40.097Z",
  "modificationTime" : "2020-11-29T13:35:59.507Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:37:38.128Z",
  "modificationTime" : "2020-11-29T13:37:38.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:38:25.659Z",
  "modificationTime" : "2020-11-29T13:38:25.659Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:38:17.946Z",
  "modificationTime" : "2020-11-29T13:38:17.946Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:38:09.783Z",
  "modificationTime" : "2020-11-29T13:38:09.783Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:38:13.414Z",
  "modificationTime" : "2020-11-29T13:38:13.414Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:31.946Z",
  "modificationTime" : "2020-11-29T13:35:55.314Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "93228-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:35:35.925Z",
  "modificationTime" : "2020-11-29T13:35:35.925Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "93228-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:38:45.516" starttime="20201129 13:38:45.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:45.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:45.517" starttime="20201129 13:38:45.516"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:45.517" starttime="20201129 13:38:41.576"></status>
</kw>
<msg timestamp="20201129 13:38:45.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:45.517" starttime="20201129 13:38:41.576"></status>
</kw>
<msg timestamp="20201129 13:38:45.518" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:38:45.518" starttime="20201129 13:38:41.575"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:45.519" starttime="20201129 13:38:45.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:38:45.525" level="INFO">Running command 'ozone sh key list 93228-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:38:49.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:38:49.650" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201129 13:38:49.651" starttime="20201129 13:38:45.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:38:49.652" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201129 13:38:49.652" starttime="20201129 13:38:49.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:38:49.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:38:49.653" starttime="20201129 13:38:49.652"></status>
</kw>
<status status="PASS" endtime="20201129 13:38:49.653" starttime="20201129 13:38:45.520"></status>
</kw>
<msg timestamp="20201129 13:38:49.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:38:49.653" starttime="20201129 13:38:45.520"></status>
</kw>
<msg timestamp="20201129 13:38:49.654" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201129 13:38:49.654" starttime="20201129 13:38:45.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201129 13:38:49.654" starttime="20201129 13:38:49.654"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:38:49.655" critical="yes" starttime="20201129 13:38:37.619"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201129 13:38:49.658" starttime="20201129 13:35:05.002"></status>
</suite>
<status status="PASS" elapsedtime="256226" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
