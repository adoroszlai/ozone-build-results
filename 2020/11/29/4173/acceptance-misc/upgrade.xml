<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201129 13:41:37.686" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/topology/loaddata.robot" id="s1-s1" name="Loaddata">
<test id="s1-s1-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:40:18.025" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:40:20.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:40:20.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:40:20.608" starttime="20201129 13:40:18.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:40:20.609" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:40:20.609" starttime="20201129 13:40:20.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:40:20.610" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:40:20.610" starttime="20201129 13:40:20.609"></status>
</kw>
<status status="PASS" endtime="20201129 13:40:20.610" starttime="20201129 13:40:18.023"></status>
</kw>
<msg timestamp="20201129 13:40:20.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:40:20.610" starttime="20201129 13:40:18.022"></status>
</kw>
<msg timestamp="20201129 13:40:20.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:40:20.611" starttime="20201129 13:40:18.022"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:40:20.611" starttime="20201129 13:40:20.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:40:20.614" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:40:22.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:40:22.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:40:22.779" starttime="20201129 13:40:20.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:40:22.780" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:40:22.781" starttime="20201129 13:40:22.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:40:22.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:40:22.781" starttime="20201129 13:40:22.781"></status>
</kw>
<status status="PASS" endtime="20201129 13:40:22.782" starttime="20201129 13:40:20.612"></status>
</kw>
<msg timestamp="20201129 13:40:22.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:40:22.782" starttime="20201129 13:40:20.612"></status>
</kw>
<msg timestamp="20201129 13:40:22.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:40:22.782" starttime="20201129 13:40:20.611"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:40:22.783" starttime="20201129 13:40:22.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:40:22.786" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:40:27.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:40:27.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:40:27.486" starttime="20201129 13:40:22.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:40:27.487" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:40:27.487" starttime="20201129 13:40:27.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:40:27.487" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:40:27.488" starttime="20201129 13:40:27.487"></status>
</kw>
<status status="PASS" endtime="20201129 13:40:27.488" starttime="20201129 13:40:22.784"></status>
</kw>
<msg timestamp="20201129 13:40:27.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:40:27.488" starttime="20201129 13:40:22.784"></status>
</kw>
<msg timestamp="20201129 13:40:27.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:40:27.488" starttime="20201129 13:40:22.783"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:40:27.489" starttime="20201129 13:40:27.489"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:40:27.489" critical="yes" starttime="20201129 13:40:18.021"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:40:27.490" starttime="20201129 13:40:17.971"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s2" name="Readdata">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:41:25.769" level="INFO">${random} = 48737</msg>
<status status="PASS" endtime="20201129 13:41:25.770" starttime="20201129 13:41:25.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:41:25.776" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-48737 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:41:30.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:41:30.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:41:30.869" starttime="20201129 13:41:25.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:41:30.871" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:41:30.871" starttime="20201129 13:41:30.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:41:30.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:41:30.871" starttime="20201129 13:41:30.871"></status>
</kw>
<status status="PASS" endtime="20201129 13:41:30.872" starttime="20201129 13:41:25.771"></status>
</kw>
<msg timestamp="20201129 13:41:30.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:41:30.872" starttime="20201129 13:41:25.771"></status>
</kw>
<msg timestamp="20201129 13:41:30.872" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:41:30.872" starttime="20201129 13:41:25.770"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:41:30.873" starttime="20201129 13:41:30.872"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:41:30.873" critical="yes" starttime="20201129 13:41:25.768"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:41:30.875" starttime="20201129 13:41:25.706"></status>
</suite>
<status status="PASS" elapsedtime="14688" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="2">upgrade</stat>
<stat fail="0" id="s1-s1" name="Loaddata" pass="1">upgrade.Loaddata</stat>
<stat fail="0" id="s1-s2" name="Readdata" pass="1">upgrade.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
