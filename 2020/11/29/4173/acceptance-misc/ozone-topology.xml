<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201129 13:23:51.432" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201129 13:20:46.346" starttime="20201129 13:20:46.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:20:46.352" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:20:46.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:20:46.472" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sun, 29 Nov 2020 13:20:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sun, 29 Nov 2020 12:44:46 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201129 13:20:46.472" starttime="20201129 13:20:46.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:20:46.473" level="INFO">HTTP/1.1 200 OK
Date: Sun, 29 Nov 2020 13:20:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sun, 29 Nov 2020 12:44:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201129 13:20:46.473" starttime="20201129 13:20:46.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:20:46.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:20:46.474" starttime="20201129 13:20:46.473"></status>
</kw>
<status status="PASS" endtime="20201129 13:20:46.475" starttime="20201129 13:20:46.347"></status>
</kw>
<msg timestamp="20201129 13:20:46.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:20:46.475" starttime="20201129 13:20:46.346"></status>
</kw>
<msg timestamp="20201129 13:20:46.475" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sun, 29 Nov 2020 13:20:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sun, 29 Nov 2020 12:44:46 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201129 13:20:46.475" starttime="20201129 13:20:46.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201129 13:20:46.476" starttime="20201129 13:20:46.475"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:20:46.476" critical="yes" starttime="20201129 13:20:46.344"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201129 13:20:46.480" starttime="20201129 13:20:46.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:20:46.487" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:21:56.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:21:56.762" level="INFO">${output} = 2020-11-29 13:20:48,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:20:48,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:21:56.762" starttime="20201129 13:20:46.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:21:56.763" level="INFO">2020-11-29 13:20:48,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:20:48,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:20:48,707 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-29 13:20:50,918 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-29 13:20:50,919 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-29 13:20:50,919 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-29 13:20:50,919 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-29 13:20:50,919 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-29 13:20:50,919 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-29 13:20:50,920 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-29 13:20:50,931 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-29 13:20:50,932 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-29 13:20:50,944 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-29 13:20:51,016 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-50004, with hadoop as owner.
2020-11-29 13:20:51,380 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-61426, with hadoop as owner.
2020-11-29 13:20:51,392 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-70337, with hadoop as owner.
2020-11-29 13:20:51,403 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-46509, with hadoop as owner.
2020-11-29 13:20:51,416 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-75935, with hadoop as owner.
2020-11-29 13:20:51,442 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-50004/bucket-0-21572, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61426/bucket-0-75739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,585 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-70337/bucket-0-09679, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-46509/bucket-0-83690, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,612 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-75935/bucket-0-91800, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-50004/bucket-1-86585, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,625 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61426/bucket-1-54808, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,632 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-70337/bucket-1-61589, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,637 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-46509/bucket-1-26359, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-75935/bucket-1-60588, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-50004/bucket-2-10219, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,673 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61426/bucket-2-80003, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,697 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-70337/bucket-2-19440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,705 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-46509/bucket-2-64796, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,711 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-75935/bucket-2-47388, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,727 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-50004/bucket-3-99182, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,735 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61426/bucket-3-19427, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,743 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-70337/bucket-3-13214, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,749 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-46509/bucket-3-36407, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,759 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-75935/bucket-3-59617, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,768 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-50004/bucket-4-48298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,779 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-61426/bucket-4-94586, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,794 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-70337/bucket-4-34189, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,804 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-46509/bucket-4-04776, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,815 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-75935/bucket-4-27750, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-29 13:20:51,950 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-29 13:20:52,950 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-29 13:20:53,260 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-29 13:20:53,951 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-29 13:20:53,977 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:20:53,980 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-424991657D64-&gt;c92b6478-195a-4c2d-8ca9-badc125e108b
2020-11-29 13:20:53,985 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:20:54,954 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-29 13:20:55,954 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-29 13:20:56,955 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-29 13:20:57,848 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E7F72FACC7D3-&gt;a13a9f1a-43f5-4e83-a35d-d6ce5bd28aff
2020-11-29 13:20:57,848 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:20:57,956 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-29 13:20:58,958 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-29 13:20:59,958 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-29 13:21:00,969 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-11-29 13:21:01,974 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-11-29 13:21:02,974 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-11-29 13:21:03,975 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-11-29 13:21:04,976 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-11-29 13:21:05,976 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-11-29 13:21:06,977 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-11-29 13:21:07,977 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-29 13:21:08,978 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-29 13:21:09,978 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-11-29 13:21:10,979 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-11-29 13:21:11,979 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-11-29 13:21:12,981 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-11-29 13:21:13,982 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-11-29 13:21:14,982 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-11-29 13:21:15,983 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-29 13:21:16,983 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-29 13:21:17,983 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-11-29 13:21:18,985 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-11-29 13:21:19,986 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-11-29 13:21:20,987 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-11-29 13:21:21,988 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-11-29 13:21:22,988 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-11-29 13:21:23,989 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-11-29 13:21:24,989 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-11-29 13:21:25,990 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-11-29 13:21:26,990 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-11-29 13:21:27,990 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-11-29 13:21:28,991 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-11-29 13:21:29,992 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-11-29 13:21:30,992 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-11-29 13:21:31,992 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-11-29 13:21:32,993 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-11-29 13:21:33,993 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-11-29 13:21:34,994 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-11-29 13:21:35,997 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-11-29 13:21:36,998 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-11-29 13:21:37,998 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-11-29 13:21:38,999 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-29 13:21:39,999 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-29 13:21:41,000 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-11-29 13:21:42,001 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-11-29 13:21:43,001 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-29 13:21:44,002 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-11-29 13:21:45,002 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-11-29 13:21:46,002 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-11-29 13:21:47,003 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-11-29 13:21:48,003 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-11-29 13:21:49,004 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-11-29 13:21:50,004 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-11-29 13:21:51,004 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-11-29 13:21:52,005 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-11-29 13:21:53,006 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-11-29 13:21:54,006 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,441
Average Time spent in bucket creation: 00:00:00,282
Average Time spent in key creation: 00:00:02,342
Average Time spent in key write: 00:00:01,403
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,449
***************************************************</msg>
<status status="PASS" endtime="20201129 13:21:56.763" starttime="20201129 13:21:56.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:21:56.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:21:56.764" starttime="20201129 13:21:56.763"></status>
</kw>
<status status="PASS" endtime="20201129 13:21:56.764" starttime="20201129 13:20:46.481"></status>
</kw>
<msg timestamp="20201129 13:21:56.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:21:56.764" starttime="20201129 13:20:46.481"></status>
</kw>
<msg timestamp="20201129 13:21:56.765" level="INFO">${result} = 2020-11-29 13:20:48,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-29 13:20:48,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201129 13:21:56.765" starttime="20201129 13:20:46.480"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201129 13:21:56.766" starttime="20201129 13:21:56.766"></status>
</kw>
<status status="PASS" endtime="20201129 13:21:56.766" starttime="20201129 13:21:56.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201129 13:21:56.767" starttime="20201129 13:21:56.766"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:21:56.767" critical="yes" starttime="20201129 13:20:46.477"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:21:56.768" starttime="20201129 13:20:46.285"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:22:01.586" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:22:04.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:22:04.332" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201129 13:22:04.332" starttime="20201129 13:22:01.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:22:04.334" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20201129 13:22:04.334" starttime="20201129 13:22:04.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:22:04.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:22:04.335" starttime="20201129 13:22:04.334"></status>
</kw>
<status status="PASS" endtime="20201129 13:22:04.335" starttime="20201129 13:22:01.581"></status>
</kw>
<msg timestamp="20201129 13:22:04.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:22:04.335" starttime="20201129 13:22:01.581"></status>
</kw>
<msg timestamp="20201129 13:22:04.336" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201129 13:22:04.336" starttime="20201129 13:22:01.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201129 13:22:04.336" starttime="20201129 13:22:04.336"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:22:04.337" critical="yes" starttime="20201129 13:22:01.579"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:22:04.342" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:22:07.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:22:07.174" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201129 13:22:07.174" starttime="20201129 13:22:04.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:22:07.175" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201129 13:22:07.176" starttime="20201129 13:22:07.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:22:07.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:22:07.176" starttime="20201129 13:22:07.176"></status>
</kw>
<status status="PASS" endtime="20201129 13:22:07.177" starttime="20201129 13:22:04.339"></status>
</kw>
<msg timestamp="20201129 13:22:07.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:22:07.177" starttime="20201129 13:22:04.339"></status>
</kw>
<msg timestamp="20201129 13:22:07.177" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201129 13:22:07.177" starttime="20201129 13:22:04.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201129 13:22:07.178" starttime="20201129 13:22:07.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201129 13:22:07.179" starttime="20201129 13:22:07.178"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:22:07.179" critical="yes" starttime="20201129 13:22:04.337"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:22:07.180" starttime="20201129 13:22:01.520"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:22:12.054" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:22:15.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:22:15.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:22:15.105" starttime="20201129 13:22:12.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:22:15.106" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:22:15.106" starttime="20201129 13:22:15.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:22:15.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:22:15.107" starttime="20201129 13:22:15.106"></status>
</kw>
<status status="PASS" endtime="20201129 13:22:15.107" starttime="20201129 13:22:12.048"></status>
</kw>
<msg timestamp="20201129 13:22:15.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:22:15.108" starttime="20201129 13:22:12.047"></status>
</kw>
<msg timestamp="20201129 13:22:15.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:22:15.108" starttime="20201129 13:22:12.047"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:22:15.108" starttime="20201129 13:22:15.108"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:22:15.112" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:22:18.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:22:18.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:22:18.349" starttime="20201129 13:22:15.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:22:18.351" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:22:18.351" starttime="20201129 13:22:18.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:22:18.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:22:18.352" starttime="20201129 13:22:18.351"></status>
</kw>
<status status="PASS" endtime="20201129 13:22:18.352" starttime="20201129 13:22:15.110"></status>
</kw>
<msg timestamp="20201129 13:22:18.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:22:18.353" starttime="20201129 13:22:15.109"></status>
</kw>
<msg timestamp="20201129 13:22:18.353" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:22:18.353" starttime="20201129 13:22:15.109"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:22:18.354" starttime="20201129 13:22:18.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:22:18.358" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:22:23.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:22:23.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:22:23.877" starttime="20201129 13:22:18.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:22:23.878" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:22:23.878" starttime="20201129 13:22:23.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:22:23.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:22:23.879" starttime="20201129 13:22:23.879"></status>
</kw>
<status status="PASS" endtime="20201129 13:22:23.879" starttime="20201129 13:22:18.355"></status>
</kw>
<msg timestamp="20201129 13:22:23.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:22:23.880" starttime="20201129 13:22:18.354"></status>
</kw>
<msg timestamp="20201129 13:22:23.880" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:22:23.880" starttime="20201129 13:22:18.354"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:22:23.881" starttime="20201129 13:22:23.880"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:22:23.881" critical="yes" starttime="20201129 13:22:12.046"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:22:23.883" starttime="20201129 13:22:11.986"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:23:39.477" level="INFO">${random} = 69693</msg>
<status status="PASS" endtime="20201129 13:23:39.477" starttime="20201129 13:23:39.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:23:39.486" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69693 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:23:44.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:23:44.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:23:44.705" starttime="20201129 13:23:39.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:23:44.706" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:23:44.706" starttime="20201129 13:23:44.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:23:44.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:23:44.707" starttime="20201129 13:23:44.706"></status>
</kw>
<status status="PASS" endtime="20201129 13:23:44.707" starttime="20201129 13:23:39.478"></status>
</kw>
<msg timestamp="20201129 13:23:44.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:23:44.707" starttime="20201129 13:23:39.478"></status>
</kw>
<msg timestamp="20201129 13:23:44.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:23:44.708" starttime="20201129 13:23:39.477"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:23:44.708" starttime="20201129 13:23:44.708"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:23:44.709" critical="yes" starttime="20201129 13:23:39.475"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:23:44.711" starttime="20201129 13:23:39.404"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:22:30.719" level="INFO">${random} = 71936</msg>
<status status="PASS" endtime="20201129 13:22:30.719" starttime="20201129 13:22:30.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:22:30.725" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-71936 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:23:05.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:23:05.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:23:05.599" starttime="20201129 13:22:30.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:23:05.600" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:23:05.600" starttime="20201129 13:23:05.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:23:05.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:23:05.601" starttime="20201129 13:23:05.601"></status>
</kw>
<status status="PASS" endtime="20201129 13:23:05.602" starttime="20201129 13:22:30.720"></status>
</kw>
<msg timestamp="20201129 13:23:05.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:23:05.602" starttime="20201129 13:22:30.720"></status>
</kw>
<msg timestamp="20201129 13:23:05.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:23:05.602" starttime="20201129 13:22:30.719"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:23:05.603" starttime="20201129 13:23:05.602"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:23:05.603" critical="yes" starttime="20201129 13:22:30.717"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201129 13:23:05.606" starttime="20201129 13:22:30.651"></status>
</suite>
<status status="PASS" elapsedtime="128302" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
