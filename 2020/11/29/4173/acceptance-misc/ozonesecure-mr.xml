<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201129 13:31:58.732" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:09.954" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:15.458" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:28:15.458" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:15.458" starttime="20201129 13:28:09.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:15.459" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:28:15.459" starttime="20201129 13:28:15.459"></status>
</kw>
<msg timestamp="20201129 13:28:15.460" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:15.460" starttime="20201129 13:28:09.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:15.466" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:19.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:19.577" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:19.577" starttime="20201129 13:28:15.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:19.578" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:19.578" starttime="20201129 13:28:19.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:19.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:19.579" starttime="20201129 13:28:19.578"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:19.579" starttime="20201129 13:28:15.462"></status>
</kw>
<msg timestamp="20201129 13:28:19.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:19.580" starttime="20201129 13:28:15.462"></status>
</kw>
<msg timestamp="20201129 13:28:19.580" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:19.580" starttime="20201129 13:28:15.461"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:28:19.581" starttime="20201129 13:28:19.580"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:19.581" starttime="20201129 13:28:15.461"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:19.581" starttime="20201129 13:28:15.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:19.587" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:23.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:23.321" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:23.321" starttime="20201129 13:28:19.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:23.322" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:23.323" starttime="20201129 13:28:23.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:23.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:23.323" starttime="20201129 13:28:23.323"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:23.324" starttime="20201129 13:28:19.583"></status>
</kw>
<msg timestamp="20201129 13:28:23.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:23.324" starttime="20201129 13:28:19.583"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:23.324" starttime="20201129 13:28:19.582"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:23.324" starttime="20201129 13:28:19.582"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:23.324" starttime="20201129 13:28:19.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201129 13:28:23.325" starttime="20201129 13:28:23.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:23.329" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:27.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:27.387" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:27.387" starttime="20201129 13:28:23.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:27.388" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:28:23.121Z",
  "modificationTime" : "2020-11-29T13:28:23.121Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:28:27.388" starttime="20201129 13:28:27.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:27.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:27.389" starttime="20201129 13:28:27.388"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:27.389" starttime="20201129 13:28:23.326"></status>
</kw>
<msg timestamp="20201129 13:28:27.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:27.390" starttime="20201129 13:28:23.326"></status>
</kw>
<msg timestamp="20201129 13:28:27.390" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:27.390" starttime="20201129 13:28:23.325"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201129 13:28:27.391" starttime="20201129 13:28:27.390"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:28:27.395" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:28:27.395" starttime="20201129 13:28:27.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:28:27.396" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:28:27.396" starttime="20201129 13:28:27.395"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:27.396" starttime="20201129 13:28:27.394"></status>
</kw>
<msg timestamp="20201129 13:28:27.396" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:28:27.396" starttime="20201129 13:28:27.393"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:27.397" starttime="20201129 13:28:27.393"></status>
</kw>
<msg timestamp="20201129 13:28:27.397" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:28:27.397" starttime="20201129 13:28:27.392"></status>
</kw>
<msg timestamp="20201129 13:28:27.397" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:28:27.397" starttime="20201129 13:28:27.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:27.401" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:31.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:31.107" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:31.107" starttime="20201129 13:28:27.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:31.109" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:31.109" starttime="20201129 13:28:31.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:31.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:31.109" starttime="20201129 13:28:31.109"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:31.110" starttime="20201129 13:28:27.398"></status>
</kw>
<msg timestamp="20201129 13:28:31.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:31.110" starttime="20201129 13:28:27.398"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:31.110" starttime="20201129 13:28:27.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:31.115" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:39.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:39.897" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:39.897" starttime="20201129 13:28:31.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:39.898" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:39.898" starttime="20201129 13:28:39.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:39.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:39.899" starttime="20201129 13:28:39.898"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:39.899" starttime="20201129 13:28:31.112"></status>
</kw>
<msg timestamp="20201129 13:28:39.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:39.900" starttime="20201129 13:28:31.111"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:39.900" starttime="20201129 13:28:31.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:39.904" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:45.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:45.987" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:45.987" starttime="20201129 13:28:39.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:45.988" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:45.989" starttime="20201129 13:28:45.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:45.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:45.989" starttime="20201129 13:28:45.989"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:45.990" starttime="20201129 13:28:39.901"></status>
</kw>
<msg timestamp="20201129 13:28:45.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:45.990" starttime="20201129 13:28:39.901"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:45.990" starttime="20201129 13:28:39.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:45.994" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:52.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:52.009" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:52.009" starttime="20201129 13:28:45.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:52.010" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:52.010" starttime="20201129 13:28:52.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:52.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:52.011" starttime="20201129 13:28:52.010"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:52.011" starttime="20201129 13:28:45.991"></status>
</kw>
<msg timestamp="20201129 13:28:52.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:52.011" starttime="20201129 13:28:45.991"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:52.012" starttime="20201129 13:28:45.990"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:28:52.012" critical="yes" starttime="20201129 13:28:09.947"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:28:52.018" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:28:52.018" starttime="20201129 13:28:52.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:28:52.019" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:28:52.019" starttime="20201129 13:28:52.018"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:52.019" starttime="20201129 13:28:52.017"></status>
</kw>
<msg timestamp="20201129 13:28:52.019" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:28:52.019" starttime="20201129 13:28:52.016"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:52.020" starttime="20201129 13:28:52.015"></status>
</kw>
<msg timestamp="20201129 13:28:52.020" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:28:52.020" starttime="20201129 13:28:52.015"></status>
</kw>
<msg timestamp="20201129 13:28:52.020" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:28:52.020" starttime="20201129 13:28:52.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:52.025" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:55.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:55.981" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:55.981" starttime="20201129 13:28:52.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:55.982" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:55.983" starttime="20201129 13:28:55.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:55.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:55.983" starttime="20201129 13:28:55.983"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:55.984" starttime="20201129 13:28:52.021"></status>
</kw>
<msg timestamp="20201129 13:28:55.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:55.984" starttime="20201129 13:28:52.021"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:55.984" starttime="20201129 13:28:52.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:55.989" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:59.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:59.764" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201129 13:28:59.764" starttime="20201129 13:28:55.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:59.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201129 13:28:59.766" starttime="20201129 13:28:59.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:59.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:59.766" starttime="20201129 13:28:59.766"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:59.767" starttime="20201129 13:28:55.985"></status>
</kw>
<msg timestamp="20201129 13:28:59.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:59.767" starttime="20201129 13:28:55.985"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:59.767" starttime="20201129 13:28:55.984"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:28:59.768" critical="yes" starttime="20201129 13:28:52.013"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201129 13:28:59.769" starttime="20201129 13:28:09.877"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:30:58.998" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:30:58.998" starttime="20201129 13:30:58.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:30:58.998" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:30:58.998" starttime="20201129 13:30:58.998"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:58.999" starttime="20201129 13:30:58.997"></status>
</kw>
<msg timestamp="20201129 13:30:58.999" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:30:58.999" starttime="20201129 13:30:58.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:30:59.000" starttime="20201129 13:30:58.999"></status>
</kw>
<msg timestamp="20201129 13:30:59.000" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:30:59.000" starttime="20201129 13:30:58.999"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:59.000" starttime="20201129 13:30:58.995"></status>
</kw>
<msg timestamp="20201129 13:30:59.001" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:30:59.001" starttime="20201129 13:30:58.995"></status>
</kw>
<msg timestamp="20201129 13:30:59.001" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:30:59.001" starttime="20201129 13:30:58.994"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:30:59.001" level="INFO">${random} = 83995</msg>
<status status="PASS" endtime="20201129 13:30:59.002" starttime="20201129 13:30:59.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:30:59.009" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83995 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:31:03.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:31:03.091" level="INFO">${output} = 2020-11-29 13:31:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:31:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:31:03.091" starttime="20201129 13:30:59.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:31:03.092" level="INFO">2020-11-29 13:31:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:31:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:31:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:31:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:31:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3B8FDDFD322B-&gt;f1bc8bd7-0f48-4088-885a-7b386139c5c1
2020-11-29 13:31:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201129 13:31:03.092" starttime="20201129 13:31:03.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:31:03.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:31:03.093" starttime="20201129 13:31:03.092"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:03.093" starttime="20201129 13:30:59.003"></status>
</kw>
<msg timestamp="20201129 13:31:03.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:31:03.094" starttime="20201129 13:30:59.002"></status>
</kw>
<msg timestamp="20201129 13:31:03.094" level="INFO">${result} = 2020-11-29 13:31:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:31:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:31:03.094" starttime="20201129 13:30:59.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:31:03.101" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:31:05.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:31:05.309" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:29 ofs://om/volume1/bucket1/ozone-74041
-rw-...</msg>
<status status="PASS" endtime="20201129 13:31:05.309" starttime="20201129 13:31:03.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:31:05.310" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:29 ofs://om/volume1/bucket1/ozone-74041
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:31 ofs://om/volume1/bucket1/ozone-83995
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:30 ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:31:05.310" starttime="20201129 13:31:05.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:31:05.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:31:05.311" starttime="20201129 13:31:05.311"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:05.311" starttime="20201129 13:31:03.096"></status>
</kw>
<msg timestamp="20201129 13:31:05.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:31:05.312" starttime="20201129 13:31:03.096"></status>
</kw>
<msg timestamp="20201129 13:31:05.312" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:29 ofs://om/volume1/bucket1/ozone-74041
-rw-...</msg>
<status status="PASS" endtime="20201129 13:31:05.312" starttime="20201129 13:31:03.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:31:05.313" starttime="20201129 13:31:05.312"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:31:05.313" critical="yes" starttime="20201129 13:30:58.992"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:31:05.314" starttime="20201129 13:30:58.927"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:29:24.099" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:29:24.099" starttime="20201129 13:29:24.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:29:24.100" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:29:24.100" starttime="20201129 13:29:24.099"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:24.100" starttime="20201129 13:29:24.098"></status>
</kw>
<msg timestamp="20201129 13:29:24.100" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:29:24.100" starttime="20201129 13:29:24.097"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:24.101" starttime="20201129 13:29:24.097"></status>
</kw>
<msg timestamp="20201129 13:29:24.102" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:29:24.102" starttime="20201129 13:29:24.096"></status>
</kw>
<msg timestamp="20201129 13:29:24.102" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:29:24.102" starttime="20201129 13:29:24.095"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:29:24.103" level="INFO">${random} = 74041</msg>
<status status="PASS" endtime="20201129 13:29:24.103" starttime="20201129 13:29:24.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:29:24.109" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-74041 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:29:28.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:29:28.500" level="INFO">${output} = 2020-11-29 13:29:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:29:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:29:28.500" starttime="20201129 13:29:24.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:29:28.502" level="INFO">2020-11-29 13:29:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:29:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:29:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:29:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:29:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-70C8101F6DD9-&gt;f1bc8bd7-0f48-4088-885a-7b386139c5c1
2020-11-29 13:29:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201129 13:29:28.502" starttime="20201129 13:29:28.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:29:28.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:29:28.502" starttime="20201129 13:29:28.502"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:28.503" starttime="20201129 13:29:24.104"></status>
</kw>
<msg timestamp="20201129 13:29:28.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:29:28.503" starttime="20201129 13:29:24.104"></status>
</kw>
<msg timestamp="20201129 13:29:28.503" level="INFO">${result} = 2020-11-29 13:29:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:29:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:29:28.503" starttime="20201129 13:29:24.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:29:28.510" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:29:30.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:29:30.568" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:29 o3fs://bucket1.volume1.om/ozone-74041
dr...</msg>
<status status="PASS" endtime="20201129 13:29:30.568" starttime="20201129 13:29:28.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:29:30.569" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:29 o3fs://bucket1.volume1.om/ozone-74041
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:29:30.570" starttime="20201129 13:29:30.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:29:30.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:29:30.570" starttime="20201129 13:29:30.570"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:30.571" starttime="20201129 13:29:28.505"></status>
</kw>
<msg timestamp="20201129 13:29:30.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:29:30.571" starttime="20201129 13:29:28.504"></status>
</kw>
<msg timestamp="20201129 13:29:30.571" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:29 o3fs://bucket1.volume1.om/ozone-74041
dr...</msg>
<status status="PASS" endtime="20201129 13:29:30.571" starttime="20201129 13:29:28.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:29:30.572" starttime="20201129 13:29:30.571"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:29:30.572" critical="yes" starttime="20201129 13:29:24.094"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:29:30.573" starttime="20201129 13:29:24.015"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:29:18.522" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:29:18.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:29:18.523" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201129 13:29:18.523" starttime="20201129 13:29:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:29:18.524" level="INFO">rm</msg>
<status status="PASS" endtime="20201129 13:29:18.524" starttime="20201129 13:29:18.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:29:18.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:29:18.525" starttime="20201129 13:29:18.524"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:18.525" starttime="20201129 13:29:18.515"></status>
</kw>
<msg timestamp="20201129 13:29:18.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:29:18.525" starttime="20201129 13:29:18.515"></status>
</kw>
<msg timestamp="20201129 13:29:18.526" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201129 13:29:18.526" starttime="20201129 13:29:18.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:29:18.527" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:29:18.527" starttime="20201129 13:29:18.526"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:29:18.532" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:29:18.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:29:18.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:29:18.558" starttime="20201129 13:29:18.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:29:18.559" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:29:18.559" starttime="20201129 13:29:18.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:29:18.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:29:18.560" starttime="20201129 13:29:18.559"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:18.560" starttime="20201129 13:29:18.529"></status>
</kw>
<msg timestamp="20201129 13:29:18.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:29:18.560" starttime="20201129 13:29:18.529"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:18.561" starttime="20201129 13:29:18.528"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:18.561" starttime="20201129 13:29:18.528"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:18.561" starttime="20201129 13:29:18.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:29:18.561" critical="yes" starttime="20201129 13:29:18.513"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201129 13:29:18.562" starttime="20201129 13:29:18.456"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:04.362" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:04.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:04.364" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201129 13:28:04.364" starttime="20201129 13:28:04.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:04.365" level="INFO">om</msg>
<status status="PASS" endtime="20201129 13:28:04.366" starttime="20201129 13:28:04.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:04.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:04.367" starttime="20201129 13:28:04.366"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:04.367" starttime="20201129 13:28:04.357"></status>
</kw>
<msg timestamp="20201129 13:28:04.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:04.367" starttime="20201129 13:28:04.357"></status>
</kw>
<msg timestamp="20201129 13:28:04.367" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201129 13:28:04.367" starttime="20201129 13:28:04.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201129 13:28:04.368" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201129 13:28:04.368" starttime="20201129 13:28:04.368"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:28:04.373" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:28:04.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:28:04.386" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:28:04.386" starttime="20201129 13:28:04.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:28:04.387" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:28:04.388" starttime="20201129 13:28:04.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:28:04.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:28:04.388" starttime="20201129 13:28:04.388"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:04.389" starttime="20201129 13:28:04.370"></status>
</kw>
<msg timestamp="20201129 13:28:04.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:28:04.389" starttime="20201129 13:28:04.370"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:04.389" starttime="20201129 13:28:04.369"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:04.389" starttime="20201129 13:28:04.368"></status>
</kw>
<status status="PASS" endtime="20201129 13:28:04.390" starttime="20201129 13:28:04.355"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:28:04.390" critical="yes" starttime="20201129 13:28:04.355"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201129 13:28:04.391" starttime="20201129 13:28:04.294"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:31:10.803" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:31:10.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:31:10.809" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:10.809" starttime="20201129 13:31:10.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:31:10.810" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:10.810" starttime="20201129 13:31:10.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:31:10.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:31:10.811" starttime="20201129 13:31:10.810"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:10.811" starttime="20201129 13:31:10.799"></status>
</kw>
<msg timestamp="20201129 13:31:10.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:31:10.811" starttime="20201129 13:31:10.798"></status>
</kw>
<msg timestamp="20201129 13:31:10.812" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:10.812" starttime="20201129 13:31:10.798"></status>
</kw>
<msg timestamp="20201129 13:31:10.812" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:10.812" starttime="20201129 13:31:10.797"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:31:10.817" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:31:10.817" starttime="20201129 13:31:10.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:31:10.818" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:31:10.818" starttime="20201129 13:31:10.818"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:10.819" starttime="20201129 13:31:10.815"></status>
</kw>
<msg timestamp="20201129 13:31:10.819" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:31:10.819" starttime="20201129 13:31:10.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:31:10.820" starttime="20201129 13:31:10.820"></status>
</kw>
<msg timestamp="20201129 13:31:10.820" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:31:10.820" starttime="20201129 13:31:10.819"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:10.821" starttime="20201129 13:31:10.814"></status>
</kw>
<msg timestamp="20201129 13:31:10.821" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:31:10.821" starttime="20201129 13:31:10.813"></status>
</kw>
<msg timestamp="20201129 13:31:10.821" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:31:10.821" starttime="20201129 13:31:10.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:31:10.826" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:31:47.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:31:47.767" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:31:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:31:13 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:31:47.767" starttime="20201129 13:31:10.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:31:47.768" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:31:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:31:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:31:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:31:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:31:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6CCC19EAED56-&gt;f1bc8bd7-0f48-4088-885a-7b386139c5c1
2020-11-29 13:31:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:31:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:31:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-29 13:31:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656677565, maxDate=1607261477565, sequenceNumber=3, masterKeyId=2))
2020-11-29 13:31:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 df ac cd a1 e1 2e 38 df b4 ff c1 e3 2e 40 03 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-29 13:31:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656677565, maxDate=1607261477565, sequenceNumber=3, masterKeyId=2)
2020-11-29 13:31:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:31:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:31:18 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:31:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606656434346_0003
2020-11-29 13:31:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 df ac cd a1 e1 2e 38 df b4 ff c1 e3 2e 40 03 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656677565, maxDate=1607261477565, sequenceNumber=3, masterKeyId=2)]
2020-11-29 13:31:18 INFO  Configuration:2795 - resource-types.xml not found
2020-11-29 13:31:18 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-29 13:31:18 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-29 13:31:19 INFO  YarnClientImpl:329 - Submitted application application_1606656434346_0003
2020-11-29 13:31:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606656434346_0003/
2020-11-29 13:31:19 INFO  Job:1619 - Running job: job_1606656434346_0003
2020-11-29 13:31:27 INFO  Job:1640 - Job job_1606656434346_0003 running in uber mode : false
2020-11-29 13:31:27 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:31:38 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:31:39 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:31:40 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:31:46 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:31:47 INFO  Job:1658 - Job job_1606656434346_0003 completed successfully
2020-11-29 13:31:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50474
		Total time spent by all reduces in occupied slots (ms)=8192
		Total time spent by all map tasks (ms)=25237
		Total time spent by all reduce tasks (ms)=4096
		Total vcore-milliseconds taken by all map tasks=25237
		Total vcore-milliseconds taken by all reduce tasks=4096
		Total megabyte-milliseconds taken by all map tasks=51685376
		Total megabyte-milliseconds taken by all reduce tasks=8388608
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1250
		CPU time spent (ms)=8160
		Physical memory (bytes) snapshot=1543991296
		Virtual memory (bytes) snapshot=14056534016
		Total committed heap usage (bytes)=1302331392
		Peak Map Physical memory (bytes)=395280384
		Peak Map Virtual memory (bytes)=3511144448
		Peak Reduce Physical memory (bytes)=376209408
		Peak Reduce Virtual memory (bytes)=3527073792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.142 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201129 13:31:47.769" starttime="20201129 13:31:47.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:31:47.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:31:47.769" starttime="20201129 13:31:47.769"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.770" starttime="20201129 13:31:10.822"></status>
</kw>
<msg timestamp="20201129 13:31:47.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:31:47.770" starttime="20201129 13:31:10.822"></status>
</kw>
<msg timestamp="20201129 13:31:47.771" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:31:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:31:13 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:31:47.771" starttime="20201129 13:31:10.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:31:47.772" starttime="20201129 13:31:47.771"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:31:47.772" critical="yes" starttime="20201129 13:31:10.796"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:31:47.778" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:31:47.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:31:47.785" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:47.785" starttime="20201129 13:31:47.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:31:47.786" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:47.787" starttime="20201129 13:31:47.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:31:47.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:31:47.787" starttime="20201129 13:31:47.787"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.788" starttime="20201129 13:31:47.775"></status>
</kw>
<msg timestamp="20201129 13:31:47.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:31:47.788" starttime="20201129 13:31:47.775"></status>
</kw>
<msg timestamp="20201129 13:31:47.788" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:47.788" starttime="20201129 13:31:47.774"></status>
</kw>
<msg timestamp="20201129 13:31:47.789" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:31:47.789" starttime="20201129 13:31:47.774"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:31:47.789" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201129 13:31:47.789" starttime="20201129 13:31:47.789"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:31:47.794" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:31:47.794" starttime="20201129 13:31:47.793"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:31:47.794" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:31:47.794" starttime="20201129 13:31:47.794"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.795" starttime="20201129 13:31:47.793"></status>
</kw>
<msg timestamp="20201129 13:31:47.795" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:31:47.795" starttime="20201129 13:31:47.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:31:47.796" starttime="20201129 13:31:47.795"></status>
</kw>
<msg timestamp="20201129 13:31:47.796" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:31:47.796" starttime="20201129 13:31:47.795"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.797" starttime="20201129 13:31:47.791"></status>
</kw>
<msg timestamp="20201129 13:31:47.797" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:31:47.797" starttime="20201129 13:31:47.790"></status>
</kw>
<msg timestamp="20201129 13:31:47.797" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:31:47.797" starttime="20201129 13:31:47.789"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:31:47.801" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:31:47.801" starttime="20201129 13:31:47.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:31:47.802" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:31:47.802" starttime="20201129 13:31:47.801"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.802" starttime="20201129 13:31:47.800"></status>
</kw>
<msg timestamp="20201129 13:31:47.802" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:31:47.802" starttime="20201129 13:31:47.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:31:47.808" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201129 13:31:47.808" starttime="20201129 13:31:47.804"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:31:47.808" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201129 13:31:47.809" starttime="20201129 13:31:47.808"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.809" starttime="20201129 13:31:47.803"></status>
</kw>
<msg timestamp="20201129 13:31:47.809" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201129 13:31:47.809" starttime="20201129 13:31:47.803"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.809" starttime="20201129 13:31:47.799"></status>
</kw>
<msg timestamp="20201129 13:31:47.809" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:31:47.809" starttime="20201129 13:31:47.798"></status>
</kw>
<msg timestamp="20201129 13:31:47.810" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:31:47.810" starttime="20201129 13:31:47.797"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:31:47.814" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:31:47.814" starttime="20201129 13:31:47.813"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:31:47.815" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:31:47.815" starttime="20201129 13:31:47.814"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.815" starttime="20201129 13:31:47.813"></status>
</kw>
<msg timestamp="20201129 13:31:47.815" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:31:47.815" starttime="20201129 13:31:47.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:31:47.817" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201129 13:31:47.817" starttime="20201129 13:31:47.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:31:47.818" level="INFO">${result} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:31:47.818" starttime="20201129 13:31:47.817"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.818" starttime="20201129 13:31:47.816"></status>
</kw>
<msg timestamp="20201129 13:31:47.818" level="INFO">${path_with_leading} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:31:47.818" starttime="20201129 13:31:47.815"></status>
</kw>
<status status="PASS" endtime="20201129 13:31:47.819" starttime="20201129 13:31:47.811"></status>
</kw>
<msg timestamp="20201129 13:31:47.819" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:31:47.819" starttime="20201129 13:31:47.811"></status>
</kw>
<msg timestamp="20201129 13:31:47.819" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:31:47.819" starttime="20201129 13:31:47.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:31:47.825" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:31:50.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:31:50.586" level="INFO">${output} = 2020-11-29 13:31:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:31:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
20...</msg>
<status status="PASS" endtime="20201129 13:31:50.586" starttime="20201129 13:31:47.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:31:50.587" level="INFO">2020-11-29 13:31:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:31:50 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-29 13:31:50 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656710383, maxDate=1607261510383, sequenceNumber=4, masterKeyId=2))
2020-11-29 13:31:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8d ad cf a1 e1 2e 38 8d b5 81 c2 e3 2e 40 04 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-29 13:31:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656710383, maxDate=1607261510383, sequenceNumber=4, masterKeyId=2)
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-49.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201129 13:31:50.587" starttime="20201129 13:31:50.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:31:50.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201129 13:31:50.588" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201129 13:31:50.588" starttime="20201129 13:31:50.587"></status>
</kw>
<status status="FAIL" endtime="20201129 13:31:50.588" starttime="20201129 13:31:47.821"></status>
</kw>
<msg timestamp="20201129 13:31:50.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201129 13:31:50.589" starttime="20201129 13:31:47.821"></status>
</kw>
<status status="FAIL" endtime="20201129 13:31:50.589" starttime="20201129 13:31:47.819"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201129 13:31:50.589" critical="yes" starttime="20201129 13:31:47.773">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201129 13:31:50.591" starttime="20201129 13:31:10.734"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:29:35.955" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:29:35.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:29:35.961" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:29:35.961" starttime="20201129 13:29:35.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:29:35.962" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:29:35.962" starttime="20201129 13:29:35.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:29:35.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:29:35.963" starttime="20201129 13:29:35.962"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:35.963" starttime="20201129 13:29:35.951"></status>
</kw>
<msg timestamp="20201129 13:29:35.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:29:35.963" starttime="20201129 13:29:35.950"></status>
</kw>
<msg timestamp="20201129 13:29:35.963" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:29:35.963" starttime="20201129 13:29:35.950"></status>
</kw>
<msg timestamp="20201129 13:29:35.964" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:29:35.964" starttime="20201129 13:29:35.949"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:29:35.969" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:29:35.969" starttime="20201129 13:29:35.969"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:29:35.970" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:29:35.970" starttime="20201129 13:29:35.970"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:35.970" starttime="20201129 13:29:35.967"></status>
</kw>
<msg timestamp="20201129 13:29:35.971" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:29:35.971" starttime="20201129 13:29:35.967"></status>
</kw>
<status status="PASS" endtime="20201129 13:29:35.971" starttime="20201129 13:29:35.966"></status>
</kw>
<msg timestamp="20201129 13:29:35.971" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:29:35.971" starttime="20201129 13:29:35.965"></status>
</kw>
<msg timestamp="20201129 13:29:35.971" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:29:35.971" starttime="20201129 13:29:35.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:29:35.976" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:30:17.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:30:17.872" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:29:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:29:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:30:17.872" starttime="20201129 13:29:35.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:30:17.873" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:29:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:29:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:29:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:29:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:29:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C5AE4305A347-&gt;f1bc8bd7-0f48-4088-885a-7b386139c5c1
2020-11-29 13:29:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:29:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:29:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-29 13:29:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656580746, maxDate=1607261380746, sequenceNumber=1, masterKeyId=2))
2020-11-29 13:29:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 b6 c7 a1 e1 2e 38 b4 be f9 c1 e3 2e 40 01 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-29 13:29:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656580746, maxDate=1607261380746, sequenceNumber=1, masterKeyId=2)
2020-11-29 13:29:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:29:41 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:29:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606656434346_0001
2020-11-29 13:29:41 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 b6 c7 a1 e1 2e 38 b4 be f9 c1 e3 2e 40 01 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656580746, maxDate=1607261380746, sequenceNumber=1, masterKeyId=2)]
2020-11-29 13:29:42 INFO  Configuration:2795 - resource-types.xml not found
2020-11-29 13:29:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-29 13:29:42 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-29 13:29:43 INFO  YarnClientImpl:329 - Submitted application application_1606656434346_0001
2020-11-29 13:29:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606656434346_0001/
2020-11-29 13:29:43 INFO  Job:1619 - Running job: job_1606656434346_0001
2020-11-29 13:29:54 INFO  Job:1640 - Job job_1606656434346_0001 running in uber mode : false
2020-11-29 13:29:54 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:30:06 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:30:08 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:30:09 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:30:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:30:17 INFO  Job:1658 - Job job_1606656434346_0001 completed successfully
2020-11-29 13:30:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065973
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49684
		Total time spent by all reduces in occupied slots (ms)=9614
		Total time spent by all map tasks (ms)=24842
		Total time spent by all reduce tasks (ms)=4807
		Total vcore-milliseconds taken by all map tasks=24842
		Total vcore-milliseconds taken by all reduce tasks=4807
		Total megabyte-milliseconds taken by all map tasks=50876416
		Total megabyte-milliseconds taken by all reduce tasks=9844736
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1091
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1444130816
		Virtual memory (bytes) snapshot=14056558592
		Total committed heap usage (bytes)=1251999744
		Peak Map Physical memory (bytes)=386060288
		Peak Map Virtual memory (bytes)=3509157888
		Peak Reduce Physical memory (bytes)=303820800
		Peak Reduce Virtual memory (bytes)=3531071488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.34 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201129 13:30:17.874" starttime="20201129 13:30:17.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:30:17.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:30:17.875" starttime="20201129 13:30:17.874"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.875" starttime="20201129 13:29:35.972"></status>
</kw>
<msg timestamp="20201129 13:30:17.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:30:17.875" starttime="20201129 13:29:35.972"></status>
</kw>
<msg timestamp="20201129 13:30:17.876" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:29:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:29:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:30:17.876" starttime="20201129 13:29:35.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:30:17.877" starttime="20201129 13:30:17.876"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:30:17.877" critical="yes" starttime="20201129 13:29:35.948"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:30:17.883" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:30:17.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:30:17.889" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:30:17.889" starttime="20201129 13:30:17.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:30:17.889" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:30:17.890" starttime="20201129 13:30:17.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:30:17.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:30:17.891" starttime="20201129 13:30:17.890"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.891" starttime="20201129 13:30:17.880"></status>
</kw>
<msg timestamp="20201129 13:30:17.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:30:17.891" starttime="20201129 13:30:17.880"></status>
</kw>
<msg timestamp="20201129 13:30:17.891" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:30:17.892" starttime="20201129 13:30:17.880"></status>
</kw>
<msg timestamp="20201129 13:30:17.892" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:30:17.892" starttime="20201129 13:30:17.879"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:30:17.892" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201129 13:30:17.893" starttime="20201129 13:30:17.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:30:17.897" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:30:17.897" starttime="20201129 13:30:17.896"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:30:17.898" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:30:17.899" starttime="20201129 13:30:17.897"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.899" starttime="20201129 13:30:17.896"></status>
</kw>
<msg timestamp="20201129 13:30:17.899" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:30:17.899" starttime="20201129 13:30:17.895"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.899" starttime="20201129 13:30:17.894"></status>
</kw>
<msg timestamp="20201129 13:30:17.899" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:30:17.900" starttime="20201129 13:30:17.894"></status>
</kw>
<msg timestamp="20201129 13:30:17.900" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:30:17.900" starttime="20201129 13:30:17.893"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:30:17.904" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:30:17.904" starttime="20201129 13:30:17.903"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:30:17.905" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:30:17.905" starttime="20201129 13:30:17.904"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.905" starttime="20201129 13:30:17.903"></status>
</kw>
<msg timestamp="20201129 13:30:17.905" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:30:17.905" starttime="20201129 13:30:17.902"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.905" starttime="20201129 13:30:17.902"></status>
</kw>
<msg timestamp="20201129 13:30:17.905" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:30:17.905" starttime="20201129 13:30:17.901"></status>
</kw>
<msg timestamp="20201129 13:30:17.906" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:30:17.906" starttime="20201129 13:30:17.900"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:30:17.910" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:30:17.910" starttime="20201129 13:30:17.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:30:17.910" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:30:17.910" starttime="20201129 13:30:17.910"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.911" starttime="20201129 13:30:17.909"></status>
</kw>
<msg timestamp="20201129 13:30:17.911" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:30:17.911" starttime="20201129 13:30:17.908"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:17.911" starttime="20201129 13:30:17.907"></status>
</kw>
<msg timestamp="20201129 13:30:17.911" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:30:17.911" starttime="20201129 13:30:17.907"></status>
</kw>
<msg timestamp="20201129 13:30:17.912" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20201129 13:30:17.912" starttime="20201129 13:30:17.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:30:17.917" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:30:52.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:30:52.736" level="INFO">${output} = 2020-11-29 13:30:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:30:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
20...</msg>
<status status="PASS" endtime="20201129 13:30:52.736" starttime="20201129 13:30:17.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:30:52.737" level="INFO">2020-11-29 13:30:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:30:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-11-29 13:30:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656620708, maxDate=1607261420708, sequenceNumber=2, masterKeyId=2))
2020-11-29 13:30:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 f0 c9 a1 e1 2e 38 93 f8 fb c1 e3 2e 40 02 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-11-29 13:30:20 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656620708, maxDate=1607261420708, sequenceNumber=2, masterKeyId=2)
2020-11-29 13:30:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:30:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:30:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:30:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:30:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:30:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA2547E33A03-&gt;f1bc8bd7-0f48-4088-885a-7b386139c5c1
2020-11-29 13:30:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:30:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:30:22 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:30:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606656434346_0002
2020-11-29 13:30:23 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 f0 c9 a1 e1 2e 38 93 f8 fb c1 e3 2e 40 02 48 01 5a 0d 32 37 31 32 31 33 32 33 35 31 35 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606656620708, maxDate=1607261420708, sequenceNumber=2, masterKeyId=2)]
2020-11-29 13:30:23 INFO  Configuration:2795 - resource-types.xml not found
2020-11-29 13:30:23 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-29 13:30:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-11-29 13:30:24 INFO  YarnClientImpl:329 - Submitted application application_1606656434346_0002
2020-11-29 13:30:24 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606656434346_0002/
2020-11-29 13:30:24 INFO  Job:1619 - Running job: job_1606656434346_0002
2020-11-29 13:30:33 INFO  Job:1640 - Job job_1606656434346_0002 running in uber mode : false
2020-11-29 13:30:33 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:30:45 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:30:46 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:30:47 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:30:51 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:30:52 INFO  Job:1658 - Job job_1606656434346_0002 completed successfully
2020-11-29 13:30:52 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1128203
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51312
		Total time spent by all reduces in occupied slots (ms)=8088
		Total time spent by all map tasks (ms)=25656
		Total time spent by all reduce tasks (ms)=4044
		Total vcore-milliseconds taken by all map tasks=25656
		Total vcore-milliseconds taken by all reduce tasks=4044
		Total megabyte-milliseconds taken by all map tasks=52543488
		Total megabyte-milliseconds taken by all reduce tasks=8282112
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1145
		CPU time spent (ms)=8190
		Physical memory (bytes) snapshot=1529237504
		Virtual memory (bytes) snapshot=14047637504
		Total committed heap usage (bytes)=1288175616
		Peak Map Physical memory (bytes)=395464704
		Peak Map Virtual memory (bytes)=3510235136
		Peak Reduce Physical memory (bytes)=365686784
		Peak Reduce Virtual memory (bytes)=3523121152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201129 13:30:52.738" starttime="20201129 13:30:52.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:30:52.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:30:52.738" starttime="20201129 13:30:52.738"></status>
</kw>
<status status="PASS" endtime="20201129 13:30:52.739" starttime="20201129 13:30:17.913"></status>
</kw>
<msg timestamp="20201129 13:30:52.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:30:52.739" starttime="20201129 13:30:17.912"></status>
</kw>
<msg timestamp="20201129 13:30:52.739" level="INFO">${output} = 2020-11-29 13:30:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-11-29 13:30:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
20...</msg>
<status status="PASS" endtime="20201129 13:30:52.739" starttime="20201129 13:30:17.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201129 13:30:52.740" starttime="20201129 13:30:52.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:30:52.741" starttime="20201129 13:30:52.740"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:30:52.741" critical="yes" starttime="20201129 13:30:17.878"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201129 13:30:52.743" starttime="20201129 13:29:35.883"></status>
</suite>
<status status="FAIL" elapsedtime="179757" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozonesecure-mr" pass="9">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="1" id="s1-s6" name="mapreduce-ofs" pass="1">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
