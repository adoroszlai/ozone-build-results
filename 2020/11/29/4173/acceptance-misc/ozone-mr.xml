<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201129 13:12:58.233" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:04.033" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:06.371" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:00:06.371" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:00:06.372" starttime="20201129 13:00:04.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:06.373" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:00:06.373" starttime="20201129 13:00:06.372"></status>
</kw>
<msg timestamp="20201129 13:00:06.373" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:00:06.373" starttime="20201129 13:00:04.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:06.380" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:08.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:08.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:08.530" starttime="20201129 13:00:06.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:08.531" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:08.532" starttime="20201129 13:00:08.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:08.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:08.532" starttime="20201129 13:00:08.532"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:08.533" starttime="20201129 13:00:06.375"></status>
</kw>
<msg timestamp="20201129 13:00:08.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:08.533" starttime="20201129 13:00:06.375"></status>
</kw>
<msg timestamp="20201129 13:00:08.533" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201129 13:00:08.533" starttime="20201129 13:00:06.374"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:00:08.534" starttime="20201129 13:00:08.534"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:08.534" starttime="20201129 13:00:06.374"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:08.534" starttime="20201129 13:00:06.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:08.539" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:10.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:10.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:10.763" starttime="20201129 13:00:08.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:10.764" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:10.764" starttime="20201129 13:00:10.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:10.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:10.765" starttime="20201129 13:00:10.765"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:10.765" starttime="20201129 13:00:08.536"></status>
</kw>
<msg timestamp="20201129 13:00:10.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:10.766" starttime="20201129 13:00:08.536"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:10.766" starttime="20201129 13:00:08.535"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:10.766" starttime="20201129 13:00:08.535"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:10.766" starttime="20201129 13:00:08.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201129 13:00:10.767" starttime="20201129 13:00:10.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:10.772" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:12.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:12.952" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:00:10.640Z",
  "modificat...</msg>
<status status="PASS" endtime="20201129 13:00:12.952" starttime="20201129 13:00:10.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:12.954" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:00:10.640Z",
  "modificationTime" : "2020-11-29T13:00:10.640Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:00:12.954" starttime="20201129 13:00:12.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:12.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:12.955" starttime="20201129 13:00:12.954"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:12.955" starttime="20201129 13:00:10.769"></status>
</kw>
<msg timestamp="20201129 13:00:12.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:12.955" starttime="20201129 13:00:10.768"></status>
</kw>
<msg timestamp="20201129 13:00:12.955" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:00:10.640Z",
  "modificat...</msg>
<status status="PASS" endtime="20201129 13:00:12.955" starttime="20201129 13:00:10.767"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201129 13:00:12.956" starttime="20201129 13:00:12.956"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:00:12.960" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:00:12.960" starttime="20201129 13:00:12.960"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:00:12.961" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:00:12.961" starttime="20201129 13:00:12.960"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:12.961" starttime="20201129 13:00:12.959"></status>
</kw>
<msg timestamp="20201129 13:00:12.961" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:00:12.961" starttime="20201129 13:00:12.959"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:12.962" starttime="20201129 13:00:12.958"></status>
</kw>
<msg timestamp="20201129 13:00:12.962" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:00:12.962" starttime="20201129 13:00:12.957"></status>
</kw>
<msg timestamp="20201129 13:00:12.962" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:00:12.962" starttime="20201129 13:00:12.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:12.968" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:15.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:15.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:15.236" starttime="20201129 13:00:12.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:15.237" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:15.237" starttime="20201129 13:00:15.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:15.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:15.238" starttime="20201129 13:00:15.237"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:15.238" starttime="20201129 13:00:12.964"></status>
</kw>
<msg timestamp="20201129 13:00:15.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:15.238" starttime="20201129 13:00:12.964"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:15.239" starttime="20201129 13:00:12.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:15.247" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:20.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:20.431" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:20.431" starttime="20201129 13:00:15.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:20.432" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:20.432" starttime="20201129 13:00:20.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:20.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:20.432" starttime="20201129 13:00:20.432"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:20.433" starttime="20201129 13:00:15.240"></status>
</kw>
<msg timestamp="20201129 13:00:20.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:20.433" starttime="20201129 13:00:15.240"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:20.433" starttime="20201129 13:00:15.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:20.437" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:24.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:24.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:24.270" starttime="20201129 13:00:20.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:24.272" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:24.272" starttime="20201129 13:00:24.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:24.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:24.272" starttime="20201129 13:00:24.272"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:24.273" starttime="20201129 13:00:20.434"></status>
</kw>
<msg timestamp="20201129 13:00:24.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:24.273" starttime="20201129 13:00:20.434"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:24.273" starttime="20201129 13:00:20.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:24.277" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:28.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:28.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:28.324" starttime="20201129 13:00:24.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:28.325" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:28.325" starttime="20201129 13:00:28.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:28.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:28.326" starttime="20201129 13:00:28.325"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:28.326" starttime="20201129 13:00:24.274"></status>
</kw>
<msg timestamp="20201129 13:00:28.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:28.327" starttime="20201129 13:00:24.274"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:28.327" starttime="20201129 13:00:24.273"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:00:28.327" critical="yes" starttime="20201129 13:00:04.027"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:00:28.333" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:00:28.333" starttime="20201129 13:00:28.332"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:00:28.334" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:00:28.334" starttime="20201129 13:00:28.333"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:28.334" starttime="20201129 13:00:28.332"></status>
</kw>
<msg timestamp="20201129 13:00:28.334" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:00:28.334" starttime="20201129 13:00:28.331"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:28.335" starttime="20201129 13:00:28.331"></status>
</kw>
<msg timestamp="20201129 13:00:28.335" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:00:28.335" starttime="20201129 13:00:28.330"></status>
</kw>
<msg timestamp="20201129 13:00:28.335" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:00:28.335" starttime="20201129 13:00:28.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:28.340" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:30.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:30.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:30.551" starttime="20201129 13:00:28.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:30.552" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:30.552" starttime="20201129 13:00:30.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:30.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:30.553" starttime="20201129 13:00:30.552"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:30.553" starttime="20201129 13:00:28.336"></status>
</kw>
<msg timestamp="20201129 13:00:30.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:30.554" starttime="20201129 13:00:28.336"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:30.554" starttime="20201129 13:00:28.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:30.558" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:32.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:32.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:00:32.783" starttime="20201129 13:00:30.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:32.784" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:00:32.784" starttime="20201129 13:00:32.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:32.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:32.785" starttime="20201129 13:00:32.784"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:32.785" starttime="20201129 13:00:30.555"></status>
</kw>
<msg timestamp="20201129 13:00:32.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:32.785" starttime="20201129 13:00:30.555"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:32.785" starttime="20201129 13:00:30.554"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:00:32.786" critical="yes" starttime="20201129 13:00:28.328"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201129 13:00:32.787" starttime="20201129 13:00:03.955"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:02:16.124" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:02:16.124" starttime="20201129 13:02:16.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:02:16.125" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:02:16.125" starttime="20201129 13:02:16.124"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:16.125" starttime="20201129 13:02:16.123"></status>
</kw>
<msg timestamp="20201129 13:02:16.125" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:02:16.125" starttime="20201129 13:02:16.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:02:16.127" starttime="20201129 13:02:16.126"></status>
</kw>
<msg timestamp="20201129 13:02:16.127" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:02:16.127" starttime="20201129 13:02:16.125"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:16.127" starttime="20201129 13:02:16.122"></status>
</kw>
<msg timestamp="20201129 13:02:16.127" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:02:16.127" starttime="20201129 13:02:16.121"></status>
</kw>
<msg timestamp="20201129 13:02:16.128" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:02:16.128" starttime="20201129 13:02:16.120"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:02:16.128" level="INFO">${random} = 59656</msg>
<status status="PASS" endtime="20201129 13:02:16.128" starttime="20201129 13:02:16.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:02:16.134" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-59656 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:02:19.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:02:19.795" level="INFO">${output} = 2020-11-29 13:02:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:02:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 ...</msg>
<status status="PASS" endtime="20201129 13:02:19.795" starttime="20201129 13:02:16.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:02:19.796" level="INFO">2020-11-29 13:02:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:02:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 13:02:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-29 13:02:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:02:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4CAA9EB43792-&gt;c070b5bc-4cf8-4a04-8252-7578125f00c6
2020-11-29 13:02:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201129 13:02:19.796" starttime="20201129 13:02:19.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:02:19.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:02:19.797" starttime="20201129 13:02:19.796"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:19.797" starttime="20201129 13:02:16.130"></status>
</kw>
<msg timestamp="20201129 13:02:19.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:02:19.797" starttime="20201129 13:02:16.129"></status>
</kw>
<msg timestamp="20201129 13:02:19.797" level="INFO">${result} = 2020-11-29 13:02:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:02:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 ...</msg>
<status status="PASS" endtime="20201129 13:02:19.797" starttime="20201129 13:02:16.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:02:19.802" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:02:21.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:02:21.649" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:00 ofs://om/volume1/bucket1/ozone-20684
-rw-...</msg>
<status status="PASS" endtime="20201129 13:02:21.649" starttime="20201129 13:02:19.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:02:21.650" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:00 ofs://om/volume1/bucket1/ozone-20684
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:02 ofs://om/volume1/bucket1/ozone-59656
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:01 ofs://om/volume1/bucket1/wordcount-41.txt</msg>
<status status="PASS" endtime="20201129 13:02:21.650" starttime="20201129 13:02:21.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:02:21.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:02:21.651" starttime="20201129 13:02:21.651"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:21.651" starttime="20201129 13:02:19.800"></status>
</kw>
<msg timestamp="20201129 13:02:21.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:02:21.652" starttime="20201129 13:02:19.799"></status>
</kw>
<msg timestamp="20201129 13:02:21.652" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:00 ofs://om/volume1/bucket1/ozone-20684
-rw-...</msg>
<status status="PASS" endtime="20201129 13:02:21.652" starttime="20201129 13:02:19.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:02:21.653" starttime="20201129 13:02:21.652"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:02:21.653" critical="yes" starttime="20201129 13:02:16.119"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:02:21.654" starttime="20201129 13:02:16.053"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:00:37.705" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:00:37.705" starttime="20201129 13:00:37.704"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:00:37.706" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:00:37.706" starttime="20201129 13:00:37.705"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:37.706" starttime="20201129 13:00:37.704"></status>
</kw>
<msg timestamp="20201129 13:00:37.706" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:00:37.706" starttime="20201129 13:00:37.703"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:37.706" starttime="20201129 13:00:37.702"></status>
</kw>
<msg timestamp="20201129 13:00:37.707" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:00:37.707" starttime="20201129 13:00:37.702"></status>
</kw>
<msg timestamp="20201129 13:00:37.707" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:00:37.707" starttime="20201129 13:00:37.701"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:00:37.708" level="INFO">${random} = 20684</msg>
<status status="PASS" endtime="20201129 13:00:37.708" starttime="20201129 13:00:37.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:37.715" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-20684 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:41.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:41.536" level="INFO">${output} = 2020-11-29 13:00:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:00:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 ...</msg>
<status status="PASS" endtime="20201129 13:00:41.536" starttime="20201129 13:00:37.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:41.538" level="INFO">2020-11-29 13:00:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:00:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 13:00:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-29 13:00:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:00:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FCCF70DE8543-&gt;c070b5bc-4cf8-4a04-8252-7578125f00c6
2020-11-29 13:00:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201129 13:00:41.538" starttime="20201129 13:00:41.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:41.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:41.538" starttime="20201129 13:00:41.538"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:41.539" starttime="20201129 13:00:37.709"></status>
</kw>
<msg timestamp="20201129 13:00:41.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:41.539" starttime="20201129 13:00:37.708"></status>
</kw>
<msg timestamp="20201129 13:00:41.539" level="INFO">${result} = 2020-11-29 13:00:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:00:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 ...</msg>
<status status="PASS" endtime="20201129 13:00:41.539" starttime="20201129 13:00:37.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:41.544" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:43.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:43.386" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:00 o3fs://bucket1.volume1.om/ozone-20684
dr...</msg>
<status status="PASS" endtime="20201129 13:00:43.386" starttime="20201129 13:00:41.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:43.387" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:00 o3fs://bucket1.volume1.om/ozone-20684
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:00:43.387" starttime="20201129 13:00:43.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:43.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:43.388" starttime="20201129 13:00:43.388"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:43.388" starttime="20201129 13:00:41.541"></status>
</kw>
<msg timestamp="20201129 13:00:43.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:43.389" starttime="20201129 13:00:41.540"></status>
</kw>
<msg timestamp="20201129 13:00:43.389" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-29 13:00 o3fs://bucket1.volume1.om/ozone-20684
dr...</msg>
<status status="PASS" endtime="20201129 13:00:43.389" starttime="20201129 13:00:41.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:00:43.390" starttime="20201129 13:00:43.389"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:00:43.390" critical="yes" starttime="20201129 13:00:37.700"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:00:43.392" starttime="20201129 13:00:37.631"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:02:26.457" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:02:26.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:02:26.460" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:02:26.461" starttime="20201129 13:02:26.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:02:26.461" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:02:26.462" starttime="20201129 13:02:26.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:02:26.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:02:26.462" starttime="20201129 13:02:26.462"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:26.463" starttime="20201129 13:02:26.451"></status>
</kw>
<msg timestamp="20201129 13:02:26.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:02:26.463" starttime="20201129 13:02:26.450"></status>
</kw>
<msg timestamp="20201129 13:02:26.463" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:02:26.463" starttime="20201129 13:02:26.450"></status>
</kw>
<msg timestamp="20201129 13:02:26.464" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:02:26.464" starttime="20201129 13:02:26.449"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:02:26.469" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:02:26.469" starttime="20201129 13:02:26.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:02:26.469" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:02:26.470" starttime="20201129 13:02:26.469"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:26.470" starttime="20201129 13:02:26.467"></status>
</kw>
<msg timestamp="20201129 13:02:26.470" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:02:26.470" starttime="20201129 13:02:26.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:02:26.471" starttime="20201129 13:02:26.471"></status>
</kw>
<msg timestamp="20201129 13:02:26.471" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:02:26.471" starttime="20201129 13:02:26.470"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:26.472" starttime="20201129 13:02:26.465"></status>
</kw>
<msg timestamp="20201129 13:02:26.472" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:02:26.472" starttime="20201129 13:02:26.465"></status>
</kw>
<msg timestamp="20201129 13:02:26.472" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:02:26.472" starttime="20201129 13:02:26.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:02:26.475" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:03:05.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:03:05.335" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:02:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:02:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201129 13:03:05.336" starttime="20201129 13:02:26.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:03:05.337" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:02:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:02:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 13:02:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-29 13:02:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:02:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B6D5079BAFC3-&gt;c070b5bc-4cf8-4a04-8252-7578125f00c6
2020-11-29 13:02:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:02:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:02:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:02:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-29 13:02:32 INFO  JobSubmitter:198 - number of splits:3
2020-11-29 13:02:33 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606654766640_0003
2020-11-29 13:02:33 INFO  YarnClientImpl:273 - Submitted application application_1606654766640_0003
2020-11-29 13:02:33 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606654766640_0003/
2020-11-29 13:02:33 INFO  Job:1339 - Running job: job_1606654766640_0003
2020-11-29 13:02:41 INFO  Job:1360 - Job job_1606654766640_0003 running in uber mode : false
2020-11-29 13:02:41 INFO  Job:1367 -  map 0% reduce 0%
2020-11-29 13:02:47 INFO  Job:1367 -  map 33% reduce 0%
2020-11-29 13:02:52 INFO  Job:1367 -  map 67% reduce 0%
2020-11-29 13:02:57 INFO  Job:1367 -  map 100% reduce 0%
2020-11-29 13:03:04 INFO  Job:1367 -  map 100% reduce 100%
2020-11-29 13:03:04 INFO  Job:1378 - Job job_1606654766640_0003 completed successfully
2020-11-29 13:03:04 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610697
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39172
		Total time spent by all reduces in occupied slots (ms)=24888
		Total time spent by all map tasks (ms)=9793
		Total time spent by all reduce tasks (ms)=6222
		Total vcore-milliseconds taken by all map tasks=9793
		Total vcore-milliseconds taken by all reduce tasks=6222
		Total megabyte-milliseconds taken by all map tasks=40112128
		Total megabyte-milliseconds taken by all reduce tasks=25485312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=522
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1162338304
		Virtual memory (bytes) snapshot=15785938944
		Total committed heap usage (bytes)=1123024896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.022 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201129 13:03:05.337" starttime="20201129 13:03:05.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:03:05.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:03:05.338" starttime="20201129 13:03:05.337"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.338" starttime="20201129 13:02:26.473"></status>
</kw>
<msg timestamp="20201129 13:03:05.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:03:05.338" starttime="20201129 13:02:26.473"></status>
</kw>
<msg timestamp="20201129 13:03:05.338" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:02:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:02:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201129 13:03:05.339" starttime="20201129 13:02:26.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:03:05.339" starttime="20201129 13:03:05.339"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:03:05.339" critical="yes" starttime="20201129 13:02:26.449"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:03:05.346" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:03:05.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:03:05.355" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:03:05.355" starttime="20201129 13:03:05.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:03:05.356" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:03:05.356" starttime="20201129 13:03:05.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:03:05.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:03:05.357" starttime="20201129 13:03:05.357"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.357" starttime="20201129 13:03:05.343"></status>
</kw>
<msg timestamp="20201129 13:03:05.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:03:05.358" starttime="20201129 13:03:05.342"></status>
</kw>
<msg timestamp="20201129 13:03:05.358" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:03:05.358" starttime="20201129 13:03:05.342"></status>
</kw>
<msg timestamp="20201129 13:03:05.358" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:03:05.358" starttime="20201129 13:03:05.341"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:03:05.359" level="INFO">${random} = 05</msg>
<status status="PASS" endtime="20201129 13:03:05.359" starttime="20201129 13:03:05.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:03:05.363" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:03:05.364" starttime="20201129 13:03:05.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:03:05.364" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:03:05.364" starttime="20201129 13:03:05.364"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.365" starttime="20201129 13:03:05.363"></status>
</kw>
<msg timestamp="20201129 13:03:05.365" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:03:05.365" starttime="20201129 13:03:05.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:03:05.366" starttime="20201129 13:03:05.365"></status>
</kw>
<msg timestamp="20201129 13:03:05.366" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:03:05.366" starttime="20201129 13:03:05.365"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.366" starttime="20201129 13:03:05.361"></status>
</kw>
<msg timestamp="20201129 13:03:05.366" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:03:05.366" starttime="20201129 13:03:05.360"></status>
</kw>
<msg timestamp="20201129 13:03:05.367" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:03:05.367" starttime="20201129 13:03:05.359"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:03:05.370" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:03:05.370" starttime="20201129 13:03:05.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:03:05.371" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:03:05.371" starttime="20201129 13:03:05.370"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.371" starttime="20201129 13:03:05.369"></status>
</kw>
<msg timestamp="20201129 13:03:05.371" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:03:05.371" starttime="20201129 13:03:05.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:03:05.373" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201129 13:03:05.373" starttime="20201129 13:03:05.372"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:03:05.373" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201129 13:03:05.374" starttime="20201129 13:03:05.373"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.374" starttime="20201129 13:03:05.372"></status>
</kw>
<msg timestamp="20201129 13:03:05.374" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201129 13:03:05.374" starttime="20201129 13:03:05.371"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.375" starttime="20201129 13:03:05.368"></status>
</kw>
<msg timestamp="20201129 13:03:05.375" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:03:05.375" starttime="20201129 13:03:05.367"></status>
</kw>
<msg timestamp="20201129 13:03:05.375" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:03:05.375" starttime="20201129 13:03:05.367"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:03:05.379" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:03:05.379" starttime="20201129 13:03:05.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:03:05.380" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:03:05.380" starttime="20201129 13:03:05.379"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.380" starttime="20201129 13:03:05.378"></status>
</kw>
<msg timestamp="20201129 13:03:05.380" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:03:05.380" starttime="20201129 13:03:05.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:03:05.382" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201129 13:03:05.382" starttime="20201129 13:03:05.382"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:03:05.383" level="INFO">${result} = /wordcount-05.txt</msg>
<status status="PASS" endtime="20201129 13:03:05.383" starttime="20201129 13:03:05.382"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.383" starttime="20201129 13:03:05.381"></status>
</kw>
<msg timestamp="20201129 13:03:05.383" level="INFO">${path_with_leading} = /wordcount-05.txt</msg>
<status status="PASS" endtime="20201129 13:03:05.383" starttime="20201129 13:03:05.380"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:05.383" starttime="20201129 13:03:05.376"></status>
</kw>
<msg timestamp="20201129 13:03:05.384" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201129 13:03:05.384" starttime="20201129 13:03:05.376"></status>
</kw>
<msg timestamp="20201129 13:03:05.384" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-05.txt</msg>
<status status="PASS" endtime="20201129 13:03:05.384" starttime="20201129 13:03:05.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:03:05.389" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-05.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:03:40.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:03:40.156" level="INFO">${output} = 2020-11-29 13:03:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:03:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201129 13:03:40.156" starttime="20201129 13:03:05.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:03:40.158" level="INFO">2020-11-29 13:03:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:03:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:03:07 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:03:07 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 13:03:07 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-29 13:03:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:03:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-40B703D9DDF8-&gt;c070b5bc-4cf8-4a04-8252-7578125f00c6
2020-11-29 13:03:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:03:08 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-29 13:03:08 INFO  JobSubmitter:198 - number of splits:3
2020-11-29 13:03:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606654766640_0004
2020-11-29 13:03:09 INFO  YarnClientImpl:273 - Submitted application application_1606654766640_0004
2020-11-29 13:03:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606654766640_0004/
2020-11-29 13:03:09 INFO  Job:1339 - Running job: job_1606654766640_0004
2020-11-29 13:03:18 INFO  Job:1360 - Job job_1606654766640_0004 running in uber mode : false
2020-11-29 13:03:18 INFO  Job:1367 -  map 0% reduce 0%
2020-11-29 13:03:24 INFO  Job:1367 -  map 33% reduce 0%
2020-11-29 13:03:29 INFO  Job:1367 -  map 67% reduce 0%
2020-11-29 13:03:34 INFO  Job:1367 -  map 100% reduce 0%
2020-11-29 13:03:38 INFO  Job:1367 -  map 100% reduce 100%
2020-11-29 13:03:39 INFO  Job:1378 - Job job_1606654766640_0004 completed successfully
2020-11-29 13:03:39 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673159
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42408
		Total time spent by all reduces in occupied slots (ms)=15104
		Total time spent by all map tasks (ms)=10602
		Total time spent by all reduce tasks (ms)=3776
		Total vcore-milliseconds taken by all map tasks=10602
		Total vcore-milliseconds taken by all reduce tasks=3776
		Total megabyte-milliseconds taken by all map tasks=43425792
		Total megabyte-milliseconds taken by all reduce tasks=15466496
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=7400
		Physical memory (bytes) snapshot=1152163840
		Virtual memory (bytes) snapshot=15787995136
		Total committed heap usage (bytes)=1057488896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201129 13:03:40.158" starttime="20201129 13:03:40.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:03:40.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:03:40.159" starttime="20201129 13:03:40.158"></status>
</kw>
<status status="PASS" endtime="20201129 13:03:40.159" starttime="20201129 13:03:05.385"></status>
</kw>
<msg timestamp="20201129 13:03:40.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:03:40.160" starttime="20201129 13:03:05.385"></status>
</kw>
<msg timestamp="20201129 13:03:40.160" level="INFO">${output} = 2020-11-29 13:03:07 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:03:07 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201129 13:03:40.160" starttime="20201129 13:03:05.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201129 13:03:40.161" starttime="20201129 13:03:40.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:03:40.162" starttime="20201129 13:03:40.161"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:03:40.162" critical="yes" starttime="20201129 13:03:05.340"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201129 13:03:40.163" starttime="20201129 13:02:26.383"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:48.237" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:00:48.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:00:48.241" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:00:48.242" starttime="20201129 13:00:48.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:00:48.243" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:00:48.243" starttime="20201129 13:00:48.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:00:48.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:00:48.243" starttime="20201129 13:00:48.243"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:48.244" starttime="20201129 13:00:48.232"></status>
</kw>
<msg timestamp="20201129 13:00:48.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:00:48.244" starttime="20201129 13:00:48.232"></status>
</kw>
<msg timestamp="20201129 13:00:48.244" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:00:48.244" starttime="20201129 13:00:48.232"></status>
</kw>
<msg timestamp="20201129 13:00:48.245" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:00:48.245" starttime="20201129 13:00:48.231"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:00:48.249" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:00:48.249" starttime="20201129 13:00:48.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:00:48.250" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:00:48.250" starttime="20201129 13:00:48.250"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:48.250" starttime="20201129 13:00:48.248"></status>
</kw>
<msg timestamp="20201129 13:00:48.251" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:00:48.251" starttime="20201129 13:00:48.247"></status>
</kw>
<status status="PASS" endtime="20201129 13:00:48.251" starttime="20201129 13:00:48.246"></status>
</kw>
<msg timestamp="20201129 13:00:48.251" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:00:48.251" starttime="20201129 13:00:48.245"></status>
</kw>
<msg timestamp="20201129 13:00:48.252" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:00:48.252" starttime="20201129 13:00:48.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:00:48.256" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:01:28.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:01:28.840" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:00:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:00:50 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201129 13:01:28.841" starttime="20201129 13:00:48.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:01:28.842" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:00:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:00:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 13:00:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-29 13:00:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:00:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-32781FEB1EE4-&gt;c070b5bc-4cf8-4a04-8252-7578125f00c6
2020-11-29 13:00:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:00:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:00:52 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-29 13:00:54 INFO  JobSubmitter:198 - number of splits:3
2020-11-29 13:00:55 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606654766640_0001
2020-11-29 13:00:55 INFO  YarnClientImpl:273 - Submitted application application_1606654766640_0001
2020-11-29 13:00:55 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606654766640_0001/
2020-11-29 13:00:55 INFO  Job:1339 - Running job: job_1606654766640_0001
2020-11-29 13:01:05 INFO  Job:1360 - Job job_1606654766640_0001 running in uber mode : false
2020-11-29 13:01:05 INFO  Job:1367 -  map 0% reduce 0%
2020-11-29 13:01:12 INFO  Job:1367 -  map 33% reduce 0%
2020-11-29 13:01:16 INFO  Job:1367 -  map 67% reduce 0%
2020-11-29 13:01:22 INFO  Job:1367 -  map 100% reduce 0%
2020-11-29 13:01:27 INFO  Job:1367 -  map 100% reduce 100%
2020-11-29 13:01:28 INFO  Job:1378 - Job job_1606654766640_0001 completed successfully
2020-11-29 13:01:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42716
		Total time spent by all reduces in occupied slots (ms)=15884
		Total time spent by all map tasks (ms)=10679
		Total time spent by all reduce tasks (ms)=3971
		Total vcore-milliseconds taken by all map tasks=10679
		Total vcore-milliseconds taken by all reduce tasks=3971
		Total megabyte-milliseconds taken by all map tasks=43741184
		Total megabyte-milliseconds taken by all reduce tasks=16265216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=552
		CPU time spent (ms)=6650
		Physical memory (bytes) snapshot=1162039296
		Virtual memory (bytes) snapshot=15798337536
		Total committed heap usage (bytes)=1053818880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.55 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201129 13:01:28.842" starttime="20201129 13:01:28.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:01:28.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:01:28.843" starttime="20201129 13:01:28.842"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.843" starttime="20201129 13:00:48.253"></status>
</kw>
<msg timestamp="20201129 13:01:28.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:01:28.843" starttime="20201129 13:00:48.252"></status>
</kw>
<msg timestamp="20201129 13:01:28.843" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:00:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:00:50 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201129 13:01:28.844" starttime="20201129 13:00:48.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:01:28.844" starttime="20201129 13:01:28.844"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:01:28.844" critical="yes" starttime="20201129 13:00:48.230"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:01:28.850" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:01:28.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:01:28.857" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:01:28.857" starttime="20201129 13:01:28.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:01:28.858" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:01:28.858" starttime="20201129 13:01:28.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:01:28.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:01:28.858" starttime="20201129 13:01:28.858"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.859" starttime="20201129 13:01:28.848"></status>
</kw>
<msg timestamp="20201129 13:01:28.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:01:28.859" starttime="20201129 13:01:28.847"></status>
</kw>
<msg timestamp="20201129 13:01:28.859" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:01:28.860" starttime="20201129 13:01:28.847"></status>
</kw>
<msg timestamp="20201129 13:01:28.860" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201129 13:01:28.860" starttime="20201129 13:01:28.846"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:01:28.861" level="INFO">${random} = 41</msg>
<status status="PASS" endtime="20201129 13:01:28.861" starttime="20201129 13:01:28.860"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:01:28.865" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:01:28.865" starttime="20201129 13:01:28.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:01:28.866" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:01:28.866" starttime="20201129 13:01:28.865"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.866" starttime="20201129 13:01:28.864"></status>
</kw>
<msg timestamp="20201129 13:01:28.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:01:28.866" starttime="20201129 13:01:28.863"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.866" starttime="20201129 13:01:28.862"></status>
</kw>
<msg timestamp="20201129 13:01:28.867" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:01:28.867" starttime="20201129 13:01:28.862"></status>
</kw>
<msg timestamp="20201129 13:01:28.867" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:01:28.867" starttime="20201129 13:01:28.861"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:01:28.871" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:01:28.871" starttime="20201129 13:01:28.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:01:28.871" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:01:28.871" starttime="20201129 13:01:28.871"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.871" starttime="20201129 13:01:28.870"></status>
</kw>
<msg timestamp="20201129 13:01:28.872" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:01:28.872" starttime="20201129 13:01:28.869"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.872" starttime="20201129 13:01:28.868"></status>
</kw>
<msg timestamp="20201129 13:01:28.872" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:01:28.872" starttime="20201129 13:01:28.868"></status>
</kw>
<msg timestamp="20201129 13:01:28.872" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:01:28.872" starttime="20201129 13:01:28.867"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:01:28.876" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:01:28.876" starttime="20201129 13:01:28.876"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:01:28.877" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:01:28.877" starttime="20201129 13:01:28.876"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.877" starttime="20201129 13:01:28.875"></status>
</kw>
<msg timestamp="20201129 13:01:28.877" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:01:28.877" starttime="20201129 13:01:28.874"></status>
</kw>
<status status="PASS" endtime="20201129 13:01:28.878" starttime="20201129 13:01:28.874"></status>
</kw>
<msg timestamp="20201129 13:01:28.878" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-41.txt</msg>
<status status="PASS" endtime="20201129 13:01:28.878" starttime="20201129 13:01:28.873"></status>
</kw>
<msg timestamp="20201129 13:01:28.878" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-41.txt</msg>
<status status="PASS" endtime="20201129 13:01:28.878" starttime="20201129 13:01:28.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:01:28.882" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-41.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:02:11.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:02:11.104" level="INFO">${output} = 2020-11-29 13:01:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:01:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201129 13:02:11.104" starttime="20201129 13:01:28.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:02:11.106" level="INFO">2020-11-29 13:01:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:01:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:01:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:01:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-29 13:01:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-29 13:01:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:01:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3625E1CCDD1E-&gt;c070b5bc-4cf8-4a04-8252-7578125f00c6
2020-11-29 13:01:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:01:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-29 13:01:37 INFO  JobSubmitter:198 - number of splits:3
2020-11-29 13:01:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606654766640_0002
2020-11-29 13:01:38 INFO  YarnClientImpl:273 - Submitted application application_1606654766640_0002
2020-11-29 13:01:38 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606654766640_0002/
2020-11-29 13:01:38 INFO  Job:1339 - Running job: job_1606654766640_0002
2020-11-29 13:01:46 INFO  Job:1360 - Job job_1606654766640_0002 running in uber mode : false
2020-11-29 13:01:46 INFO  Job:1367 -  map 0% reduce 0%
2020-11-29 13:01:52 INFO  Job:1367 -  map 33% reduce 0%
2020-11-29 13:01:57 INFO  Job:1367 -  map 67% reduce 0%
2020-11-29 13:02:02 INFO  Job:1367 -  map 100% reduce 0%
2020-11-29 13:02:06 INFO  Job:1367 -  map 100% reduce 100%
2020-11-29 13:02:10 INFO  Job:1378 - Job job_1606654766640_0002 completed successfully
2020-11-29 13:02:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=673243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41416
		Total time spent by all reduces in occupied slots (ms)=15124
		Total time spent by all map tasks (ms)=10354
		Total time spent by all reduce tasks (ms)=3781
		Total vcore-milliseconds taken by all map tasks=10354
		Total vcore-milliseconds taken by all reduce tasks=3781
		Total megabyte-milliseconds taken by all map tasks=42409984
		Total megabyte-milliseconds taken by all reduce tasks=15486976
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=539
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1161428992
		Virtual memory (bytes) snapshot=15789957120
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201129 13:02:11.106" starttime="20201129 13:02:11.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:02:11.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:02:11.107" starttime="20201129 13:02:11.106"></status>
</kw>
<status status="PASS" endtime="20201129 13:02:11.107" starttime="20201129 13:01:28.880"></status>
</kw>
<msg timestamp="20201129 13:02:11.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:02:11.107" starttime="20201129 13:01:28.879"></status>
</kw>
<msg timestamp="20201129 13:02:11.108" level="INFO">${output} = 2020-11-29 13:01:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-29 13:01:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201129 13:02:11.108" starttime="20201129 13:01:28.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201129 13:02:11.108" starttime="20201129 13:02:11.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:02:11.109" starttime="20201129 13:02:11.109"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:02:11.110" critical="yes" starttime="20201129 13:01:28.845"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201129 13:02:11.112" starttime="20201129 13:00:48.169"></status>
</suite>
<status status="PASS" elapsedtime="196917" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:04:47.250" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:04:49.624" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:04:49.624" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:04:49.624" starttime="20201129 13:04:47.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:04:49.625" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:04:49.625" starttime="20201129 13:04:49.625"></status>
</kw>
<msg timestamp="20201129 13:04:49.626" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:04:49.626" starttime="20201129 13:04:47.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:04:49.632" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:04:51.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:04:51.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:04:51.807" starttime="20201129 13:04:49.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:04:51.813" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:04:51.813" starttime="20201129 13:04:51.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:04:51.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:04:51.813" starttime="20201129 13:04:51.813"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:51.814" starttime="20201129 13:04:49.629"></status>
</kw>
<msg timestamp="20201129 13:04:51.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:04:51.815" starttime="20201129 13:04:49.628"></status>
</kw>
<msg timestamp="20201129 13:04:51.816" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201129 13:04:51.816" starttime="20201129 13:04:49.628"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:04:51.817" starttime="20201129 13:04:51.816"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:51.817" starttime="20201129 13:04:49.627"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:51.817" starttime="20201129 13:04:49.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:04:51.822" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:04:54.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:04:54.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:04:54.103" starttime="20201129 13:04:51.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:04:54.104" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:04:54.105" starttime="20201129 13:04:54.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:04:54.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:04:54.105" starttime="20201129 13:04:54.105"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:54.106" starttime="20201129 13:04:51.819"></status>
</kw>
<msg timestamp="20201129 13:04:54.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:04:54.106" starttime="20201129 13:04:51.819"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:54.106" starttime="20201129 13:04:51.818"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:54.106" starttime="20201129 13:04:51.817"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:54.106" starttime="20201129 13:04:51.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201129 13:04:54.107" starttime="20201129 13:04:54.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:04:54.112" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:04:56.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:04:56.586" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:04:53.937Z",
  "modificat...</msg>
<status status="PASS" endtime="20201129 13:04:56.586" starttime="20201129 13:04:54.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:04:56.587" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:04:53.937Z",
  "modificationTime" : "2020-11-29T13:04:53.937Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:04:56.587" starttime="20201129 13:04:56.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:04:56.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:04:56.588" starttime="20201129 13:04:56.588"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:56.588" starttime="20201129 13:04:54.108"></status>
</kw>
<msg timestamp="20201129 13:04:56.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:04:56.589" starttime="20201129 13:04:54.108"></status>
</kw>
<msg timestamp="20201129 13:04:56.589" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:04:53.937Z",
  "modificat...</msg>
<status status="PASS" endtime="20201129 13:04:56.589" starttime="20201129 13:04:54.107"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201129 13:04:56.589" starttime="20201129 13:04:56.589"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:04:56.594" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:04:56.594" starttime="20201129 13:04:56.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:04:56.594" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:04:56.594" starttime="20201129 13:04:56.594"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:56.595" starttime="20201129 13:04:56.593"></status>
</kw>
<msg timestamp="20201129 13:04:56.595" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:04:56.595" starttime="20201129 13:04:56.592"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:56.595" starttime="20201129 13:04:56.591"></status>
</kw>
<msg timestamp="20201129 13:04:56.595" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:04:56.595" starttime="20201129 13:04:56.591"></status>
</kw>
<msg timestamp="20201129 13:04:56.596" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:04:56.596" starttime="20201129 13:04:56.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:04:56.600" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:04:58.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:04:58.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:04:58.968" starttime="20201129 13:04:56.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:04:58.969" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:04:58.970" starttime="20201129 13:04:58.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:04:58.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:04:58.970" starttime="20201129 13:04:58.970"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:58.971" starttime="20201129 13:04:56.597"></status>
</kw>
<msg timestamp="20201129 13:04:58.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:04:58.971" starttime="20201129 13:04:56.597"></status>
</kw>
<status status="PASS" endtime="20201129 13:04:58.971" starttime="20201129 13:04:56.596"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:04:58.975" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:04.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:04.722" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:05:04.722" starttime="20201129 13:04:58.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:04.723" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:05:04.723" starttime="20201129 13:05:04.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:04.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:04.724" starttime="20201129 13:05:04.723"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:04.724" starttime="20201129 13:04:58.972"></status>
</kw>
<msg timestamp="20201129 13:05:04.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:04.724" starttime="20201129 13:04:58.972"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:04.725" starttime="20201129 13:04:58.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:04.730" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:09.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:09.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:05:09.302" starttime="20201129 13:05:04.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:09.303" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:05:09.303" starttime="20201129 13:05:09.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:09.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:09.304" starttime="20201129 13:05:09.303"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:09.304" starttime="20201129 13:05:04.726"></status>
</kw>
<msg timestamp="20201129 13:05:09.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:09.304" starttime="20201129 13:05:04.725"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:09.304" starttime="20201129 13:05:04.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:09.309" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:13.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:13.335" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:05:13.336" starttime="20201129 13:05:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:13.337" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:05:13.337" starttime="20201129 13:05:13.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:13.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:13.337" starttime="20201129 13:05:13.337"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:13.338" starttime="20201129 13:05:09.306"></status>
</kw>
<msg timestamp="20201129 13:05:13.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:13.338" starttime="20201129 13:05:09.305"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:13.338" starttime="20201129 13:05:09.305"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:05:13.339" critical="yes" starttime="20201129 13:04:47.244"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:05:13.344" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:05:13.344" starttime="20201129 13:05:13.344"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:05:13.345" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:05:13.345" starttime="20201129 13:05:13.344"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:13.345" starttime="20201129 13:05:13.343"></status>
</kw>
<msg timestamp="20201129 13:05:13.345" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:05:13.345" starttime="20201129 13:05:13.342"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:13.346" starttime="20201129 13:05:13.342"></status>
</kw>
<msg timestamp="20201129 13:05:13.346" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:05:13.346" starttime="20201129 13:05:13.341"></status>
</kw>
<msg timestamp="20201129 13:05:13.346" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:05:13.346" starttime="20201129 13:05:13.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:13.350" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:15.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:15.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:05:15.692" starttime="20201129 13:05:13.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:15.693" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:05:15.693" starttime="20201129 13:05:15.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:15.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:15.694" starttime="20201129 13:05:15.693"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:15.694" starttime="20201129 13:05:13.347"></status>
</kw>
<msg timestamp="20201129 13:05:15.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:15.694" starttime="20201129 13:05:13.347"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:15.695" starttime="20201129 13:05:13.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:15.699" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:17.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:17.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:05:17.977" starttime="20201129 13:05:15.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:17.978" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:05:17.978" starttime="20201129 13:05:17.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:17.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:17.979" starttime="20201129 13:05:17.978"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:17.979" starttime="20201129 13:05:15.696"></status>
</kw>
<msg timestamp="20201129 13:05:17.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:17.979" starttime="20201129 13:05:15.695"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:17.980" starttime="20201129 13:05:15.695"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:05:17.980" critical="yes" starttime="20201129 13:05:13.339"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201129 13:05:17.981" starttime="20201129 13:04:47.178"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:07:01.012" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:07:01.012" starttime="20201129 13:07:01.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:01.013" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:07:01.013" starttime="20201129 13:07:01.012"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:01.013" starttime="20201129 13:07:01.011"></status>
</kw>
<msg timestamp="20201129 13:07:01.013" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:07:01.013" starttime="20201129 13:07:01.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:07:01.014" starttime="20201129 13:07:01.014"></status>
</kw>
<msg timestamp="20201129 13:07:01.014" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:07:01.014" starttime="20201129 13:07:01.013"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:01.015" starttime="20201129 13:07:01.009"></status>
</kw>
<msg timestamp="20201129 13:07:01.015" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:07:01.015" starttime="20201129 13:07:01.009"></status>
</kw>
<msg timestamp="20201129 13:07:01.015" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:07:01.015" starttime="20201129 13:07:01.007"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:07:01.016" level="INFO">${random} = 35853</msg>
<status status="PASS" endtime="20201129 13:07:01.016" starttime="20201129 13:07:01.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:07:01.022" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-35853 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:07:04.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:07:04.650" level="INFO">${output} = 2020-11-29 13:07:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:07:04.650" starttime="20201129 13:07:01.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:07:04.651" level="INFO">2020-11-29 13:07:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-29 13:07:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:07:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:07:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:07:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:07:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-44BDA9C4019D-&gt;43bfccce-c11d-4231-b8b7-96b57537626e
2020-11-29 13:07:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:07:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:07:04.651" starttime="20201129 13:07:04.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:07:04.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:07:04.652" starttime="20201129 13:07:04.652"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:04.652" starttime="20201129 13:07:01.017"></status>
</kw>
<msg timestamp="20201129 13:07:04.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:07:04.653" starttime="20201129 13:07:01.017"></status>
</kw>
<msg timestamp="20201129 13:07:04.653" level="INFO">${result} = 2020-11-29 13:07:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:07:04.653" starttime="20201129 13:07:01.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:07:04.658" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:07:06.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:07:06.527" level="INFO">${output} = 2020-11-29 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:07:06.527" starttime="20201129 13:07:04.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:07:06.528" level="INFO">2020-11-29 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:06 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-29 13:07 ofs://om/volume1/bucket1/ozone-35853
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-29 13:05 ofs://om/volume1/bucket1/ozone-62303
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:05 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:06 ofs://om/volume1/bucket1/wordcount-66.txt
2020-11-29 13:07:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:07:06.528" starttime="20201129 13:07:06.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:07:06.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:07:06.529" starttime="20201129 13:07:06.528"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:06.529" starttime="20201129 13:07:04.655"></status>
</kw>
<msg timestamp="20201129 13:07:06.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:07:06.530" starttime="20201129 13:07:04.655"></status>
</kw>
<msg timestamp="20201129 13:07:06.530" level="INFO">${result} = 2020-11-29 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:07:06.530" starttime="20201129 13:07:04.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:07:06.531" starttime="20201129 13:07:06.530"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:07:06.531" critical="yes" starttime="20201129 13:07:01.007"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:07:06.532" starttime="20201129 13:07:00.941"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:05:22.814" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:05:22.814" starttime="20201129 13:05:22.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:05:22.815" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:05:22.815" starttime="20201129 13:05:22.814"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:22.815" starttime="20201129 13:05:22.813"></status>
</kw>
<msg timestamp="20201129 13:05:22.815" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:05:22.815" starttime="20201129 13:05:22.813"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:22.816" starttime="20201129 13:05:22.812"></status>
</kw>
<msg timestamp="20201129 13:05:22.816" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:05:22.816" starttime="20201129 13:05:22.811"></status>
</kw>
<msg timestamp="20201129 13:05:22.816" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:05:22.816" starttime="20201129 13:05:22.810"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:05:22.817" level="INFO">${random} = 62303</msg>
<status status="PASS" endtime="20201129 13:05:22.817" starttime="20201129 13:05:22.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:22.822" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-62303 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:26.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:26.700" level="INFO">${output} = 2020-11-29 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:05:26.700" starttime="20201129 13:05:22.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:26.701" level="INFO">2020-11-29 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-29 13:05:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:05:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:05:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:05:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:05:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D38E34B9E123-&gt;43bfccce-c11d-4231-b8b7-96b57537626e
2020-11-29 13:05:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:05:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:05:26.701" starttime="20201129 13:05:26.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:26.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:26.702" starttime="20201129 13:05:26.701"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:26.702" starttime="20201129 13:05:22.818"></status>
</kw>
<msg timestamp="20201129 13:05:26.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:26.702" starttime="20201129 13:05:22.817"></status>
</kw>
<msg timestamp="20201129 13:05:26.703" level="INFO">${result} = 2020-11-29 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:05:26.703" starttime="20201129 13:05:22.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:26.709" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:28.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:28.651" level="INFO">${output} = 2020-11-29 13:05:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:05:28.651" starttime="20201129 13:05:26.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:28.652" level="INFO">2020-11-29 13:05:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:28 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-29 13:05 o3fs://bucket1.volume1.om/ozone-62303
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:05 o3fs://bucket1.volume1.om/user
2020-11-29 13:05:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:05:28.652" starttime="20201129 13:05:28.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:28.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:28.653" starttime="20201129 13:05:28.652"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:28.654" starttime="20201129 13:05:26.705"></status>
</kw>
<msg timestamp="20201129 13:05:28.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:28.654" starttime="20201129 13:05:26.703"></status>
</kw>
<msg timestamp="20201129 13:05:28.654" level="INFO">${result} = 2020-11-29 13:05:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:28 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:05:28.654" starttime="20201129 13:05:26.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:05:28.655" starttime="20201129 13:05:28.654"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:05:28.655" critical="yes" starttime="20201129 13:05:22.809"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:05:28.656" starttime="20201129 13:05:22.750"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:07:11.330" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:07:11.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:07:11.334" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:11.334" starttime="20201129 13:07:11.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:07:11.337" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:11.337" starttime="20201129 13:07:11.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:07:11.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:07:11.338" starttime="20201129 13:07:11.337"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:11.338" starttime="20201129 13:07:11.323"></status>
</kw>
<msg timestamp="20201129 13:07:11.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:07:11.338" starttime="20201129 13:07:11.323"></status>
</kw>
<msg timestamp="20201129 13:07:11.338" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:11.338" starttime="20201129 13:07:11.323"></status>
</kw>
<msg timestamp="20201129 13:07:11.339" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:11.339" starttime="20201129 13:07:11.322"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:07:11.346" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:07:11.346" starttime="20201129 13:07:11.345"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:11.347" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:07:11.347" starttime="20201129 13:07:11.346"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:11.347" starttime="20201129 13:07:11.342"></status>
</kw>
<msg timestamp="20201129 13:07:11.347" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:07:11.347" starttime="20201129 13:07:11.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:07:11.349" starttime="20201129 13:07:11.348"></status>
</kw>
<msg timestamp="20201129 13:07:11.349" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:07:11.349" starttime="20201129 13:07:11.347"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:11.350" starttime="20201129 13:07:11.341"></status>
</kw>
<msg timestamp="20201129 13:07:11.350" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:07:11.350" starttime="20201129 13:07:11.340"></status>
</kw>
<msg timestamp="20201129 13:07:11.350" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:07:11.350" starttime="20201129 13:07:11.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:07:11.353" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:07:48.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:07:48.356" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07...</msg>
<status status="PASS" endtime="20201129 13:07:48.356" starttime="20201129 13:07:11.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:07:48.357" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-29 13:07:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:07:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:07:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:07:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:07:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9753521744D6-&gt;43bfccce-c11d-4231-b8b7-96b57537626e
2020-11-29 13:07:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-29 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:07:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:07:17 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:07:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655064568_0003
2020-11-29 13:07:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:18 INFO  Configuration:2752 - resource-types.xml not found
2020-11-29 13:07:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-29 13:07:18 INFO  YarnClientImpl:324 - Submitted application application_1606655064568_0003
2020-11-29 13:07:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655064568_0003/
2020-11-29 13:07:18 INFO  Job:1619 - Running job: job_1606655064568_0003
2020-11-29 13:07:26 INFO  Job:1640 - Job job_1606655064568_0003 running in uber mode : false
2020-11-29 13:07:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:07:31 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:07:37 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:07:42 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:07:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:07:47 INFO  Job:1658 - Job job_1606655064568_0003 completed successfully
2020-11-29 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41056
		Total time spent by all reduces in occupied slots (ms)=15004
		Total time spent by all map tasks (ms)=10264
		Total time spent by all reduce tasks (ms)=3751
		Total vcore-milliseconds taken by all map tasks=10264
		Total vcore-milliseconds taken by all reduce tasks=3751
		Total megabyte-milliseconds taken by all map tasks=42041344
		Total megabyte-milliseconds taken by all reduce tasks=15364096
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=599
		CPU time spent (ms)=6850
		Physical memory (bytes) snapshot=1222979584
		Virtual memory (bytes) snapshot=15804162048
		Total committed heap usage (bytes)=1152909312
		Peak Map Physical memory (bytes)=306921472
		Peak Map Virtual memory (bytes)=3946614784
		Peak Reduce Physical memory (bytes)=305262592
		Peak Reduce Virtual memory (bytes)=3971764224
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.117 seconds
2020-11-29 13:07:47 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-29 13:07:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:07:48.358" starttime="20201129 13:07:48.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:07:48.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:07:48.359" starttime="20201129 13:07:48.358"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.359" starttime="20201129 13:07:11.351"></status>
</kw>
<msg timestamp="20201129 13:07:48.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:07:48.359" starttime="20201129 13:07:11.351"></status>
</kw>
<msg timestamp="20201129 13:07:48.360" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07...</msg>
<status status="PASS" endtime="20201129 13:07:48.360" starttime="20201129 13:07:11.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:07:48.361" starttime="20201129 13:07:48.360"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:07:48.361" critical="yes" starttime="20201129 13:07:11.321"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:07:48.367" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:07:48.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:07:48.372" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:48.372" starttime="20201129 13:07:48.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:07:48.373" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:48.373" starttime="20201129 13:07:48.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:07:48.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:07:48.374" starttime="20201129 13:07:48.373"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.374" starttime="20201129 13:07:48.364"></status>
</kw>
<msg timestamp="20201129 13:07:48.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:07:48.375" starttime="20201129 13:07:48.364"></status>
</kw>
<msg timestamp="20201129 13:07:48.375" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:48.375" starttime="20201129 13:07:48.363"></status>
</kw>
<msg timestamp="20201129 13:07:48.375" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:07:48.375" starttime="20201129 13:07:48.363"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:07:48.376" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201129 13:07:48.376" starttime="20201129 13:07:48.376"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:07:48.382" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:07:48.382" starttime="20201129 13:07:48.382"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:48.383" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:07:48.383" starttime="20201129 13:07:48.382"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.383" starttime="20201129 13:07:48.381"></status>
</kw>
<msg timestamp="20201129 13:07:48.383" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:07:48.384" starttime="20201129 13:07:48.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:07:48.385" starttime="20201129 13:07:48.384"></status>
</kw>
<msg timestamp="20201129 13:07:48.385" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:07:48.385" starttime="20201129 13:07:48.384"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.386" starttime="20201129 13:07:48.379"></status>
</kw>
<msg timestamp="20201129 13:07:48.387" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:07:48.387" starttime="20201129 13:07:48.378"></status>
</kw>
<msg timestamp="20201129 13:07:48.387" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:07:48.387" starttime="20201129 13:07:48.377"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:07:48.392" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:07:48.392" starttime="20201129 13:07:48.392"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:48.393" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:07:48.393" starttime="20201129 13:07:48.392"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.393" starttime="20201129 13:07:48.391"></status>
</kw>
<msg timestamp="20201129 13:07:48.393" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:07:48.393" starttime="20201129 13:07:48.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:07:48.395" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201129 13:07:48.395" starttime="20201129 13:07:48.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:48.396" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201129 13:07:48.396" starttime="20201129 13:07:48.395"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.396" starttime="20201129 13:07:48.394"></status>
</kw>
<msg timestamp="20201129 13:07:48.396" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201129 13:07:48.396" starttime="20201129 13:07:48.394"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.397" starttime="20201129 13:07:48.390"></status>
</kw>
<msg timestamp="20201129 13:07:48.397" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:07:48.397" starttime="20201129 13:07:48.388"></status>
</kw>
<msg timestamp="20201129 13:07:48.397" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:07:48.398" starttime="20201129 13:07:48.388"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:07:48.401" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:07:48.401" starttime="20201129 13:07:48.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:48.402" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:07:48.402" starttime="20201129 13:07:48.401"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.402" starttime="20201129 13:07:48.400"></status>
</kw>
<msg timestamp="20201129 13:07:48.403" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:07:48.403" starttime="20201129 13:07:48.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:07:48.404" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201129 13:07:48.404" starttime="20201129 13:07:48.404"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:07:48.405" level="INFO">${result} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201129 13:07:48.405" starttime="20201129 13:07:48.405"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.405" starttime="20201129 13:07:48.403"></status>
</kw>
<msg timestamp="20201129 13:07:48.405" level="INFO">${path_with_leading} = /wordcount-02.txt</msg>
<status status="PASS" endtime="20201129 13:07:48.405" starttime="20201129 13:07:48.403"></status>
</kw>
<status status="PASS" endtime="20201129 13:07:48.406" starttime="20201129 13:07:48.399"></status>
</kw>
<msg timestamp="20201129 13:07:48.406" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201129 13:07:48.406" starttime="20201129 13:07:48.399"></status>
</kw>
<msg timestamp="20201129 13:07:48.406" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201129 13:07:48.406" starttime="20201129 13:07:48.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:07:48.411" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:08:25.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:08:25.702" level="INFO">${output} = 2020-11-29 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:08:25.702" starttime="20201129 13:07:48.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:08:25.703" level="INFO">2020-11-29 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-29 13:07:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:07:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:07:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:07:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:07:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6C350FCB4225-&gt;43bfccce-c11d-4231-b8b7-96b57537626e
2020-11-29 13:07:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:07:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:07:52 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:07:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655064568_0004
2020-11-29 13:07:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:52 INFO  Configuration:2752 - resource-types.xml not found
2020-11-29 13:07:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-29 13:07:52 INFO  YarnClientImpl:324 - Submitted application application_1606655064568_0004
2020-11-29 13:07:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655064568_0004/
2020-11-29 13:07:52 INFO  Job:1619 - Running job: job_1606655064568_0004
2020-11-29 13:08:00 INFO  Job:1640 - Job job_1606655064568_0004 running in uber mode : false
2020-11-29 13:08:00 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:08:08 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:08:14 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:08:20 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:08:24 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:08:25 INFO  Job:1658 - Job job_1606655064568_0004 completed successfully
2020-11-29 13:08:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:08:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41792
		Total time spent by all reduces in occupied slots (ms)=15420
		Total time spent by all map tasks (ms)=10448
		Total time spent by all reduce tasks (ms)=3855
		Total vcore-milliseconds taken by all map tasks=10448
		Total vcore-milliseconds taken by all reduce tasks=3855
		Total megabyte-milliseconds taken by all map tasks=42795008
		Total megabyte-milliseconds taken by all reduce tasks=15790080
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=584
		CPU time spent (ms)=7360
		Physical memory (bytes) snapshot=1203826688
		Virtual memory (bytes) snapshot=15786840064
		Total committed heap usage (bytes)=1059061760
		Peak Map Physical memory (bytes)=312229888
		Peak Map Virtual memory (bytes)=3948535808
		Peak Reduce Physical memory (bytes)=295088128
		Peak Reduce Virtual memory (bytes)=3964170240
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-29 13:08:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:08:25.703" starttime="20201129 13:08:25.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:08:25.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:08:25.704" starttime="20201129 13:08:25.703"></status>
</kw>
<status status="PASS" endtime="20201129 13:08:25.704" starttime="20201129 13:07:48.407"></status>
</kw>
<msg timestamp="20201129 13:08:25.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:08:25.704" starttime="20201129 13:07:48.407"></status>
</kw>
<msg timestamp="20201129 13:08:25.705" level="INFO">${output} = 2020-11-29 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:07:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:08:25.705" starttime="20201129 13:07:48.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201129 13:08:25.705" starttime="20201129 13:08:25.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:08:25.706" starttime="20201129 13:08:25.706"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:08:25.707" critical="yes" starttime="20201129 13:07:48.362"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201129 13:08:25.709" starttime="20201129 13:07:11.256"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:33.565" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:05:33.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:05:33.570" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:05:33.570" starttime="20201129 13:05:33.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:05:33.571" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:05:33.571" starttime="20201129 13:05:33.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:05:33.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:05:33.572" starttime="20201129 13:05:33.571"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:33.572" starttime="20201129 13:05:33.560"></status>
</kw>
<msg timestamp="20201129 13:05:33.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:05:33.572" starttime="20201129 13:05:33.560"></status>
</kw>
<msg timestamp="20201129 13:05:33.573" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:05:33.573" starttime="20201129 13:05:33.560"></status>
</kw>
<msg timestamp="20201129 13:05:33.573" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:05:33.573" starttime="20201129 13:05:33.559"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:05:33.578" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:05:33.578" starttime="20201129 13:05:33.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:05:33.578" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:05:33.579" starttime="20201129 13:05:33.578"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:33.579" starttime="20201129 13:05:33.576"></status>
</kw>
<msg timestamp="20201129 13:05:33.579" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:05:33.579" starttime="20201129 13:05:33.575"></status>
</kw>
<status status="PASS" endtime="20201129 13:05:33.579" starttime="20201129 13:05:33.575"></status>
</kw>
<msg timestamp="20201129 13:05:33.579" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:05:33.579" starttime="20201129 13:05:33.574"></status>
</kw>
<msg timestamp="20201129 13:05:33.580" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:05:33.580" starttime="20201129 13:05:33.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:05:33.583" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:06:18.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:06:18.514" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05...</msg>
<status status="PASS" endtime="20201129 13:06:18.514" starttime="20201129 13:05:33.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:06:18.516" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-29 13:05:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:05:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:05:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:05:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:05:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1CA2CE15026E-&gt;43bfccce-c11d-4231-b8b7-96b57537626e
2020-11-29 13:05:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:05:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-29 13:05:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:05:38 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:05:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655064568_0001
2020-11-29 13:05:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:05:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:38 INFO  Configuration:2752 - resource-types.xml not found
2020-11-29 13:05:38 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-29 13:05:39 INFO  YarnClientImpl:324 - Submitted application application_1606655064568_0001
2020-11-29 13:05:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655064568_0001/
2020-11-29 13:05:39 INFO  Job:1619 - Running job: job_1606655064568_0001
2020-11-29 13:05:50 INFO  Job:1640 - Job job_1606655064568_0001 running in uber mode : false
2020-11-29 13:05:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:05:56 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:06:02 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:06:08 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:06:14 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:06:17 INFO  Job:1658 - Job job_1606655064568_0001 completed successfully
2020-11-29 13:06:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016349
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42132
		Total time spent by all reduces in occupied slots (ms)=15516
		Total time spent by all map tasks (ms)=10533
		Total time spent by all reduce tasks (ms)=3879
		Total vcore-milliseconds taken by all map tasks=10533
		Total vcore-milliseconds taken by all reduce tasks=3879
		Total megabyte-milliseconds taken by all map tasks=43143168
		Total megabyte-milliseconds taken by all reduce tasks=15888384
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1242746880
		Virtual memory (bytes) snapshot=15789240320
		Total committed heap usage (bytes)=1073741824
		Peak Map Physical memory (bytes)=330788864
		Peak Map Virtual memory (bytes)=3943944192
		Peak Reduce Physical memory (bytes)=303087616
		Peak Reduce Virtual memory (bytes)=3971194880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.738 seconds
2020-11-29 13:06:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:17 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-29 13:06:18 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:06:18.516" starttime="20201129 13:06:18.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:06:18.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:06:18.517" starttime="20201129 13:06:18.516"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.517" starttime="20201129 13:05:33.581"></status>
</kw>
<msg timestamp="20201129 13:06:18.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:06:18.517" starttime="20201129 13:05:33.581"></status>
</kw>
<msg timestamp="20201129 13:06:18.518" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:05...</msg>
<status status="PASS" endtime="20201129 13:06:18.518" starttime="20201129 13:05:33.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:06:18.519" starttime="20201129 13:06:18.518"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:06:18.519" critical="yes" starttime="20201129 13:05:33.558"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:06:18.527" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:06:18.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:06:18.533" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:06:18.533" starttime="20201129 13:06:18.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:06:18.534" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:06:18.534" starttime="20201129 13:06:18.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:06:18.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:06:18.535" starttime="20201129 13:06:18.534"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.535" starttime="20201129 13:06:18.523"></status>
</kw>
<msg timestamp="20201129 13:06:18.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:06:18.535" starttime="20201129 13:06:18.523"></status>
</kw>
<msg timestamp="20201129 13:06:18.535" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:06:18.535" starttime="20201129 13:06:18.522"></status>
</kw>
<msg timestamp="20201129 13:06:18.536" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201129 13:06:18.536" starttime="20201129 13:06:18.521"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:06:18.536" level="INFO">${random} = 66</msg>
<status status="PASS" endtime="20201129 13:06:18.536" starttime="20201129 13:06:18.536"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:06:18.540" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:06:18.540" starttime="20201129 13:06:18.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:06:18.541" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:06:18.541" starttime="20201129 13:06:18.540"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.541" starttime="20201129 13:06:18.539"></status>
</kw>
<msg timestamp="20201129 13:06:18.541" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:06:18.541" starttime="20201129 13:06:18.539"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.542" starttime="20201129 13:06:18.538"></status>
</kw>
<msg timestamp="20201129 13:06:18.542" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:06:18.542" starttime="20201129 13:06:18.537"></status>
</kw>
<msg timestamp="20201129 13:06:18.542" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:06:18.542" starttime="20201129 13:06:18.537"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:06:18.545" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:06:18.545" starttime="20201129 13:06:18.545"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:06:18.546" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:06:18.546" starttime="20201129 13:06:18.545"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.546" starttime="20201129 13:06:18.544"></status>
</kw>
<msg timestamp="20201129 13:06:18.547" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:06:18.547" starttime="20201129 13:06:18.544"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.547" starttime="20201129 13:06:18.543"></status>
</kw>
<msg timestamp="20201129 13:06:18.547" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:06:18.547" starttime="20201129 13:06:18.543"></status>
</kw>
<msg timestamp="20201129 13:06:18.547" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:06:18.547" starttime="20201129 13:06:18.542"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:06:18.551" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:06:18.551" starttime="20201129 13:06:18.551"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:06:18.552" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:06:18.552" starttime="20201129 13:06:18.551"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.552" starttime="20201129 13:06:18.550"></status>
</kw>
<msg timestamp="20201129 13:06:18.552" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:06:18.552" starttime="20201129 13:06:18.549"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:18.552" starttime="20201129 13:06:18.549"></status>
</kw>
<msg timestamp="20201129 13:06:18.553" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-66.txt</msg>
<status status="PASS" endtime="20201129 13:06:18.553" starttime="20201129 13:06:18.548"></status>
</kw>
<msg timestamp="20201129 13:06:18.553" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-66.txt</msg>
<status status="PASS" endtime="20201129 13:06:18.553" starttime="20201129 13:06:18.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:06:18.557" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-66.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:06:56.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:06:56.127" level="INFO">${output} = 2020-11-29 13:06:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:06:56.127" starttime="20201129 13:06:18.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:06:56.128" level="INFO">2020-11-29 13:06:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-29 13:06:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-29 13:06:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:06:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:06:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:06:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-675CD49EC2EB-&gt;43bfccce-c11d-4231-b8b7-96b57537626e
2020-11-29 13:06:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:06:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:06:22 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:06:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655064568_0002
2020-11-29 13:06:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:06:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:23 INFO  Configuration:2752 - resource-types.xml not found
2020-11-29 13:06:23 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-29 13:06:23 INFO  YarnClientImpl:324 - Submitted application application_1606655064568_0002
2020-11-29 13:06:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655064568_0002/
2020-11-29 13:06:23 INFO  Job:1619 - Running job: job_1606655064568_0002
2020-11-29 13:06:31 INFO  Job:1640 - Job job_1606655064568_0002 running in uber mode : false
2020-11-29 13:06:31 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:06:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:06:43 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:06:49 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:06:54 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:06:55 INFO  Job:1658 - Job job_1606655064568_0002 completed successfully
2020-11-29 13:06:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1078579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42780
		Total time spent by all reduces in occupied slots (ms)=15676
		Total time spent by all map tasks (ms)=10695
		Total time spent by all reduce tasks (ms)=3919
		Total vcore-milliseconds taken by all map tasks=10695
		Total vcore-milliseconds taken by all reduce tasks=3919
		Total megabyte-milliseconds taken by all map tasks=43806720
		Total megabyte-milliseconds taken by all reduce tasks=16052224
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=7200
		Physical memory (bytes) snapshot=1221677056
		Virtual memory (bytes) snapshot=15790010368
		Total committed heap usage (bytes)=1060110336
		Peak Map Physical memory (bytes)=314957824
		Peak Map Virtual memory (bytes)=3948466176
		Peak Reduce Physical memory (bytes)=301715456
		Peak Reduce Virtual memory (bytes)=3969683456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-29 13:06:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201129 13:06:56.129" starttime="20201129 13:06:56.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:06:56.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:06:56.129" starttime="20201129 13:06:56.129"></status>
</kw>
<status status="PASS" endtime="20201129 13:06:56.130" starttime="20201129 13:06:18.554"></status>
</kw>
<msg timestamp="20201129 13:06:56.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:06:56.130" starttime="20201129 13:06:18.554"></status>
</kw>
<msg timestamp="20201129 13:06:56.130" level="INFO">${output} = 2020-11-29 13:06:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-29 13:06:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201129 13:06:56.130" starttime="20201129 13:06:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201129 13:06:56.131" starttime="20201129 13:06:56.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:06:56.132" starttime="20201129 13:06:56.131"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:06:56.132" critical="yes" starttime="20201129 13:06:18.520"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201129 13:06:56.133" starttime="20201129 13:05:33.495"></status>
</suite>
<status status="PASS" elapsedtime="199391" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:09:35.039" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:09:40.290" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:09:40.290" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:09:40.290" starttime="20201129 13:09:35.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:09:40.291" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:09:40.291" starttime="20201129 13:09:40.291"></status>
</kw>
<msg timestamp="20201129 13:09:40.292" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201129 13:09:40.292" starttime="20201129 13:09:35.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:09:40.298" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:09:43.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:09:43.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:09:43.563" starttime="20201129 13:09:40.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:09:43.564" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:09:43.564" starttime="20201129 13:09:43.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:09:43.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:09:43.565" starttime="20201129 13:09:43.564"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:43.565" starttime="20201129 13:09:40.294"></status>
</kw>
<msg timestamp="20201129 13:09:43.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:09:43.565" starttime="20201129 13:09:40.294"></status>
</kw>
<msg timestamp="20201129 13:09:43.566" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201129 13:09:43.566" starttime="20201129 13:09:40.293"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201129 13:09:43.566" starttime="20201129 13:09:43.566"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:43.567" starttime="20201129 13:09:40.293"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:43.567" starttime="20201129 13:09:40.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:09:43.571" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:09:46.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:09:46.664" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:09:46.664" starttime="20201129 13:09:43.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:09:46.665" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:09:46.665" starttime="20201129 13:09:46.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:09:46.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:09:46.666" starttime="20201129 13:09:46.665"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:46.666" starttime="20201129 13:09:43.568"></status>
</kw>
<msg timestamp="20201129 13:09:46.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:09:46.667" starttime="20201129 13:09:43.568"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:46.667" starttime="20201129 13:09:43.568"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:46.667" starttime="20201129 13:09:43.567"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:46.667" starttime="20201129 13:09:43.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201129 13:09:46.667" starttime="20201129 13:09:46.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:09:46.671" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:09:50.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:09:50.250" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:09:46.481Z",
  "modificat...</msg>
<status status="PASS" endtime="20201129 13:09:50.250" starttime="20201129 13:09:46.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:09:50.251" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:09:46.481Z",
  "modificationTime" : "2020-11-29T13:09:46.481Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201129 13:09:50.251" starttime="20201129 13:09:50.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:09:50.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:09:50.252" starttime="20201129 13:09:50.252"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:50.253" starttime="20201129 13:09:46.669"></status>
</kw>
<msg timestamp="20201129 13:09:50.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:09:50.253" starttime="20201129 13:09:46.668"></status>
</kw>
<msg timestamp="20201129 13:09:50.253" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-29T13:09:46.481Z",
  "modificat...</msg>
<status status="PASS" endtime="20201129 13:09:50.253" starttime="20201129 13:09:46.668"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201129 13:09:50.254" starttime="20201129 13:09:50.253"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:09:50.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:09:50.258" starttime="20201129 13:09:50.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:09:50.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:09:50.259" starttime="20201129 13:09:50.258"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:50.259" starttime="20201129 13:09:50.257"></status>
</kw>
<msg timestamp="20201129 13:09:50.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:09:50.259" starttime="20201129 13:09:50.256"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:50.260" starttime="20201129 13:09:50.256"></status>
</kw>
<msg timestamp="20201129 13:09:50.260" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:09:50.260" starttime="20201129 13:09:50.255"></status>
</kw>
<msg timestamp="20201129 13:09:50.260" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201129 13:09:50.260" starttime="20201129 13:09:50.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:09:50.265" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:09:53.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:09:53.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:09:53.531" starttime="20201129 13:09:50.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:09:53.532" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:09:53.532" starttime="20201129 13:09:53.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:09:53.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:09:53.533" starttime="20201129 13:09:53.532"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:53.533" starttime="20201129 13:09:50.261"></status>
</kw>
<msg timestamp="20201129 13:09:53.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:09:53.534" starttime="20201129 13:09:50.261"></status>
</kw>
<status status="PASS" endtime="20201129 13:09:53.534" starttime="20201129 13:09:50.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:09:53.538" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:00.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:00.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:10:00.528" starttime="20201129 13:09:53.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:00.529" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:10:00.530" starttime="20201129 13:10:00.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:00.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:00.530" starttime="20201129 13:10:00.530"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:00.531" starttime="20201129 13:09:53.536"></status>
</kw>
<msg timestamp="20201129 13:10:00.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:00.531" starttime="20201129 13:09:53.535"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:00.531" starttime="20201129 13:09:53.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:00.536" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:05.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:05.945" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:10:05.945" starttime="20201129 13:10:00.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:05.946" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:10:05.946" starttime="20201129 13:10:05.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:05.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:05.947" starttime="20201129 13:10:05.946"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:05.947" starttime="20201129 13:10:00.532"></status>
</kw>
<msg timestamp="20201129 13:10:05.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:05.947" starttime="20201129 13:10:00.532"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:05.947" starttime="20201129 13:10:00.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:05.952" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:11.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:11.413" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:10:11.413" starttime="20201129 13:10:05.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:11.414" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:10:11.415" starttime="20201129 13:10:11.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:11.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:11.415" starttime="20201129 13:10:11.415"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:11.416" starttime="20201129 13:10:05.948"></status>
</kw>
<msg timestamp="20201129 13:10:11.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:11.416" starttime="20201129 13:10:05.948"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:11.416" starttime="20201129 13:10:05.948"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:10:11.416" critical="yes" starttime="20201129 13:09:35.032"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:10:11.422" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:10:11.422" starttime="20201129 13:10:11.421"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:10:11.423" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:10:11.423" starttime="20201129 13:10:11.422"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:11.423" starttime="20201129 13:10:11.421"></status>
</kw>
<msg timestamp="20201129 13:10:11.423" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:10:11.423" starttime="20201129 13:10:11.420"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:11.424" starttime="20201129 13:10:11.420"></status>
</kw>
<msg timestamp="20201129 13:10:11.424" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:10:11.424" starttime="20201129 13:10:11.419"></status>
</kw>
<msg timestamp="20201129 13:10:11.424" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:10:11.424" starttime="20201129 13:10:11.418"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:11.428" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:14.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:14.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:10:14.864" starttime="20201129 13:10:11.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:14.865" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:10:14.865" starttime="20201129 13:10:14.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:14.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:14.866" starttime="20201129 13:10:14.866"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:14.867" starttime="20201129 13:10:11.425"></status>
</kw>
<msg timestamp="20201129 13:10:14.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:14.867" starttime="20201129 13:10:11.425"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:14.867" starttime="20201129 13:10:11.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:14.871" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:18.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:18.054" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201129 13:10:18.054" starttime="20201129 13:10:14.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:18.055" level="INFO"></msg>
<status status="PASS" endtime="20201129 13:10:18.055" starttime="20201129 13:10:18.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:18.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:18.056" starttime="20201129 13:10:18.056"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:18.056" starttime="20201129 13:10:14.868"></status>
</kw>
<msg timestamp="20201129 13:10:18.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:18.057" starttime="20201129 13:10:14.868"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:18.057" starttime="20201129 13:10:14.867"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201129 13:10:18.057" critical="yes" starttime="20201129 13:10:11.417"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201129 13:10:18.059" starttime="20201129 13:09:34.958"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:11:58.065" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:11:58.065" starttime="20201129 13:11:58.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:11:58.066" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:11:58.066" starttime="20201129 13:11:58.065"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:58.066" starttime="20201129 13:11:58.064"></status>
</kw>
<msg timestamp="20201129 13:11:58.066" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:11:58.066" starttime="20201129 13:11:58.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:11:58.067" starttime="20201129 13:11:58.067"></status>
</kw>
<msg timestamp="20201129 13:11:58.068" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:11:58.068" starttime="20201129 13:11:58.066"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:58.068" starttime="20201129 13:11:58.063"></status>
</kw>
<msg timestamp="20201129 13:11:58.068" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:11:58.068" starttime="20201129 13:11:58.062"></status>
</kw>
<msg timestamp="20201129 13:11:58.068" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:11:58.068" starttime="20201129 13:11:58.061"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:11:58.069" level="INFO">${random} = 65046</msg>
<status status="PASS" endtime="20201129 13:11:58.069" starttime="20201129 13:11:58.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:11:58.076" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-65046 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:12:01.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:12:01.774" level="INFO">${output} = 2020-11-29 13:12:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:12:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:12:01.774" starttime="20201129 13:11:58.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:12:01.775" level="INFO">2020-11-29 13:12:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:12:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:12:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:12:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:12:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A39E2FBC83A7-&gt;acbde656-fb32-4daf-a3a4-5e0172160d06
2020-11-29 13:12:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201129 13:12:01.775" starttime="20201129 13:12:01.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:12:01.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:12:01.776" starttime="20201129 13:12:01.776"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:01.777" starttime="20201129 13:11:58.070"></status>
</kw>
<msg timestamp="20201129 13:12:01.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:12:01.777" starttime="20201129 13:11:58.070"></status>
</kw>
<msg timestamp="20201129 13:12:01.777" level="INFO">${result} = 2020-11-29 13:12:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:12:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:12:01.777" starttime="20201129 13:11:58.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:12:01.782" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:12:03.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:12:03.762" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:10 ofs://om/volume1/bucket1/ozone-40584
-rw-...</msg>
<status status="PASS" endtime="20201129 13:12:03.762" starttime="20201129 13:12:01.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:12:03.763" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:10 ofs://om/volume1/bucket1/ozone-40584
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:12 ofs://om/volume1/bucket1/ozone-65046
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:10 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:11 ofs://om/volume1/bucket1/wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:12:03.764" starttime="20201129 13:12:03.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:12:03.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:12:03.764" starttime="20201129 13:12:03.764"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:03.765" starttime="20201129 13:12:01.780"></status>
</kw>
<msg timestamp="20201129 13:12:03.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:12:03.765" starttime="20201129 13:12:01.779"></status>
</kw>
<msg timestamp="20201129 13:12:03.765" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:10 ofs://om/volume1/bucket1/ozone-40584
-rw-...</msg>
<status status="PASS" endtime="20201129 13:12:03.765" starttime="20201129 13:12:01.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:12:03.766" starttime="20201129 13:12:03.765"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:12:03.766" critical="yes" starttime="20201129 13:11:58.060"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:12:03.767" starttime="20201129 13:11:57.994"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:10:22.881" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:10:22.882" starttime="20201129 13:10:22.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:10:22.882" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:10:22.882" starttime="20201129 13:10:22.882"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:22.883" starttime="20201129 13:10:22.880"></status>
</kw>
<msg timestamp="20201129 13:10:22.883" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:10:22.883" starttime="20201129 13:10:22.880"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:22.883" starttime="20201129 13:10:22.879"></status>
</kw>
<msg timestamp="20201129 13:10:22.883" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:10:22.883" starttime="20201129 13:10:22.878"></status>
</kw>
<msg timestamp="20201129 13:10:22.883" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:10:22.884" starttime="20201129 13:10:22.877"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:10:22.884" level="INFO">${random} = 40584</msg>
<status status="PASS" endtime="20201129 13:10:22.884" starttime="20201129 13:10:22.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:22.890" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-40584 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:26.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:26.791" level="INFO">${output} = 2020-11-29 13:10:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:10:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:10:26.791" starttime="20201129 13:10:22.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:26.792" level="INFO">2020-11-29 13:10:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:10:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:10:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:10:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:10:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BE34D60C9A1-&gt;acbde656-fb32-4daf-a3a4-5e0172160d06
2020-11-29 13:10:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201129 13:10:26.792" starttime="20201129 13:10:26.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:26.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:26.793" starttime="20201129 13:10:26.793"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:26.794" starttime="20201129 13:10:22.885"></status>
</kw>
<msg timestamp="20201129 13:10:26.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:26.794" starttime="20201129 13:10:22.885"></status>
</kw>
<msg timestamp="20201129 13:10:26.794" level="INFO">${result} = 2020-11-29 13:10:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:10:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201129 13:10:26.794" starttime="20201129 13:10:22.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:26.799" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:28.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:28.786" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:10 o3fs://bucket1.volume1.om/ozone-40584
dr...</msg>
<status status="PASS" endtime="20201129 13:10:28.787" starttime="20201129 13:10:26.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:28.788" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:10 o3fs://bucket1.volume1.om/ozone-40584
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:10 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201129 13:10:28.788" starttime="20201129 13:10:28.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:28.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:28.788" starttime="20201129 13:10:28.788"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:28.789" starttime="20201129 13:10:26.796"></status>
</kw>
<msg timestamp="20201129 13:10:28.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:28.789" starttime="20201129 13:10:26.795"></status>
</kw>
<msg timestamp="20201129 13:10:28.789" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-29 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-29 13:10 o3fs://bucket1.volume1.om/ozone-40584
dr...</msg>
<status status="PASS" endtime="20201129 13:10:28.789" starttime="20201129 13:10:26.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:10:28.790" starttime="20201129 13:10:28.790"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201129 13:10:28.790" critical="yes" starttime="20201129 13:10:22.876"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201129 13:10:28.791" starttime="20201129 13:10:22.817"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:12:08.648" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:12:08.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:12:08.652" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:08.653" starttime="20201129 13:12:08.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:12:08.654" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:08.654" starttime="20201129 13:12:08.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:12:08.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:12:08.654" starttime="20201129 13:12:08.654"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:08.655" starttime="20201129 13:12:08.642"></status>
</kw>
<msg timestamp="20201129 13:12:08.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:12:08.655" starttime="20201129 13:12:08.641"></status>
</kw>
<msg timestamp="20201129 13:12:08.655" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:08.655" starttime="20201129 13:12:08.641"></status>
</kw>
<msg timestamp="20201129 13:12:08.656" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:08.656" starttime="20201129 13:12:08.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:12:08.660" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:12:08.661" starttime="20201129 13:12:08.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:12:08.661" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:12:08.661" starttime="20201129 13:12:08.661"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:08.662" starttime="20201129 13:12:08.658"></status>
</kw>
<msg timestamp="20201129 13:12:08.662" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:12:08.662" starttime="20201129 13:12:08.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:12:08.663" starttime="20201129 13:12:08.663"></status>
</kw>
<msg timestamp="20201129 13:12:08.663" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:12:08.663" starttime="20201129 13:12:08.662"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:08.664" starttime="20201129 13:12:08.657"></status>
</kw>
<msg timestamp="20201129 13:12:08.664" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:12:08.664" starttime="20201129 13:12:08.657"></status>
</kw>
<msg timestamp="20201129 13:12:08.664" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:12:08.664" starttime="20201129 13:12:08.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:12:08.668" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:12:48.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:12:48.857" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:12:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:12:10 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:12:48.857" starttime="20201129 13:12:08.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:12:48.858" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:12:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:12:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:12:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:12:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:12:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-20272EB9107A-&gt;acbde656-fb32-4daf-a3a4-5e0172160d06
2020-11-29 13:12:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:12:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-29 13:12:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:12:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:12:15 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:12:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655349425_0003
2020-11-29 13:12:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:12:15 INFO  Configuration:2795 - resource-types.xml not found
2020-11-29 13:12:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-29 13:12:15 INFO  YarnClientImpl:329 - Submitted application application_1606655349425_0003
2020-11-29 13:12:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655349425_0003/
2020-11-29 13:12:15 INFO  Job:1619 - Running job: job_1606655349425_0003
2020-11-29 13:12:22 INFO  Job:1640 - Job job_1606655349425_0003 running in uber mode : false
2020-11-29 13:12:22 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:12:30 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:12:36 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:12:42 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:12:47 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:12:48 INFO  Job:1658 - Job job_1606655349425_0003 completed successfully
2020-11-29 13:12:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43064
		Total time spent by all reduces in occupied slots (ms)=15232
		Total time spent by all map tasks (ms)=10766
		Total time spent by all reduce tasks (ms)=3808
		Total vcore-milliseconds taken by all map tasks=10766
		Total vcore-milliseconds taken by all reduce tasks=3808
		Total megabyte-milliseconds taken by all map tasks=44097536
		Total megabyte-milliseconds taken by all reduce tasks=15597568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=656
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1417261056
		Virtual memory (bytes) snapshot=15812710400
		Total committed heap usage (bytes)=1539833856
		Peak Map Physical memory (bytes)=370663424
		Peak Map Virtual memory (bytes)=3952738304
		Peak Reduce Physical memory (bytes)=390553600
		Peak Reduce Virtual memory (bytes)=3967385600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.785 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201129 13:12:48.858" starttime="20201129 13:12:48.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:12:48.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:12:48.859" starttime="20201129 13:12:48.858"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.859" starttime="20201129 13:12:08.665"></status>
</kw>
<msg timestamp="20201129 13:12:48.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:12:48.859" starttime="20201129 13:12:08.665"></status>
</kw>
<msg timestamp="20201129 13:12:48.860" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:12:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:12:10 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:12:48.860" starttime="20201129 13:12:08.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:12:48.861" starttime="20201129 13:12:48.860"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:12:48.861" critical="yes" starttime="20201129 13:12:08.640"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:12:48.867" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:12:48.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:12:48.872" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:48.872" starttime="20201129 13:12:48.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:12:48.873" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:48.873" starttime="20201129 13:12:48.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:12:48.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:12:48.874" starttime="20201129 13:12:48.873"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.874" starttime="20201129 13:12:48.865"></status>
</kw>
<msg timestamp="20201129 13:12:48.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:12:48.874" starttime="20201129 13:12:48.864"></status>
</kw>
<msg timestamp="20201129 13:12:48.874" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:48.874" starttime="20201129 13:12:48.864"></status>
</kw>
<msg timestamp="20201129 13:12:48.875" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:12:48.875" starttime="20201129 13:12:48.863"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:12:48.875" level="INFO">${random} = 58</msg>
<status status="PASS" endtime="20201129 13:12:48.875" starttime="20201129 13:12:48.875"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:12:48.880" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:12:48.880" starttime="20201129 13:12:48.879"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:12:48.880" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:12:48.881" starttime="20201129 13:12:48.880"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.881" starttime="20201129 13:12:48.878"></status>
</kw>
<msg timestamp="20201129 13:12:48.881" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:12:48.881" starttime="20201129 13:12:48.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201129 13:12:48.882" starttime="20201129 13:12:48.882"></status>
</kw>
<msg timestamp="20201129 13:12:48.882" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201129 13:12:48.882" starttime="20201129 13:12:48.881"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.883" starttime="20201129 13:12:48.877"></status>
</kw>
<msg timestamp="20201129 13:12:48.883" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:12:48.883" starttime="20201129 13:12:48.876"></status>
</kw>
<msg timestamp="20201129 13:12:48.883" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201129 13:12:48.883" starttime="20201129 13:12:48.876"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:12:48.887" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:12:48.887" starttime="20201129 13:12:48.887"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:12:48.888" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:12:48.888" starttime="20201129 13:12:48.887"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.888" starttime="20201129 13:12:48.886"></status>
</kw>
<msg timestamp="20201129 13:12:48.888" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:12:48.888" starttime="20201129 13:12:48.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:12:48.890" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201129 13:12:48.890" starttime="20201129 13:12:48.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:12:48.891" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201129 13:12:48.891" starttime="20201129 13:12:48.890"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.891" starttime="20201129 13:12:48.889"></status>
</kw>
<msg timestamp="20201129 13:12:48.891" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201129 13:12:48.891" starttime="20201129 13:12:48.889"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.892" starttime="20201129 13:12:48.885"></status>
</kw>
<msg timestamp="20201129 13:12:48.892" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:12:48.892" starttime="20201129 13:12:48.884"></status>
</kw>
<msg timestamp="20201129 13:12:48.892" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201129 13:12:48.892" starttime="20201129 13:12:48.884"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201129 13:12:48.897" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201129 13:12:48.897" starttime="20201129 13:12:48.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:12:48.898" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201129 13:12:48.898" starttime="20201129 13:12:48.898"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.898" starttime="20201129 13:12:48.896"></status>
</kw>
<msg timestamp="20201129 13:12:48.898" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201129 13:12:48.899" starttime="20201129 13:12:48.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:12:48.900" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201129 13:12:48.900" starttime="20201129 13:12:48.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:12:48.901" level="INFO">${result} = /wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:12:48.901" starttime="20201129 13:12:48.900"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.901" starttime="20201129 13:12:48.899"></status>
</kw>
<msg timestamp="20201129 13:12:48.901" level="INFO">${path_with_leading} = /wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:12:48.901" starttime="20201129 13:12:48.899"></status>
</kw>
<status status="PASS" endtime="20201129 13:12:48.902" starttime="20201129 13:12:48.894"></status>
</kw>
<msg timestamp="20201129 13:12:48.902" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:12:48.902" starttime="20201129 13:12:48.893"></status>
</kw>
<msg timestamp="20201129 13:12:48.902" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:12:48.902" starttime="20201129 13:12:48.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:12:48.906" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-58.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:12:51.143" level="INFO">${rc} = 255</msg>
<msg timestamp="20201129 13:12:51.144" level="INFO">${output} = 2020-11-29 13:12:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-58....</msg>
<status status="PASS" endtime="20201129 13:12:51.144" starttime="20201129 13:12:48.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:12:51.145" level="INFO">2020-11-29 13:12:50 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-58.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201129 13:12:51.145" starttime="20201129 13:12:51.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:12:51.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201129 13:12:51.146" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201129 13:12:51.146" starttime="20201129 13:12:51.145"></status>
</kw>
<status status="FAIL" endtime="20201129 13:12:51.147" starttime="20201129 13:12:48.903"></status>
</kw>
<msg timestamp="20201129 13:12:51.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201129 13:12:51.148" starttime="20201129 13:12:48.903"></status>
</kw>
<status status="FAIL" endtime="20201129 13:12:51.148" starttime="20201129 13:12:48.902"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201129 13:12:51.148" critical="yes" starttime="20201129 13:12:48.862">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201129 13:12:51.149" starttime="20201129 13:12:08.580"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:33.715" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:10:33.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:10:33.720" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:10:33.720" starttime="20201129 13:10:33.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:10:33.721" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:10:33.721" starttime="20201129 13:10:33.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:10:33.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:10:33.721" starttime="20201129 13:10:33.721"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:33.722" starttime="20201129 13:10:33.711"></status>
</kw>
<msg timestamp="20201129 13:10:33.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:10:33.722" starttime="20201129 13:10:33.710"></status>
</kw>
<msg timestamp="20201129 13:10:33.722" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:10:33.723" starttime="20201129 13:10:33.710"></status>
</kw>
<msg timestamp="20201129 13:10:33.723" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:10:33.723" starttime="20201129 13:10:33.709"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:10:33.728" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:10:33.728" starttime="20201129 13:10:33.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:10:33.729" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:10:33.729" starttime="20201129 13:10:33.728"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:33.729" starttime="20201129 13:10:33.726"></status>
</kw>
<msg timestamp="20201129 13:10:33.729" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:10:33.729" starttime="20201129 13:10:33.725"></status>
</kw>
<status status="PASS" endtime="20201129 13:10:33.729" starttime="20201129 13:10:33.725"></status>
</kw>
<msg timestamp="20201129 13:10:33.729" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:10:33.729" starttime="20201129 13:10:33.724"></status>
</kw>
<msg timestamp="20201129 13:10:33.730" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:10:33.730" starttime="20201129 13:10:33.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:10:33.733" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:11:15.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:11:15.481" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:10:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:10:35 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:11:15.481" starttime="20201129 13:10:33.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:11:15.482" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:10:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:10:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:10:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:10:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:10:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AA6F4BC92CFC-&gt;acbde656-fb32-4daf-a3a4-5e0172160d06
2020-11-29 13:10:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-29 13:10:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-29 13:10:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:10:38 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:10:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655349425_0001
2020-11-29 13:10:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:10:38 INFO  Configuration:2795 - resource-types.xml not found
2020-11-29 13:10:38 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-29 13:10:39 INFO  YarnClientImpl:329 - Submitted application application_1606655349425_0001
2020-11-29 13:10:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655349425_0001/
2020-11-29 13:10:39 INFO  Job:1619 - Running job: job_1606655349425_0001
2020-11-29 13:10:50 INFO  Job:1640 - Job job_1606655349425_0001 running in uber mode : false
2020-11-29 13:10:50 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:10:56 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:11:02 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:11:07 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:11:13 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:11:14 INFO  Job:1658 - Job job_1606655349425_0001 completed successfully
2020-11-29 13:11:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41920
		Total time spent by all reduces in occupied slots (ms)=15772
		Total time spent by all map tasks (ms)=10480
		Total time spent by all reduce tasks (ms)=3943
		Total vcore-milliseconds taken by all map tasks=10480
		Total vcore-milliseconds taken by all reduce tasks=3943
		Total megabyte-milliseconds taken by all map tasks=42926080
		Total megabyte-milliseconds taken by all reduce tasks=16150528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=658
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1350823936
		Virtual memory (bytes) snapshot=15777087488
		Total committed heap usage (bytes)=1474822144
		Peak Map Physical memory (bytes)=363847680
		Peak Map Virtual memory (bytes)=3947651072
		Peak Reduce Physical memory (bytes)=354402304
		Peak Reduce Virtual memory (bytes)=3950116864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.432 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201129 13:11:15.483" starttime="20201129 13:11:15.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:11:15.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:11:15.483" starttime="20201129 13:11:15.483"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.484" starttime="20201129 13:10:33.731"></status>
</kw>
<msg timestamp="20201129 13:11:15.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:11:15.484" starttime="20201129 13:10:33.731"></status>
</kw>
<msg timestamp="20201129 13:11:15.484" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-29 13:10:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:10:35 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201129 13:11:15.484" starttime="20201129 13:10:33.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:11:15.485" starttime="20201129 13:11:15.485"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:11:15.485" critical="yes" starttime="20201129 13:10:33.708"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:11:15.493" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:11:15.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:11:15.499" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:11:15.499" starttime="20201129 13:11:15.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:11:15.500" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:11:15.500" starttime="20201129 13:11:15.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:11:15.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:11:15.501" starttime="20201129 13:11:15.500"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.501" starttime="20201129 13:11:15.490"></status>
</kw>
<msg timestamp="20201129 13:11:15.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:11:15.501" starttime="20201129 13:11:15.490"></status>
</kw>
<msg timestamp="20201129 13:11:15.502" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:11:15.502" starttime="20201129 13:11:15.488"></status>
</kw>
<msg timestamp="20201129 13:11:15.502" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201129 13:11:15.502" starttime="20201129 13:11:15.487"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201129 13:11:15.502" level="INFO">${random} = 58</msg>
<status status="PASS" endtime="20201129 13:11:15.503" starttime="20201129 13:11:15.502"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:11:15.507" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:11:15.507" starttime="20201129 13:11:15.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:11:15.508" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:11:15.508" starttime="20201129 13:11:15.507"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.508" starttime="20201129 13:11:15.506"></status>
</kw>
<msg timestamp="20201129 13:11:15.508" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:11:15.508" starttime="20201129 13:11:15.505"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.508" starttime="20201129 13:11:15.504"></status>
</kw>
<msg timestamp="20201129 13:11:15.508" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:11:15.508" starttime="20201129 13:11:15.504"></status>
</kw>
<msg timestamp="20201129 13:11:15.509" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201129 13:11:15.509" starttime="20201129 13:11:15.503"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:11:15.513" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:11:15.513" starttime="20201129 13:11:15.512"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:11:15.513" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:11:15.513" starttime="20201129 13:11:15.513"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.513" starttime="20201129 13:11:15.512"></status>
</kw>
<msg timestamp="20201129 13:11:15.514" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:11:15.514" starttime="20201129 13:11:15.511"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.514" starttime="20201129 13:11:15.510"></status>
</kw>
<msg timestamp="20201129 13:11:15.514" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:11:15.514" starttime="20201129 13:11:15.510"></status>
</kw>
<msg timestamp="20201129 13:11:15.514" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201129 13:11:15.514" starttime="20201129 13:11:15.509"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201129 13:11:15.518" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201129 13:11:15.518" starttime="20201129 13:11:15.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201129 13:11:15.519" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201129 13:11:15.519" starttime="20201129 13:11:15.518"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.519" starttime="20201129 13:11:15.517"></status>
</kw>
<msg timestamp="20201129 13:11:15.519" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201129 13:11:15.519" starttime="20201129 13:11:15.516"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:15.520" starttime="20201129 13:11:15.516"></status>
</kw>
<msg timestamp="20201129 13:11:15.520" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:11:15.520" starttime="20201129 13:11:15.515"></status>
</kw>
<msg timestamp="20201129 13:11:15.520" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-58.txt</msg>
<status status="PASS" endtime="20201129 13:11:15.520" starttime="20201129 13:11:15.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201129 13:11:15.523" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-58.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201129 13:11:53.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201129 13:11:53.203" level="INFO">${output} = 2020-11-29 13:11:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-29 13:11:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201129 13:11:53.203" starttime="20201129 13:11:15.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201129 13:11:53.204" level="INFO">2020-11-29 13:11:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-29 13:11:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-29 13:11:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-29 13:11:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-29 13:11:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-29 13:11:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-29 13:11:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4968499B0199-&gt;acbde656-fb32-4daf-a3a4-5e0172160d06
2020-11-29 13:11:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-11-29 13:11:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-29 13:11:19 INFO  JobSubmitter:202 - number of splits:3
2020-11-29 13:11:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606655349425_0002
2020-11-29 13:11:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-29 13:11:20 INFO  Configuration:2795 - resource-types.xml not found
2020-11-29 13:11:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-29 13:11:20 INFO  YarnClientImpl:329 - Submitted application application_1606655349425_0002
2020-11-29 13:11:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606655349425_0002/
2020-11-29 13:11:20 INFO  Job:1619 - Running job: job_1606655349425_0002
2020-11-29 13:11:28 INFO  Job:1640 - Job job_1606655349425_0002 running in uber mode : false
2020-11-29 13:11:28 INFO  Job:1647 -  map 0% reduce 0%
2020-11-29 13:11:34 INFO  Job:1647 -  map 33% reduce 0%
2020-11-29 13:11:40 INFO  Job:1647 -  map 67% reduce 0%
2020-11-29 13:11:46 INFO  Job:1647 -  map 100% reduce 0%
2020-11-29 13:11:51 INFO  Job:1647 -  map 100% reduce 100%
2020-11-29 13:11:52 INFO  Job:1658 - Job job_1606655349425_0002 completed successfully
2020-11-29 13:11:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1118699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44052
		Total time spent by all reduces in occupied slots (ms)=15264
		Total time spent by all map tasks (ms)=11013
		Total time spent by all reduce tasks (ms)=3816
		Total vcore-milliseconds taken by all map tasks=11013
		Total vcore-milliseconds taken by all reduce tasks=3816
		Total megabyte-milliseconds taken by all map tasks=45109248
		Total megabyte-milliseconds taken by all reduce tasks=15630336
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=653
		CPU time spent (ms)=7690
		Physical memory (bytes) snapshot=1398554624
		Virtual memory (bytes) snapshot=15801417728
		Total committed heap usage (bytes)=1577058304
		Peak Map Physical memory (bytes)=376733696
		Peak Map Virtual memory (bytes)=3947728896
		Peak Reduce Physical memory (bytes)=290340864
		Peak Reduce Virtual memory (bytes)=3962601472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201129 13:11:53.204" starttime="20201129 13:11:53.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201129 13:11:53.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201129 13:11:53.205" starttime="20201129 13:11:53.205"></status>
</kw>
<status status="PASS" endtime="20201129 13:11:53.205" starttime="20201129 13:11:15.521"></status>
</kw>
<msg timestamp="20201129 13:11:53.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201129 13:11:53.206" starttime="20201129 13:11:15.521"></status>
</kw>
<msg timestamp="20201129 13:11:53.206" level="INFO">${output} = 2020-11-29 13:11:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-11-29 13:11:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201129 13:11:53.206" starttime="20201129 13:11:15.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201129 13:11:53.207" starttime="20201129 13:11:53.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201129 13:11:53.208" starttime="20201129 13:11:53.207"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201129 13:11:53.208" critical="yes" starttime="20201129 13:11:15.486"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201129 13:11:53.209" starttime="20201129 13:10:33.641"></status>
</suite>
<status status="FAIL" elapsedtime="176985" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="FAIL" elapsedtime="573293" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="23">Critical Tests</stat>
<stat fail="1" pass="23">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozone-mr" pass="23">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="1" id="s1-s3" name="hadoop32" pass="7">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="1" id="s1-s3-s4" name="mapreduce-ofs" pass="1">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
