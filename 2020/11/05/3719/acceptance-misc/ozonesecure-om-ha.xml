<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 01:57:40.738" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:21.222" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:53:34.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:53:34.135" level="INFO">${output} = 2020-11-05 01:53:23,079 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:23,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:34.136" starttime="20201105 01:53:21.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:53:34.137" level="INFO">2020-11-05 01:53:23,079 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:23,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:53:23,250 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 01:53:25,763 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 01:53:27,836 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-05 01:53:27,838 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-05 01:53:27,838 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-05 01:53:27,838 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-05 01:53:27,839 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-05 01:53:27,839 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-05 01:53:27,839 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-05 01:53:27,841 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-05 01:53:27,865 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:27,939 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-37448, with testuser/scm@EXAMPLE.COM as owner.
2020-11-05 01:53:28,798 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-37448/bucket-0-51846, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 01:53:28,878 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:29,878 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:30,881 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:31,411 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 01:53:31,881 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:32,882 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,876
Average Time spent in bucket creation: 00:00:00,245
Average Time spent in key creation: 00:00:01,217
Average Time spent in key write: 00:00:01,710
Total bytes written: 10240
Total Execution time: 00:00:10,307
***************************************************</msg>
<status status="PASS" endtime="20201105 01:53:34.137" starttime="20201105 01:53:34.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:53:34.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:53:34.137" starttime="20201105 01:53:34.137"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:34.138" starttime="20201105 01:53:21.217"></status>
</kw>
<msg timestamp="20201105 01:53:34.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:53:34.138" starttime="20201105 01:53:21.216"></status>
</kw>
<msg timestamp="20201105 01:53:34.138" level="INFO">${result} = 2020-11-05 01:53:23,079 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:23,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:34.138" starttime="20201105 01:53:21.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:53:34.139" starttime="20201105 01:53:34.139"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:34.139" starttime="20201105 01:53:34.139"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:53:34.140" critical="yes" starttime="20201105 01:53:21.215"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:34.146" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:53:42.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:53:42.701" level="INFO">${output} = 2020-11-05 01:53:35,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:35,980 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:42.701" starttime="20201105 01:53:34.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:53:42.704" level="INFO">2020-11-05 01:53:35,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:35,980 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:53:35,980 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 01:53:36,124 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5nh33lzvrc
2020-11-05 01:53:36,136 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 01:53:37,148 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:37,311 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 01:53:37,835 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-05 01:53:37,904 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 01:53:38,177 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:38,642 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 01:53:39,021 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:53:39,022 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-66A8FD5CE657-&gt;9c198b5b-7ed9-489b-aaa2-ec3715fbec83
2020-11-05 01:53:39,024 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:53:39,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:40,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:41,181 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:42,182 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 01:53:42,359 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3819.327909, max=3819.327909, mean=3819.327909, stddev=0.0, median=3819.327909, p75=3819.327909, p95=3819.327909, p98=3819.327909, p99=3819.327909, p999=3819.327909, mean_rate=0.22819870325776523, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 01:53:42,360 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-11-05 01:53:42,361 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 01:53:42,361 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 01:53:42.704" starttime="20201105 01:53:42.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:53:42.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:53:42.705" starttime="20201105 01:53:42.704"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:42.705" starttime="20201105 01:53:34.142"></status>
</kw>
<msg timestamp="20201105 01:53:42.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:53:42.705" starttime="20201105 01:53:34.142"></status>
</kw>
<msg timestamp="20201105 01:53:42.705" level="INFO">${result} = 2020-11-05 01:53:35,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:35,980 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:42.705" starttime="20201105 01:53:34.141"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:53:42.706" starttime="20201105 01:53:42.706"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:42.706" starttime="20201105 01:53:42.706"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:53:42.707" critical="yes" starttime="20201105 01:53:34.140"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:42.712" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:53:48.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:53:48.155" level="INFO">${output} = 2020-11-05 01:53:44,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:44,793 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:48.155" starttime="20201105 01:53:42.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:53:48.156" level="INFO">2020-11-05 01:53:44,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:44,793 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:53:44,793 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 01:53:44,960 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gqtgmantir
2020-11-05 01:53:44,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 01:53:45,983 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:46,177 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 01:53:46,828 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 01:53:46,983 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:47,984 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 01:53:48,104 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=285.930176, max=285.930176, mean=285.930176, stddev=0.0, median=285.930176, p75=285.930176, p95=285.930176, p98=285.930176, p99=285.930176, p999=285.930176, mean_rate=0.7153324710205458, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 01:53:48,105 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-05 01:53:48,108 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 01:53:48,108 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 01:53:48.157" starttime="20201105 01:53:48.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:53:48.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:53:48.157" starttime="20201105 01:53:48.157"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:48.158" starttime="20201105 01:53:42.709"></status>
</kw>
<msg timestamp="20201105 01:53:48.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:53:48.158" starttime="20201105 01:53:42.709"></status>
</kw>
<msg timestamp="20201105 01:53:48.158" level="INFO">${result} = 2020-11-05 01:53:44,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:44,793 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:48.158" starttime="20201105 01:53:42.709"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:53:48.159" starttime="20201105 01:53:48.159"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:48.159" starttime="20201105 01:53:48.158"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:53:48.159" critical="yes" starttime="20201105 01:53:42.708"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:48.168" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:53:52.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:53:52.970" level="INFO">${output} = 2020-11-05 01:53:49,887 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:50,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:52.970" starttime="20201105 01:53:48.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:53:52.971" level="INFO">2020-11-05 01:53:49,887 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:50,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:53:50,024 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 01:53:50,189 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uhdpcohbfa
2020-11-05 01:53:50,209 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 01:53:51,215 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 01:53:51,389 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 01:53:51,843 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 01:53:52,215 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 01:53:52,891 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=121.510404, max=121.510404, mean=121.510404, stddev=0.0, median=121.510404, p75=121.510404, p95=121.510404, p98=121.510404, p99=121.510404, p999=121.510404, mean_rate=0.8850592916176957, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 01:53:52,905 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-05 01:53:52,906 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 01:53:52,906 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 01:53:52.971" starttime="20201105 01:53:52.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:53:52.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:53:52.972" starttime="20201105 01:53:52.972"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:52.972" starttime="20201105 01:53:48.164"></status>
</kw>
<msg timestamp="20201105 01:53:52.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:53:52.973" starttime="20201105 01:53:48.162"></status>
</kw>
<msg timestamp="20201105 01:53:52.973" level="INFO">${result} = 2020-11-05 01:53:49,887 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 01:53:50,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 01:53:52.973" starttime="20201105 01:53:48.162"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:53:52.974" starttime="20201105 01:53:52.974"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:52.974" starttime="20201105 01:53:52.973"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:53:52.974" critical="yes" starttime="20201105 01:53:48.161"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 01:53:52.976" starttime="20201105 01:53:21.189"></status>
</suite>
<status status="PASS" endtime="20201105 01:53:52.979" starttime="20201105 01:53:21.162"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:13.368" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:53:13.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:53:13.371" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:53:13.371" starttime="20201105 01:53:13.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:53:13.374" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:53:13.374" starttime="20201105 01:53:13.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:53:13.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:53:13.375" starttime="20201105 01:53:13.374"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:13.375" starttime="20201105 01:53:13.355"></status>
</kw>
<msg timestamp="20201105 01:53:13.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:53:13.376" starttime="20201105 01:53:13.355"></status>
</kw>
<msg timestamp="20201105 01:53:13.376" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:53:13.376" starttime="20201105 01:53:13.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:53:13.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:53:13.376" starttime="20201105 01:53:13.376"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:13.386" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:53:13.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:53:13.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:53:13.427" starttime="20201105 01:53:13.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:53:13.428" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:53:13.428" starttime="20201105 01:53:13.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:53:13.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:53:13.428" starttime="20201105 01:53:13.428"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:13.429" starttime="20201105 01:53:13.380"></status>
</kw>
<msg timestamp="20201105 01:53:13.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:53:13.429" starttime="20201105 01:53:13.379"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:13.429" starttime="20201105 01:53:13.377"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:13.429" starttime="20201105 01:53:13.377"></status>
</kw>
<status status="PASS" endtime="20201105 01:53:13.429" starttime="20201105 01:53:13.353"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:53:13.430" critical="yes" starttime="20201105 01:53:13.352"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201105 01:53:13.431" starttime="20201105 01:53:13.245"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:53:58.869" level="INFO">${random} = 54267</msg>
<status status="PASS" endtime="20201105 01:53:58.869" starttime="20201105 01:53:58.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201105 01:53:58.870" level="INFO">${source} = 54267-source</msg>
<status status="PASS" endtime="20201105 01:53:58.870" starttime="20201105 01:53:58.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201105 01:53:58.871" level="INFO">${target} = 54267-target</msg>
<status status="PASS" endtime="20201105 01:53:58.871" starttime="20201105 01:53:58.870"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:53:58.876" level="INFO">Running command 'ozone sh volume create 54267-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:03.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:03.420" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:03.420" starttime="20201105 01:53:58.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:03.421" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:03.421" starttime="20201105 01:54:03.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:03.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:03.422" starttime="20201105 01:54:03.421"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:03.422" starttime="20201105 01:53:58.872"></status>
</kw>
<msg timestamp="20201105 01:54:03.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:03.423" starttime="20201105 01:53:58.872"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:03.423" starttime="20201105 01:53:58.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:03.428" level="INFO">Running command 'ozone sh volume create 54267-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:07.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:07.052" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:07.052" starttime="20201105 01:54:03.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:07.053" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:07.053" starttime="20201105 01:54:07.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:07.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:07.054" starttime="20201105 01:54:07.054"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:07.054" starttime="20201105 01:54:03.424"></status>
</kw>
<msg timestamp="20201105 01:54:07.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:07.055" starttime="20201105 01:54:03.423"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:07.055" starttime="20201105 01:54:03.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:07.059" level="INFO">Running command 'ozone sh bucket create 54267-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:10.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:10.912" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:10.912" starttime="20201105 01:54:07.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:10.913" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:10.913" starttime="20201105 01:54:10.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:10.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:10.914" starttime="20201105 01:54:10.914"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:10.914" starttime="20201105 01:54:07.057"></status>
</kw>
<msg timestamp="20201105 01:54:10.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:10.915" starttime="20201105 01:54:07.056"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:10.915" starttime="20201105 01:54:07.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:10.920" level="INFO">Running command 'ozone sh key put 54267-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:16.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:16.830" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:16.830" starttime="20201105 01:54:10.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:16.831" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:16.831" starttime="20201105 01:54:16.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:16.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:16.831" starttime="20201105 01:54:16.831"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:16.831" starttime="20201105 01:54:10.916"></status>
</kw>
<msg timestamp="20201105 01:54:16.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:16.832" starttime="20201105 01:54:10.915"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:16.832" starttime="20201105 01:54:10.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:16.837" level="INFO">Running command 'ozone sh bucket create 54267-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:20.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:20.417" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:20.418" starttime="20201105 01:54:16.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:20.419" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:20.419" starttime="20201105 01:54:20.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:20.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:20.419" starttime="20201105 01:54:20.419"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:20.419" starttime="20201105 01:54:16.833"></status>
</kw>
<msg timestamp="20201105 01:54:20.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:20.420" starttime="20201105 01:54:16.833"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:20.420" starttime="20201105 01:54:16.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:20.425" level="INFO">Running command 'ozone sh bucket link 54267-source/readable-bucket 54267-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:24.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:24.233" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:24.233" starttime="20201105 01:54:20.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:24.234" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:24.234" starttime="20201105 01:54:24.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:24.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:24.235" starttime="20201105 01:54:24.234"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:24.235" starttime="20201105 01:54:20.421"></status>
</kw>
<msg timestamp="20201105 01:54:24.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:24.235" starttime="20201105 01:54:20.421"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:24.236" starttime="20201105 01:54:20.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:24.240" level="INFO">Running command 'ozone sh bucket link 54267-source/readable-bucket 54267-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:27.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:27.819" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:27.819" starttime="20201105 01:54:24.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:27.820" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:27.820" starttime="20201105 01:54:27.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:27.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:27.821" starttime="20201105 01:54:27.821"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:27.821" starttime="20201105 01:54:24.236"></status>
</kw>
<msg timestamp="20201105 01:54:27.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:27.822" starttime="20201105 01:54:24.236"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:27.822" starttime="20201105 01:54:24.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:27.825" level="INFO">Running command 'ozone sh bucket link 54267-source/unreadable-bucket 54267-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:31.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:31.379" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:31.379" starttime="20201105 01:54:27.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:31.380" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:31.380" starttime="20201105 01:54:31.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:31.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:31.381" starttime="20201105 01:54:31.381"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:31.381" starttime="20201105 01:54:27.823"></status>
</kw>
<msg timestamp="20201105 01:54:31.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:31.382" starttime="20201105 01:54:27.823"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:31.382" starttime="20201105 01:54:27.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:31.385" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 54267-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:34.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:34.748" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:34.748" starttime="20201105 01:54:31.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:34.750" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:54:34.750" starttime="20201105 01:54:34.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:34.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:34.750" starttime="20201105 01:54:34.750"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:34.751" starttime="20201105 01:54:31.383"></status>
</kw>
<msg timestamp="20201105 01:54:34.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:34.751" starttime="20201105 01:54:31.382"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:34.751" starttime="20201105 01:54:31.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:34.755" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 54267-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:38.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:38.499" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:38.499" starttime="20201105 01:54:34.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:38.500" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:54:38.500" starttime="20201105 01:54:38.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:38.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:38.501" starttime="20201105 01:54:38.501"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:38.501" starttime="20201105 01:54:34.752"></status>
</kw>
<msg timestamp="20201105 01:54:38.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:38.502" starttime="20201105 01:54:34.752"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:38.502" starttime="20201105 01:54:34.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:38.506" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 54267-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:42.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:42.465" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:42.465" starttime="20201105 01:54:38.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:42.466" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:54:42.466" starttime="20201105 01:54:42.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:42.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:42.467" starttime="20201105 01:54:42.466"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:42.467" starttime="20201105 01:54:38.503"></status>
</kw>
<msg timestamp="20201105 01:54:42.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:42.467" starttime="20201105 01:54:38.503"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:42.468" starttime="20201105 01:54:38.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:42.478" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 54267-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:46.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:46.482" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:46.482" starttime="20201105 01:54:42.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:46.483" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:54:46.483" starttime="20201105 01:54:46.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:46.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:46.484" starttime="20201105 01:54:46.484"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:46.484" starttime="20201105 01:54:42.468"></status>
</kw>
<msg timestamp="20201105 01:54:46.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:46.484" starttime="20201105 01:54:42.468"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:46.485" starttime="20201105 01:54:42.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:46.488" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 54267-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:50.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:50.247" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:50.247" starttime="20201105 01:54:46.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:50.248" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:54:50.248" starttime="20201105 01:54:50.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:50.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:50.249" starttime="20201105 01:54:50.248"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.249" starttime="20201105 01:54:46.486"></status>
</kw>
<msg timestamp="20201105 01:54:50.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:50.249" starttime="20201105 01:54:46.485"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.250" starttime="20201105 01:54:46.485"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.250" starttime="20201105 01:54:07.055"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.250" starttime="20201105 01:54:07.055"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.250" starttime="20201105 01:53:58.868"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:50.256" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:50.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:50.259" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:54:50.259" starttime="20201105 01:54:50.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:50.260" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:54:50.260" starttime="20201105 01:54:50.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:50.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:50.261" starttime="20201105 01:54:50.260"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.261" starttime="20201105 01:54:50.253"></status>
</kw>
<msg timestamp="20201105 01:54:50.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:50.262" starttime="20201105 01:54:50.253"></status>
</kw>
<msg timestamp="20201105 01:54:50.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:54:50.262" starttime="20201105 01:54:50.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:54:50.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:54:50.263" starttime="20201105 01:54:50.262"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:50.269" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:50.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:50.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:54:50.279" starttime="20201105 01:54:50.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:50.282" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:54:50.283" starttime="20201105 01:54:50.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:50.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:50.283" starttime="20201105 01:54:50.283"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.283" starttime="20201105 01:54:50.265"></status>
</kw>
<msg timestamp="20201105 01:54:50.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:50.284" starttime="20201105 01:54:50.265"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.284" starttime="20201105 01:54:50.264"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.284" starttime="20201105 01:54:50.263"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.284" starttime="20201105 01:54:50.252"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:50.284" starttime="20201105 01:54:50.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:50.289" level="INFO">Running command 'ozone sh bucket link 54267-source/no-such-bucket 54267-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:54.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:54.348" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:54.348" starttime="20201105 01:54:50.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:54.349" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:54:54.350" starttime="20201105 01:54:54.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:54.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:54.350" starttime="20201105 01:54:54.350"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:54.351" starttime="20201105 01:54:50.285"></status>
</kw>
<msg timestamp="20201105 01:54:54.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:54.351" starttime="20201105 01:54:50.285"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:54.351" starttime="20201105 01:54:50.284"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:54.355" level="INFO">Running command 'ozone sh key list 54267-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:58.111" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:54:58.111" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:58.111" starttime="20201105 01:54:54.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:58.112" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201105 01:54:58.112" starttime="20201105 01:54:58.111"></status>
</kw>
<msg timestamp="20201105 01:54:58.113" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:54:58.113" starttime="20201105 01:54:54.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 01:54:58.113" starttime="20201105 01:54:58.113"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:54:58.114" critical="yes" starttime="20201105 01:54:50.250"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:58.120" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:58.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:58.124" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:54:58.124" starttime="20201105 01:54:58.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:58.126" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:54:58.126" starttime="20201105 01:54:58.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:58.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:58.126" starttime="20201105 01:54:58.126"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:58.127" starttime="20201105 01:54:58.117"></status>
</kw>
<msg timestamp="20201105 01:54:58.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:58.127" starttime="20201105 01:54:58.117"></status>
</kw>
<msg timestamp="20201105 01:54:58.127" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:54:58.127" starttime="20201105 01:54:58.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:54:58.128" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:54:58.128" starttime="20201105 01:54:58.127"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:58.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:54:58.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:54:58.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:54:58.151" starttime="20201105 01:54:58.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:54:58.152" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:54:58.152" starttime="20201105 01:54:58.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:54:58.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:54:58.153" starttime="20201105 01:54:58.153"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:58.154" starttime="20201105 01:54:58.129"></status>
</kw>
<msg timestamp="20201105 01:54:58.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:54:58.154" starttime="20201105 01:54:58.129"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:58.154" starttime="20201105 01:54:58.128"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:58.154" starttime="20201105 01:54:58.128"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:58.154" starttime="20201105 01:54:58.116"></status>
</kw>
<status status="PASS" endtime="20201105 01:54:58.154" starttime="20201105 01:54:58.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:54:58.158" level="INFO">Running command 'ozone sh bucket link 54267-source/bucket1 54267-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:02.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:02.324" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:02.324" starttime="20201105 01:54:58.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:02.325" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:02.325" starttime="20201105 01:55:02.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:02.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:02.326" starttime="20201105 01:55:02.325"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:02.326" starttime="20201105 01:54:58.155"></status>
</kw>
<msg timestamp="20201105 01:55:02.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:02.326" starttime="20201105 01:54:58.155"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:02.326" starttime="20201105 01:54:58.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:02.332" level="INFO">Running command 'ozone sh bucket create 54267-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:06.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:06.442" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:06.442" starttime="20201105 01:55:02.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:06.443" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:06.443" starttime="20201105 01:55:06.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:06.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:06.444" starttime="20201105 01:55:06.443"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:06.444" starttime="20201105 01:55:02.328"></status>
</kw>
<msg timestamp="20201105 01:55:06.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:06.444" starttime="20201105 01:55:02.327"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:06.444" starttime="20201105 01:55:02.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:06.448" level="INFO">Running command 'ozone sh key put 54267-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:12.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:12.938" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:12.938" starttime="20201105 01:55:06.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:12.939" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:12.939" starttime="20201105 01:55:12.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:12.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:12.940" starttime="20201105 01:55:12.939"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:12.940" starttime="20201105 01:55:06.445"></status>
</kw>
<msg timestamp="20201105 01:55:12.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:12.940" starttime="20201105 01:55:06.445"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:12.941" starttime="20201105 01:55:06.445"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 01:55:12.942" level="INFO">${postfix} = 19116</msg>
<status status="PASS" endtime="20201105 01:55:12.942" starttime="20201105 01:55:12.942"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 01:55:12.943" level="INFO">${tmpfile} = /tmp/tempkey-19116</msg>
<status status="PASS" endtime="20201105 01:55:12.943" starttime="20201105 01:55:12.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:12.947" level="INFO">Running command 'ozone sh key get -f 54267-target/link1/key1 /tmp/tempkey-19116 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:18.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:18.813" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:18.813" starttime="20201105 01:55:12.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.814" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:18.814" starttime="20201105 01:55:18.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:18.815" starttime="20201105 01:55:18.814"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.815" starttime="20201105 01:55:12.944"></status>
</kw>
<msg timestamp="20201105 01:55:18.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:18.815" starttime="20201105 01:55:12.943"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.816" starttime="20201105 01:55:12.943"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 01:55:18.818" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-19116 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:18.821" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 01:55:18.821" starttime="20201105 01:55:18.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:18.826" level="INFO">Running command 'rm -f /tmp/tempkey-19116 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:18.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:18.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:18.831" starttime="20201105 01:55:18.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.832" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:18.833" starttime="20201105 01:55:18.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:18.833" starttime="20201105 01:55:18.833"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.834" starttime="20201105 01:55:18.823"></status>
</kw>
<msg timestamp="20201105 01:55:18.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:18.834" starttime="20201105 01:55:18.823"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.835" starttime="20201105 01:55:18.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:55:18.835" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 01:55:18.835" starttime="20201105 01:55:18.835"></status>
</kw>
<msg timestamp="20201105 01:55:18.836" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 01:55:18.836" starttime="20201105 01:55:12.941"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:18.836" starttime="20201105 01:55:18.836"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.836" starttime="20201105 01:55:12.941"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:55:18.837" critical="yes" starttime="20201105 01:54:58.114"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:18.842" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:18.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:18.846" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:55:18.846" starttime="20201105 01:55:18.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.847" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:55:18.847" starttime="20201105 01:55:18.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:18.848" starttime="20201105 01:55:18.847"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.848" starttime="20201105 01:55:18.840"></status>
</kw>
<msg timestamp="20201105 01:55:18.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:18.848" starttime="20201105 01:55:18.839"></status>
</kw>
<msg timestamp="20201105 01:55:18.848" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:55:18.848" starttime="20201105 01:55:18.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:55:18.849" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:55:18.849" starttime="20201105 01:55:18.848"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:18.854" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:18.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:18.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:18.868" starttime="20201105 01:55:18.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.869" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:18.869" starttime="20201105 01:55:18.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:18.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:18.870" starttime="20201105 01:55:18.869"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.870" starttime="20201105 01:55:18.851"></status>
</kw>
<msg timestamp="20201105 01:55:18.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:18.870" starttime="20201105 01:55:18.850"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.871" starttime="20201105 01:55:18.850"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.871" starttime="20201105 01:55:18.849"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.871" starttime="20201105 01:55:18.839"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:18.871" starttime="20201105 01:55:18.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:18.876" level="INFO">Running command 'ozone sh key put 54267-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:24.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:24.980" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:24.981" starttime="20201105 01:55:18.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:24.982" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:24.982" starttime="20201105 01:55:24.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:24.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:24.983" starttime="20201105 01:55:24.982"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:24.983" starttime="20201105 01:55:18.872"></status>
</kw>
<msg timestamp="20201105 01:55:24.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:24.983" starttime="20201105 01:55:18.872"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:24.983" starttime="20201105 01:55:18.871"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 01:55:24.985" level="INFO">${postfix} = 96108</msg>
<status status="PASS" endtime="20201105 01:55:24.985" starttime="20201105 01:55:24.985"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 01:55:24.986" level="INFO">${tmpfile} = /tmp/tempkey-96108</msg>
<status status="PASS" endtime="20201105 01:55:24.986" starttime="20201105 01:55:24.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:24.989" level="INFO">Running command 'ozone sh key get -f 54267-source/bucket1/key2 /tmp/tempkey-96108 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:30.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:30.355" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:30.356" starttime="20201105 01:55:24.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.357" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:30.357" starttime="20201105 01:55:30.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:30.357" starttime="20201105 01:55:30.357"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.358" starttime="20201105 01:55:24.986"></status>
</kw>
<msg timestamp="20201105 01:55:30.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:30.358" starttime="20201105 01:55:24.986"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.358" starttime="20201105 01:55:24.986"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 01:55:30.362" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-96108 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:30.363" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 01:55:30.363" starttime="20201105 01:55:30.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:30.368" level="INFO">Running command 'rm -f /tmp/tempkey-96108 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:30.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:30.369" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:30.369" starttime="20201105 01:55:30.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.370" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:30.370" starttime="20201105 01:55:30.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:30.371" starttime="20201105 01:55:30.370"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.371" starttime="20201105 01:55:30.364"></status>
</kw>
<msg timestamp="20201105 01:55:30.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:30.371" starttime="20201105 01:55:30.364"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.371" starttime="20201105 01:55:30.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:55:30.372" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 01:55:30.372" starttime="20201105 01:55:30.372"></status>
</kw>
<msg timestamp="20201105 01:55:30.372" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 01:55:30.372" starttime="20201105 01:55:24.984"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:30.373" starttime="20201105 01:55:30.372"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.373" starttime="20201105 01:55:24.983"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:55:30.373" critical="yes" starttime="20201105 01:55:18.837"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:30.380" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:30.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:30.381" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:55:30.381" starttime="20201105 01:55:30.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.382" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:55:30.382" starttime="20201105 01:55:30.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:30.383" starttime="20201105 01:55:30.382"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.383" starttime="20201105 01:55:30.376"></status>
</kw>
<msg timestamp="20201105 01:55:30.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:30.383" starttime="20201105 01:55:30.376"></status>
</kw>
<msg timestamp="20201105 01:55:30.383" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:55:30.383" starttime="20201105 01:55:30.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:55:30.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:55:30.384" starttime="20201105 01:55:30.383"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:30.388" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:30.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:30.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:30.405" starttime="20201105 01:55:30.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.406" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:30.406" starttime="20201105 01:55:30.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:30.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:30.407" starttime="20201105 01:55:30.406"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.407" starttime="20201105 01:55:30.385"></status>
</kw>
<msg timestamp="20201105 01:55:30.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:30.407" starttime="20201105 01:55:30.385"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.408" starttime="20201105 01:55:30.384"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.408" starttime="20201105 01:55:30.384"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.408" starttime="20201105 01:55:30.375"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:30.408" starttime="20201105 01:55:30.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:30.412" level="INFO">Running command 'ozone sh key list 54267-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:34.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:34.209" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201105 01:55:34.209" starttime="20201105 01:55:30.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:34.210" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201105 01:55:34.210" starttime="20201105 01:55:34.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:34.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:34.211" starttime="20201105 01:55:34.210"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:34.211" starttime="20201105 01:55:30.409"></status>
</kw>
<msg timestamp="20201105 01:55:34.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:34.211" starttime="20201105 01:55:30.409"></status>
</kw>
<msg timestamp="20201105 01:55:34.211" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201105 01:55:34.211" starttime="20201105 01:55:30.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:34.215" level="INFO">Running command 'ozone sh key list 54267-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:37.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:37.856" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201105 01:55:37.856" starttime="20201105 01:55:34.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:37.857" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201105 01:55:37.857" starttime="20201105 01:55:37.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:37.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:37.858" starttime="20201105 01:55:37.858"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.858" starttime="20201105 01:55:34.212"></status>
</kw>
<msg timestamp="20201105 01:55:37.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:37.859" starttime="20201105 01:55:34.212"></status>
</kw>
<msg timestamp="20201105 01:55:37.859" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201105 01:55:37.859" starttime="20201105 01:55:34.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:37.860" starttime="20201105 01:55:37.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:37.860" starttime="20201105 01:55:37.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:37.861" starttime="20201105 01:55:37.860"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:55:37.861" critical="yes" starttime="20201105 01:55:30.374"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:37.868" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:37.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:37.870" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:55:37.870" starttime="20201105 01:55:37.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:37.871" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:55:37.871" starttime="20201105 01:55:37.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:37.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:37.872" starttime="20201105 01:55:37.871"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.872" starttime="20201105 01:55:37.864"></status>
</kw>
<msg timestamp="20201105 01:55:37.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:37.873" starttime="20201105 01:55:37.864"></status>
</kw>
<msg timestamp="20201105 01:55:37.873" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:55:37.873" starttime="20201105 01:55:37.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:55:37.873" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:55:37.874" starttime="20201105 01:55:37.873"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:37.879" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:37.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:37.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:37.895" starttime="20201105 01:55:37.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:37.896" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:37.896" starttime="20201105 01:55:37.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:37.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:37.897" starttime="20201105 01:55:37.896"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.897" starttime="20201105 01:55:37.875"></status>
</kw>
<msg timestamp="20201105 01:55:37.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:37.897" starttime="20201105 01:55:37.875"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.897" starttime="20201105 01:55:37.874"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.898" starttime="20201105 01:55:37.874"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.898" starttime="20201105 01:55:37.863"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:37.898" starttime="20201105 01:55:37.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:37.904" level="INFO">Running command 'ozone sh key delete 54267-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:41.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:41.741" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:41.741" starttime="20201105 01:55:37.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:41.742" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:55:41.742" starttime="20201105 01:55:41.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:41.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:41.743" starttime="20201105 01:55:41.742"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:41.743" starttime="20201105 01:55:37.899"></status>
</kw>
<msg timestamp="20201105 01:55:41.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:41.743" starttime="20201105 01:55:37.899"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:41.744" starttime="20201105 01:55:37.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:41.751" level="INFO">Running command 'ozone sh key list 54267-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:45.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:45.871" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201105 01:55:45.872" starttime="20201105 01:55:41.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:45.873" level="INFO">key1</msg>
<status status="PASS" endtime="20201105 01:55:45.873" starttime="20201105 01:55:45.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:45.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:45.874" starttime="20201105 01:55:45.873"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.874" starttime="20201105 01:55:41.745"></status>
</kw>
<msg timestamp="20201105 01:55:45.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:45.874" starttime="20201105 01:55:41.744"></status>
</kw>
<msg timestamp="20201105 01:55:45.874" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201105 01:55:45.874" starttime="20201105 01:55:41.744"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:45.875" starttime="20201105 01:55:45.875"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:55:45.875" critical="yes" starttime="20201105 01:55:37.862"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:45.882" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:45.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:45.885" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:55:45.885" starttime="20201105 01:55:45.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:45.886" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:55:45.886" starttime="20201105 01:55:45.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:45.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:45.887" starttime="20201105 01:55:45.887"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.887" starttime="20201105 01:55:45.879"></status>
</kw>
<msg timestamp="20201105 01:55:45.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:45.888" starttime="20201105 01:55:45.879"></status>
</kw>
<msg timestamp="20201105 01:55:45.888" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:55:45.888" starttime="20201105 01:55:45.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:55:45.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:55:45.889" starttime="20201105 01:55:45.888"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:45.894" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:45.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:45.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:45.904" starttime="20201105 01:55:45.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:45.905" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:45.905" starttime="20201105 01:55:45.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:45.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:45.906" starttime="20201105 01:55:45.906"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.906" starttime="20201105 01:55:45.890"></status>
</kw>
<msg timestamp="20201105 01:55:45.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:45.907" starttime="20201105 01:55:45.890"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.907" starttime="20201105 01:55:45.889"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.907" starttime="20201105 01:55:45.889"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.907" starttime="20201105 01:55:45.878"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:45.907" starttime="20201105 01:55:45.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:45.911" level="INFO">Running command 'ozone sh bucket list 54267-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:49.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:49.781" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:49.781" starttime="20201105 01:55:45.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:49.782" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:54.068Z",
  "modificationTime" : "2020-11-05T01:54:54.068Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:31.123Z",
  "modificationTime" : "2020-11-05T01:54:50.159Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:55:02.125Z",
  "modificationTime" : "2020-11-05T01:55:02.125Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:23.971Z",
  "modificationTime" : "2020-11-05T01:54:46.323Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:27.638Z",
  "modificationTime" : "2020-11-05T01:54:27.638Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 01:55:49.782" starttime="20201105 01:55:49.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:49.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:49.783" starttime="20201105 01:55:49.782"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.783" starttime="20201105 01:55:45.908"></status>
</kw>
<msg timestamp="20201105 01:55:49.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:49.783" starttime="20201105 01:55:45.908"></status>
</kw>
<msg timestamp="20201105 01:55:49.784" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:49.784" starttime="20201105 01:55:45.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:49.784" starttime="20201105 01:55:49.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:49.785" starttime="20201105 01:55:49.784"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:55:49.785" critical="yes" starttime="20201105 01:55:45.876"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:49.793" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:49.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:49.794" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:55:49.794" starttime="20201105 01:55:49.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:49.795" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:55:49.795" starttime="20201105 01:55:49.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:49.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:49.796" starttime="20201105 01:55:49.795"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.796" starttime="20201105 01:55:49.788"></status>
</kw>
<msg timestamp="20201105 01:55:49.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:49.796" starttime="20201105 01:55:49.788"></status>
</kw>
<msg timestamp="20201105 01:55:49.797" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:55:49.797" starttime="20201105 01:55:49.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:55:49.798" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:55:49.798" starttime="20201105 01:55:49.797"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:49.804" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:49.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:49.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:49.820" starttime="20201105 01:55:49.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:49.821" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:49.821" starttime="20201105 01:55:49.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:49.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:49.822" starttime="20201105 01:55:49.821"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.822" starttime="20201105 01:55:49.799"></status>
</kw>
<msg timestamp="20201105 01:55:49.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:49.822" starttime="20201105 01:55:49.799"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.822" starttime="20201105 01:55:49.798"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.822" starttime="20201105 01:55:49.798"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.823" starttime="20201105 01:55:49.787"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:49.823" starttime="20201105 01:55:49.787"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:49.828" level="INFO">Running command 'ozone sh bucket info 54267-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:53.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:53.774" level="INFO">${output} = 54267-source bucket1</msg>
<status status="PASS" endtime="20201105 01:55:53.775" starttime="20201105 01:55:49.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:53.776" level="INFO">54267-source bucket1</msg>
<status status="PASS" endtime="20201105 01:55:53.776" starttime="20201105 01:55:53.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:53.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:53.776" starttime="20201105 01:55:53.776"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.777" starttime="20201105 01:55:49.824"></status>
</kw>
<msg timestamp="20201105 01:55:53.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:53.777" starttime="20201105 01:55:49.824"></status>
</kw>
<msg timestamp="20201105 01:55:53.777" level="INFO">${result} = 54267-source bucket1</msg>
<status status="PASS" endtime="20201105 01:55:53.777" starttime="20201105 01:55:49.823"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:55:53.778" starttime="20201105 01:55:53.777"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:55:53.778" critical="yes" starttime="20201105 01:55:49.786"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:53.785" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:53.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:53.786" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:55:53.786" starttime="20201105 01:55:53.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:53.787" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:55:53.788" starttime="20201105 01:55:53.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:53.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:53.788" starttime="20201105 01:55:53.788"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.789" starttime="20201105 01:55:53.781"></status>
</kw>
<msg timestamp="20201105 01:55:53.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:53.789" starttime="20201105 01:55:53.781"></status>
</kw>
<msg timestamp="20201105 01:55:53.789" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:55:53.789" starttime="20201105 01:55:53.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:55:53.790" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:55:53.790" starttime="20201105 01:55:53.789"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:53.797" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:53.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:53.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:55:53.814" starttime="20201105 01:55:53.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:53.816" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:55:53.816" starttime="20201105 01:55:53.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:53.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:53.817" starttime="20201105 01:55:53.816"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.817" starttime="20201105 01:55:53.791"></status>
</kw>
<msg timestamp="20201105 01:55:53.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:53.817" starttime="20201105 01:55:53.791"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.817" starttime="20201105 01:55:53.791"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.818" starttime="20201105 01:55:53.790"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.818" starttime="20201105 01:55:53.780"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:53.818" starttime="20201105 01:55:53.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:53.822" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 54267-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:55:57.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:55:57.414" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:55:57.414" starttime="20201105 01:55:53.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:55:57.415" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:55:57.415" starttime="20201105 01:55:57.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:55:57.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:55:57.416" starttime="20201105 01:55:57.416"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:57.416" starttime="20201105 01:55:53.819"></status>
</kw>
<msg timestamp="20201105 01:55:57.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:55:57.417" starttime="20201105 01:55:53.819"></status>
</kw>
<status status="PASS" endtime="20201105 01:55:57.417" starttime="20201105 01:55:53.818"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:55:57.422" level="INFO">Running command 'ozone sh bucket getacl 54267-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:01.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:01.182" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 01:56:01.182" starttime="20201105 01:55:57.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:01.183" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 01:56:01.183" starttime="20201105 01:56:01.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:01.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:01.184" starttime="20201105 01:56:01.184"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:01.184" starttime="20201105 01:55:57.419"></status>
</kw>
<msg timestamp="20201105 01:56:01.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:01.185" starttime="20201105 01:55:57.419"></status>
</kw>
<msg timestamp="20201105 01:56:01.185" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 01:56:01.185" starttime="20201105 01:55:57.418"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:01.185" starttime="20201105 01:56:01.185"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:01.186" starttime="20201105 01:55:57.417"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:01.192" level="INFO">Running command 'ozone sh bucket getacl 54267-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:05.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:05.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:05.110" starttime="20201105 01:56:01.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:05.112" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:05.112" starttime="20201105 01:56:05.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:05.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:05.112" starttime="20201105 01:56:05.112"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:05.113" starttime="20201105 01:56:01.188"></status>
</kw>
<msg timestamp="20201105 01:56:05.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:05.113" starttime="20201105 01:56:01.187"></status>
</kw>
<msg timestamp="20201105 01:56:05.113" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201105 01:56:05.113" starttime="20201105 01:56:01.187"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:05.114" starttime="20201105 01:56:05.113"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:05.114" starttime="20201105 01:56:01.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:05.118" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 54267-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:08.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:08.903" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:08.903" starttime="20201105 01:56:05.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:08.904" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 01:56:08.904" starttime="20201105 01:56:08.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:08.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:08.905" starttime="20201105 01:56:08.904"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:08.905" starttime="20201105 01:56:05.115"></status>
</kw>
<msg timestamp="20201105 01:56:08.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:08.905" starttime="20201105 01:56:05.115"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:08.906" starttime="20201105 01:56:05.114"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:08.912" level="INFO">Running command 'ozone sh bucket getacl 54267-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:12.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:12.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:12.869" starttime="20201105 01:56:08.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:12.870" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:12.870" starttime="20201105 01:56:12.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:12.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:12.871" starttime="20201105 01:56:12.870"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:12.871" starttime="20201105 01:56:08.908"></status>
</kw>
<msg timestamp="20201105 01:56:12.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:12.871" starttime="20201105 01:56:08.907"></status>
</kw>
<msg timestamp="20201105 01:56:12.872" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201105 01:56:12.872" starttime="20201105 01:56:08.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:12.872" starttime="20201105 01:56:12.872"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:12.872" starttime="20201105 01:56:08.906"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:12.878" level="INFO">Running command 'ozone sh bucket getacl 54267-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:16.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:16.918" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201105 01:56:16.918" starttime="20201105 01:56:12.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:16.919" level="INFO">READ</msg>
<status status="PASS" endtime="20201105 01:56:16.919" starttime="20201105 01:56:16.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:16.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:16.920" starttime="20201105 01:56:16.919"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.920" starttime="20201105 01:56:12.874"></status>
</kw>
<msg timestamp="20201105 01:56:16.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:16.920" starttime="20201105 01:56:12.874"></status>
</kw>
<msg timestamp="20201105 01:56:16.921" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201105 01:56:16.921" starttime="20201105 01:56:12.873"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:16.921" starttime="20201105 01:56:16.921"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.921" starttime="20201105 01:56:12.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:56:16.922" critical="yes" starttime="20201105 01:55:53.779"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:16.928" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:16.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:16.931" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:16.931" starttime="20201105 01:56:16.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:16.933" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:16.933" starttime="20201105 01:56:16.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:16.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:16.933" starttime="20201105 01:56:16.933"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.934" starttime="20201105 01:56:16.925"></status>
</kw>
<msg timestamp="20201105 01:56:16.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:16.934" starttime="20201105 01:56:16.924"></status>
</kw>
<msg timestamp="20201105 01:56:16.934" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:16.934" starttime="20201105 01:56:16.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:16.935" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:16.935" starttime="20201105 01:56:16.934"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:16.939" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:16.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:16.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:16.958" starttime="20201105 01:56:16.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:16.960" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:16.960" starttime="20201105 01:56:16.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:16.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:16.960" starttime="20201105 01:56:16.960"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.961" starttime="20201105 01:56:16.936"></status>
</kw>
<msg timestamp="20201105 01:56:16.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:16.961" starttime="20201105 01:56:16.936"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.961" starttime="20201105 01:56:16.936"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.961" starttime="20201105 01:56:16.935"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.961" starttime="20201105 01:56:16.924"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:16.961" starttime="20201105 01:56:16.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:16.966" level="INFO">Running command 'ozone sh bucket link 54267-source/bucket2 54267-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:20.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:20.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:20.640" starttime="20201105 01:56:16.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:20.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:56:20.641" starttime="20201105 01:56:20.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:20.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:20.642" starttime="20201105 01:56:20.641"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:20.642" starttime="20201105 01:56:16.962"></status>
</kw>
<msg timestamp="20201105 01:56:20.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:20.642" starttime="20201105 01:56:16.962"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:20.643" starttime="20201105 01:56:16.962"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:20.646" level="INFO">Running command 'ozone sh bucket create 54267-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:24.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:56:24.274" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:24.274" starttime="20201105 01:56:20.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:24.275" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201105 01:56:24.275" starttime="20201105 01:56:24.274"></status>
</kw>
<msg timestamp="20201105 01:56:24.276" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:24.276" starttime="20201105 01:56:20.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:24.276" starttime="20201105 01:56:24.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:24.281" level="INFO">Running command 'ozone sh bucket create 54267-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:28.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:28.156" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:28.156" starttime="20201105 01:56:24.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:28.157" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:56:28.157" starttime="20201105 01:56:28.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:28.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:28.158" starttime="20201105 01:56:28.158"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:28.159" starttime="20201105 01:56:24.278"></status>
</kw>
<msg timestamp="20201105 01:56:28.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:28.159" starttime="20201105 01:56:24.277"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:28.160" starttime="20201105 01:56:24.277"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:28.163" level="INFO">Running command 'ozone sh bucket link 54267-source/bucket1 54267-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:31.858" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:56:31.858" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:31.858" starttime="20201105 01:56:28.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.859" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201105 01:56:31.859" starttime="20201105 01:56:31.859"></status>
</kw>
<msg timestamp="20201105 01:56:31.860" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:31.860" starttime="20201105 01:56:28.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:31.860" starttime="20201105 01:56:31.860"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:56:31.861" critical="yes" starttime="20201105 01:56:16.922"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:31.869" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:31.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:31.870" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:31.870" starttime="20201105 01:56:31.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.871" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:31.871" starttime="20201105 01:56:31.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:31.872" starttime="20201105 01:56:31.871"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.872" starttime="20201105 01:56:31.864"></status>
</kw>
<msg timestamp="20201105 01:56:31.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:31.872" starttime="20201105 01:56:31.864"></status>
</kw>
<msg timestamp="20201105 01:56:31.873" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:31.873" starttime="20201105 01:56:31.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:31.873" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:31.873" starttime="20201105 01:56:31.873"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:31.880" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:31.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:31.896" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:31.896" starttime="20201105 01:56:31.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.898" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:31.898" starttime="20201105 01:56:31.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:31.898" starttime="20201105 01:56:31.898"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.899" starttime="20201105 01:56:31.875"></status>
</kw>
<msg timestamp="20201105 01:56:31.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:31.899" starttime="20201105 01:56:31.875"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.899" starttime="20201105 01:56:31.874"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.899" starttime="20201105 01:56:31.874"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.899" starttime="20201105 01:56:31.863"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.899" starttime="20201105 01:56:31.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:31.906" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:31.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:31.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:31.909" starttime="20201105 01:56:31.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.910" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:31.910" starttime="20201105 01:56:31.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:31.911" starttime="20201105 01:56:31.910"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.911" starttime="20201105 01:56:31.902"></status>
</kw>
<msg timestamp="20201105 01:56:31.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:31.911" starttime="20201105 01:56:31.902"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.912" starttime="20201105 01:56:31.901"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:31.916" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:31.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:31.919" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:31.919" starttime="20201105 01:56:31.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.921" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:31.921" starttime="20201105 01:56:31.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:31.921" starttime="20201105 01:56:31.921"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.922" starttime="20201105 01:56:31.913"></status>
</kw>
<msg timestamp="20201105 01:56:31.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:31.926" starttime="20201105 01:56:31.913"></status>
</kw>
<msg timestamp="20201105 01:56:31.926" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:31.926" starttime="20201105 01:56:31.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:31.927" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:31.927" starttime="20201105 01:56:31.926"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:31.933" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:31.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:31.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:31.942" starttime="20201105 01:56:31.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.943" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:31.943" starttime="20201105 01:56:31.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:31.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:31.945" starttime="20201105 01:56:31.944"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.945" starttime="20201105 01:56:31.928"></status>
</kw>
<msg timestamp="20201105 01:56:31.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:31.945" starttime="20201105 01:56:31.928"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.945" starttime="20201105 01:56:31.927"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.946" starttime="20201105 01:56:31.927"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.946" starttime="20201105 01:56:31.912"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:31.946" starttime="20201105 01:56:31.912"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:31.950" level="INFO">Running command 'ozone sh key list 54267-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:36.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:36.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:36.631" starttime="20201105 01:56:31.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "54267-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-05T01:54:14.527Z",
  "modificationTime" : "2020-11-05T01:54:16.411Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201105 01:56:36.632" starttime="20201105 01:56:36.631"></status>
</kw>
<msg timestamp="20201105 01:56:36.632" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:36.633" starttime="20201105 01:56:31.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:36.633" starttime="20201105 01:56:36.633"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.633" starttime="20201105 01:56:31.900"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.633" starttime="20201105 01:56:31.900"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:56:36.634" critical="yes" starttime="20201105 01:56:31.861"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:36.643" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:36.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:36.645" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:36.645" starttime="20201105 01:56:36.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.646" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:36.646" starttime="20201105 01:56:36.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:36.646" starttime="20201105 01:56:36.646"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.647" starttime="20201105 01:56:36.639"></status>
</kw>
<msg timestamp="20201105 01:56:36.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:36.647" starttime="20201105 01:56:36.639"></status>
</kw>
<msg timestamp="20201105 01:56:36.647" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:36.647" starttime="20201105 01:56:36.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:36.648" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:36.648" starttime="20201105 01:56:36.647"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:36.654" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:36.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:36.664" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:36.664" starttime="20201105 01:56:36.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.666" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:36.666" starttime="20201105 01:56:36.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:36.666" starttime="20201105 01:56:36.666"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.667" starttime="20201105 01:56:36.650"></status>
</kw>
<msg timestamp="20201105 01:56:36.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:36.667" starttime="20201105 01:56:36.649"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.667" starttime="20201105 01:56:36.649"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.667" starttime="20201105 01:56:36.648"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.667" starttime="20201105 01:56:36.636"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.667" starttime="20201105 01:56:36.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:36.674" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:36.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:36.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:36.677" starttime="20201105 01:56:36.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.678" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:36.678" starttime="20201105 01:56:36.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:36.678" starttime="20201105 01:56:36.678"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.679" starttime="20201105 01:56:36.670"></status>
</kw>
<msg timestamp="20201105 01:56:36.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:36.679" starttime="20201105 01:56:36.669"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.679" starttime="20201105 01:56:36.669"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:36.685" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:36.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:36.693" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:36.694" starttime="20201105 01:56:36.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.695" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:36.695" starttime="20201105 01:56:36.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:36.695" starttime="20201105 01:56:36.695"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.696" starttime="20201105 01:56:36.681"></status>
</kw>
<msg timestamp="20201105 01:56:36.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:36.696" starttime="20201105 01:56:36.681"></status>
</kw>
<msg timestamp="20201105 01:56:36.696" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:36.696" starttime="20201105 01:56:36.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:36.697" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:36.697" starttime="20201105 01:56:36.696"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:36.704" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:36.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:36.718" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:36.718" starttime="20201105 01:56:36.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.719" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:36.719" starttime="20201105 01:56:36.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:36.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:36.720" starttime="20201105 01:56:36.719"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.720" starttime="20201105 01:56:36.700"></status>
</kw>
<msg timestamp="20201105 01:56:36.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:36.721" starttime="20201105 01:56:36.700"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.721" starttime="20201105 01:56:36.697"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.721" starttime="20201105 01:56:36.697"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.721" starttime="20201105 01:56:36.680"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:36.721" starttime="20201105 01:56:36.679"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:36.726" level="INFO">Running command 'ozone sh key list 54267-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:40.121" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:56:40.121" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:40.121" starttime="20201105 01:56:36.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.122" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201105 01:56:40.122" starttime="20201105 01:56:40.122"></status>
</kw>
<msg timestamp="20201105 01:56:40.123" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:40.123" starttime="20201105 01:56:36.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:40.123" starttime="20201105 01:56:40.123"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.124" starttime="20201105 01:56:36.668"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.124" starttime="20201105 01:56:36.668"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:56:40.124" critical="yes" starttime="20201105 01:56:36.634"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:40.131" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:40.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:40.132" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:40.133" starttime="20201105 01:56:40.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.133" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:40.134" starttime="20201105 01:56:40.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:40.134" starttime="20201105 01:56:40.134"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.134" starttime="20201105 01:56:40.127"></status>
</kw>
<msg timestamp="20201105 01:56:40.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:40.135" starttime="20201105 01:56:40.127"></status>
</kw>
<msg timestamp="20201105 01:56:40.135" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:40.135" starttime="20201105 01:56:40.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:40.136" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:40.136" starttime="20201105 01:56:40.135"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:40.141" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:40.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:40.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:40.151" starttime="20201105 01:56:40.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.152" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:40.152" starttime="20201105 01:56:40.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:40.153" starttime="20201105 01:56:40.152"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.153" starttime="20201105 01:56:40.137"></status>
</kw>
<msg timestamp="20201105 01:56:40.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:40.153" starttime="20201105 01:56:40.137"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.154" starttime="20201105 01:56:40.136"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.154" starttime="20201105 01:56:40.136"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.154" starttime="20201105 01:56:40.126"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.154" starttime="20201105 01:56:40.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:40.160" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:40.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:40.163" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:40.163" starttime="20201105 01:56:40.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.164" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:40.164" starttime="20201105 01:56:40.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:40.165" starttime="20201105 01:56:40.164"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.165" starttime="20201105 01:56:40.156"></status>
</kw>
<msg timestamp="20201105 01:56:40.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:40.166" starttime="20201105 01:56:40.156"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.166" starttime="20201105 01:56:40.155"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:40.171" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:40.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:40.173" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:40.173" starttime="20201105 01:56:40.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.174" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:40.174" starttime="20201105 01:56:40.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:40.175" starttime="20201105 01:56:40.174"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.175" starttime="20201105 01:56:40.168"></status>
</kw>
<msg timestamp="20201105 01:56:40.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:40.175" starttime="20201105 01:56:40.167"></status>
</kw>
<msg timestamp="20201105 01:56:40.175" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:40.175" starttime="20201105 01:56:40.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:40.176" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:40.176" starttime="20201105 01:56:40.175"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:40.181" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:40.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:40.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:40.190" starttime="20201105 01:56:40.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.191" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:40.192" starttime="20201105 01:56:40.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:40.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:40.192" starttime="20201105 01:56:40.192"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.192" starttime="20201105 01:56:40.178"></status>
</kw>
<msg timestamp="20201105 01:56:40.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:40.193" starttime="20201105 01:56:40.177"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.193" starttime="20201105 01:56:40.177"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.193" starttime="20201105 01:56:40.176"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.193" starttime="20201105 01:56:40.166"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:40.193" starttime="20201105 01:56:40.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:40.199" level="INFO">Running command 'ozone sh bucket info 54267-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:43.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:43.894" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:43.894" starttime="20201105 01:56:40.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:43.896" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:31.123Z",
  "modificationTime" : "2020-11-05T01:54:50.159Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 01:56:43.896" starttime="20201105 01:56:43.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:43.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:43.897" starttime="20201105 01:56:43.896"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:43.897" starttime="20201105 01:56:40.194"></status>
</kw>
<msg timestamp="20201105 01:56:43.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:43.897" starttime="20201105 01:56:40.194"></status>
</kw>
<msg timestamp="20201105 01:56:43.897" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:43.897" starttime="20201105 01:56:40.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:43.898" starttime="20201105 01:56:43.898"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:43.898" starttime="20201105 01:56:43.898"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:43.902" level="INFO">Running command 'ozone sh key list 54267-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:47.528" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:56:47.528" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:47.528" starttime="20201105 01:56:43.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:47.529" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201105 01:56:47.529" starttime="20201105 01:56:47.528"></status>
</kw>
<msg timestamp="20201105 01:56:47.530" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:47.530" starttime="20201105 01:56:43.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 01:56:47.530" starttime="20201105 01:56:47.530"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.530" starttime="20201105 01:56:40.155"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.530" starttime="20201105 01:56:40.154"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:56:47.531" critical="yes" starttime="20201105 01:56:40.125"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:47.538" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:47.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:47.539" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:56:47.539" starttime="20201105 01:56:47.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:47.540" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:56:47.540" starttime="20201105 01:56:47.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:47.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:47.541" starttime="20201105 01:56:47.540"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.541" starttime="20201105 01:56:47.534"></status>
</kw>
<msg timestamp="20201105 01:56:47.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:47.541" starttime="20201105 01:56:47.533"></status>
</kw>
<msg timestamp="20201105 01:56:47.542" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:56:47.542" starttime="20201105 01:56:47.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:56:47.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:56:47.542" starttime="20201105 01:56:47.542"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:47.547" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:47.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:47.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:56:47.558" starttime="20201105 01:56:47.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:47.559" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:56:47.559" starttime="20201105 01:56:47.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:47.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:47.559" starttime="20201105 01:56:47.559"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.560" starttime="20201105 01:56:47.544"></status>
</kw>
<msg timestamp="20201105 01:56:47.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:47.560" starttime="20201105 01:56:47.544"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.560" starttime="20201105 01:56:47.543"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.560" starttime="20201105 01:56:47.542"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.560" starttime="20201105 01:56:47.533"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:47.560" starttime="20201105 01:56:47.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:47.565" level="INFO">Running command 'ozone sh bucket link 54267-target/loop1 54267-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:50.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:50.968" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:50.968" starttime="20201105 01:56:47.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:50.969" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:56:50.969" starttime="20201105 01:56:50.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:50.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:50.970" starttime="20201105 01:56:50.970"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:50.970" starttime="20201105 01:56:47.561"></status>
</kw>
<msg timestamp="20201105 01:56:50.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:50.971" starttime="20201105 01:56:47.561"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:50.971" starttime="20201105 01:56:47.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:50.975" level="INFO">Running command 'ozone sh bucket link 54267-target/loop2 54267-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:54.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:54.630" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:54.630" starttime="20201105 01:56:50.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:54.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:56:54.632" starttime="20201105 01:56:54.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:54.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:54.633" starttime="20201105 01:56:54.632"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:54.633" starttime="20201105 01:56:50.972"></status>
</kw>
<msg timestamp="20201105 01:56:54.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:54.633" starttime="20201105 01:56:50.972"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:54.633" starttime="20201105 01:56:50.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:54.638" level="INFO">Running command 'ozone sh bucket link 54267-target/loop3 54267-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:56:58.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:56:58.304" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:56:58.304" starttime="20201105 01:56:54.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:56:58.305" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:56:58.305" starttime="20201105 01:56:58.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:56:58.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:56:58.306" starttime="20201105 01:56:58.305"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:58.306" starttime="20201105 01:56:54.634"></status>
</kw>
<msg timestamp="20201105 01:56:58.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:56:58.306" starttime="20201105 01:56:54.634"></status>
</kw>
<status status="PASS" endtime="20201105 01:56:58.306" starttime="20201105 01:56:54.633"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:56:58.310" level="INFO">Running command 'ozone sh key list 54267-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:02.214" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:57:02.215" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:02.215" starttime="20201105 01:56:58.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:02.216" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201105 01:57:02.216" starttime="20201105 01:57:02.215"></status>
</kw>
<msg timestamp="20201105 01:57:02.216" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:02.216" starttime="20201105 01:56:58.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201105 01:57:02.217" starttime="20201105 01:57:02.216"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:57:02.217" critical="yes" starttime="20201105 01:56:47.531"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:02.224" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:02.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:02.226" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:57:02.226" starttime="20201105 01:57:02.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:02.227" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:57:02.227" starttime="20201105 01:57:02.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:02.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:02.228" starttime="20201105 01:57:02.227"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:02.228" starttime="20201105 01:57:02.220"></status>
</kw>
<msg timestamp="20201105 01:57:02.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:02.228" starttime="20201105 01:57:02.220"></status>
</kw>
<msg timestamp="20201105 01:57:02.229" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:57:02.229" starttime="20201105 01:57:02.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:57:02.229" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:57:02.229" starttime="20201105 01:57:02.229"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:02.233" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:02.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:02.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:57:02.256" starttime="20201105 01:57:02.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:02.257" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:57:02.257" starttime="20201105 01:57:02.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:02.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:02.258" starttime="20201105 01:57:02.257"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:02.258" starttime="20201105 01:57:02.231"></status>
</kw>
<msg timestamp="20201105 01:57:02.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:02.258" starttime="20201105 01:57:02.231"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:02.259" starttime="20201105 01:57:02.230"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:02.259" starttime="20201105 01:57:02.230"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:02.259" starttime="20201105 01:57:02.219"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:02.259" starttime="20201105 01:57:02.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:02.263" level="INFO">Running command 'ozone sh bucket link 54267-source/bucket1 54267-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:05.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:05.789" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:05.789" starttime="20201105 01:57:02.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:05.790" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:57:05.790" starttime="20201105 01:57:05.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:05.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:05.791" starttime="20201105 01:57:05.791"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:05.791" starttime="20201105 01:57:02.260"></status>
</kw>
<msg timestamp="20201105 01:57:05.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:05.792" starttime="20201105 01:57:02.260"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:05.792" starttime="20201105 01:57:02.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:05.796" level="INFO">Running command 'ozone sh key put 54267-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:14.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:14.319" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:14.319" starttime="20201105 01:57:05.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:14.320" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:57:14.320" starttime="20201105 01:57:14.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:14.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:14.321" starttime="20201105 01:57:14.320"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:14.321" starttime="20201105 01:57:05.793"></status>
</kw>
<msg timestamp="20201105 01:57:14.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:14.322" starttime="20201105 01:57:05.793"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:14.322" starttime="20201105 01:57:05.792"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 01:57:14.324" level="INFO">${postfix} = 43789</msg>
<status status="PASS" endtime="20201105 01:57:14.324" starttime="20201105 01:57:14.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 01:57:14.324" level="INFO">${tmpfile} = /tmp/tempkey-43789</msg>
<status status="PASS" endtime="20201105 01:57:14.325" starttime="20201105 01:57:14.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:14.328" level="INFO">Running command 'ozone sh key get -f 54267-target/link1/key3 /tmp/tempkey-43789 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:19.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:19.491" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:19.491" starttime="20201105 01:57:14.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.493" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:57:19.493" starttime="20201105 01:57:19.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:19.493" starttime="20201105 01:57:19.493"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.494" starttime="20201105 01:57:14.325"></status>
</kw>
<msg timestamp="20201105 01:57:19.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:19.494" starttime="20201105 01:57:14.325"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.494" starttime="20201105 01:57:14.325"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 01:57:19.496" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-43789 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:19.499" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 01:57:19.499" starttime="20201105 01:57:19.494"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:19.503" level="INFO">Running command 'rm -f /tmp/tempkey-43789 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:19.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:19.506" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:57:19.506" starttime="20201105 01:57:19.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.507" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:57:19.507" starttime="20201105 01:57:19.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:19.508" starttime="20201105 01:57:19.508"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.508" starttime="20201105 01:57:19.501"></status>
</kw>
<msg timestamp="20201105 01:57:19.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:19.509" starttime="20201105 01:57:19.500"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.509" starttime="20201105 01:57:19.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:57:19.509" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 01:57:19.509" starttime="20201105 01:57:19.509"></status>
</kw>
<msg timestamp="20201105 01:57:19.510" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 01:57:19.510" starttime="20201105 01:57:14.323"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:57:19.510" starttime="20201105 01:57:19.510"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.510" starttime="20201105 01:57:14.322"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:57:19.511" critical="yes" starttime="20201105 01:57:02.218"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:19.517" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:19.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:19.522" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 01:57:19.522" starttime="20201105 01:57:19.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.523" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 01:57:19.523" starttime="20201105 01:57:19.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:19.524" starttime="20201105 01:57:19.523"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.524" starttime="20201105 01:57:19.514"></status>
</kw>
<msg timestamp="20201105 01:57:19.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:19.524" starttime="20201105 01:57:19.513"></status>
</kw>
<msg timestamp="20201105 01:57:19.524" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 01:57:19.524" starttime="20201105 01:57:19.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 01:57:19.525" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 01:57:19.525" starttime="20201105 01:57:19.525"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:19.530" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:19.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:19.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:57:19.545" starttime="20201105 01:57:19.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.546" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:57:19.546" starttime="20201105 01:57:19.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:19.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:19.547" starttime="20201105 01:57:19.547"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.547" starttime="20201105 01:57:19.526"></status>
</kw>
<msg timestamp="20201105 01:57:19.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:19.548" starttime="20201105 01:57:19.526"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.548" starttime="20201105 01:57:19.526"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.548" starttime="20201105 01:57:19.525"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.548" starttime="20201105 01:57:19.512"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:19.548" starttime="20201105 01:57:19.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:19.553" level="INFO">Running command 'ozone sh bucket delete 54267-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:23.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:23.001" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:23.001" starttime="20201105 01:57:19.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:23.002" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 01:57:23.002" starttime="20201105 01:57:23.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:23.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:23.003" starttime="20201105 01:57:23.003"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:23.003" starttime="20201105 01:57:19.549"></status>
</kw>
<msg timestamp="20201105 01:57:23.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:23.004" starttime="20201105 01:57:19.549"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:23.004" starttime="20201105 01:57:19.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:23.008" level="INFO">Running command 'ozone sh bucket list 54267-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:26.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:26.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:26.963" starttime="20201105 01:57:23.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:26.964" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:56:28.076Z",
  "modificationTime" : "2020-11-05T01:56:28.076Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:54.068Z",
  "modificationTime" : "2020-11-05T01:54:54.068Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:31.123Z",
  "modificationTime" : "2020-11-05T01:54:50.159Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:56:20.427Z",
  "modificationTime" : "2020-11-05T01:56:20.427Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:57:05.682Z",
  "modificationTime" : "2020-11-05T01:57:05.682Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:56:58.112Z",
  "modificationTime" : "2020-11-05T01:56:58.112Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:56:50.895Z",
  "modificationTime" : "2020-11-05T01:56:50.895Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:56:54.546Z",
  "modificationTime" : "2020-11-05T01:56:54.546Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:23.971Z",
  "modificationTime" : "2020-11-05T01:54:46.323Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54267-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:54:27.638Z",
  "modificationTime" : "2020-11-05T01:54:27.638Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54267-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 01:57:26.964" starttime="20201105 01:57:26.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:26.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:26.965" starttime="20201105 01:57:26.965"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:26.965" starttime="20201105 01:57:23.005"></status>
</kw>
<msg timestamp="20201105 01:57:26.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:26.966" starttime="20201105 01:57:23.005"></status>
</kw>
<msg timestamp="20201105 01:57:26.966" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 01:57:26.966" starttime="20201105 01:57:23.004"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:57:26.967" starttime="20201105 01:57:26.966"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:57:26.972" level="INFO">Running command 'ozone sh key list 54267-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:57:30.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:57:30.869" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201105 01:57:30.869" starttime="20201105 01:57:26.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:57:30.870" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201105 01:57:30.870" starttime="20201105 01:57:30.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:57:30.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:57:30.871" starttime="20201105 01:57:30.870"></status>
</kw>
<status status="PASS" endtime="20201105 01:57:30.871" starttime="20201105 01:57:26.968"></status>
</kw>
<msg timestamp="20201105 01:57:30.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:57:30.871" starttime="20201105 01:57:26.967"></status>
</kw>
<msg timestamp="20201105 01:57:30.871" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201105 01:57:30.872" starttime="20201105 01:57:26.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201105 01:57:30.872" starttime="20201105 01:57:30.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:57:30.872" critical="yes" starttime="20201105 01:57:19.511"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201105 01:57:30.875" starttime="20201105 01:53:58.809"></status>
</suite>
<status status="PASS" elapsedtime="244069" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
