<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 01:09:29.227" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:09:17.858" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:09:17.859" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 01:09:17.859" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:09:17.859" starttime="20201105 01:09:17.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:09:17.860" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:09:17.860" starttime="20201105 01:09:17.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:09:17.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 01:09:17.861" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 01:09:17.861" starttime="20201105 01:09:17.860"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:17.861" starttime="20201105 01:09:17.853"></status>
</kw>
<msg timestamp="20201105 01:09:17.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 01:09:17.861" starttime="20201105 01:09:17.853"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:17.862" starttime="20201105 01:09:17.852"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:17.862" starttime="20201105 01:09:17.852"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:09:18.867" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:09:18.869" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 01:09:18.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:09:18.869" starttime="20201105 01:09:18.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:09:18.870" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:09:18.870" starttime="20201105 01:09:18.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:09:18.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 01:09:18.871" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 01:09:18.871" starttime="20201105 01:09:18.870"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:18.871" starttime="20201105 01:09:18.864"></status>
</kw>
<msg timestamp="20201105 01:09:18.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 01:09:18.872" starttime="20201105 01:09:18.863"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:18.872" starttime="20201105 01:09:18.863"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:18.872" starttime="20201105 01:09:18.862"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:09:19.886" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:09:19.887" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 01:09:19.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:09:19.887" starttime="20201105 01:09:19.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:09:19.888" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:09:19.888" starttime="20201105 01:09:19.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:09:19.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 01:09:19.889" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 01:09:19.889" starttime="20201105 01:09:19.888"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:19.889" starttime="20201105 01:09:19.874"></status>
</kw>
<msg timestamp="20201105 01:09:19.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 01:09:19.889" starttime="20201105 01:09:19.873"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:19.896" starttime="20201105 01:09:19.873"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:19.896" starttime="20201105 01:09:19.872"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:09:20.907" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:09:20.913" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 01:09:20.913" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:09:20.913" starttime="20201105 01:09:20.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:09:20.914" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:09:20.914" starttime="20201105 01:09:20.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:09:20.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 01:09:20.915" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 01:09:20.915" starttime="20201105 01:09:20.914"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:20.915" starttime="20201105 01:09:20.898"></status>
</kw>
<msg timestamp="20201105 01:09:20.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 01:09:20.916" starttime="20201105 01:09:20.898"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:20.916" starttime="20201105 01:09:20.897"></status>
</kw>
<status status="FAIL" endtime="20201105 01:09:20.916" starttime="20201105 01:09:20.896"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:09:21.922" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:09:21.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:09:21.923" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:09:21.924" starttime="20201105 01:09:21.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:09:21.925" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:09:21.925" starttime="20201105 01:09:21.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:09:21.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:09:21.925" starttime="20201105 01:09:21.925"></status>
</kw>
<status status="PASS" endtime="20201105 01:09:21.926" starttime="20201105 01:09:21.918"></status>
</kw>
<msg timestamp="20201105 01:09:21.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:09:21.926" starttime="20201105 01:09:21.918"></status>
</kw>
<status status="PASS" endtime="20201105 01:09:21.926" starttime="20201105 01:09:21.917"></status>
</kw>
<status status="PASS" endtime="20201105 01:09:21.926" starttime="20201105 01:09:21.916"></status>
</kw>
<status status="PASS" endtime="20201105 01:09:21.926" starttime="20201105 01:09:17.852"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201105 01:09:21.927" critical="yes" starttime="20201105 01:09:17.851"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:09:21.932" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:09:22.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:09:22.311" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201105 01:09:22.311" starttime="20201105 01:09:21.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:09:22.312" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201105 01:09:22.312" starttime="20201105 01:09:22.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:09:22.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:09:22.313" starttime="20201105 01:09:22.312"></status>
</kw>
<status status="PASS" endtime="20201105 01:09:22.313" starttime="20201105 01:09:21.929"></status>
</kw>
<msg timestamp="20201105 01:09:22.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:09:22.313" starttime="20201105 01:09:21.929"></status>
</kw>
<msg timestamp="20201105 01:09:22.314" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201105 01:09:22.314" starttime="20201105 01:09:21.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201105 01:09:22.314" starttime="20201105 01:09:22.314"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201105 01:09:22.314" critical="yes" starttime="20201105 01:09:21.928"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201105 01:09:22.317" starttime="20201105 01:09:17.797"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
