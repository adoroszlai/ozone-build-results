<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 01:27:49.272" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:11.665" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:13.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:14:13.883" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:14:13.883" starttime="20201105 01:14:11.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:13.884" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:14:13.885" starttime="20201105 01:14:13.884"></status>
</kw>
<msg timestamp="20201105 01:14:13.885" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:14:13.885" starttime="20201105 01:14:11.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:13.891" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:16.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:16.024" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:16.024" starttime="20201105 01:14:13.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:16.025" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:16.025" starttime="20201105 01:14:16.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:16.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:16.026" starttime="20201105 01:14:16.026"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:16.026" starttime="20201105 01:14:13.887"></status>
</kw>
<msg timestamp="20201105 01:14:16.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:16.027" starttime="20201105 01:14:13.887"></status>
</kw>
<msg timestamp="20201105 01:14:16.027" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 01:14:16.027" starttime="20201105 01:14:13.886"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 01:14:16.027" starttime="20201105 01:14:16.027"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:16.027" starttime="20201105 01:14:13.886"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:16.028" starttime="20201105 01:14:13.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:16.032" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:18.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:18.178" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:18.178" starttime="20201105 01:14:16.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:18.179" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:18.180" starttime="20201105 01:14:18.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:18.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:18.180" starttime="20201105 01:14:18.180"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:18.180" starttime="20201105 01:14:16.029"></status>
</kw>
<msg timestamp="20201105 01:14:18.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:18.181" starttime="20201105 01:14:16.029"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:18.181" starttime="20201105 01:14:16.028"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:18.181" starttime="20201105 01:14:16.028"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:18.181" starttime="20201105 01:14:16.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 01:14:18.182" starttime="20201105 01:14:18.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:18.186" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:20.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:20.625" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:14:18.055Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 01:14:20.625" starttime="20201105 01:14:18.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:20.626" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:14:18.055Z",
  "modificationTime" : "2020-11-05T01:14:18.055Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 01:14:20.627" starttime="20201105 01:14:20.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:20.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:20.627" starttime="20201105 01:14:20.627"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:20.627" starttime="20201105 01:14:18.183"></status>
</kw>
<msg timestamp="20201105 01:14:20.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:20.628" starttime="20201105 01:14:18.182"></status>
</kw>
<msg timestamp="20201105 01:14:20.628" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:14:18.055Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 01:14:20.628" starttime="20201105 01:14:18.182"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 01:14:20.629" starttime="20201105 01:14:20.628"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:14:20.632" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:14:20.632" starttime="20201105 01:14:20.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:14:20.633" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:14:20.633" starttime="20201105 01:14:20.632"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:20.633" starttime="20201105 01:14:20.631"></status>
</kw>
<msg timestamp="20201105 01:14:20.633" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:14:20.633" starttime="20201105 01:14:20.631"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:20.634" starttime="20201105 01:14:20.630"></status>
</kw>
<msg timestamp="20201105 01:14:20.634" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 01:14:20.634" starttime="20201105 01:14:20.629"></status>
</kw>
<msg timestamp="20201105 01:14:20.634" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 01:14:20.634" starttime="20201105 01:14:20.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:20.639" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:22.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:22.761" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:22.761" starttime="20201105 01:14:20.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:22.762" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:22.762" starttime="20201105 01:14:22.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:22.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:22.763" starttime="20201105 01:14:22.763"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:22.763" starttime="20201105 01:14:20.635"></status>
</kw>
<msg timestamp="20201105 01:14:22.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:22.764" starttime="20201105 01:14:20.635"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:22.764" starttime="20201105 01:14:20.634"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:22.767" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:28.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:28.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:28.780" starttime="20201105 01:14:22.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:28.781" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:28.781" starttime="20201105 01:14:28.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:28.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:28.782" starttime="20201105 01:14:28.781"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:28.782" starttime="20201105 01:14:22.765"></status>
</kw>
<msg timestamp="20201105 01:14:28.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:28.782" starttime="20201105 01:14:22.765"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:28.782" starttime="20201105 01:14:22.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:28.786" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:32.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:32.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:32.788" starttime="20201105 01:14:28.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:32.789" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:32.789" starttime="20201105 01:14:32.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:32.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:32.790" starttime="20201105 01:14:32.789"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:32.790" starttime="20201105 01:14:28.783"></status>
</kw>
<msg timestamp="20201105 01:14:32.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:32.790" starttime="20201105 01:14:28.783"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:32.791" starttime="20201105 01:14:28.783"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:32.795" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:36.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:36.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:36.749" starttime="20201105 01:14:32.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:36.750" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:36.751" starttime="20201105 01:14:36.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:36.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:36.751" starttime="20201105 01:14:36.751"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:36.751" starttime="20201105 01:14:32.792"></status>
</kw>
<msg timestamp="20201105 01:14:36.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:36.752" starttime="20201105 01:14:32.791"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:36.752" starttime="20201105 01:14:32.791"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:14:36.752" critical="yes" starttime="20201105 01:14:11.658"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:14:36.757" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:14:36.757" starttime="20201105 01:14:36.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:14:36.758" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:14:36.758" starttime="20201105 01:14:36.757"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:36.758" starttime="20201105 01:14:36.756"></status>
</kw>
<msg timestamp="20201105 01:14:36.758" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:14:36.758" starttime="20201105 01:14:36.755"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:36.758" starttime="20201105 01:14:36.755"></status>
</kw>
<msg timestamp="20201105 01:14:36.758" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:14:36.758" starttime="20201105 01:14:36.754"></status>
</kw>
<msg timestamp="20201105 01:14:36.759" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:14:36.759" starttime="20201105 01:14:36.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:36.763" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:38.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:38.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:38.957" starttime="20201105 01:14:36.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:38.958" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:38.958" starttime="20201105 01:14:38.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:38.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:38.959" starttime="20201105 01:14:38.958"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:38.959" starttime="20201105 01:14:36.759"></status>
</kw>
<msg timestamp="20201105 01:14:38.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:38.959" starttime="20201105 01:14:36.759"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:38.960" starttime="20201105 01:14:36.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:38.963" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:41.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:41.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:14:41.156" starttime="20201105 01:14:38.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:41.157" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:14:41.157" starttime="20201105 01:14:41.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:41.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:41.158" starttime="20201105 01:14:41.157"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:41.158" starttime="20201105 01:14:38.961"></status>
</kw>
<msg timestamp="20201105 01:14:41.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:41.158" starttime="20201105 01:14:38.960"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:41.159" starttime="20201105 01:14:38.960"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:14:41.159" critical="yes" starttime="20201105 01:14:36.753"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 01:14:41.160" starttime="20201105 01:14:11.603"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:16:23.412" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:16:23.412" starttime="20201105 01:16:23.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:16:23.413" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:16:23.413" starttime="20201105 01:16:23.413"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:23.413" starttime="20201105 01:16:23.411"></status>
</kw>
<msg timestamp="20201105 01:16:23.413" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:16:23.413" starttime="20201105 01:16:23.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:16:23.414" starttime="20201105 01:16:23.414"></status>
</kw>
<msg timestamp="20201105 01:16:23.414" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:16:23.415" starttime="20201105 01:16:23.414"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:23.415" starttime="20201105 01:16:23.410"></status>
</kw>
<msg timestamp="20201105 01:16:23.415" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:16:23.415" starttime="20201105 01:16:23.410"></status>
</kw>
<msg timestamp="20201105 01:16:23.415" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:16:23.415" starttime="20201105 01:16:23.409"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:16:23.416" level="INFO">${random} = 14777</msg>
<status status="PASS" endtime="20201105 01:16:23.416" starttime="20201105 01:16:23.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:16:23.422" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-14777 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:16:26.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:16:26.822" level="INFO">${output} = 2020-11-05 01:16:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:16:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 01:16:26.822" starttime="20201105 01:16:23.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:16:26.823" level="INFO">2020-11-05 01:16:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:16:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 01:16:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 01:16:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:16:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-30D01161DB8C-&gt;76e65eba-e098-4a38-8c21-5f90037dcf0b
2020-11-05 01:16:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 01:16:26.823" starttime="20201105 01:16:26.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:16:26.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:16:26.824" starttime="20201105 01:16:26.824"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:26.824" starttime="20201105 01:16:23.417"></status>
</kw>
<msg timestamp="20201105 01:16:26.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:16:26.824" starttime="20201105 01:16:23.416"></status>
</kw>
<msg timestamp="20201105 01:16:26.825" level="INFO">${result} = 2020-11-05 01:16:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:16:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 01:16:26.825" starttime="20201105 01:16:23.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:16:26.829" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:16:28.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:16:28.633" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:16 ofs://om/volume1/bucket1/ozone-14777
-rw-...</msg>
<status status="PASS" endtime="20201105 01:16:28.633" starttime="20201105 01:16:26.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:16:28.635" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:16 ofs://om/volume1/bucket1/ozone-14777
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:14 ofs://om/volume1/bucket1/ozone-94751
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:15 ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201105 01:16:28.635" starttime="20201105 01:16:28.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:16:28.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:16:28.635" starttime="20201105 01:16:28.635"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:28.636" starttime="20201105 01:16:26.827"></status>
</kw>
<msg timestamp="20201105 01:16:28.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:16:28.636" starttime="20201105 01:16:26.826"></status>
</kw>
<msg timestamp="20201105 01:16:28.636" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:16 ofs://om/volume1/bucket1/ozone-14777
-rw-...</msg>
<status status="PASS" endtime="20201105 01:16:28.636" starttime="20201105 01:16:26.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:16:28.637" starttime="20201105 01:16:28.636"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:16:28.637" critical="yes" starttime="20201105 01:16:23.408"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 01:16:28.638" starttime="20201105 01:16:23.352"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:14:46.019" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:14:46.019" starttime="20201105 01:14:46.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:14:46.020" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:14:46.020" starttime="20201105 01:14:46.019"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:46.020" starttime="20201105 01:14:46.018"></status>
</kw>
<msg timestamp="20201105 01:14:46.020" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:14:46.020" starttime="20201105 01:14:46.018"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:46.020" starttime="20201105 01:14:46.017"></status>
</kw>
<msg timestamp="20201105 01:14:46.021" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:14:46.021" starttime="20201105 01:14:46.016"></status>
</kw>
<msg timestamp="20201105 01:14:46.021" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:14:46.021" starttime="20201105 01:14:46.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:14:46.021" level="INFO">${random} = 94751</msg>
<status status="PASS" endtime="20201105 01:14:46.021" starttime="20201105 01:14:46.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:46.027" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-94751 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:51.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:51.960" level="INFO">${output} = 2020-11-05 01:14:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:14:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 01:14:51.961" starttime="20201105 01:14:46.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:51.962" level="INFO">2020-11-05 01:14:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:14:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 01:14:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 01:14:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:14:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-16FD121DBC64-&gt;76e65eba-e098-4a38-8c21-5f90037dcf0b
2020-11-05 01:14:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 01:14:51.962" starttime="20201105 01:14:51.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:51.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:51.963" starttime="20201105 01:14:51.962"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:51.963" starttime="20201105 01:14:46.022"></status>
</kw>
<msg timestamp="20201105 01:14:51.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:51.963" starttime="20201105 01:14:46.022"></status>
</kw>
<msg timestamp="20201105 01:14:51.963" level="INFO">${result} = 2020-11-05 01:14:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:14:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 01:14:51.963" starttime="20201105 01:14:46.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:51.968" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:53.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:53.786" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:14 o3fs://bucket1.volume1.om/ozone-94751
dr...</msg>
<status status="PASS" endtime="20201105 01:14:53.786" starttime="20201105 01:14:51.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:53.787" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:14 o3fs://bucket1.volume1.om/ozone-94751
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:14:53.787" starttime="20201105 01:14:53.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:53.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:53.788" starttime="20201105 01:14:53.787"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:53.788" starttime="20201105 01:14:51.965"></status>
</kw>
<msg timestamp="20201105 01:14:53.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:53.788" starttime="20201105 01:14:51.964"></status>
</kw>
<msg timestamp="20201105 01:14:53.788" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:14 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 01:14 o3fs://bucket1.volume1.om/ozone-94751
dr...</msg>
<status status="PASS" endtime="20201105 01:14:53.788" starttime="20201105 01:14:51.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:14:53.789" starttime="20201105 01:14:53.788"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:14:53.789" critical="yes" starttime="20201105 01:14:46.015"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 01:14:53.790" starttime="20201105 01:14:45.960"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:16:33.488" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:16:33.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:16:33.492" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:16:33.492" starttime="20201105 01:16:33.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:16:33.493" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:16:33.493" starttime="20201105 01:16:33.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:16:33.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:16:33.494" starttime="20201105 01:16:33.493"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:33.494" starttime="20201105 01:16:33.481"></status>
</kw>
<msg timestamp="20201105 01:16:33.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:16:33.494" starttime="20201105 01:16:33.481"></status>
</kw>
<msg timestamp="20201105 01:16:33.494" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:16:33.494" starttime="20201105 01:16:33.480"></status>
</kw>
<msg timestamp="20201105 01:16:33.495" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:16:33.495" starttime="20201105 01:16:33.480"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:16:33.500" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:16:33.500" starttime="20201105 01:16:33.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:16:33.501" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:16:33.501" starttime="20201105 01:16:33.500"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:33.501" starttime="20201105 01:16:33.498"></status>
</kw>
<msg timestamp="20201105 01:16:33.501" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:16:33.501" starttime="20201105 01:16:33.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:16:33.502" starttime="20201105 01:16:33.502"></status>
</kw>
<msg timestamp="20201105 01:16:33.502" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:16:33.502" starttime="20201105 01:16:33.501"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:33.502" starttime="20201105 01:16:33.497"></status>
</kw>
<msg timestamp="20201105 01:16:33.503" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:16:33.503" starttime="20201105 01:16:33.496"></status>
</kw>
<msg timestamp="20201105 01:16:33.503" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:16:33.503" starttime="20201105 01:16:33.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:16:33.508" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:17:10.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:17:10.321" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:16:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:16:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 01:17:10.321" starttime="20201105 01:16:33.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:17:10.322" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:16:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:16:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 01:16:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 01:16:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:16:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C25531183E0A-&gt;76e65eba-e098-4a38-8c21-5f90037dcf0b
2020-11-05 01:16:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 01:16:39 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:16:39 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:16:39 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 01:16:39 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 01:16:39 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604538815899_0003
2020-11-05 01:16:40 INFO  YarnClientImpl:273 - Submitted application application_1604538815899_0003
2020-11-05 01:16:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604538815899_0003/
2020-11-05 01:16:40 INFO  Job:1339 - Running job: job_1604538815899_0003
2020-11-05 01:16:47 INFO  Job:1360 - Job job_1604538815899_0003 running in uber mode : false
2020-11-05 01:16:47 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 01:16:54 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 01:16:59 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 01:17:03 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 01:17:08 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 01:17:09 INFO  Job:1378 - Job job_1604538815899_0003 completed successfully
2020-11-05 01:17:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42492
		Total time spent by all reduces in occupied slots (ms)=16064
		Total time spent by all map tasks (ms)=10623
		Total time spent by all reduce tasks (ms)=4016
		Total vcore-milliseconds taken by all map tasks=10623
		Total vcore-milliseconds taken by all reduce tasks=4016
		Total megabyte-milliseconds taken by all map tasks=43511808
		Total megabyte-milliseconds taken by all reduce tasks=16449536
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=690
		CPU time spent (ms)=7180
		Physical memory (bytes) snapshot=1155551232
		Virtual memory (bytes) snapshot=15791284224
		Total committed heap usage (bytes)=1040187392
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.576 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 01:17:10.322" starttime="20201105 01:17:10.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:17:10.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:17:10.323" starttime="20201105 01:17:10.323"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.323" starttime="20201105 01:16:33.504"></status>
</kw>
<msg timestamp="20201105 01:17:10.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:17:10.324" starttime="20201105 01:16:33.504"></status>
</kw>
<msg timestamp="20201105 01:17:10.324" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:16:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:16:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 01:17:10.324" starttime="20201105 01:16:33.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:17:10.324" starttime="20201105 01:17:10.324"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:17:10.325" critical="yes" starttime="20201105 01:16:33.479"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:17:10.330" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:17:10.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:17:10.336" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:17:10.336" starttime="20201105 01:17:10.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:17:10.337" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:17:10.337" starttime="20201105 01:17:10.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:17:10.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:17:10.338" starttime="20201105 01:17:10.338"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.338" starttime="20201105 01:17:10.327"></status>
</kw>
<msg timestamp="20201105 01:17:10.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:17:10.339" starttime="20201105 01:17:10.327"></status>
</kw>
<msg timestamp="20201105 01:17:10.339" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:17:10.339" starttime="20201105 01:17:10.326"></status>
</kw>
<msg timestamp="20201105 01:17:10.339" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:17:10.339" starttime="20201105 01:17:10.326"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:17:10.340" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201105 01:17:10.340" starttime="20201105 01:17:10.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:17:10.344" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:17:10.344" starttime="20201105 01:17:10.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:17:10.345" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:17:10.345" starttime="20201105 01:17:10.344"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.345" starttime="20201105 01:17:10.343"></status>
</kw>
<msg timestamp="20201105 01:17:10.345" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:17:10.345" starttime="20201105 01:17:10.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:17:10.346" starttime="20201105 01:17:10.346"></status>
</kw>
<msg timestamp="20201105 01:17:10.346" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:17:10.346" starttime="20201105 01:17:10.345"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.346" starttime="20201105 01:17:10.341"></status>
</kw>
<msg timestamp="20201105 01:17:10.347" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:17:10.347" starttime="20201105 01:17:10.341"></status>
</kw>
<msg timestamp="20201105 01:17:10.347" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:17:10.347" starttime="20201105 01:17:10.340"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:17:10.350" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:17:10.350" starttime="20201105 01:17:10.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:17:10.351" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:17:10.351" starttime="20201105 01:17:10.350"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.351" starttime="20201105 01:17:10.349"></status>
</kw>
<msg timestamp="20201105 01:17:10.351" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:17:10.351" starttime="20201105 01:17:10.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:17:10.352" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 01:17:10.352" starttime="20201105 01:17:10.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:17:10.353" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 01:17:10.353" starttime="20201105 01:17:10.353"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.353" starttime="20201105 01:17:10.352"></status>
</kw>
<msg timestamp="20201105 01:17:10.354" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 01:17:10.354" starttime="20201105 01:17:10.351"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.354" starttime="20201105 01:17:10.348"></status>
</kw>
<msg timestamp="20201105 01:17:10.354" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 01:17:10.354" starttime="20201105 01:17:10.348"></status>
</kw>
<msg timestamp="20201105 01:17:10.354" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 01:17:10.354" starttime="20201105 01:17:10.347"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:17:10.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:17:10.358" starttime="20201105 01:17:10.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:17:10.358" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:17:10.358" starttime="20201105 01:17:10.358"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.358" starttime="20201105 01:17:10.357"></status>
</kw>
<msg timestamp="20201105 01:17:10.358" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:17:10.359" starttime="20201105 01:17:10.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:17:10.360" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 01:17:10.360" starttime="20201105 01:17:10.360"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:17:10.361" level="INFO">${result} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201105 01:17:10.361" starttime="20201105 01:17:10.360"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.361" starttime="20201105 01:17:10.359"></status>
</kw>
<msg timestamp="20201105 01:17:10.361" level="INFO">${path_with_leading} = /wordcount-49.txt</msg>
<status status="PASS" endtime="20201105 01:17:10.361" starttime="20201105 01:17:10.359"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:10.362" starttime="20201105 01:17:10.356"></status>
</kw>
<msg timestamp="20201105 01:17:10.362" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201105 01:17:10.362" starttime="20201105 01:17:10.355"></status>
</kw>
<msg timestamp="20201105 01:17:10.362" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201105 01:17:10.362" starttime="20201105 01:17:10.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:17:10.366" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:17:47.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:17:47.279" level="INFO">${output} = 2020-11-05 01:17:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:17:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 01:17:47.279" starttime="20201105 01:17:10.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:17:47.280" level="INFO">2020-11-05 01:17:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:17:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:17:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:17:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 01:17:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 01:17:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:17:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-993F3F615DA2-&gt;76e65eba-e098-4a38-8c21-5f90037dcf0b
2020-11-05 01:17:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:17:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 01:17:13 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 01:17:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604538815899_0004
2020-11-05 01:17:14 INFO  YarnClientImpl:273 - Submitted application application_1604538815899_0004
2020-11-05 01:17:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604538815899_0004/
2020-11-05 01:17:14 INFO  Job:1339 - Running job: job_1604538815899_0004
2020-11-05 01:17:22 INFO  Job:1360 - Job job_1604538815899_0004 running in uber mode : false
2020-11-05 01:17:22 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 01:17:29 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 01:17:33 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 01:17:38 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 01:17:45 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 01:17:46 INFO  Job:1378 - Job job_1604538815899_0004 completed successfully
2020-11-05 01:17:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41000
		Total time spent by all reduces in occupied slots (ms)=24232
		Total time spent by all map tasks (ms)=10250
		Total time spent by all reduce tasks (ms)=6058
		Total vcore-milliseconds taken by all map tasks=10250
		Total vcore-milliseconds taken by all reduce tasks=6058
		Total megabyte-milliseconds taken by all map tasks=41984000
		Total megabyte-milliseconds taken by all reduce tasks=24813568
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1155612672
		Virtual memory (bytes) snapshot=15788085248
		Total committed heap usage (bytes)=1048576000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201105 01:17:47.281" starttime="20201105 01:17:47.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:17:47.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:17:47.281" starttime="20201105 01:17:47.281"></status>
</kw>
<status status="PASS" endtime="20201105 01:17:47.282" starttime="20201105 01:17:10.363"></status>
</kw>
<msg timestamp="20201105 01:17:47.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:17:47.282" starttime="20201105 01:17:10.363"></status>
</kw>
<msg timestamp="20201105 01:17:47.283" level="INFO">${output} = 2020-11-05 01:17:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:17:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 01:17:47.283" starttime="20201105 01:17:10.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 01:17:47.284" starttime="20201105 01:17:47.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:17:47.285" starttime="20201105 01:17:47.284"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:17:47.285" critical="yes" starttime="20201105 01:17:10.325"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 01:17:47.287" starttime="20201105 01:16:33.424"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:58.693" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:14:58.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:14:58.698" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:14:58.698" starttime="20201105 01:14:58.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:14:58.699" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:14:58.699" starttime="20201105 01:14:58.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:14:58.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:14:58.700" starttime="20201105 01:14:58.699"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:58.700" starttime="20201105 01:14:58.687"></status>
</kw>
<msg timestamp="20201105 01:14:58.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:14:58.700" starttime="20201105 01:14:58.687"></status>
</kw>
<msg timestamp="20201105 01:14:58.700" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:14:58.700" starttime="20201105 01:14:58.687"></status>
</kw>
<msg timestamp="20201105 01:14:58.701" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:14:58.701" starttime="20201105 01:14:58.686"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:14:58.705" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:14:58.705" starttime="20201105 01:14:58.705"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:14:58.706" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:14:58.706" starttime="20201105 01:14:58.706"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:58.706" starttime="20201105 01:14:58.703"></status>
</kw>
<msg timestamp="20201105 01:14:58.706" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:14:58.706" starttime="20201105 01:14:58.703"></status>
</kw>
<status status="PASS" endtime="20201105 01:14:58.707" starttime="20201105 01:14:58.702"></status>
</kw>
<msg timestamp="20201105 01:14:58.707" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:14:58.707" starttime="20201105 01:14:58.702"></status>
</kw>
<msg timestamp="20201105 01:14:58.707" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:14:58.707" starttime="20201105 01:14:58.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:14:58.711" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:15:39.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:15:39.269" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:15:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:15:00 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 01:15:39.269" starttime="20201105 01:14:58.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:15:39.270" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:15:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:15:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 01:15:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 01:15:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:15:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7EDC4D1B604F-&gt;76e65eba-e098-4a38-8c21-5f90037dcf0b
2020-11-05 01:15:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 01:15:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:15:02 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 01:15:02 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 01:15:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604538815899_0001
2020-11-05 01:15:03 INFO  YarnClientImpl:273 - Submitted application application_1604538815899_0001
2020-11-05 01:15:03 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604538815899_0001/
2020-11-05 01:15:03 INFO  Job:1339 - Running job: job_1604538815899_0001
2020-11-05 01:15:14 INFO  Job:1360 - Job job_1604538815899_0001 running in uber mode : false
2020-11-05 01:15:14 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 01:15:20 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 01:15:25 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 01:15:30 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 01:15:34 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 01:15:38 INFO  Job:1378 - Job job_1604538815899_0001 completed successfully
2020-11-05 01:15:38 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40880
		Total time spent by all reduces in occupied slots (ms)=15128
		Total time spent by all map tasks (ms)=10220
		Total time spent by all reduce tasks (ms)=3782
		Total vcore-milliseconds taken by all map tasks=10220
		Total vcore-milliseconds taken by all reduce tasks=3782
		Total megabyte-milliseconds taken by all map tasks=41861120
		Total megabyte-milliseconds taken by all reduce tasks=15491072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=654
		CPU time spent (ms)=7350
		Physical memory (bytes) snapshot=1174515712
		Virtual memory (bytes) snapshot=15797661696
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.69 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 01:15:39.270" starttime="20201105 01:15:39.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:15:39.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:15:39.271" starttime="20201105 01:15:39.270"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.271" starttime="20201105 01:14:58.708"></status>
</kw>
<msg timestamp="20201105 01:15:39.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:15:39.271" starttime="20201105 01:14:58.708"></status>
</kw>
<msg timestamp="20201105 01:15:39.272" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:15:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:15:00 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 01:15:39.272" starttime="20201105 01:14:58.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:15:39.272" starttime="20201105 01:15:39.272"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:15:39.273" critical="yes" starttime="20201105 01:14:58.685"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:15:39.278" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:15:39.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:15:39.284" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:15:39.284" starttime="20201105 01:15:39.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:15:39.285" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:15:39.285" starttime="20201105 01:15:39.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:15:39.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:15:39.286" starttime="20201105 01:15:39.286"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.286" starttime="20201105 01:15:39.275"></status>
</kw>
<msg timestamp="20201105 01:15:39.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:15:39.286" starttime="20201105 01:15:39.275"></status>
</kw>
<msg timestamp="20201105 01:15:39.287" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:15:39.287" starttime="20201105 01:15:39.275"></status>
</kw>
<msg timestamp="20201105 01:15:39.287" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 01:15:39.287" starttime="20201105 01:15:39.274"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:15:39.288" level="INFO">${random} = 63</msg>
<status status="PASS" endtime="20201105 01:15:39.288" starttime="20201105 01:15:39.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:15:39.291" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:15:39.292" starttime="20201105 01:15:39.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:15:39.292" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:15:39.292" starttime="20201105 01:15:39.292"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.292" starttime="20201105 01:15:39.291"></status>
</kw>
<msg timestamp="20201105 01:15:39.292" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:15:39.292" starttime="20201105 01:15:39.290"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.293" starttime="20201105 01:15:39.289"></status>
</kw>
<msg timestamp="20201105 01:15:39.293" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:15:39.293" starttime="20201105 01:15:39.289"></status>
</kw>
<msg timestamp="20201105 01:15:39.293" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:15:39.293" starttime="20201105 01:15:39.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:15:39.297" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:15:39.297" starttime="20201105 01:15:39.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:15:39.297" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:15:39.297" starttime="20201105 01:15:39.297"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.298" starttime="20201105 01:15:39.296"></status>
</kw>
<msg timestamp="20201105 01:15:39.298" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:15:39.298" starttime="20201105 01:15:39.295"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.298" starttime="20201105 01:15:39.295"></status>
</kw>
<msg timestamp="20201105 01:15:39.298" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 01:15:39.298" starttime="20201105 01:15:39.294"></status>
</kw>
<msg timestamp="20201105 01:15:39.298" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 01:15:39.298" starttime="20201105 01:15:39.293"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:15:39.302" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:15:39.302" starttime="20201105 01:15:39.301"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:15:39.302" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:15:39.302" starttime="20201105 01:15:39.302"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.302" starttime="20201105 01:15:39.301"></status>
</kw>
<msg timestamp="20201105 01:15:39.303" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:15:39.303" starttime="20201105 01:15:39.300"></status>
</kw>
<status status="PASS" endtime="20201105 01:15:39.303" starttime="20201105 01:15:39.300"></status>
</kw>
<msg timestamp="20201105 01:15:39.303" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-63.txt</msg>
<status status="PASS" endtime="20201105 01:15:39.303" starttime="20201105 01:15:39.299"></status>
</kw>
<msg timestamp="20201105 01:15:39.303" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-63.txt</msg>
<status status="PASS" endtime="20201105 01:15:39.303" starttime="20201105 01:15:39.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:15:39.309" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-63.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:16:18.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:16:18.544" level="INFO">${output} = 2020-11-05 01:15:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:15:41 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 01:16:18.544" starttime="20201105 01:15:39.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:16:18.545" level="INFO">2020-11-05 01:15:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:15:41 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:15:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:15:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 01:15:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 01:15:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:15:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-34621ADE00B1-&gt;76e65eba-e098-4a38-8c21-5f90037dcf0b
2020-11-05 01:15:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:15:42 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 01:15:42 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 01:15:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604538815899_0002
2020-11-05 01:15:45 INFO  YarnClientImpl:273 - Submitted application application_1604538815899_0002
2020-11-05 01:15:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604538815899_0002/
2020-11-05 01:15:45 INFO  Job:1339 - Running job: job_1604538815899_0002
2020-11-05 01:15:53 INFO  Job:1360 - Job job_1604538815899_0002 running in uber mode : false
2020-11-05 01:15:53 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 01:15:59 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 01:16:04 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 01:16:10 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 01:16:14 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 01:16:18 INFO  Job:1378 - Job job_1604538815899_0002 completed successfully
2020-11-05 01:16:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=678089
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40100
		Total time spent by all reduces in occupied slots (ms)=15116
		Total time spent by all map tasks (ms)=10025
		Total time spent by all reduce tasks (ms)=3779
		Total vcore-milliseconds taken by all map tasks=10025
		Total vcore-milliseconds taken by all reduce tasks=3779
		Total megabyte-milliseconds taken by all map tasks=41062400
		Total megabyte-milliseconds taken by all reduce tasks=15478784
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1169174528
		Virtual memory (bytes) snapshot=15796609024
		Total committed heap usage (bytes)=1040187392
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201105 01:16:18.545" starttime="20201105 01:16:18.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:16:18.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:16:18.546" starttime="20201105 01:16:18.545"></status>
</kw>
<status status="PASS" endtime="20201105 01:16:18.546" starttime="20201105 01:15:39.304"></status>
</kw>
<msg timestamp="20201105 01:16:18.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:16:18.547" starttime="20201105 01:15:39.304"></status>
</kw>
<msg timestamp="20201105 01:16:18.547" level="INFO">${output} = 2020-11-05 01:15:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.3:8032
2020-11-05 01:15:41 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 01:16:18.547" starttime="20201105 01:15:39.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 01:16:18.548" starttime="20201105 01:16:18.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:16:18.548" starttime="20201105 01:16:18.548"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:16:18.548" critical="yes" starttime="20201105 01:15:39.273"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 01:16:18.550" starttime="20201105 01:14:58.631"></status>
</suite>
<status status="PASS" elapsedtime="196455" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:18:54.810" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:18:57.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:18:57.148" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:18:57.149" starttime="20201105 01:18:54.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:18:57.150" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:18:57.150" starttime="20201105 01:18:57.149"></status>
</kw>
<msg timestamp="20201105 01:18:57.150" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:18:57.150" starttime="20201105 01:18:54.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:18:57.156" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:18:59.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:18:59.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:18:59.242" starttime="20201105 01:18:57.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:18:59.243" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:18:59.243" starttime="20201105 01:18:59.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:18:59.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:18:59.244" starttime="20201105 01:18:59.243"></status>
</kw>
<status status="PASS" endtime="20201105 01:18:59.244" starttime="20201105 01:18:57.152"></status>
</kw>
<msg timestamp="20201105 01:18:59.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:18:59.245" starttime="20201105 01:18:57.152"></status>
</kw>
<msg timestamp="20201105 01:18:59.245" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 01:18:59.245" starttime="20201105 01:18:57.151"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 01:18:59.245" starttime="20201105 01:18:59.245"></status>
</kw>
<status status="PASS" endtime="20201105 01:18:59.246" starttime="20201105 01:18:57.151"></status>
</kw>
<status status="PASS" endtime="20201105 01:18:59.246" starttime="20201105 01:18:57.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:18:59.250" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:01.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:01.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:01.418" starttime="20201105 01:18:59.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:01.420" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:01.420" starttime="20201105 01:19:01.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:01.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:01.421" starttime="20201105 01:19:01.420"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:01.421" starttime="20201105 01:18:59.247"></status>
</kw>
<msg timestamp="20201105 01:19:01.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:01.421" starttime="20201105 01:18:59.247"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:01.421" starttime="20201105 01:18:59.247"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:01.421" starttime="20201105 01:18:59.246"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:01.421" starttime="20201105 01:18:59.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 01:19:01.422" starttime="20201105 01:19:01.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:01.426" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:03.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:03.752" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:19:01.379Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 01:19:03.752" starttime="20201105 01:19:01.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:03.753" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:19:01.379Z",
  "modificationTime" : "2020-11-05T01:19:01.379Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 01:19:03.753" starttime="20201105 01:19:03.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:03.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:03.754" starttime="20201105 01:19:03.754"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:03.755" starttime="20201105 01:19:01.423"></status>
</kw>
<msg timestamp="20201105 01:19:03.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:03.755" starttime="20201105 01:19:01.423"></status>
</kw>
<msg timestamp="20201105 01:19:03.755" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:19:01.379Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 01:19:03.755" starttime="20201105 01:19:01.422"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 01:19:03.756" starttime="20201105 01:19:03.755"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:19:03.759" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:19:03.759" starttime="20201105 01:19:03.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:19:03.760" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:19:03.760" starttime="20201105 01:19:03.760"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:03.760" starttime="20201105 01:19:03.759"></status>
</kw>
<msg timestamp="20201105 01:19:03.760" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:19:03.760" starttime="20201105 01:19:03.758"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:03.761" starttime="20201105 01:19:03.757"></status>
</kw>
<msg timestamp="20201105 01:19:03.761" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 01:19:03.761" starttime="20201105 01:19:03.756"></status>
</kw>
<msg timestamp="20201105 01:19:03.761" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 01:19:03.761" starttime="20201105 01:19:03.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:03.766" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:06.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:06.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:06.055" starttime="20201105 01:19:03.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:06.056" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:06.056" starttime="20201105 01:19:06.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:06.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:06.057" starttime="20201105 01:19:06.056"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:06.057" starttime="20201105 01:19:03.762"></status>
</kw>
<msg timestamp="20201105 01:19:06.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:06.057" starttime="20201105 01:19:03.762"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:06.057" starttime="20201105 01:19:03.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:06.062" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:11.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:11.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:11.495" starttime="20201105 01:19:06.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:11.496" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:11.496" starttime="20201105 01:19:11.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:11.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:11.497" starttime="20201105 01:19:11.496"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:11.497" starttime="20201105 01:19:06.058"></status>
</kw>
<msg timestamp="20201105 01:19:11.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:11.497" starttime="20201105 01:19:06.058"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:11.498" starttime="20201105 01:19:06.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:11.502" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:15.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:15.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:15.682" starttime="20201105 01:19:11.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:15.684" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:15.684" starttime="20201105 01:19:15.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:15.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:15.684" starttime="20201105 01:19:15.684"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:15.685" starttime="20201105 01:19:11.499"></status>
</kw>
<msg timestamp="20201105 01:19:15.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:15.685" starttime="20201105 01:19:11.498"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:15.685" starttime="20201105 01:19:11.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:15.689" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:19.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:19.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:19.666" starttime="20201105 01:19:15.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:19.668" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:19.668" starttime="20201105 01:19:19.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:19.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:19.668" starttime="20201105 01:19:19.668"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:19.669" starttime="20201105 01:19:15.686"></status>
</kw>
<msg timestamp="20201105 01:19:19.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:19.669" starttime="20201105 01:19:15.686"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:19.669" starttime="20201105 01:19:15.685"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:19:19.669" critical="yes" starttime="20201105 01:18:54.804"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:19:19.675" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:19:19.675" starttime="20201105 01:19:19.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:19:19.675" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:19:19.675" starttime="20201105 01:19:19.675"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:19.675" starttime="20201105 01:19:19.673"></status>
</kw>
<msg timestamp="20201105 01:19:19.675" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:19:19.676" starttime="20201105 01:19:19.673"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:19.676" starttime="20201105 01:19:19.672"></status>
</kw>
<msg timestamp="20201105 01:19:19.676" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:19:19.676" starttime="20201105 01:19:19.672"></status>
</kw>
<msg timestamp="20201105 01:19:19.676" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:19:19.676" starttime="20201105 01:19:19.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:19.681" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:21.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:21.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:21.922" starttime="20201105 01:19:19.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:21.923" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:21.923" starttime="20201105 01:19:21.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:21.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:21.924" starttime="20201105 01:19:21.923"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:21.924" starttime="20201105 01:19:19.677"></status>
</kw>
<msg timestamp="20201105 01:19:21.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:21.924" starttime="20201105 01:19:19.677"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:21.925" starttime="20201105 01:19:19.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:21.933" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:24.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:24.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:19:24.272" starttime="20201105 01:19:21.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:24.274" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:19:24.274" starttime="20201105 01:19:24.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:24.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:24.275" starttime="20201105 01:19:24.274"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:24.275" starttime="20201105 01:19:21.926"></status>
</kw>
<msg timestamp="20201105 01:19:24.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:24.275" starttime="20201105 01:19:21.925"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:24.275" starttime="20201105 01:19:21.925"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:19:24.275" critical="yes" starttime="20201105 01:19:19.670"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 01:19:24.280" starttime="20201105 01:18:54.746"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:21:11.028" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:21:11.028" starttime="20201105 01:21:11.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:21:11.029" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:21:11.029" starttime="20201105 01:21:11.029"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:11.029" starttime="20201105 01:21:11.027"></status>
</kw>
<msg timestamp="20201105 01:21:11.029" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:21:11.029" starttime="20201105 01:21:11.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:21:11.030" starttime="20201105 01:21:11.030"></status>
</kw>
<msg timestamp="20201105 01:21:11.030" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:21:11.030" starttime="20201105 01:21:11.029"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:11.031" starttime="20201105 01:21:11.026"></status>
</kw>
<msg timestamp="20201105 01:21:11.031" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:21:11.031" starttime="20201105 01:21:11.026"></status>
</kw>
<msg timestamp="20201105 01:21:11.031" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:21:11.031" starttime="20201105 01:21:11.025"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:21:11.032" level="INFO">${random} = 37260</msg>
<status status="PASS" endtime="20201105 01:21:11.032" starttime="20201105 01:21:11.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:21:11.038" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-37260 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:21:14.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:21:14.664" level="INFO">${output} = 2020-11-05 01:21:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:21:14.665" starttime="20201105 01:21:11.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:21:14.666" level="INFO">2020-11-05 01:21:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 01:21:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:21:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:21:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:21:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:21:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1522156BCDE1-&gt;37f0de73-8612-4307-9f1a-8016215c0e3f
2020-11-05 01:21:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:21:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:21:14.666" starttime="20201105 01:21:14.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:21:14.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:21:14.667" starttime="20201105 01:21:14.666"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:14.667" starttime="20201105 01:21:11.032"></status>
</kw>
<msg timestamp="20201105 01:21:14.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:21:14.667" starttime="20201105 01:21:11.032"></status>
</kw>
<msg timestamp="20201105 01:21:14.667" level="INFO">${result} = 2020-11-05 01:21:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:21:14.667" starttime="20201105 01:21:11.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:21:14.672" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:21:16.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:21:16.487" level="INFO">${output} = 2020-11-05 01:21:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:21:16.487" starttime="20201105 01:21:14.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:21:16.488" level="INFO">2020-11-05 01:21:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:16 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 01:19 ofs://om/volume1/bucket1/ozone-36489
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 01:21 ofs://om/volume1/bucket1/ozone-37260
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:19 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:20 ofs://om/volume1/bucket1/wordcount-45.txt
2020-11-05 01:21:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:21:16.488" starttime="20201105 01:21:16.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:21:16.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:21:16.489" starttime="20201105 01:21:16.488"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:16.489" starttime="20201105 01:21:14.670"></status>
</kw>
<msg timestamp="20201105 01:21:16.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:21:16.489" starttime="20201105 01:21:14.669"></status>
</kw>
<msg timestamp="20201105 01:21:16.489" level="INFO">${result} = 2020-11-05 01:21:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:21:16.489" starttime="20201105 01:21:14.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:21:16.490" starttime="20201105 01:21:16.489"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:21:16.490" critical="yes" starttime="20201105 01:21:11.024"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 01:21:16.491" starttime="20201105 01:21:10.970"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:19:29.219" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:19:29.219" starttime="20201105 01:19:29.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:19:29.220" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:19:29.220" starttime="20201105 01:19:29.219"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:29.220" starttime="20201105 01:19:29.218"></status>
</kw>
<msg timestamp="20201105 01:19:29.220" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:19:29.220" starttime="20201105 01:19:29.217"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:29.220" starttime="20201105 01:19:29.217"></status>
</kw>
<msg timestamp="20201105 01:19:29.220" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:19:29.220" starttime="20201105 01:19:29.216"></status>
</kw>
<msg timestamp="20201105 01:19:29.221" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:19:29.221" starttime="20201105 01:19:29.215"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:19:29.221" level="INFO">${random} = 36489</msg>
<status status="PASS" endtime="20201105 01:19:29.221" starttime="20201105 01:19:29.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:29.228" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-36489 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:33.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:33.086" level="INFO">${output} = 2020-11-05 01:19:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:19:33.086" starttime="20201105 01:19:29.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:33.087" level="INFO">2020-11-05 01:19:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 01:19:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:19:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:19:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:19:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:19:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA0713B6E5BF-&gt;37f0de73-8612-4307-9f1a-8016215c0e3f
2020-11-05 01:19:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:19:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:19:33.087" starttime="20201105 01:19:33.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:33.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:33.088" starttime="20201105 01:19:33.088"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:33.089" starttime="20201105 01:19:29.222"></status>
</kw>
<msg timestamp="20201105 01:19:33.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:33.089" starttime="20201105 01:19:29.222"></status>
</kw>
<msg timestamp="20201105 01:19:33.089" level="INFO">${result} = 2020-11-05 01:19:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:19:33.089" starttime="20201105 01:19:29.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:33.094" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:34.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:34.980" level="INFO">${output} = 2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:19:34.980" starttime="20201105 01:19:33.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:34.981" level="INFO">2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 01:19 o3fs://bucket1.volume1.om/ozone-36489
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:19 o3fs://bucket1.volume1.om/user
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:19:34.981" starttime="20201105 01:19:34.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:34.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:34.982" starttime="20201105 01:19:34.981"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:34.982" starttime="20201105 01:19:33.091"></status>
</kw>
<msg timestamp="20201105 01:19:34.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:34.982" starttime="20201105 01:19:33.090"></status>
</kw>
<msg timestamp="20201105 01:19:34.982" level="INFO">${result} = 2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:19:34.983" starttime="20201105 01:19:33.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:19:34.983" starttime="20201105 01:19:34.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:19:34.983" critical="yes" starttime="20201105 01:19:29.214"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 01:19:34.984" starttime="20201105 01:19:29.160"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:21:21.456" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:21:21.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:21:21.461" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:21:21.461" starttime="20201105 01:21:21.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:21:21.462" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:21:21.463" starttime="20201105 01:21:21.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:21:21.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:21:21.463" starttime="20201105 01:21:21.463"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:21.463" starttime="20201105 01:21:21.451"></status>
</kw>
<msg timestamp="20201105 01:21:21.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:21:21.464" starttime="20201105 01:21:21.451"></status>
</kw>
<msg timestamp="20201105 01:21:21.464" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:21:21.464" starttime="20201105 01:21:21.450"></status>
</kw>
<msg timestamp="20201105 01:21:21.464" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:21:21.464" starttime="20201105 01:21:21.450"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:21:21.469" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:21:21.469" starttime="20201105 01:21:21.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:21:21.470" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:21:21.470" starttime="20201105 01:21:21.470"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:21.470" starttime="20201105 01:21:21.467"></status>
</kw>
<msg timestamp="20201105 01:21:21.471" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:21:21.471" starttime="20201105 01:21:21.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:21:21.472" starttime="20201105 01:21:21.471"></status>
</kw>
<msg timestamp="20201105 01:21:21.472" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:21:21.472" starttime="20201105 01:21:21.471"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:21.472" starttime="20201105 01:21:21.466"></status>
</kw>
<msg timestamp="20201105 01:21:21.472" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:21:21.472" starttime="20201105 01:21:21.465"></status>
</kw>
<msg timestamp="20201105 01:21:21.472" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:21:21.472" starttime="20201105 01:21:21.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:21:21.476" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:22:05.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:22:05.639" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:21:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21...</msg>
<status status="PASS" endtime="20201105 01:22:05.639" starttime="20201105 01:21:21.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:22:05.640" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:21:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 01:21:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:21:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:21:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:21:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:21:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A1D070A9AE62-&gt;37f0de73-8612-4307-9f1a-8016215c0e3f
2020-11-05 01:21:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 01:21:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-05 01:21:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:21:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:21:27 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:21:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539114490_0003
2020-11-05 01:21:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:21:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:28 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 01:21:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 01:21:28 INFO  YarnClientImpl:324 - Submitted application application_1604539114490_0003
2020-11-05 01:21:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539114490_0003/
2020-11-05 01:21:28 INFO  Job:1619 - Running job: job_1604539114490_0003
2020-11-05 01:21:36 INFO  Job:1640 - Job job_1604539114490_0003 running in uber mode : false
2020-11-05 01:21:36 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:21:43 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:21:49 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:21:55 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:22:00 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:22:04 INFO  Job:1658 - Job job_1604539114490_0003 completed successfully
2020-11-05 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41996
		Total time spent by all reduces in occupied slots (ms)=16400
		Total time spent by all map tasks (ms)=10499
		Total time spent by all reduce tasks (ms)=4100
		Total vcore-milliseconds taken by all map tasks=10499
		Total vcore-milliseconds taken by all reduce tasks=4100
		Total megabyte-milliseconds taken by all map tasks=43003904
		Total megabyte-milliseconds taken by all reduce tasks=16793600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=647
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1221763072
		Virtual memory (bytes) snapshot=15807922176
		Total committed heap usage (bytes)=1072693248
		Peak Map Physical memory (bytes)=311808000
		Peak Map Virtual memory (bytes)=3952447488
		Peak Reduce Physical memory (bytes)=304111616
		Peak Reduce Virtual memory (bytes)=3974627328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.313 seconds
2020-11-05 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-05 01:22:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:22:05.640" starttime="20201105 01:22:05.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:22:05.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:22:05.641" starttime="20201105 01:22:05.640"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.641" starttime="20201105 01:21:21.474"></status>
</kw>
<msg timestamp="20201105 01:22:05.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:22:05.641" starttime="20201105 01:21:21.473"></status>
</kw>
<msg timestamp="20201105 01:22:05.642" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:21:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21...</msg>
<status status="PASS" endtime="20201105 01:22:05.642" starttime="20201105 01:21:21.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:22:05.642" starttime="20201105 01:22:05.642"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:22:05.643" critical="yes" starttime="20201105 01:21:21.449"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:22:05.649" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:22:05.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:22:05.655" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:22:05.655" starttime="20201105 01:22:05.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:22:05.656" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:22:05.656" starttime="20201105 01:22:05.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:22:05.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:22:05.657" starttime="20201105 01:22:05.657"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.657" starttime="20201105 01:22:05.646"></status>
</kw>
<msg timestamp="20201105 01:22:05.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:22:05.658" starttime="20201105 01:22:05.645"></status>
</kw>
<msg timestamp="20201105 01:22:05.658" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:22:05.658" starttime="20201105 01:22:05.645"></status>
</kw>
<msg timestamp="20201105 01:22:05.658" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:22:05.658" starttime="20201105 01:22:05.644"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:22:05.659" level="INFO">${random} = 26</msg>
<status status="PASS" endtime="20201105 01:22:05.659" starttime="20201105 01:22:05.658"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:22:05.663" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:22:05.663" starttime="20201105 01:22:05.663"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:22:05.664" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:22:05.664" starttime="20201105 01:22:05.663"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.664" starttime="20201105 01:22:05.662"></status>
</kw>
<msg timestamp="20201105 01:22:05.664" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:22:05.664" starttime="20201105 01:22:05.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:22:05.665" starttime="20201105 01:22:05.665"></status>
</kw>
<msg timestamp="20201105 01:22:05.665" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:22:05.665" starttime="20201105 01:22:05.664"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.665" starttime="20201105 01:22:05.661"></status>
</kw>
<msg timestamp="20201105 01:22:05.666" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:22:05.666" starttime="20201105 01:22:05.660"></status>
</kw>
<msg timestamp="20201105 01:22:05.666" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:22:05.666" starttime="20201105 01:22:05.659"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:22:05.671" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:22:05.671" starttime="20201105 01:22:05.670"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:22:05.671" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:22:05.671" starttime="20201105 01:22:05.671"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.671" starttime="20201105 01:22:05.670"></status>
</kw>
<msg timestamp="20201105 01:22:05.672" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:22:05.672" starttime="20201105 01:22:05.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:22:05.673" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 01:22:05.673" starttime="20201105 01:22:05.673"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:22:05.674" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 01:22:05.674" starttime="20201105 01:22:05.673"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.674" starttime="20201105 01:22:05.672"></status>
</kw>
<msg timestamp="20201105 01:22:05.674" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 01:22:05.674" starttime="20201105 01:22:05.672"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.674" starttime="20201105 01:22:05.668"></status>
</kw>
<msg timestamp="20201105 01:22:05.674" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 01:22:05.675" starttime="20201105 01:22:05.667"></status>
</kw>
<msg timestamp="20201105 01:22:05.675" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 01:22:05.675" starttime="20201105 01:22:05.666"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:22:05.678" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:22:05.678" starttime="20201105 01:22:05.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:22:05.679" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:22:05.679" starttime="20201105 01:22:05.678"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.679" starttime="20201105 01:22:05.677"></status>
</kw>
<msg timestamp="20201105 01:22:05.679" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:22:05.679" starttime="20201105 01:22:05.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:22:05.681" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 01:22:05.681" starttime="20201105 01:22:05.680"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:22:05.681" level="INFO">${result} = /wordcount-26.txt</msg>
<status status="PASS" endtime="20201105 01:22:05.681" starttime="20201105 01:22:05.681"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.682" starttime="20201105 01:22:05.680"></status>
</kw>
<msg timestamp="20201105 01:22:05.682" level="INFO">${path_with_leading} = /wordcount-26.txt</msg>
<status status="PASS" endtime="20201105 01:22:05.682" starttime="20201105 01:22:05.679"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:05.682" starttime="20201105 01:22:05.676"></status>
</kw>
<msg timestamp="20201105 01:22:05.682" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-26.txt</msg>
<status status="PASS" endtime="20201105 01:22:05.682" starttime="20201105 01:22:05.676"></status>
</kw>
<msg timestamp="20201105 01:22:05.682" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-26.txt</msg>
<status status="PASS" endtime="20201105 01:22:05.682" starttime="20201105 01:22:05.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:22:05.686" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-26.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:22:44.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:22:44.470" level="INFO">${output} = 2020-11-05 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:22:44.470" starttime="20201105 01:22:05.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:22:44.471" level="INFO">2020-11-05 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:08 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 01:22:08 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:22:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:22:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:22:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:22:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D5EBDE902E72-&gt;37f0de73-8612-4307-9f1a-8016215c0e3f
2020-11-05 01:22:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:22:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:22:09 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:22:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539114490_0004
2020-11-05 01:22:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:22:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:12 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 01:22:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 01:22:12 INFO  YarnClientImpl:324 - Submitted application application_1604539114490_0004
2020-11-05 01:22:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539114490_0004/
2020-11-05 01:22:12 INFO  Job:1619 - Running job: job_1604539114490_0004
2020-11-05 01:22:19 INFO  Job:1640 - Job job_1604539114490_0004 running in uber mode : false
2020-11-05 01:22:19 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:22:26 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:22:32 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:22:37 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:22:42 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:22:43 INFO  Job:1658 - Job job_1604539114490_0004 completed successfully
2020-11-05 01:22:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41912
		Total time spent by all reduces in occupied slots (ms)=15576
		Total time spent by all map tasks (ms)=10478
		Total time spent by all reduce tasks (ms)=3894
		Total vcore-milliseconds taken by all map tasks=10478
		Total vcore-milliseconds taken by all reduce tasks=3894
		Total megabyte-milliseconds taken by all map tasks=42917888
		Total megabyte-milliseconds taken by all reduce tasks=15949824
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=699
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1216897024
		Virtual memory (bytes) snapshot=15803850752
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=315650048
		Peak Map Virtual memory (bytes)=3952750592
		Peak Reduce Physical memory (bytes)=292843520
		Peak Reduce Virtual memory (bytes)=3963203584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-05 01:22:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:22:44.472" starttime="20201105 01:22:44.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:22:44.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:22:44.472" starttime="20201105 01:22:44.472"></status>
</kw>
<status status="PASS" endtime="20201105 01:22:44.472" starttime="20201105 01:22:05.683"></status>
</kw>
<msg timestamp="20201105 01:22:44.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:22:44.473" starttime="20201105 01:22:05.683"></status>
</kw>
<msg timestamp="20201105 01:22:44.473" level="INFO">${output} = 2020-11-05 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:22:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:22:44.473" starttime="20201105 01:22:05.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 01:22:44.474" starttime="20201105 01:22:44.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:22:44.475" starttime="20201105 01:22:44.474"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:22:44.475" critical="yes" starttime="20201105 01:22:05.643"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 01:22:44.476" starttime="20201105 01:21:21.387"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:39.936" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:19:39.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:19:39.940" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:19:39.940" starttime="20201105 01:19:39.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:19:39.941" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:19:39.941" starttime="20201105 01:19:39.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:19:39.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:19:39.942" starttime="20201105 01:19:39.941"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:39.942" starttime="20201105 01:19:39.930"></status>
</kw>
<msg timestamp="20201105 01:19:39.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:19:39.942" starttime="20201105 01:19:39.930"></status>
</kw>
<msg timestamp="20201105 01:19:39.943" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:19:39.943" starttime="20201105 01:19:39.929"></status>
</kw>
<msg timestamp="20201105 01:19:39.943" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:19:39.943" starttime="20201105 01:19:39.929"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:19:39.947" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:19:39.947" starttime="20201105 01:19:39.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:19:39.948" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:19:39.948" starttime="20201105 01:19:39.948"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:39.948" starttime="20201105 01:19:39.945"></status>
</kw>
<msg timestamp="20201105 01:19:39.948" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:19:39.948" starttime="20201105 01:19:39.945"></status>
</kw>
<status status="PASS" endtime="20201105 01:19:39.949" starttime="20201105 01:19:39.944"></status>
</kw>
<msg timestamp="20201105 01:19:39.949" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:19:39.949" starttime="20201105 01:19:39.944"></status>
</kw>
<msg timestamp="20201105 01:19:39.949" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:19:39.949" starttime="20201105 01:19:39.943"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:19:39.952" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:20:27.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:20:27.413" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19...</msg>
<status status="PASS" endtime="20201105 01:20:27.413" starttime="20201105 01:19:39.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:20:27.414" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:42 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 01:19:42 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:19:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:19:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:19:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:19:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB0F2793B534-&gt;37f0de73-8612-4307-9f1a-8016215c0e3f
2020-11-05 01:19:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 01:19:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-05 01:19:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:19:46 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:19:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539114490_0001
2020-11-05 01:19:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:19:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:49 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 01:19:49 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 01:19:50 INFO  YarnClientImpl:324 - Submitted application application_1604539114490_0001
2020-11-05 01:19:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539114490_0001/
2020-11-05 01:19:50 INFO  Job:1619 - Running job: job_1604539114490_0001
2020-11-05 01:20:00 INFO  Job:1640 - Job job_1604539114490_0001 running in uber mode : false
2020-11-05 01:20:00 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:20:07 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:20:13 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:20:18 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:20:23 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:20:26 INFO  Job:1658 - Job job_1604539114490_0001 completed successfully
2020-11-05 01:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41272
		Total time spent by all reduces in occupied slots (ms)=15384
		Total time spent by all map tasks (ms)=10318
		Total time spent by all reduce tasks (ms)=3846
		Total vcore-milliseconds taken by all map tasks=10318
		Total vcore-milliseconds taken by all reduce tasks=3846
		Total megabyte-milliseconds taken by all map tasks=42262528
		Total megabyte-milliseconds taken by all reduce tasks=15753216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1211363328
		Virtual memory (bytes) snapshot=15779610624
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=318971904
		Peak Map Virtual memory (bytes)=3946233856
		Peak Reduce Physical memory (bytes)=299466752
		Peak Reduce Virtual memory (bytes)=3972124672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.361 seconds
2020-11-05 01:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:26 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-05 01:20:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:20:27.415" starttime="20201105 01:20:27.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:20:27.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:20:27.415" starttime="20201105 01:20:27.415"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.416" starttime="20201105 01:19:39.950"></status>
</kw>
<msg timestamp="20201105 01:20:27.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:20:27.416" starttime="20201105 01:19:39.950"></status>
</kw>
<msg timestamp="20201105 01:20:27.416" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:19...</msg>
<status status="PASS" endtime="20201105 01:20:27.416" starttime="20201105 01:19:39.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:20:27.417" starttime="20201105 01:20:27.417"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:20:27.417" critical="yes" starttime="20201105 01:19:39.928"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:20:27.422" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:20:27.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:20:27.428" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:20:27.428" starttime="20201105 01:20:27.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:20:27.429" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:20:27.430" starttime="20201105 01:20:27.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:20:27.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:20:27.430" starttime="20201105 01:20:27.430"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.431" starttime="20201105 01:20:27.420"></status>
</kw>
<msg timestamp="20201105 01:20:27.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:20:27.431" starttime="20201105 01:20:27.419"></status>
</kw>
<msg timestamp="20201105 01:20:27.431" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:20:27.431" starttime="20201105 01:20:27.419"></status>
</kw>
<msg timestamp="20201105 01:20:27.431" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 01:20:27.431" starttime="20201105 01:20:27.419"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:20:27.432" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201105 01:20:27.432" starttime="20201105 01:20:27.431"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:20:27.436" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:20:27.436" starttime="20201105 01:20:27.435"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:20:27.436" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:20:27.436" starttime="20201105 01:20:27.436"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.437" starttime="20201105 01:20:27.435"></status>
</kw>
<msg timestamp="20201105 01:20:27.437" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:20:27.437" starttime="20201105 01:20:27.434"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.437" starttime="20201105 01:20:27.433"></status>
</kw>
<msg timestamp="20201105 01:20:27.437" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:20:27.437" starttime="20201105 01:20:27.433"></status>
</kw>
<msg timestamp="20201105 01:20:27.437" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:20:27.437" starttime="20201105 01:20:27.432"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:20:27.441" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:20:27.441" starttime="20201105 01:20:27.440"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:20:27.442" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:20:27.442" starttime="20201105 01:20:27.441"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.442" starttime="20201105 01:20:27.440"></status>
</kw>
<msg timestamp="20201105 01:20:27.442" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:20:27.442" starttime="20201105 01:20:27.439"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.442" starttime="20201105 01:20:27.439"></status>
</kw>
<msg timestamp="20201105 01:20:27.442" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 01:20:27.442" starttime="20201105 01:20:27.438"></status>
</kw>
<msg timestamp="20201105 01:20:27.443" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 01:20:27.443" starttime="20201105 01:20:27.438"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:20:27.446" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:20:27.446" starttime="20201105 01:20:27.445"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:20:27.446" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:20:27.446" starttime="20201105 01:20:27.446"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.447" starttime="20201105 01:20:27.445"></status>
</kw>
<msg timestamp="20201105 01:20:27.447" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:20:27.447" starttime="20201105 01:20:27.444"></status>
</kw>
<status status="PASS" endtime="20201105 01:20:27.447" starttime="20201105 01:20:27.444"></status>
</kw>
<msg timestamp="20201105 01:20:27.447" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20201105 01:20:27.447" starttime="20201105 01:20:27.443"></status>
</kw>
<msg timestamp="20201105 01:20:27.447" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20201105 01:20:27.447" starttime="20201105 01:20:27.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:20:27.451" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:21:06.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:21:06.058" level="INFO">${output} = 2020-11-05 01:20:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:21:06.059" starttime="20201105 01:20:27.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:21:06.060" level="INFO">2020-11-05 01:20:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 01:20:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 01:20:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:20:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:20:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:20:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1EB01243B1D6-&gt;37f0de73-8612-4307-9f1a-8016215c0e3f
2020-11-05 01:20:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:20:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:20:31 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:20:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539114490_0002
2020-11-05 01:20:31 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:20:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:32 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 01:20:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 01:20:32 INFO  YarnClientImpl:324 - Submitted application application_1604539114490_0002
2020-11-05 01:20:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539114490_0002/
2020-11-05 01:20:32 INFO  Job:1619 - Running job: job_1604539114490_0002
2020-11-05 01:20:40 INFO  Job:1640 - Job job_1604539114490_0002 running in uber mode : false
2020-11-05 01:20:40 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:20:47 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:20:53 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:20:59 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:21:04 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:21:05 INFO  Job:1658 - Job job_1604539114490_0002 completed successfully
2020-11-05 01:21:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:21:05 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1084081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42720
		Total time spent by all reduces in occupied slots (ms)=15388
		Total time spent by all map tasks (ms)=10680
		Total time spent by all reduce tasks (ms)=3847
		Total vcore-milliseconds taken by all map tasks=10680
		Total vcore-milliseconds taken by all reduce tasks=3847
		Total megabyte-milliseconds taken by all map tasks=43745280
		Total megabyte-milliseconds taken by all reduce tasks=15757312
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=615
		CPU time spent (ms)=7330
		Physical memory (bytes) snapshot=1206083584
		Virtual memory (bytes) snapshot=15789617152
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=313712640
		Peak Map Virtual memory (bytes)=3948294144
		Peak Reduce Physical memory (bytes)=271675392
		Peak Reduce Virtual memory (bytes)=3951915008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-11-05 01:21:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 01:21:06.060" starttime="20201105 01:21:06.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:21:06.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:21:06.061" starttime="20201105 01:21:06.061"></status>
</kw>
<status status="PASS" endtime="20201105 01:21:06.062" starttime="20201105 01:20:27.448"></status>
</kw>
<msg timestamp="20201105 01:21:06.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:21:06.062" starttime="20201105 01:20:27.448"></status>
</kw>
<msg timestamp="20201105 01:21:06.063" level="INFO">${output} = 2020-11-05 01:20:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 01:20:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 01:21:06.063" starttime="20201105 01:20:27.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 01:21:06.063" starttime="20201105 01:21:06.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:21:06.064" starttime="20201105 01:21:06.063"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:21:06.064" critical="yes" starttime="20201105 01:20:27.418"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 01:21:06.065" starttime="20201105 01:19:39.875"></status>
</suite>
<status status="PASS" elapsedtime="210158" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:23:51.820" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:23:55.700" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 01:23:55.701" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:23:55.701" starttime="20201105 01:23:51.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:23:55.702" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:23:55.702" starttime="20201105 01:23:55.701"></status>
</kw>
<msg timestamp="20201105 01:23:55.702" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 01:23:55.702" starttime="20201105 01:23:51.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:23:55.708" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:23:59.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:23:59.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:23:59.183" starttime="20201105 01:23:55.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:23:59.185" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:23:59.185" starttime="20201105 01:23:59.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:23:59.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:23:59.186" starttime="20201105 01:23:59.185"></status>
</kw>
<status status="PASS" endtime="20201105 01:23:59.186" starttime="20201105 01:23:55.704"></status>
</kw>
<msg timestamp="20201105 01:23:59.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:23:59.186" starttime="20201105 01:23:55.704"></status>
</kw>
<msg timestamp="20201105 01:23:59.187" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 01:23:59.187" starttime="20201105 01:23:55.703"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 01:23:59.187" starttime="20201105 01:23:59.187"></status>
</kw>
<status status="PASS" endtime="20201105 01:23:59.187" starttime="20201105 01:23:55.703"></status>
</kw>
<status status="PASS" endtime="20201105 01:23:59.188" starttime="20201105 01:23:55.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:23:59.192" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:02.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:02.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:02.839" starttime="20201105 01:23:59.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:02.841" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:02.841" starttime="20201105 01:24:02.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:02.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:02.841" starttime="20201105 01:24:02.841"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:02.842" starttime="20201105 01:23:59.189"></status>
</kw>
<msg timestamp="20201105 01:24:02.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:02.842" starttime="20201105 01:23:59.189"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:02.842" starttime="20201105 01:23:59.189"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:02.842" starttime="20201105 01:23:59.188"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:02.842" starttime="20201105 01:23:59.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 01:24:02.843" starttime="20201105 01:24:02.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:02.847" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:06.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:06.373" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:24:02.576Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 01:24:06.373" starttime="20201105 01:24:02.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:06.374" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:24:02.576Z",
  "modificationTime" : "2020-11-05T01:24:02.576Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 01:24:06.374" starttime="20201105 01:24:06.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:06.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:06.375" starttime="20201105 01:24:06.374"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:06.375" starttime="20201105 01:24:02.844"></status>
</kw>
<msg timestamp="20201105 01:24:06.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:06.375" starttime="20201105 01:24:02.844"></status>
</kw>
<msg timestamp="20201105 01:24:06.375" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T01:24:02.576Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 01:24:06.375" starttime="20201105 01:24:02.843"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 01:24:06.376" starttime="20201105 01:24:06.376"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:24:06.380" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:24:06.380" starttime="20201105 01:24:06.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:24:06.380" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:24:06.380" starttime="20201105 01:24:06.380"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:06.381" starttime="20201105 01:24:06.379"></status>
</kw>
<msg timestamp="20201105 01:24:06.381" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:24:06.381" starttime="20201105 01:24:06.378"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:06.381" starttime="20201105 01:24:06.378"></status>
</kw>
<msg timestamp="20201105 01:24:06.381" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 01:24:06.381" starttime="20201105 01:24:06.377"></status>
</kw>
<msg timestamp="20201105 01:24:06.381" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 01:24:06.381" starttime="20201105 01:24:06.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:06.385" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:09.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:09.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:09.746" starttime="20201105 01:24:06.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:09.747" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:09.747" starttime="20201105 01:24:09.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:09.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:09.747" starttime="20201105 01:24:09.747"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:09.748" starttime="20201105 01:24:06.382"></status>
</kw>
<msg timestamp="20201105 01:24:09.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:09.748" starttime="20201105 01:24:06.382"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:09.748" starttime="20201105 01:24:06.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:09.752" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:16.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:16.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:16.749" starttime="20201105 01:24:09.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:16.750" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:16.750" starttime="20201105 01:24:16.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:16.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:16.750" starttime="20201105 01:24:16.750"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:16.751" starttime="20201105 01:24:09.749"></status>
</kw>
<msg timestamp="20201105 01:24:16.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:16.751" starttime="20201105 01:24:09.749"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:16.751" starttime="20201105 01:24:09.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:16.761" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:22.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:22.712" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:22.713" starttime="20201105 01:24:16.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:22.714" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:22.714" starttime="20201105 01:24:22.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:22.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:22.715" starttime="20201105 01:24:22.714"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:22.715" starttime="20201105 01:24:16.758"></status>
</kw>
<msg timestamp="20201105 01:24:22.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:22.715" starttime="20201105 01:24:16.752"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:22.715" starttime="20201105 01:24:16.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:22.719" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:27.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:27.899" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:27.899" starttime="20201105 01:24:22.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:27.900" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:27.900" starttime="20201105 01:24:27.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:27.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:27.901" starttime="20201105 01:24:27.901"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:27.901" starttime="20201105 01:24:22.716"></status>
</kw>
<msg timestamp="20201105 01:24:27.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:27.902" starttime="20201105 01:24:22.716"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:27.902" starttime="20201105 01:24:22.715"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:24:27.902" critical="yes" starttime="20201105 01:23:51.813"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:24:27.907" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:24:27.907" starttime="20201105 01:24:27.907"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:24:27.908" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:24:27.908" starttime="20201105 01:24:27.908"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:27.908" starttime="20201105 01:24:27.906"></status>
</kw>
<msg timestamp="20201105 01:24:27.908" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:24:27.908" starttime="20201105 01:24:27.906"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:27.909" starttime="20201105 01:24:27.905"></status>
</kw>
<msg timestamp="20201105 01:24:27.909" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:24:27.909" starttime="20201105 01:24:27.905"></status>
</kw>
<msg timestamp="20201105 01:24:27.909" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:24:27.909" starttime="20201105 01:24:27.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:27.913" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:31.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:31.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:31.175" starttime="20201105 01:24:27.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:31.176" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:31.177" starttime="20201105 01:24:31.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:31.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:31.177" starttime="20201105 01:24:31.177"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:31.178" starttime="20201105 01:24:27.910"></status>
</kw>
<msg timestamp="20201105 01:24:31.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:31.178" starttime="20201105 01:24:27.910"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:31.178" starttime="20201105 01:24:27.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:31.182" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:34.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:34.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 01:24:34.315" starttime="20201105 01:24:31.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:34.316" level="INFO"></msg>
<status status="PASS" endtime="20201105 01:24:34.316" starttime="20201105 01:24:34.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:34.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:34.317" starttime="20201105 01:24:34.317"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:34.317" starttime="20201105 01:24:31.179"></status>
</kw>
<msg timestamp="20201105 01:24:34.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:34.318" starttime="20201105 01:24:31.179"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:34.318" starttime="20201105 01:24:31.178"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 01:24:34.318" critical="yes" starttime="20201105 01:24:27.903"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 01:24:34.319" starttime="20201105 01:23:51.755"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:26:13.667" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:26:13.667" starttime="20201105 01:26:13.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:26:13.668" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:26:13.668" starttime="20201105 01:26:13.668"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:13.668" starttime="20201105 01:26:13.666"></status>
</kw>
<msg timestamp="20201105 01:26:13.668" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:26:13.668" starttime="20201105 01:26:13.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:26:13.669" starttime="20201105 01:26:13.669"></status>
</kw>
<msg timestamp="20201105 01:26:13.669" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:26:13.669" starttime="20201105 01:26:13.668"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:13.670" starttime="20201105 01:26:13.665"></status>
</kw>
<msg timestamp="20201105 01:26:13.670" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:26:13.670" starttime="20201105 01:26:13.665"></status>
</kw>
<msg timestamp="20201105 01:26:13.670" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:26:13.670" starttime="20201105 01:26:13.664"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:26:13.671" level="INFO">${random} = 32544</msg>
<status status="PASS" endtime="20201105 01:26:13.671" starttime="20201105 01:26:13.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:26:13.676" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-32544 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:26:17.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:26:17.276" level="INFO">${output} = 2020-11-05 01:26:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:26:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 01:26:17.276" starttime="20201105 01:26:13.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:26:17.278" level="INFO">2020-11-05 01:26:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:26:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:26:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:26:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:26:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79928CB80F99-&gt;a3b6d0ae-25d6-42e0-81c8-22c21ca129bc
2020-11-05 01:26:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 01:26:17.278" starttime="20201105 01:26:17.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:26:17.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:26:17.278" starttime="20201105 01:26:17.278"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:17.279" starttime="20201105 01:26:13.672"></status>
</kw>
<msg timestamp="20201105 01:26:17.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:26:17.279" starttime="20201105 01:26:13.671"></status>
</kw>
<msg timestamp="20201105 01:26:17.279" level="INFO">${result} = 2020-11-05 01:26:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:26:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 01:26:17.279" starttime="20201105 01:26:13.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:26:17.284" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:26:19.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:26:19.171" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:26 ofs://om/volume1/bucket1/ozone-32544
-rw-...</msg>
<status status="PASS" endtime="20201105 01:26:19.171" starttime="20201105 01:26:17.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:26:19.172" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:26 ofs://om/volume1/bucket1/ozone-32544
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:24 ofs://om/volume1/bucket1/ozone-41451
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:25 ofs://om/volume1/bucket1/wordcount-47.txt</msg>
<status status="PASS" endtime="20201105 01:26:19.172" starttime="20201105 01:26:19.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:26:19.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:26:19.173" starttime="20201105 01:26:19.172"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:19.173" starttime="20201105 01:26:17.281"></status>
</kw>
<msg timestamp="20201105 01:26:19.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:26:19.174" starttime="20201105 01:26:17.281"></status>
</kw>
<msg timestamp="20201105 01:26:19.174" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:26 ofs://om/volume1/bucket1/ozone-32544
-rw-...</msg>
<status status="PASS" endtime="20201105 01:26:19.174" starttime="20201105 01:26:17.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:26:19.174" starttime="20201105 01:26:19.174"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:26:19.175" critical="yes" starttime="20201105 01:26:13.663"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 01:26:19.176" starttime="20201105 01:26:13.611"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:24:39.302" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:24:39.302" starttime="20201105 01:24:39.302"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:24:39.303" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:24:39.303" starttime="20201105 01:24:39.303"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:39.303" starttime="20201105 01:24:39.301"></status>
</kw>
<msg timestamp="20201105 01:24:39.303" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:24:39.303" starttime="20201105 01:24:39.301"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:39.304" starttime="20201105 01:24:39.300"></status>
</kw>
<msg timestamp="20201105 01:24:39.304" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:24:39.304" starttime="20201105 01:24:39.300"></status>
</kw>
<msg timestamp="20201105 01:24:39.304" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:24:39.304" starttime="20201105 01:24:39.299"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:24:39.305" level="INFO">${random} = 41451</msg>
<status status="PASS" endtime="20201105 01:24:39.305" starttime="20201105 01:24:39.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:39.310" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-41451 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:43.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:43.348" level="INFO">${output} = 2020-11-05 01:24:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:24:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 01:24:43.348" starttime="20201105 01:24:39.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:43.349" level="INFO">2020-11-05 01:24:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:24:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:24:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:24:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:24:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E234391F3A81-&gt;a3b6d0ae-25d6-42e0-81c8-22c21ca129bc
2020-11-05 01:24:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 01:24:43.349" starttime="20201105 01:24:43.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:43.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:43.350" starttime="20201105 01:24:43.350"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:43.350" starttime="20201105 01:24:39.306"></status>
</kw>
<msg timestamp="20201105 01:24:43.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:43.351" starttime="20201105 01:24:39.305"></status>
</kw>
<msg timestamp="20201105 01:24:43.351" level="INFO">${result} = 2020-11-05 01:24:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:24:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 01:24:43.351" starttime="20201105 01:24:39.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:43.356" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:45.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:45.251" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:24 o3fs://bucket1.volume1.om/ozone-41451
dr...</msg>
<status status="PASS" endtime="20201105 01:24:45.251" starttime="20201105 01:24:43.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:45.252" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:24 o3fs://bucket1.volume1.om/ozone-41451
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 01:24:45.252" starttime="20201105 01:24:45.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:45.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:45.253" starttime="20201105 01:24:45.252"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:45.253" starttime="20201105 01:24:43.353"></status>
</kw>
<msg timestamp="20201105 01:24:45.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:45.253" starttime="20201105 01:24:43.352"></status>
</kw>
<msg timestamp="20201105 01:24:45.254" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 01:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 01:24 o3fs://bucket1.volume1.om/ozone-41451
dr...</msg>
<status status="PASS" endtime="20201105 01:24:45.254" starttime="20201105 01:24:43.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:24:45.254" starttime="20201105 01:24:45.254"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 01:24:45.254" critical="yes" starttime="20201105 01:24:39.298"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 01:24:45.255" starttime="20201105 01:24:39.243"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:26:24.092" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:26:24.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:26:24.098" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:26:24.098" starttime="20201105 01:26:24.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:26:24.099" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:26:24.099" starttime="20201105 01:26:24.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:26:24.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:26:24.100" starttime="20201105 01:26:24.099"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:24.100" starttime="20201105 01:26:24.086"></status>
</kw>
<msg timestamp="20201105 01:26:24.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:26:24.100" starttime="20201105 01:26:24.085"></status>
</kw>
<msg timestamp="20201105 01:26:24.100" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:26:24.100" starttime="20201105 01:26:24.085"></status>
</kw>
<msg timestamp="20201105 01:26:24.101" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:26:24.101" starttime="20201105 01:26:24.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:26:24.106" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:26:24.106" starttime="20201105 01:26:24.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:26:24.107" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:26:24.107" starttime="20201105 01:26:24.106"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:24.107" starttime="20201105 01:26:24.104"></status>
</kw>
<msg timestamp="20201105 01:26:24.107" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:26:24.107" starttime="20201105 01:26:24.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:26:24.108" starttime="20201105 01:26:24.107"></status>
</kw>
<msg timestamp="20201105 01:26:24.108" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:26:24.108" starttime="20201105 01:26:24.107"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:24.108" starttime="20201105 01:26:24.102"></status>
</kw>
<msg timestamp="20201105 01:26:24.108" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:26:24.108" starttime="20201105 01:26:24.102"></status>
</kw>
<msg timestamp="20201105 01:26:24.109" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:26:24.109" starttime="20201105 01:26:24.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:26:24.113" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:27:00.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:27:00.858" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:26:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:26:26 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 01:27:00.858" starttime="20201105 01:26:24.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:27:00.859" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:26:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:26:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:26:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:26:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:26:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4CEFBED2859-&gt;a3b6d0ae-25d6-42e0-81c8-22c21ca129bc
2020-11-05 01:26:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 01:26:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:26:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:26:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:26:28 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:26:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539411543_0003
2020-11-05 01:26:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:26:28 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 01:26:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 01:26:28 INFO  YarnClientImpl:329 - Submitted application application_1604539411543_0003
2020-11-05 01:26:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539411543_0003/
2020-11-05 01:26:28 INFO  Job:1619 - Running job: job_1604539411543_0003
2020-11-05 01:26:35 INFO  Job:1640 - Job job_1604539411543_0003 running in uber mode : false
2020-11-05 01:26:35 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:26:42 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:26:49 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:26:55 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:27:00 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:27:00 INFO  Job:1658 - Job job_1604539411543_0003 completed successfully
2020-11-05 01:27:00 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41880
		Total time spent by all reduces in occupied slots (ms)=16440
		Total time spent by all map tasks (ms)=10470
		Total time spent by all reduce tasks (ms)=4110
		Total vcore-milliseconds taken by all map tasks=10470
		Total vcore-milliseconds taken by all reduce tasks=4110
		Total megabyte-milliseconds taken by all map tasks=42885120
		Total megabyte-milliseconds taken by all reduce tasks=16834560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=671
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1281441792
		Virtual memory (bytes) snapshot=15818829824
		Total committed heap usage (bytes)=1270349824
		Peak Map Physical memory (bytes)=295780352
		Peak Map Virtual memory (bytes)=3953582080
		Peak Reduce Physical memory (bytes)=395689984
		Peak Reduce Virtual memory (bytes)=3968598016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.921 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 01:27:00.859" starttime="20201105 01:27:00.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:27:00.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:27:00.860" starttime="20201105 01:27:00.859"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.860" starttime="20201105 01:26:24.110"></status>
</kw>
<msg timestamp="20201105 01:27:00.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:27:00.860" starttime="20201105 01:26:24.109"></status>
</kw>
<msg timestamp="20201105 01:27:00.861" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:26:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:26:26 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 01:27:00.861" starttime="20201105 01:26:24.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:27:00.861" starttime="20201105 01:27:00.861"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:27:00.862" critical="yes" starttime="20201105 01:26:24.084"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:27:00.867" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:27:00.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:27:00.872" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:27:00.872" starttime="20201105 01:27:00.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:27:00.873" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:27:00.873" starttime="20201105 01:27:00.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:27:00.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:27:00.874" starttime="20201105 01:27:00.873"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.874" starttime="20201105 01:27:00.864"></status>
</kw>
<msg timestamp="20201105 01:27:00.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:27:00.874" starttime="20201105 01:27:00.864"></status>
</kw>
<msg timestamp="20201105 01:27:00.875" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:27:00.875" starttime="20201105 01:27:00.864"></status>
</kw>
<msg timestamp="20201105 01:27:00.875" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:27:00.875" starttime="20201105 01:27:00.863"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:27:00.875" level="INFO">${random} = 48</msg>
<status status="PASS" endtime="20201105 01:27:00.875" starttime="20201105 01:27:00.875"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:27:00.879" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:27:00.879" starttime="20201105 01:27:00.879"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:27:00.880" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:27:00.880" starttime="20201105 01:27:00.879"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.880" starttime="20201105 01:27:00.878"></status>
</kw>
<msg timestamp="20201105 01:27:00.880" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:27:00.880" starttime="20201105 01:27:00.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 01:27:00.881" starttime="20201105 01:27:00.881"></status>
</kw>
<msg timestamp="20201105 01:27:00.881" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 01:27:00.881" starttime="20201105 01:27:00.880"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.882" starttime="20201105 01:27:00.877"></status>
</kw>
<msg timestamp="20201105 01:27:00.882" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:27:00.882" starttime="20201105 01:27:00.876"></status>
</kw>
<msg timestamp="20201105 01:27:00.882" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 01:27:00.882" starttime="20201105 01:27:00.876"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:27:00.885" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:27:00.885" starttime="20201105 01:27:00.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:27:00.885" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:27:00.885" starttime="20201105 01:27:00.885"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.886" starttime="20201105 01:27:00.884"></status>
</kw>
<msg timestamp="20201105 01:27:00.886" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:27:00.886" starttime="20201105 01:27:00.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:27:00.887" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 01:27:00.887" starttime="20201105 01:27:00.887"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:27:00.888" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 01:27:00.888" starttime="20201105 01:27:00.888"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.888" starttime="20201105 01:27:00.886"></status>
</kw>
<msg timestamp="20201105 01:27:00.888" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 01:27:00.888" starttime="20201105 01:27:00.886"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.889" starttime="20201105 01:27:00.883"></status>
</kw>
<msg timestamp="20201105 01:27:00.889" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 01:27:00.889" starttime="20201105 01:27:00.883"></status>
</kw>
<msg timestamp="20201105 01:27:00.889" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 01:27:00.889" starttime="20201105 01:27:00.882"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 01:27:00.892" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 01:27:00.892" starttime="20201105 01:27:00.892"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:27:00.893" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 01:27:00.893" starttime="20201105 01:27:00.892"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.893" starttime="20201105 01:27:00.891"></status>
</kw>
<msg timestamp="20201105 01:27:00.893" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 01:27:00.893" starttime="20201105 01:27:00.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:27:00.894" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 01:27:00.894" starttime="20201105 01:27:00.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:27:00.895" level="INFO">${result} = /wordcount-48.txt</msg>
<status status="PASS" endtime="20201105 01:27:00.895" starttime="20201105 01:27:00.894"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.895" starttime="20201105 01:27:00.893"></status>
</kw>
<msg timestamp="20201105 01:27:00.895" level="INFO">${path_with_leading} = /wordcount-48.txt</msg>
<status status="PASS" endtime="20201105 01:27:00.895" starttime="20201105 01:27:00.893"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:00.895" starttime="20201105 01:27:00.890"></status>
</kw>
<msg timestamp="20201105 01:27:00.896" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-48.txt</msg>
<status status="PASS" endtime="20201105 01:27:00.896" starttime="20201105 01:27:00.890"></status>
</kw>
<msg timestamp="20201105 01:27:00.896" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-48.txt</msg>
<status status="PASS" endtime="20201105 01:27:00.896" starttime="20201105 01:27:00.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:27:00.901" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-48.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:27:41.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:27:41.883" level="INFO">${output} = 2020-11-05 01:27:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:27:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 01:27:41.883" starttime="20201105 01:27:00.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:27:41.884" level="INFO">2020-11-05 01:27:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:27:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:27:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:27:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:27:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:27:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:27:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AC9195B071BC-&gt;a3b6d0ae-25d6-42e0-81c8-22c21ca129bc
2020-11-05 01:27:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:27:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:27:04 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:27:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539411543_0004
2020-11-05 01:27:07 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:27:07 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 01:27:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 01:27:07 INFO  YarnClientImpl:329 - Submitted application application_1604539411543_0004
2020-11-05 01:27:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539411543_0004/
2020-11-05 01:27:07 INFO  Job:1619 - Running job: job_1604539411543_0004
2020-11-05 01:27:15 INFO  Job:1640 - Job job_1604539411543_0004 running in uber mode : false
2020-11-05 01:27:15 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:27:22 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:27:28 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:27:34 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:27:38 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:27:41 INFO  Job:1658 - Job job_1604539411543_0004 completed successfully
2020-11-05 01:27:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40692
		Total time spent by all reduces in occupied slots (ms)=15488
		Total time spent by all map tasks (ms)=10173
		Total time spent by all reduce tasks (ms)=3872
		Total vcore-milliseconds taken by all map tasks=10173
		Total vcore-milliseconds taken by all reduce tasks=3872
		Total megabyte-milliseconds taken by all map tasks=41668608
		Total megabyte-milliseconds taken by all reduce tasks=15859712
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7960
		Physical memory (bytes) snapshot=1274945536
		Virtual memory (bytes) snapshot=15815528448
		Total committed heap usage (bytes)=1259339776
		Peak Map Physical memory (bytes)=298229760
		Peak Map Virtual memory (bytes)=3952594944
		Peak Reduce Physical memory (bytes)=385769472
		Peak Reduce Virtual memory (bytes)=3967733760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201105 01:27:41.885" starttime="20201105 01:27:41.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:27:41.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:27:41.885" starttime="20201105 01:27:41.885"></status>
</kw>
<status status="PASS" endtime="20201105 01:27:41.886" starttime="20201105 01:27:00.897"></status>
</kw>
<msg timestamp="20201105 01:27:41.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:27:41.886" starttime="20201105 01:27:00.896"></status>
</kw>
<msg timestamp="20201105 01:27:41.886" level="INFO">${output} = 2020-11-05 01:27:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:27:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 01:27:41.886" starttime="20201105 01:27:00.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 01:27:41.887" starttime="20201105 01:27:41.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:27:41.887" starttime="20201105 01:27:41.887"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:27:41.888" critical="yes" starttime="20201105 01:27:00.862"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 01:27:41.889" starttime="20201105 01:26:24.030"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:50.174" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:24:50.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:24:50.179" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:24:50.179" starttime="20201105 01:24:50.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:24:50.180" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:24:50.180" starttime="20201105 01:24:50.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:24:50.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:24:50.181" starttime="20201105 01:24:50.181"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:50.181" starttime="20201105 01:24:50.168"></status>
</kw>
<msg timestamp="20201105 01:24:50.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:24:50.182" starttime="20201105 01:24:50.168"></status>
</kw>
<msg timestamp="20201105 01:24:50.182" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:24:50.182" starttime="20201105 01:24:50.168"></status>
</kw>
<msg timestamp="20201105 01:24:50.182" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:24:50.182" starttime="20201105 01:24:50.167"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:24:50.187" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:24:50.187" starttime="20201105 01:24:50.186"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:24:50.187" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:24:50.187" starttime="20201105 01:24:50.187"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:50.188" starttime="20201105 01:24:50.185"></status>
</kw>
<msg timestamp="20201105 01:24:50.188" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:24:50.188" starttime="20201105 01:24:50.184"></status>
</kw>
<status status="PASS" endtime="20201105 01:24:50.188" starttime="20201105 01:24:50.183"></status>
</kw>
<msg timestamp="20201105 01:24:50.188" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:24:50.188" starttime="20201105 01:24:50.183"></status>
</kw>
<msg timestamp="20201105 01:24:50.188" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:24:50.188" starttime="20201105 01:24:50.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:24:50.194" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:25:31.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:25:31.181" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:24:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:24:52 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 01:25:31.182" starttime="20201105 01:24:50.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:25:31.183" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:24:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:24:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:24:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:24:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:24:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-48B31526E498-&gt;a3b6d0ae-25d6-42e0-81c8-22c21ca129bc
2020-11-05 01:24:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 01:24:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:24:56 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:24:56 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:24:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539411543_0001
2020-11-05 01:24:57 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:24:57 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 01:24:57 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 01:24:57 INFO  YarnClientImpl:329 - Submitted application application_1604539411543_0001
2020-11-05 01:24:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539411543_0001/
2020-11-05 01:24:57 INFO  Job:1619 - Running job: job_1604539411543_0001
2020-11-05 01:25:08 INFO  Job:1640 - Job job_1604539411543_0001 running in uber mode : false
2020-11-05 01:25:08 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:25:15 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:25:20 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:25:25 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:25:29 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:25:30 INFO  Job:1658 - Job job_1604539411543_0001 completed successfully
2020-11-05 01:25:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40036
		Total time spent by all reduces in occupied slots (ms)=16476
		Total time spent by all map tasks (ms)=10009
		Total time spent by all reduce tasks (ms)=4119
		Total vcore-milliseconds taken by all map tasks=10009
		Total vcore-milliseconds taken by all reduce tasks=4119
		Total megabyte-milliseconds taken by all map tasks=40996864
		Total megabyte-milliseconds taken by all reduce tasks=16871424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=7000
		Physical memory (bytes) snapshot=1164935168
		Virtual memory (bytes) snapshot=15787593728
		Total committed heap usage (bytes)=1056440320
		Peak Map Physical memory (bytes)=296546304
		Peak Map Virtual memory (bytes)=3947610112
		Peak Reduce Physical memory (bytes)=306348032
		Peak Reduce Virtual memory (bytes)=3970043904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.5 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 01:25:31.183" starttime="20201105 01:25:31.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:25:31.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:25:31.184" starttime="20201105 01:25:31.183"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.184" starttime="20201105 01:24:50.189"></status>
</kw>
<msg timestamp="20201105 01:25:31.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:25:31.184" starttime="20201105 01:24:50.189"></status>
</kw>
<msg timestamp="20201105 01:25:31.185" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 01:24:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:24:52 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 01:25:31.185" starttime="20201105 01:24:50.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:25:31.185" starttime="20201105 01:25:31.185"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:25:31.185" critical="yes" starttime="20201105 01:24:50.166"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:25:31.191" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:25:31.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:25:31.197" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:25:31.197" starttime="20201105 01:25:31.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:25:31.198" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:25:31.198" starttime="20201105 01:25:31.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:25:31.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:25:31.199" starttime="20201105 01:25:31.199"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.199" starttime="20201105 01:25:31.189"></status>
</kw>
<msg timestamp="20201105 01:25:31.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:25:31.200" starttime="20201105 01:25:31.188"></status>
</kw>
<msg timestamp="20201105 01:25:31.200" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:25:31.200" starttime="20201105 01:25:31.188"></status>
</kw>
<msg timestamp="20201105 01:25:31.200" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 01:25:31.200" starttime="20201105 01:25:31.187"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 01:25:31.201" level="INFO">${random} = 47</msg>
<status status="PASS" endtime="20201105 01:25:31.201" starttime="20201105 01:25:31.200"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:25:31.205" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:25:31.205" starttime="20201105 01:25:31.204"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:25:31.205" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:25:31.206" starttime="20201105 01:25:31.205"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.206" starttime="20201105 01:25:31.204"></status>
</kw>
<msg timestamp="20201105 01:25:31.206" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:25:31.206" starttime="20201105 01:25:31.203"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.206" starttime="20201105 01:25:31.202"></status>
</kw>
<msg timestamp="20201105 01:25:31.206" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:25:31.206" starttime="20201105 01:25:31.202"></status>
</kw>
<msg timestamp="20201105 01:25:31.207" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 01:25:31.207" starttime="20201105 01:25:31.201"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:25:31.210" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:25:31.210" starttime="20201105 01:25:31.210"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:25:31.211" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:25:31.211" starttime="20201105 01:25:31.210"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.211" starttime="20201105 01:25:31.209"></status>
</kw>
<msg timestamp="20201105 01:25:31.211" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:25:31.211" starttime="20201105 01:25:31.209"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.211" starttime="20201105 01:25:31.208"></status>
</kw>
<msg timestamp="20201105 01:25:31.211" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 01:25:31.211" starttime="20201105 01:25:31.208"></status>
</kw>
<msg timestamp="20201105 01:25:31.212" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 01:25:31.212" starttime="20201105 01:25:31.207"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 01:25:31.215" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 01:25:31.215" starttime="20201105 01:25:31.215"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 01:25:31.216" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 01:25:31.216" starttime="20201105 01:25:31.215"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.216" starttime="20201105 01:25:31.214"></status>
</kw>
<msg timestamp="20201105 01:25:31.216" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 01:25:31.216" starttime="20201105 01:25:31.214"></status>
</kw>
<status status="PASS" endtime="20201105 01:25:31.216" starttime="20201105 01:25:31.213"></status>
</kw>
<msg timestamp="20201105 01:25:31.216" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-47.txt</msg>
<status status="PASS" endtime="20201105 01:25:31.216" starttime="20201105 01:25:31.213"></status>
</kw>
<msg timestamp="20201105 01:25:31.217" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-47.txt</msg>
<status status="PASS" endtime="20201105 01:25:31.217" starttime="20201105 01:25:31.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 01:25:31.222" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-47.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 01:26:08.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 01:26:08.795" level="INFO">${output} = 2020-11-05 01:25:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:25:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 01:26:08.796" starttime="20201105 01:25:31.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 01:26:08.797" level="INFO">2020-11-05 01:25:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:25:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 01:25:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 01:25:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 01:25:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 01:25:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 01:25:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B654DA2937F-&gt;a3b6d0ae-25d6-42e0-81c8-22c21ca129bc
2020-11-05 01:25:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 01:25:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 01:25:35 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 01:25:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604539411543_0002
2020-11-05 01:25:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 01:25:35 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 01:25:35 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 01:25:35 INFO  YarnClientImpl:329 - Submitted application application_1604539411543_0002
2020-11-05 01:25:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604539411543_0002/
2020-11-05 01:25:35 INFO  Job:1619 - Running job: job_1604539411543_0002
2020-11-05 01:25:44 INFO  Job:1640 - Job job_1604539411543_0002 running in uber mode : false
2020-11-05 01:25:44 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 01:25:51 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 01:25:56 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 01:26:02 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 01:26:07 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 01:26:08 INFO  Job:1658 - Job job_1604539411543_0002 completed successfully
2020-11-05 01:26:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1124185
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42372
		Total time spent by all reduces in occupied slots (ms)=15556
		Total time spent by all map tasks (ms)=10593
		Total time spent by all reduce tasks (ms)=3889
		Total vcore-milliseconds taken by all map tasks=10593
		Total vcore-milliseconds taken by all reduce tasks=3889
		Total megabyte-milliseconds taken by all map tasks=43388928
		Total megabyte-milliseconds taken by all reduce tasks=15929344
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=665
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1252454400
		Virtual memory (bytes) snapshot=15788490752
		Total committed heap usage (bytes)=1088946176
		Peak Map Physical memory (bytes)=298721280
		Peak Map Virtual memory (bytes)=3953061888
		Peak Reduce Physical memory (bytes)=385114112
		Peak Reduce Virtual memory (bytes)=3966861312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201105 01:26:08.797" starttime="20201105 01:26:08.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 01:26:08.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 01:26:08.798" starttime="20201105 01:26:08.797"></status>
</kw>
<status status="PASS" endtime="20201105 01:26:08.798" starttime="20201105 01:25:31.218"></status>
</kw>
<msg timestamp="20201105 01:26:08.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 01:26:08.798" starttime="20201105 01:25:31.218"></status>
</kw>
<msg timestamp="20201105 01:26:08.799" level="INFO">${output} = 2020-11-05 01:25:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-11-05 01:25:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 01:26:08.799" starttime="20201105 01:25:31.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 01:26:08.799" starttime="20201105 01:26:08.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 01:26:08.800" starttime="20201105 01:26:08.799"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 01:26:08.800" critical="yes" starttime="20201105 01:25:31.187"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 01:26:08.801" starttime="20201105 01:24:50.114"></status>
</suite>
<status status="PASS" elapsedtime="210687" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="617300" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
