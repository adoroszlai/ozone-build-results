<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 05:17:37.511" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:25.087" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:25.087" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 05:17:25.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:25.087" starttime="20201105 05:17:25.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:25.088" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:25.088" starttime="20201105 05:17:25.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:25.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 05:17:25.089" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 05:17:25.089" starttime="20201105 05:17:25.088"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:25.089" starttime="20201105 05:17:25.080"></status>
</kw>
<msg timestamp="20201105 05:17:25.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 05:17:25.090" starttime="20201105 05:17:25.080"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:25.090" starttime="20201105 05:17:25.079"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:25.090" starttime="20201105 05:17:25.079"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:26.096" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:26.097" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 05:17:26.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:26.097" starttime="20201105 05:17:26.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:26.098" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:26.098" starttime="20201105 05:17:26.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:26.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 05:17:26.099" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 05:17:26.099" starttime="20201105 05:17:26.098"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:26.099" starttime="20201105 05:17:26.092"></status>
</kw>
<msg timestamp="20201105 05:17:26.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 05:17:26.099" starttime="20201105 05:17:26.091"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:26.099" starttime="20201105 05:17:26.091"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:26.099" starttime="20201105 05:17:26.090"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:27.104" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:27.106" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 05:17:27.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:27.106" starttime="20201105 05:17:27.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:27.107" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:27.107" starttime="20201105 05:17:27.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:27.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 05:17:27.108" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 05:17:27.108" starttime="20201105 05:17:27.107"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:27.108" starttime="20201105 05:17:27.101"></status>
</kw>
<msg timestamp="20201105 05:17:27.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 05:17:27.108" starttime="20201105 05:17:27.101"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:27.108" starttime="20201105 05:17:27.101"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:27.109" starttime="20201105 05:17:27.100"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:28.114" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:28.115" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 05:17:28.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:28.115" starttime="20201105 05:17:28.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:28.116" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:28.116" starttime="20201105 05:17:28.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:28.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 05:17:28.117" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 05:17:28.117" starttime="20201105 05:17:28.116"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:28.117" starttime="20201105 05:17:28.111"></status>
</kw>
<msg timestamp="20201105 05:17:28.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 05:17:28.118" starttime="20201105 05:17:28.110"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:28.118" starttime="20201105 05:17:28.110"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:28.118" starttime="20201105 05:17:28.109"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:29.123" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:29.125" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 05:17:29.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:29.125" starttime="20201105 05:17:29.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:29.126" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:29.126" starttime="20201105 05:17:29.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:29.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 05:17:29.127" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 05:17:29.127" starttime="20201105 05:17:29.126"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:29.127" starttime="20201105 05:17:29.120"></status>
</kw>
<msg timestamp="20201105 05:17:29.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 05:17:29.127" starttime="20201105 05:17:29.120"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:29.127" starttime="20201105 05:17:29.120"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:29.127" starttime="20201105 05:17:29.119"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:30.139" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:30.141" level="INFO">${rc} = 1</msg>
<msg timestamp="20201105 05:17:30.141" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:30.141" starttime="20201105 05:17:30.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:30.142" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:30.142" starttime="20201105 05:17:30.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:30.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201105 05:17:30.143" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201105 05:17:30.143" starttime="20201105 05:17:30.143"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:30.143" starttime="20201105 05:17:30.129"></status>
</kw>
<msg timestamp="20201105 05:17:30.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201105 05:17:30.144" starttime="20201105 05:17:30.129"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:30.144" starttime="20201105 05:17:30.129"></status>
</kw>
<status status="FAIL" endtime="20201105 05:17:30.144" starttime="20201105 05:17:30.128"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:31.149" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:31.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:17:31.150" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:17:31.151" starttime="20201105 05:17:31.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:31.151" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:17:31.151" starttime="20201105 05:17:31.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:31.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:17:31.152" starttime="20201105 05:17:31.152"></status>
</kw>
<status status="PASS" endtime="20201105 05:17:31.152" starttime="20201105 05:17:31.146"></status>
</kw>
<msg timestamp="20201105 05:17:31.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:17:31.153" starttime="20201105 05:17:31.146"></status>
</kw>
<status status="PASS" endtime="20201105 05:17:31.153" starttime="20201105 05:17:31.146"></status>
</kw>
<status status="PASS" endtime="20201105 05:17:31.153" starttime="20201105 05:17:31.145"></status>
</kw>
<status status="PASS" endtime="20201105 05:17:31.153" starttime="20201105 05:17:25.079"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201105 05:17:31.153" critical="yes" starttime="20201105 05:17:25.078"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:17:31.157" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:17:31.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:17:31.524" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201105 05:17:31.524" starttime="20201105 05:17:31.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:17:31.525" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201105 05:17:31.526" starttime="20201105 05:17:31.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:17:31.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:17:31.526" starttime="20201105 05:17:31.526"></status>
</kw>
<status status="PASS" endtime="20201105 05:17:31.526" starttime="20201105 05:17:31.155"></status>
</kw>
<msg timestamp="20201105 05:17:31.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:17:31.527" starttime="20201105 05:17:31.155"></status>
</kw>
<msg timestamp="20201105 05:17:31.527" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201105 05:17:31.527" starttime="20201105 05:17:31.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201105 05:17:31.527" starttime="20201105 05:17:31.527"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201105 05:17:31.527" critical="yes" starttime="20201105 05:17:31.154"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201105 05:17:31.529" starttime="20201105 05:17:25.034"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
