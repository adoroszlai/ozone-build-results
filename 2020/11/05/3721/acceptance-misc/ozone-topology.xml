<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 05:44:00.658" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201105 05:41:23.029" starttime="20201105 05:41:23.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:41:23.035" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:41:23.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:41:23.130" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 05 Nov 2020 05:41:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 05 Nov 2020 05:07:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201105 05:41:23.130" starttime="20201105 05:41:23.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:41:23.132" level="INFO">HTTP/1.1 200 OK
Date: Thu, 05 Nov 2020 05:41:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 05 Nov 2020 05:07:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201105 05:41:23.132" starttime="20201105 05:41:23.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:41:23.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:41:23.133" starttime="20201105 05:41:23.132"></status>
</kw>
<status status="PASS" endtime="20201105 05:41:23.133" starttime="20201105 05:41:23.030"></status>
</kw>
<msg timestamp="20201105 05:41:23.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:41:23.133" starttime="20201105 05:41:23.030"></status>
</kw>
<msg timestamp="20201105 05:41:23.133" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 05 Nov 2020 05:41:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 05 Nov 2020 05:07:56 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201105 05:41:23.133" starttime="20201105 05:41:23.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201105 05:41:23.134" starttime="20201105 05:41:23.133"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:41:23.134" critical="yes" starttime="20201105 05:41:23.028"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201105 05:41:23.137" starttime="20201105 05:41:23.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:41:23.143" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:42:17.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:42:17.113" level="INFO">${output} = 2020-11-05 05:41:24,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:41:24,956 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:42:17.113" starttime="20201105 05:41:23.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:42:17.114" level="INFO">2020-11-05 05:41:24,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:41:24,956 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:41:24,956 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 05:41:26,789 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-05 05:41:26,790 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-11-05 05:41:26,792 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-11-05 05:41:26,792 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-11-05 05:41:26,792 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-05 05:41:26,792 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-05 05:41:26,792 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-11-05 05:41:26,804 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-11-05 05:41:26,806 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-05 05:41:26,817 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-05 05:41:26,885 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-33743, with hadoop as owner.
2020-11-05 05:41:27,129 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-86465, with hadoop as owner.
2020-11-05 05:41:27,138 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-45659, with hadoop as owner.
2020-11-05 05:41:27,143 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-27194, with hadoop as owner.
2020-11-05 05:41:27,149 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-32448, with hadoop as owner.
2020-11-05 05:41:27,160 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33743/bucket-0-85346, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,228 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-86465/bucket-0-39869, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,235 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45659/bucket-0-48286, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,247 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-27194/bucket-0-94953, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,255 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-32448/bucket-0-50325, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,261 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33743/bucket-1-67682, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,268 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-86465/bucket-1-36344, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,274 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45659/bucket-1-77319, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,281 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-27194/bucket-1-94819, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,289 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-32448/bucket-1-34344, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,305 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33743/bucket-2-44978, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-86465/bucket-2-93800, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,322 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45659/bucket-2-66327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,332 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-27194/bucket-2-02357, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,340 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-32448/bucket-2-42332, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,346 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33743/bucket-3-78913, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,353 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-86465/bucket-3-87135, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,359 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45659/bucket-3-71005, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-27194/bucket-3-07069, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,389 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-32448/bucket-3-87646, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,394 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-33743/bucket-4-01511, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,401 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-86465/bucket-4-47578, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,408 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45659/bucket-4-95189, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,415 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-27194/bucket-4-53368, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,421 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-32448/bucket-4-57251, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:41:27,820 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-11-05 05:41:28,640 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 05:41:28,821 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-05 05:41:28,984 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:41:28,985 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5A91EEA6632B-&gt;f9e1d401-0627-4c3a-9636-c922fe39b7a6
2020-11-05 05:41:28,986 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:41:29,821 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-05 05:41:30,822 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-11-05 05:41:31,740 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A84963570740-&gt;dbc5d6ff-78da-411b-83cb-af512226f71c
2020-11-05 05:41:31,741 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:41:31,825 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-05 05:41:32,829 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-05 05:41:33,829 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-11-05 05:41:34,830 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-11-05 05:41:35,837 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-11-05 05:41:36,837 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-11-05 05:41:37,838 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-11-05 05:41:38,838 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-11-05 05:41:39,839 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-05 05:41:40,839 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-11-05 05:41:41,841 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-11-05 05:41:42,847 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-11-05 05:41:43,847 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-05 05:41:44,848 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-11-05 05:41:45,848 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-11-05 05:41:46,849 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-11-05 05:41:47,850 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-11-05 05:41:48,850 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-05 05:41:49,850 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-05 05:41:50,851 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-11-05 05:41:51,852 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-05 05:41:52,852 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-05 05:41:53,853 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-11-05 05:41:54,853 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-11-05 05:41:55,854 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-11-05 05:41:56,854 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-11-05 05:41:57,855 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-05 05:41:58,855 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-05 05:41:59,856 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-11-05 05:42:00,857 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-11-05 05:42:01,857 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-11-05 05:42:02,859 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-11-05 05:42:03,861 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-11-05 05:42:04,861 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-11-05 05:42:05,862 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-11-05 05:42:06,862 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-11-05 05:42:07,869 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-11-05 05:42:08,869 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-11-05 05:42:09,870 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-11-05 05:42:10,870 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-11-05 05:42:11,871 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,309
Average Time spent in bucket creation: 00:00:00,171
Average Time spent in key creation: 00:00:02,219
Average Time spent in key write: 00:00:01,051
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:51,629
***************************************************</msg>
<status status="PASS" endtime="20201105 05:42:17.115" starttime="20201105 05:42:17.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:42:17.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:42:17.115" starttime="20201105 05:42:17.115"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:17.116" starttime="20201105 05:41:23.138"></status>
</kw>
<msg timestamp="20201105 05:42:17.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:42:17.116" starttime="20201105 05:41:23.138"></status>
</kw>
<msg timestamp="20201105 05:42:17.116" level="INFO">${result} = 2020-11-05 05:41:24,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:41:24,956 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:42:17.116" starttime="20201105 05:41:23.137"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:17.117" starttime="20201105 05:42:17.117"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:17.117" starttime="20201105 05:42:17.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:17.118" starttime="20201105 05:42:17.117"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:42:17.118" critical="yes" starttime="20201105 05:41:23.136"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 05:42:17.119" starttime="20201105 05:41:22.984"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:42:21.379" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:42:23.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:42:23.460" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201105 05:42:23.460" starttime="20201105 05:42:21.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:42:23.462" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1</msg>
<status status="PASS" endtime="20201105 05:42:23.462" starttime="20201105 05:42:23.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:42:23.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:42:23.462" starttime="20201105 05:42:23.462"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:23.463" starttime="20201105 05:42:21.374"></status>
</kw>
<msg timestamp="20201105 05:42:23.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:42:23.463" starttime="20201105 05:42:21.374"></status>
</kw>
<msg timestamp="20201105 05:42:23.463" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20201105 05:42:23.463" starttime="20201105 05:42:21.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:23.464" starttime="20201105 05:42:23.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:42:23.464" critical="yes" starttime="20201105 05:42:21.373"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:42:23.469" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:42:25.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:42:25.695" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201105 05:42:25.695" starttime="20201105 05:42:23.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:42:25.696" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20201105 05:42:25.696" starttime="20201105 05:42:25.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:42:25.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:42:25.697" starttime="20201105 05:42:25.697"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:25.697" starttime="20201105 05:42:23.466"></status>
</kw>
<msg timestamp="20201105 05:42:25.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:42:25.698" starttime="20201105 05:42:23.466"></status>
</kw>
<msg timestamp="20201105 05:42:25.698" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20201105 05:42:25.698" starttime="20201105 05:42:23.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:25.698" starttime="20201105 05:42:25.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:25.699" starttime="20201105 05:42:25.698"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:42:25.699" critical="yes" starttime="20201105 05:42:23.465"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 05:42:25.700" starttime="20201105 05:42:21.330"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:42:30.037" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:42:32.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:42:32.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:42:32.632" starttime="20201105 05:42:30.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:42:32.633" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:42:32.633" starttime="20201105 05:42:32.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:42:32.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:42:32.634" starttime="20201105 05:42:32.633"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:32.634" starttime="20201105 05:42:30.032"></status>
</kw>
<msg timestamp="20201105 05:42:32.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:42:32.634" starttime="20201105 05:42:30.032"></status>
</kw>
<msg timestamp="20201105 05:42:32.634" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:42:32.635" starttime="20201105 05:42:30.031"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:32.635" starttime="20201105 05:42:32.635"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:42:32.638" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:42:35.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:42:35.355" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:42:35.355" starttime="20201105 05:42:32.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:42:35.356" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:42:35.356" starttime="20201105 05:42:35.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:42:35.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:42:35.356" starttime="20201105 05:42:35.356"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:35.357" starttime="20201105 05:42:32.636"></status>
</kw>
<msg timestamp="20201105 05:42:35.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:42:35.357" starttime="20201105 05:42:32.636"></status>
</kw>
<msg timestamp="20201105 05:42:35.357" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:42:35.357" starttime="20201105 05:42:32.635"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:35.358" starttime="20201105 05:42:35.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:42:35.361" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:42:40.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:42:40.215" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:42:40.215" starttime="20201105 05:42:35.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:42:40.216" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:42:40.217" starttime="20201105 05:42:40.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:42:40.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:42:40.217" starttime="20201105 05:42:40.217"></status>
</kw>
<status status="PASS" endtime="20201105 05:42:40.217" starttime="20201105 05:42:35.358"></status>
</kw>
<msg timestamp="20201105 05:42:40.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:42:40.218" starttime="20201105 05:42:35.358"></status>
</kw>
<msg timestamp="20201105 05:42:40.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:42:40.218" starttime="20201105 05:42:35.358"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:42:40.218" starttime="20201105 05:42:40.218"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:42:40.219" critical="yes" starttime="20201105 05:42:30.031"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 05:42:40.220" starttime="20201105 05:42:29.982"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:43:50.280" level="INFO">${random} = 64424</msg>
<status status="PASS" endtime="20201105 05:43:50.280" starttime="20201105 05:43:50.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:43:50.285" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-64424 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:43:54.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:43:54.778" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:43:54.778" starttime="20201105 05:43:50.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:43:54.779" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:43:54.780" starttime="20201105 05:43:54.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:43:54.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:43:54.780" starttime="20201105 05:43:54.780"></status>
</kw>
<status status="PASS" endtime="20201105 05:43:54.780" starttime="20201105 05:43:50.281"></status>
</kw>
<msg timestamp="20201105 05:43:54.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:43:54.781" starttime="20201105 05:43:50.281"></status>
</kw>
<msg timestamp="20201105 05:43:54.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:43:54.781" starttime="20201105 05:43:50.280"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:43:54.781" starttime="20201105 05:43:54.781"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:43:54.782" critical="yes" starttime="20201105 05:43:50.278"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 05:43:54.783" starttime="20201105 05:43:50.234"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:42:46.352" level="INFO">${random} = 86460</msg>
<status status="PASS" endtime="20201105 05:42:46.352" starttime="20201105 05:42:46.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:42:46.357" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-86460 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:43:20.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:43:20.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:43:20.731" starttime="20201105 05:42:46.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:43:20.732" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:43:20.732" starttime="20201105 05:43:20.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:43:20.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:43:20.733" starttime="20201105 05:43:20.732"></status>
</kw>
<status status="PASS" endtime="20201105 05:43:20.733" starttime="20201105 05:42:46.353"></status>
</kw>
<msg timestamp="20201105 05:43:20.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:43:20.733" starttime="20201105 05:42:46.353"></status>
</kw>
<msg timestamp="20201105 05:43:20.734" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:43:20.734" starttime="20201105 05:42:46.352"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:43:20.734" starttime="20201105 05:43:20.734"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:43:20.734" critical="yes" starttime="20201105 05:42:46.350"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 05:43:20.736" starttime="20201105 05:42:46.307"></status>
</suite>
<status status="PASS" elapsedtime="107721" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
