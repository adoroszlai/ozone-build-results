<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 05:34:34.927" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:21:58.625" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:00.617" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 05:22:00.617" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:22:00.618" starttime="20201105 05:21:58.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:00.619" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:22:00.619" starttime="20201105 05:22:00.618"></status>
</kw>
<msg timestamp="20201105 05:22:00.619" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:22:00.619" starttime="20201105 05:21:58.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:00.625" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:02.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:02.478" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:02.478" starttime="20201105 05:22:00.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:02.479" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:02.480" starttime="20201105 05:22:02.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:02.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:02.480" starttime="20201105 05:22:02.480"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:02.481" starttime="20201105 05:22:00.621"></status>
</kw>
<msg timestamp="20201105 05:22:02.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:02.481" starttime="20201105 05:22:00.620"></status>
</kw>
<msg timestamp="20201105 05:22:02.481" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 05:22:02.481" starttime="20201105 05:22:00.620"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:22:02.482" starttime="20201105 05:22:02.481"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:02.482" starttime="20201105 05:22:00.620"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:02.482" starttime="20201105 05:22:00.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:02.486" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:04.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:04.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:04.236" starttime="20201105 05:22:02.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:04.237" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:04.237" starttime="20201105 05:22:04.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:04.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:04.238" starttime="20201105 05:22:04.238"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:04.238" starttime="20201105 05:22:02.483"></status>
</kw>
<msg timestamp="20201105 05:22:04.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:04.238" starttime="20201105 05:22:02.483"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:04.239" starttime="20201105 05:22:02.483"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:04.239" starttime="20201105 05:22:02.482"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:04.239" starttime="20201105 05:22:02.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 05:22:04.239" starttime="20201105 05:22:04.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:04.244" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:06.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:06.250" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:22:04.216Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 05:22:06.250" starttime="20201105 05:22:04.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:06.251" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:22:04.216Z",
  "modificationTime" : "2020-11-05T05:22:04.216Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 05:22:06.251" starttime="20201105 05:22:06.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:06.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:06.252" starttime="20201105 05:22:06.251"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:06.252" starttime="20201105 05:22:04.240"></status>
</kw>
<msg timestamp="20201105 05:22:06.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:06.252" starttime="20201105 05:22:04.240"></status>
</kw>
<msg timestamp="20201105 05:22:06.252" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:22:04.216Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 05:22:06.252" starttime="20201105 05:22:04.239"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 05:22:06.253" starttime="20201105 05:22:06.253"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:22:06.256" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:22:06.256" starttime="20201105 05:22:06.256"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:22:06.257" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:22:06.257" starttime="20201105 05:22:06.256"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:06.257" starttime="20201105 05:22:06.255"></status>
</kw>
<msg timestamp="20201105 05:22:06.257" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:22:06.257" starttime="20201105 05:22:06.255"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:06.257" starttime="20201105 05:22:06.254"></status>
</kw>
<msg timestamp="20201105 05:22:06.257" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 05:22:06.258" starttime="20201105 05:22:06.254"></status>
</kw>
<msg timestamp="20201105 05:22:06.258" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 05:22:06.258" starttime="20201105 05:22:06.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:06.262" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:08.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:08.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:08.208" starttime="20201105 05:22:06.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:08.209" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:08.209" starttime="20201105 05:22:08.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:08.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:08.210" starttime="20201105 05:22:08.209"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:08.210" starttime="20201105 05:22:06.258"></status>
</kw>
<msg timestamp="20201105 05:22:08.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:08.210" starttime="20201105 05:22:06.258"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:08.210" starttime="20201105 05:22:06.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:08.214" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:13.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:13.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:13.874" starttime="20201105 05:22:08.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:13.875" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:13.876" starttime="20201105 05:22:13.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:13.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:13.876" starttime="20201105 05:22:13.876"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:13.876" starttime="20201105 05:22:08.211"></status>
</kw>
<msg timestamp="20201105 05:22:13.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:13.877" starttime="20201105 05:22:08.211"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:13.877" starttime="20201105 05:22:08.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:13.881" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:17.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:17.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:17.750" starttime="20201105 05:22:13.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:17.751" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:17.751" starttime="20201105 05:22:17.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:17.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:17.751" starttime="20201105 05:22:17.751"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:17.752" starttime="20201105 05:22:13.878"></status>
</kw>
<msg timestamp="20201105 05:22:17.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:17.752" starttime="20201105 05:22:13.878"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:17.752" starttime="20201105 05:22:13.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:17.756" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:21.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:21.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:21.258" starttime="20201105 05:22:17.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:21.259" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:21.259" starttime="20201105 05:22:21.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:21.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:21.260" starttime="20201105 05:22:21.259"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:21.260" starttime="20201105 05:22:17.753"></status>
</kw>
<msg timestamp="20201105 05:22:21.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:21.260" starttime="20201105 05:22:17.753"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:21.260" starttime="20201105 05:22:17.752"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:22:21.261" critical="yes" starttime="20201105 05:21:58.618"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:22:21.265" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:22:21.265" starttime="20201105 05:22:21.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:22:21.266" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:22:21.266" starttime="20201105 05:22:21.265"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:21.266" starttime="20201105 05:22:21.264"></status>
</kw>
<msg timestamp="20201105 05:22:21.266" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:22:21.266" starttime="20201105 05:22:21.264"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:21.267" starttime="20201105 05:22:21.263"></status>
</kw>
<msg timestamp="20201105 05:22:21.267" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:22:21.267" starttime="20201105 05:22:21.263"></status>
</kw>
<msg timestamp="20201105 05:22:21.267" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:22:21.267" starttime="20201105 05:22:21.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:21.272" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:23.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:23.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:23.128" starttime="20201105 05:22:21.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:23.129" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:23.129" starttime="20201105 05:22:23.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:23.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:23.130" starttime="20201105 05:22:23.130"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:23.130" starttime="20201105 05:22:21.268"></status>
</kw>
<msg timestamp="20201105 05:22:23.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:23.131" starttime="20201105 05:22:21.268"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:23.131" starttime="20201105 05:22:21.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:23.134" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:25.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:25.026" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:22:25.026" starttime="20201105 05:22:23.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:25.027" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:22:25.027" starttime="20201105 05:22:25.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:25.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:25.028" starttime="20201105 05:22:25.027"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:25.028" starttime="20201105 05:22:23.132"></status>
</kw>
<msg timestamp="20201105 05:22:25.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:25.028" starttime="20201105 05:22:23.131"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:25.028" starttime="20201105 05:22:23.131"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:22:25.029" critical="yes" starttime="20201105 05:22:21.261"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 05:22:25.030" starttime="20201105 05:21:58.571"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:23:54.669" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:23:54.669" starttime="20201105 05:23:54.668"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:23:54.669" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:23:54.669" starttime="20201105 05:23:54.669"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:54.669" starttime="20201105 05:23:54.668"></status>
</kw>
<msg timestamp="20201105 05:23:54.670" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:23:54.670" starttime="20201105 05:23:54.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:23:54.670" starttime="20201105 05:23:54.670"></status>
</kw>
<msg timestamp="20201105 05:23:54.671" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:23:54.671" starttime="20201105 05:23:54.670"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:54.671" starttime="20201105 05:23:54.667"></status>
</kw>
<msg timestamp="20201105 05:23:54.671" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:23:54.671" starttime="20201105 05:23:54.666"></status>
</kw>
<msg timestamp="20201105 05:23:54.671" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:23:54.671" starttime="20201105 05:23:54.665"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:23:54.672" level="INFO">${random} = 34706</msg>
<status status="PASS" endtime="20201105 05:23:54.672" starttime="20201105 05:23:54.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:23:54.677" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-34706 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:23:57.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:23:57.746" level="INFO">${output} = 2020-11-05 05:23:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:23:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 05:23:57.746" starttime="20201105 05:23:54.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:23:57.747" level="INFO">2020-11-05 05:23:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:23:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 05:23:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 05:23:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:23:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F8F69F46D75C-&gt;3ec0aabd-d13e-4333-b32d-2d5b0f5eb680
2020-11-05 05:23:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 05:23:57.747" starttime="20201105 05:23:57.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:23:57.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:23:57.748" starttime="20201105 05:23:57.747"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:57.748" starttime="20201105 05:23:54.672"></status>
</kw>
<msg timestamp="20201105 05:23:57.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:23:57.748" starttime="20201105 05:23:54.672"></status>
</kw>
<msg timestamp="20201105 05:23:57.749" level="INFO">${result} = 2020-11-05 05:23:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:23:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 05:23:57.749" starttime="20201105 05:23:54.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:23:57.753" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:23:59.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:23:59.285" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:23 ofs://om/volume1/bucket1/ozone-34706
-rw-...</msg>
<status status="PASS" endtime="20201105 05:23:59.285" starttime="20201105 05:23:57.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:23:59.286" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:23 ofs://om/volume1/bucket1/ozone-34706
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:22 ofs://om/volume1/bucket1/ozone-88157
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:23 ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20201105 05:23:59.286" starttime="20201105 05:23:59.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:23:59.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:23:59.287" starttime="20201105 05:23:59.286"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:59.287" starttime="20201105 05:23:57.751"></status>
</kw>
<msg timestamp="20201105 05:23:59.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:23:59.287" starttime="20201105 05:23:57.750"></status>
</kw>
<msg timestamp="20201105 05:23:59.287" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:23 ofs://om/volume1/bucket1/ozone-34706
-rw-...</msg>
<status status="PASS" endtime="20201105 05:23:59.287" starttime="20201105 05:23:57.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:23:59.288" starttime="20201105 05:23:59.287"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:23:59.288" critical="yes" starttime="20201105 05:23:54.665"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 05:23:59.289" starttime="20201105 05:23:54.618"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:22:29.360" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:22:29.360" starttime="20201105 05:22:29.360"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:22:29.361" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:22:29.361" starttime="20201105 05:22:29.360"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:29.361" starttime="20201105 05:22:29.359"></status>
</kw>
<msg timestamp="20201105 05:22:29.361" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:22:29.361" starttime="20201105 05:22:29.359"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:29.361" starttime="20201105 05:22:29.358"></status>
</kw>
<msg timestamp="20201105 05:22:29.361" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:22:29.361" starttime="20201105 05:22:29.358"></status>
</kw>
<msg timestamp="20201105 05:22:29.362" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:22:29.362" starttime="20201105 05:22:29.357"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:22:29.362" level="INFO">${random} = 88157</msg>
<status status="PASS" endtime="20201105 05:22:29.362" starttime="20201105 05:22:29.362"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:29.369" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-88157 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:32.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:32.554" level="INFO">${output} = 2020-11-05 05:22:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:22:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 05:22:32.554" starttime="20201105 05:22:29.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:32.555" level="INFO">2020-11-05 05:22:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:22:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 05:22:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 05:22:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:22:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1C97AAC91682-&gt;3ec0aabd-d13e-4333-b32d-2d5b0f5eb680
2020-11-05 05:22:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 05:22:32.555" starttime="20201105 05:22:32.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:32.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:32.556" starttime="20201105 05:22:32.556"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:32.556" starttime="20201105 05:22:29.363"></status>
</kw>
<msg timestamp="20201105 05:22:32.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:32.556" starttime="20201105 05:22:29.363"></status>
</kw>
<msg timestamp="20201105 05:22:32.557" level="INFO">${result} = 2020-11-05 05:22:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:22:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 ...</msg>
<status status="PASS" endtime="20201105 05:22:32.557" starttime="20201105 05:22:29.362"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:32.562" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:34.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:34.255" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:22 o3fs://bucket1.volume1.om/ozone-88157
dr...</msg>
<status status="PASS" endtime="20201105 05:22:34.255" starttime="20201105 05:22:32.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:34.256" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:22 o3fs://bucket1.volume1.om/ozone-88157
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:22:34.256" starttime="20201105 05:22:34.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:34.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:34.257" starttime="20201105 05:22:34.256"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:34.257" starttime="20201105 05:22:32.559"></status>
</kw>
<msg timestamp="20201105 05:22:34.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:34.257" starttime="20201105 05:22:32.557"></status>
</kw>
<msg timestamp="20201105 05:22:34.257" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-11-05 05:22 o3fs://bucket1.volume1.om/ozone-88157
dr...</msg>
<status status="PASS" endtime="20201105 05:22:34.257" starttime="20201105 05:22:32.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:22:34.258" starttime="20201105 05:22:34.258"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:22:34.258" critical="yes" starttime="20201105 05:22:29.356"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 05:22:34.259" starttime="20201105 05:22:29.310"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:24:03.606" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:24:03.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:24:03.609" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:03.609" starttime="20201105 05:24:03.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:24:03.610" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:03.610" starttime="20201105 05:24:03.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:24:03.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:24:03.611" starttime="20201105 05:24:03.610"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:03.611" starttime="20201105 05:24:03.599"></status>
</kw>
<msg timestamp="20201105 05:24:03.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:24:03.611" starttime="20201105 05:24:03.599"></status>
</kw>
<msg timestamp="20201105 05:24:03.611" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:03.611" starttime="20201105 05:24:03.599"></status>
</kw>
<msg timestamp="20201105 05:24:03.612" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:03.612" starttime="20201105 05:24:03.598"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:24:03.616" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:24:03.616" starttime="20201105 05:24:03.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:24:03.616" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:24:03.616" starttime="20201105 05:24:03.616"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:03.616" starttime="20201105 05:24:03.614"></status>
</kw>
<msg timestamp="20201105 05:24:03.616" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:24:03.616" starttime="20201105 05:24:03.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:24:03.617" starttime="20201105 05:24:03.617"></status>
</kw>
<msg timestamp="20201105 05:24:03.617" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:24:03.617" starttime="20201105 05:24:03.617"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:03.618" starttime="20201105 05:24:03.613"></status>
</kw>
<msg timestamp="20201105 05:24:03.618" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:24:03.618" starttime="20201105 05:24:03.612"></status>
</kw>
<msg timestamp="20201105 05:24:03.618" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:24:03.618" starttime="20201105 05:24:03.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:24:03.621" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:24:35.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:24:35.362" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:24:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:24:05 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 05:24:35.362" starttime="20201105 05:24:03.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:24:35.363" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:24:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:24:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 05:24:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 05:24:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:24:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-78084B968CEF-&gt;3ec0aabd-d13e-4333-b32d-2d5b0f5eb680
2020-11-05 05:24:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 05:24:06 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:24:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:24:06 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 05:24:07 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 05:24:07 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604553688306_0003
2020-11-05 05:24:07 INFO  YarnClientImpl:273 - Submitted application application_1604553688306_0003
2020-11-05 05:24:07 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604553688306_0003/
2020-11-05 05:24:07 INFO  Job:1339 - Running job: job_1604553688306_0003
2020-11-05 05:24:14 INFO  Job:1360 - Job job_1604553688306_0003 running in uber mode : false
2020-11-05 05:24:14 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 05:24:20 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 05:24:25 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 05:24:30 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 05:24:33 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 05:24:34 INFO  Job:1378 - Job job_1604553688306_0003 completed successfully
2020-11-05 05:24:34 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615237
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35752
		Total time spent by all reduces in occupied slots (ms)=13216
		Total time spent by all map tasks (ms)=8938
		Total time spent by all reduce tasks (ms)=3304
		Total vcore-milliseconds taken by all map tasks=8938
		Total vcore-milliseconds taken by all reduce tasks=3304
		Total megabyte-milliseconds taken by all map tasks=36610048
		Total megabyte-milliseconds taken by all reduce tasks=13533184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=543
		CPU time spent (ms)=6140
		Physical memory (bytes) snapshot=1142792192
		Virtual memory (bytes) snapshot=15781658624
		Total committed heap usage (bytes)=1048576000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.322 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 05:24:35.363" starttime="20201105 05:24:35.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:24:35.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:24:35.364" starttime="20201105 05:24:35.364"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.364" starttime="20201105 05:24:03.619"></status>
</kw>
<msg timestamp="20201105 05:24:35.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:24:35.364" starttime="20201105 05:24:03.619"></status>
</kw>
<msg timestamp="20201105 05:24:35.365" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:24:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:24:05 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 05:24:35.365" starttime="20201105 05:24:03.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:24:35.365" starttime="20201105 05:24:35.365"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:24:35.366" critical="yes" starttime="20201105 05:24:03.598"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:24:35.370" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:24:35.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:24:35.375" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:35.375" starttime="20201105 05:24:35.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:24:35.376" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:35.376" starttime="20201105 05:24:35.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:24:35.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:24:35.377" starttime="20201105 05:24:35.376"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.377" starttime="20201105 05:24:35.368"></status>
</kw>
<msg timestamp="20201105 05:24:35.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:24:35.377" starttime="20201105 05:24:35.368"></status>
</kw>
<msg timestamp="20201105 05:24:35.378" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:35.378" starttime="20201105 05:24:35.367"></status>
</kw>
<msg timestamp="20201105 05:24:35.378" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:24:35.378" starttime="20201105 05:24:35.367"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:24:35.378" level="INFO">${random} = 79</msg>
<status status="PASS" endtime="20201105 05:24:35.378" starttime="20201105 05:24:35.378"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:24:35.382" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:24:35.382" starttime="20201105 05:24:35.382"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:24:35.383" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:24:35.383" starttime="20201105 05:24:35.382"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.383" starttime="20201105 05:24:35.381"></status>
</kw>
<msg timestamp="20201105 05:24:35.383" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:24:35.383" starttime="20201105 05:24:35.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:24:35.384" starttime="20201105 05:24:35.383"></status>
</kw>
<msg timestamp="20201105 05:24:35.384" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:24:35.384" starttime="20201105 05:24:35.383"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.384" starttime="20201105 05:24:35.380"></status>
</kw>
<msg timestamp="20201105 05:24:35.384" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:24:35.384" starttime="20201105 05:24:35.379"></status>
</kw>
<msg timestamp="20201105 05:24:35.384" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:24:35.384" starttime="20201105 05:24:35.379"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:24:35.387" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:24:35.387" starttime="20201105 05:24:35.387"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:24:35.388" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:24:35.388" starttime="20201105 05:24:35.388"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.388" starttime="20201105 05:24:35.387"></status>
</kw>
<msg timestamp="20201105 05:24:35.388" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:24:35.388" starttime="20201105 05:24:35.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:24:35.390" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 05:24:35.390" starttime="20201105 05:24:35.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:24:35.390" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 05:24:35.390" starttime="20201105 05:24:35.390"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.391" starttime="20201105 05:24:35.389"></status>
</kw>
<msg timestamp="20201105 05:24:35.391" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 05:24:35.391" starttime="20201105 05:24:35.388"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.391" starttime="20201105 05:24:35.386"></status>
</kw>
<msg timestamp="20201105 05:24:35.391" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 05:24:35.391" starttime="20201105 05:24:35.385"></status>
</kw>
<msg timestamp="20201105 05:24:35.391" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 05:24:35.391" starttime="20201105 05:24:35.385"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:24:35.394" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:24:35.394" starttime="20201105 05:24:35.394"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:24:35.395" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:24:35.395" starttime="20201105 05:24:35.394"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.395" starttime="20201105 05:24:35.394"></status>
</kw>
<msg timestamp="20201105 05:24:35.395" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:24:35.395" starttime="20201105 05:24:35.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:24:35.397" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 05:24:35.397" starttime="20201105 05:24:35.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:24:35.397" level="INFO">${result} = /wordcount-79.txt</msg>
<status status="PASS" endtime="20201105 05:24:35.397" starttime="20201105 05:24:35.397"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.397" starttime="20201105 05:24:35.396"></status>
</kw>
<msg timestamp="20201105 05:24:35.397" level="INFO">${path_with_leading} = /wordcount-79.txt</msg>
<status status="PASS" endtime="20201105 05:24:35.397" starttime="20201105 05:24:35.395"></status>
</kw>
<status status="PASS" endtime="20201105 05:24:35.398" starttime="20201105 05:24:35.393"></status>
</kw>
<msg timestamp="20201105 05:24:35.398" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201105 05:24:35.398" starttime="20201105 05:24:35.392"></status>
</kw>
<msg timestamp="20201105 05:24:35.398" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-79.txt</msg>
<status status="PASS" endtime="20201105 05:24:35.398" starttime="20201105 05:24:35.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:24:35.403" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-79.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:25:07.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:25:07.851" level="INFO">${output} = 2020-11-05 05:24:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:24:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 05:25:07.851" starttime="20201105 05:24:35.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:25:07.852" level="INFO">2020-11-05 05:24:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:24:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:24:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:24:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 05:24:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 05:24:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:24:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C53B9B50D45B-&gt;3ec0aabd-d13e-4333-b32d-2d5b0f5eb680
2020-11-05 05:24:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:24:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 05:24:38 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 05:24:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604553688306_0004
2020-11-05 05:24:39 INFO  YarnClientImpl:273 - Submitted application application_1604553688306_0004
2020-11-05 05:24:39 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604553688306_0004/
2020-11-05 05:24:39 INFO  Job:1339 - Running job: job_1604553688306_0004
2020-11-05 05:24:47 INFO  Job:1360 - Job job_1604553688306_0004 running in uber mode : false
2020-11-05 05:24:47 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 05:24:53 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 05:24:58 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 05:25:02 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 05:25:06 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 05:25:07 INFO  Job:1378 - Job job_1604553688306_0004 completed successfully
2020-11-05 05:25:07 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677699
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36584
		Total time spent by all reduces in occupied slots (ms)=13000
		Total time spent by all map tasks (ms)=9146
		Total time spent by all reduce tasks (ms)=3250
		Total vcore-milliseconds taken by all map tasks=9146
		Total vcore-milliseconds taken by all reduce tasks=3250
		Total megabyte-milliseconds taken by all map tasks=37462016
		Total megabyte-milliseconds taken by all reduce tasks=13312000
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=542
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1151684608
		Virtual memory (bytes) snapshot=15779311616
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 05:25:07.853" starttime="20201105 05:25:07.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:25:07.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:25:07.853" starttime="20201105 05:25:07.853"></status>
</kw>
<status status="PASS" endtime="20201105 05:25:07.854" starttime="20201105 05:24:35.399"></status>
</kw>
<msg timestamp="20201105 05:25:07.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:25:07.854" starttime="20201105 05:24:35.399"></status>
</kw>
<msg timestamp="20201105 05:25:07.854" level="INFO">${output} = 2020-11-05 05:24:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:24:37 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 05:25:07.854" starttime="20201105 05:24:35.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 05:25:07.855" starttime="20201105 05:25:07.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:25:07.855" starttime="20201105 05:25:07.855"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:25:07.855" critical="yes" starttime="20201105 05:24:35.366"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 05:25:07.856" starttime="20201105 05:24:03.552"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:38.648" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:22:38.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:22:38.651" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:22:38.651" starttime="20201105 05:22:38.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:22:38.652" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:22:38.652" starttime="20201105 05:22:38.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:22:38.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:22:38.653" starttime="20201105 05:22:38.652"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:38.653" starttime="20201105 05:22:38.642"></status>
</kw>
<msg timestamp="20201105 05:22:38.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:22:38.653" starttime="20201105 05:22:38.641"></status>
</kw>
<msg timestamp="20201105 05:22:38.654" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:22:38.654" starttime="20201105 05:22:38.641"></status>
</kw>
<msg timestamp="20201105 05:22:38.654" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:22:38.654" starttime="20201105 05:22:38.641"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:22:38.658" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:22:38.658" starttime="20201105 05:22:38.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:22:38.659" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:22:38.659" starttime="20201105 05:22:38.658"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:38.659" starttime="20201105 05:22:38.656"></status>
</kw>
<msg timestamp="20201105 05:22:38.659" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:22:38.659" starttime="20201105 05:22:38.656"></status>
</kw>
<status status="PASS" endtime="20201105 05:22:38.659" starttime="20201105 05:22:38.655"></status>
</kw>
<msg timestamp="20201105 05:22:38.659" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:22:38.659" starttime="20201105 05:22:38.655"></status>
</kw>
<msg timestamp="20201105 05:22:38.659" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:22:38.659" starttime="20201105 05:22:38.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:22:38.663" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:23:14.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:23:14.818" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:22:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 05:23:14.818" starttime="20201105 05:22:38.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:23:14.819" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:22:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 05:22:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 05:22:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:22:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC8B4CB87D7C-&gt;3ec0aabd-d13e-4333-b32d-2d5b0f5eb680
2020-11-05 05:22:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 05:22:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:22:42 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 05:22:42 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 05:22:42 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604553688306_0001
2020-11-05 05:22:42 INFO  YarnClientImpl:273 - Submitted application application_1604553688306_0001
2020-11-05 05:22:42 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604553688306_0001/
2020-11-05 05:22:42 INFO  Job:1339 - Running job: job_1604553688306_0001
2020-11-05 05:22:51 INFO  Job:1360 - Job job_1604553688306_0001 running in uber mode : false
2020-11-05 05:22:51 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 05:22:58 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 05:23:03 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 05:23:07 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 05:23:11 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 05:23:14 INFO  Job:1378 - Job job_1604553688306_0001 completed successfully
2020-11-05 05:23:14 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=615465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34920
		Total time spent by all reduces in occupied slots (ms)=13924
		Total time spent by all map tasks (ms)=8730
		Total time spent by all reduce tasks (ms)=3481
		Total vcore-milliseconds taken by all map tasks=8730
		Total vcore-milliseconds taken by all reduce tasks=3481
		Total megabyte-milliseconds taken by all map tasks=35758080
		Total megabyte-milliseconds taken by all reduce tasks=14258176
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=6130
		Physical memory (bytes) snapshot=1154772992
		Virtual memory (bytes) snapshot=15773749248
		Total committed heap usage (bytes)=1044905984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.685 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 05:23:14.819" starttime="20201105 05:23:14.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:23:14.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:23:14.820" starttime="20201105 05:23:14.820"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.820" starttime="20201105 05:22:38.660"></status>
</kw>
<msg timestamp="20201105 05:23:14.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:23:14.821" starttime="20201105 05:22:38.660"></status>
</kw>
<msg timestamp="20201105 05:23:14.821" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:22:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201105 05:23:14.821" starttime="20201105 05:22:38.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:23:14.821" starttime="20201105 05:23:14.821"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:23:14.822" critical="yes" starttime="20201105 05:22:38.640"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:23:14.826" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:23:14.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:23:14.832" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:23:14.832" starttime="20201105 05:23:14.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:23:14.832" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:23:14.833" starttime="20201105 05:23:14.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:23:14.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:23:14.833" starttime="20201105 05:23:14.833"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.834" starttime="20201105 05:23:14.824"></status>
</kw>
<msg timestamp="20201105 05:23:14.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:23:14.834" starttime="20201105 05:23:14.824"></status>
</kw>
<msg timestamp="20201105 05:23:14.834" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:23:14.834" starttime="20201105 05:23:14.823"></status>
</kw>
<msg timestamp="20201105 05:23:14.834" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201105 05:23:14.834" starttime="20201105 05:23:14.823"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:23:14.835" level="INFO">${random} = 30</msg>
<status status="PASS" endtime="20201105 05:23:14.835" starttime="20201105 05:23:14.834"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:23:14.838" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:23:14.838" starttime="20201105 05:23:14.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:23:14.839" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:23:14.839" starttime="20201105 05:23:14.838"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.839" starttime="20201105 05:23:14.837"></status>
</kw>
<msg timestamp="20201105 05:23:14.839" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:23:14.839" starttime="20201105 05:23:14.837"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.839" starttime="20201105 05:23:14.836"></status>
</kw>
<msg timestamp="20201105 05:23:14.839" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:23:14.839" starttime="20201105 05:23:14.836"></status>
</kw>
<msg timestamp="20201105 05:23:14.840" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:23:14.840" starttime="20201105 05:23:14.835"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:23:14.843" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:23:14.843" starttime="20201105 05:23:14.842"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:23:14.843" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:23:14.843" starttime="20201105 05:23:14.843"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.843" starttime="20201105 05:23:14.842"></status>
</kw>
<msg timestamp="20201105 05:23:14.843" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:23:14.843" starttime="20201105 05:23:14.841"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.844" starttime="20201105 05:23:14.841"></status>
</kw>
<msg timestamp="20201105 05:23:14.844" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 05:23:14.844" starttime="20201105 05:23:14.840"></status>
</kw>
<msg timestamp="20201105 05:23:14.844" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 05:23:14.844" starttime="20201105 05:23:14.840"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:23:14.847" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:23:14.847" starttime="20201105 05:23:14.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:23:14.847" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:23:14.847" starttime="20201105 05:23:14.847"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.847" starttime="20201105 05:23:14.846"></status>
</kw>
<msg timestamp="20201105 05:23:14.847" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:23:14.848" starttime="20201105 05:23:14.846"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:14.848" starttime="20201105 05:23:14.845"></status>
</kw>
<msg timestamp="20201105 05:23:14.848" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-30.txt</msg>
<status status="PASS" endtime="20201105 05:23:14.848" starttime="20201105 05:23:14.845"></status>
</kw>
<msg timestamp="20201105 05:23:14.848" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-30.txt</msg>
<status status="PASS" endtime="20201105 05:23:14.848" starttime="20201105 05:23:14.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:23:14.851" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-30.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:23:50.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:23:50.291" level="INFO">${output} = 2020-11-05 05:23:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:23:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 05:23:50.291" starttime="20201105 05:23:14.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:23:50.292" level="INFO">2020-11-05 05:23:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:23:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:23:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:23:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-11-05 05:23:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-11-05 05:23:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:23:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-150988B2B958-&gt;3ec0aabd-d13e-4333-b32d-2d5b0f5eb680
2020-11-05 05:23:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:23:17 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-11-05 05:23:18 INFO  JobSubmitter:198 - number of splits:3
2020-11-05 05:23:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1604553688306_0002
2020-11-05 05:23:18 INFO  YarnClientImpl:273 - Submitted application application_1604553688306_0002
2020-11-05 05:23:18 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1604553688306_0002/
2020-11-05 05:23:18 INFO  Job:1339 - Running job: job_1604553688306_0002
2020-11-05 05:23:26 INFO  Job:1360 - Job job_1604553688306_0002 running in uber mode : false
2020-11-05 05:23:26 INFO  Job:1367 -  map 0% reduce 0%
2020-11-05 05:23:32 INFO  Job:1367 -  map 33% reduce 0%
2020-11-05 05:23:37 INFO  Job:1367 -  map 67% reduce 0%
2020-11-05 05:23:42 INFO  Job:1367 -  map 100% reduce 0%
2020-11-05 05:23:46 INFO  Job:1367 -  map 100% reduce 100%
2020-11-05 05:23:49 INFO  Job:1378 - Job job_1604553688306_0002 completed successfully
2020-11-05 05:23:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=677783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36460
		Total time spent by all reduces in occupied slots (ms)=12972
		Total time spent by all map tasks (ms)=9115
		Total time spent by all reduce tasks (ms)=3243
		Total vcore-milliseconds taken by all map tasks=9115
		Total vcore-milliseconds taken by all reduce tasks=3243
		Total megabyte-milliseconds taken by all map tasks=37335040
		Total megabyte-milliseconds taken by all reduce tasks=13283328
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=584
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1173811200
		Virtual memory (bytes) snapshot=15802597376
		Total committed heap usage (bytes)=1005060096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 05:23:50.292" starttime="20201105 05:23:50.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:23:50.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:23:50.293" starttime="20201105 05:23:50.293"></status>
</kw>
<status status="PASS" endtime="20201105 05:23:50.293" starttime="20201105 05:23:14.849"></status>
</kw>
<msg timestamp="20201105 05:23:50.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:23:50.294" starttime="20201105 05:23:14.849"></status>
</kw>
<msg timestamp="20201105 05:23:50.294" level="INFO">${output} = 2020-11-05 05:23:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-11-05 05:23:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201105 05:23:50.294" starttime="20201105 05:23:14.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 05:23:50.294" starttime="20201105 05:23:50.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:23:50.295" starttime="20201105 05:23:50.295"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:23:50.295" critical="yes" starttime="20201105 05:23:14.822"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 05:23:50.296" starttime="20201105 05:22:38.594"></status>
</suite>
<status status="PASS" elapsedtime="172085" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:10.851" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:12.814" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 05:26:12.814" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:26:12.815" starttime="20201105 05:26:10.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:12.816" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:26:12.816" starttime="20201105 05:26:12.815"></status>
</kw>
<msg timestamp="20201105 05:26:12.816" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:26:12.816" starttime="20201105 05:26:10.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:12.821" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:14.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:14.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:14.654" starttime="20201105 05:26:12.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:14.655" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:14.656" starttime="20201105 05:26:14.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:14.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:14.656" starttime="20201105 05:26:14.656"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:14.656" starttime="20201105 05:26:12.818"></status>
</kw>
<msg timestamp="20201105 05:26:14.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:14.657" starttime="20201105 05:26:12.818"></status>
</kw>
<msg timestamp="20201105 05:26:14.657" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 05:26:14.657" starttime="20201105 05:26:12.817"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:26:14.657" starttime="20201105 05:26:14.657"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:14.658" starttime="20201105 05:26:12.817"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:14.658" starttime="20201105 05:26:12.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:14.662" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:16.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:16.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:16.429" starttime="20201105 05:26:14.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:16.430" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:16.430" starttime="20201105 05:26:16.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:16.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:16.431" starttime="20201105 05:26:16.431"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:16.431" starttime="20201105 05:26:14.660"></status>
</kw>
<msg timestamp="20201105 05:26:16.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:16.432" starttime="20201105 05:26:14.660"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:16.432" starttime="20201105 05:26:14.659"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:16.432" starttime="20201105 05:26:14.659"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:16.432" starttime="20201105 05:26:14.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 05:26:16.433" starttime="20201105 05:26:16.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:16.437" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:18.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:18.585" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:26:16.306Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 05:26:18.585" starttime="20201105 05:26:16.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:18.586" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:26:16.306Z",
  "modificationTime" : "2020-11-05T05:26:16.306Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 05:26:18.586" starttime="20201105 05:26:18.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:18.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:18.587" starttime="20201105 05:26:18.586"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:18.587" starttime="20201105 05:26:16.434"></status>
</kw>
<msg timestamp="20201105 05:26:18.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:18.587" starttime="20201105 05:26:16.433"></status>
</kw>
<msg timestamp="20201105 05:26:18.587" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:26:16.306Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 05:26:18.587" starttime="20201105 05:26:16.433"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 05:26:18.588" starttime="20201105 05:26:18.588"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:26:18.591" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:26:18.591" starttime="20201105 05:26:18.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:26:18.592" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:26:18.592" starttime="20201105 05:26:18.591"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:18.592" starttime="20201105 05:26:18.590"></status>
</kw>
<msg timestamp="20201105 05:26:18.592" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:26:18.592" starttime="20201105 05:26:18.590"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:18.592" starttime="20201105 05:26:18.589"></status>
</kw>
<msg timestamp="20201105 05:26:18.592" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 05:26:18.592" starttime="20201105 05:26:18.589"></status>
</kw>
<msg timestamp="20201105 05:26:18.593" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 05:26:18.593" starttime="20201105 05:26:18.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:18.596" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:20.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:20.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:20.608" starttime="20201105 05:26:18.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:20.609" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:20.609" starttime="20201105 05:26:20.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:20.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:20.610" starttime="20201105 05:26:20.610"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:20.611" starttime="20201105 05:26:18.593"></status>
</kw>
<msg timestamp="20201105 05:26:20.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:20.611" starttime="20201105 05:26:18.593"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:20.611" starttime="20201105 05:26:18.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:20.615" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:25.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:25.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:25.613" starttime="20201105 05:26:20.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:25.614" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:25.615" starttime="20201105 05:26:25.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:25.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:25.615" starttime="20201105 05:26:25.615"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:25.616" starttime="20201105 05:26:20.612"></status>
</kw>
<msg timestamp="20201105 05:26:25.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:25.616" starttime="20201105 05:26:20.612"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:25.616" starttime="20201105 05:26:20.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:25.620" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:29.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:29.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:29.173" starttime="20201105 05:26:25.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:29.174" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:29.174" starttime="20201105 05:26:29.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:29.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:29.174" starttime="20201105 05:26:29.174"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:29.175" starttime="20201105 05:26:25.617"></status>
</kw>
<msg timestamp="20201105 05:26:29.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:29.175" starttime="20201105 05:26:25.617"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:29.175" starttime="20201105 05:26:25.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:29.180" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:32.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:32.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:32.749" starttime="20201105 05:26:29.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:32.750" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:32.750" starttime="20201105 05:26:32.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:32.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:32.750" starttime="20201105 05:26:32.750"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:32.751" starttime="20201105 05:26:29.176"></status>
</kw>
<msg timestamp="20201105 05:26:32.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:32.751" starttime="20201105 05:26:29.176"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:32.751" starttime="20201105 05:26:29.175"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:26:32.751" critical="yes" starttime="20201105 05:26:10.846"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:26:32.756" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:26:32.757" starttime="20201105 05:26:32.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:26:32.757" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:26:32.757" starttime="20201105 05:26:32.757"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:32.757" starttime="20201105 05:26:32.756"></status>
</kw>
<msg timestamp="20201105 05:26:32.757" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:26:32.757" starttime="20201105 05:26:32.755"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:32.758" starttime="20201105 05:26:32.754"></status>
</kw>
<msg timestamp="20201105 05:26:32.758" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:26:32.758" starttime="20201105 05:26:32.754"></status>
</kw>
<msg timestamp="20201105 05:26:32.758" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:26:32.758" starttime="20201105 05:26:32.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:32.761" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:34.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:34.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:34.836" starttime="20201105 05:26:32.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:34.837" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:34.837" starttime="20201105 05:26:34.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:34.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:34.838" starttime="20201105 05:26:34.837"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:34.838" starttime="20201105 05:26:32.759"></status>
</kw>
<msg timestamp="20201105 05:26:34.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:34.838" starttime="20201105 05:26:32.759"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:34.838" starttime="20201105 05:26:32.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:34.842" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:36.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:36.702" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:26:36.702" starttime="20201105 05:26:34.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:36.703" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:26:36.703" starttime="20201105 05:26:36.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:36.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:36.704" starttime="20201105 05:26:36.703"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:36.704" starttime="20201105 05:26:34.839"></status>
</kw>
<msg timestamp="20201105 05:26:36.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:36.704" starttime="20201105 05:26:34.839"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:36.704" starttime="20201105 05:26:34.839"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:26:36.704" critical="yes" starttime="20201105 05:26:32.752"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 05:26:36.706" starttime="20201105 05:26:10.799"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:28:14.215" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:28:14.215" starttime="20201105 05:28:14.215"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:14.216" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:28:14.216" starttime="20201105 05:28:14.215"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:14.216" starttime="20201105 05:28:14.214"></status>
</kw>
<msg timestamp="20201105 05:28:14.216" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:28:14.216" starttime="20201105 05:28:14.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:14.217" starttime="20201105 05:28:14.217"></status>
</kw>
<msg timestamp="20201105 05:28:14.217" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:28:14.217" starttime="20201105 05:28:14.216"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:14.217" starttime="20201105 05:28:14.213"></status>
</kw>
<msg timestamp="20201105 05:28:14.217" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:28:14.217" starttime="20201105 05:28:14.213"></status>
</kw>
<msg timestamp="20201105 05:28:14.218" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:28:14.218" starttime="20201105 05:28:14.212"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:28:14.218" level="INFO">${random} = 51722</msg>
<status status="PASS" endtime="20201105 05:28:14.218" starttime="20201105 05:28:14.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:28:14.224" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-51722 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:28:17.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:28:17.689" level="INFO">${output} = 2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:28:17.689" starttime="20201105 05:28:14.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:28:17.690" level="INFO">2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 05:28:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:28:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:28:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:28:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:28:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-50CE68EA2271-&gt;da0e0ad6-4b85-46bd-bbd6-5184cf6a0460
2020-11-05 05:28:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:28:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:28:17.690" starttime="20201105 05:28:17.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:28:17.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:28:17.691" starttime="20201105 05:28:17.691"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:17.691" starttime="20201105 05:28:14.219"></status>
</kw>
<msg timestamp="20201105 05:28:17.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:28:17.691" starttime="20201105 05:28:14.219"></status>
</kw>
<msg timestamp="20201105 05:28:17.692" level="INFO">${result} = 2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:28:17.692" starttime="20201105 05:28:14.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:28:17.698" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:28:19.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:28:19.228" level="INFO">${output} = 2020-11-05 05:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:28:19.228" starttime="20201105 05:28:17.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:28:19.229" level="INFO">2020-11-05 05:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:19 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 05:26 ofs://om/volume1/bucket1/ozone-02634
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 05:28 ofs://om/volume1/bucket1/ozone-51722
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:26 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:27 ofs://om/volume1/bucket1/wordcount-31.txt
2020-11-05 05:28:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:28:19.230" starttime="20201105 05:28:19.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:28:19.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:28:19.230" starttime="20201105 05:28:19.230"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:19.230" starttime="20201105 05:28:17.694"></status>
</kw>
<msg timestamp="20201105 05:28:19.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:28:19.231" starttime="20201105 05:28:17.694"></status>
</kw>
<msg timestamp="20201105 05:28:19.231" level="INFO">${result} = 2020-11-05 05:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:28:19.231" starttime="20201105 05:28:17.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:19.231" starttime="20201105 05:28:19.231"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:28:19.232" critical="yes" starttime="20201105 05:28:14.211"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 05:28:19.232" starttime="20201105 05:28:14.165"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:26:41.031" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:26:41.032" starttime="20201105 05:26:41.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:26:41.032" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:26:41.032" starttime="20201105 05:26:41.032"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:41.032" starttime="20201105 05:26:41.031"></status>
</kw>
<msg timestamp="20201105 05:26:41.032" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:26:41.032" starttime="20201105 05:26:41.030"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:41.033" starttime="20201105 05:26:41.030"></status>
</kw>
<msg timestamp="20201105 05:26:41.033" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:26:41.033" starttime="20201105 05:26:41.029"></status>
</kw>
<msg timestamp="20201105 05:26:41.033" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:26:41.033" starttime="20201105 05:26:41.028"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:26:41.033" level="INFO">${random} = 02634</msg>
<status status="PASS" endtime="20201105 05:26:41.033" starttime="20201105 05:26:41.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:41.039" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-02634 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:44.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:44.431" level="INFO">${output} = 2020-11-05 05:26:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:42 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:26:44.431" starttime="20201105 05:26:41.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:44.432" level="INFO">2020-11-05 05:26:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:42 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 05:26:42 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:26:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:26:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:26:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:26:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F2CD4ACF0360-&gt;da0e0ad6-4b85-46bd-bbd6-5184cf6a0460
2020-11-05 05:26:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:26:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:26:44.432" starttime="20201105 05:26:44.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:44.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:44.433" starttime="20201105 05:26:44.432"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:44.433" starttime="20201105 05:26:41.034"></status>
</kw>
<msg timestamp="20201105 05:26:44.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:44.433" starttime="20201105 05:26:41.034"></status>
</kw>
<msg timestamp="20201105 05:26:44.434" level="INFO">${result} = 2020-11-05 05:26:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:42 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:26:44.434" starttime="20201105 05:26:41.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:44.438" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:46.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:46.110" level="INFO">${output} = 2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:26:46.110" starttime="20201105 05:26:44.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:46.111" level="INFO">2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-11-05 05:26 o3fs://bucket1.volume1.om/ozone-02634
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:26 o3fs://bucket1.volume1.om/user
2020-11-05 05:26:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:26:46.111" starttime="20201105 05:26:46.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:46.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:46.112" starttime="20201105 05:26:46.112"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:46.112" starttime="20201105 05:26:44.435"></status>
</kw>
<msg timestamp="20201105 05:26:46.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:46.113" starttime="20201105 05:26:44.434"></status>
</kw>
<msg timestamp="20201105 05:26:46.113" level="INFO">${result} = 2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:26:46.113" starttime="20201105 05:26:44.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:26:46.113" starttime="20201105 05:26:46.113"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:26:46.114" critical="yes" starttime="20201105 05:26:41.027"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 05:26:46.115" starttime="20201105 05:26:40.982"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:28:23.578" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:28:23.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:28:23.583" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:23.583" starttime="20201105 05:28:23.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:28:23.584" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:23.584" starttime="20201105 05:28:23.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:28:23.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:28:23.584" starttime="20201105 05:28:23.584"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:23.585" starttime="20201105 05:28:23.574"></status>
</kw>
<msg timestamp="20201105 05:28:23.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:28:23.585" starttime="20201105 05:28:23.574"></status>
</kw>
<msg timestamp="20201105 05:28:23.585" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:23.585" starttime="20201105 05:28:23.573"></status>
</kw>
<msg timestamp="20201105 05:28:23.585" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:23.585" starttime="20201105 05:28:23.573"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:28:23.589" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:28:23.589" starttime="20201105 05:28:23.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:23.590" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:28:23.590" starttime="20201105 05:28:23.590"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:23.590" starttime="20201105 05:28:23.588"></status>
</kw>
<msg timestamp="20201105 05:28:23.590" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:28:23.590" starttime="20201105 05:28:23.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:23.591" starttime="20201105 05:28:23.591"></status>
</kw>
<msg timestamp="20201105 05:28:23.591" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:28:23.591" starttime="20201105 05:28:23.590"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:23.591" starttime="20201105 05:28:23.587"></status>
</kw>
<msg timestamp="20201105 05:28:23.592" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:28:23.592" starttime="20201105 05:28:23.586"></status>
</kw>
<msg timestamp="20201105 05:28:23.592" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:28:23.592" starttime="20201105 05:28:23.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:28:23.596" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:28:59.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:28:59.138" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:28:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28...</msg>
<status status="PASS" endtime="20201105 05:28:59.138" starttime="20201105 05:28:23.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:28:59.139" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:28:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 05:28:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:28:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:28:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:28:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:28:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-052DF1AFC1AC-&gt;da0e0ad6-4b85-46bd-bbd6-5184cf6a0460
2020-11-05 05:28:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 05:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 05:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:28:29 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:28:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604553948342_0003
2020-11-05 05:28:29 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:28:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:30 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 05:28:30 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 05:28:30 INFO  YarnClientImpl:324 - Submitted application application_1604553948342_0003
2020-11-05 05:28:30 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604553948342_0003/
2020-11-05 05:28:30 INFO  Job:1619 - Running job: job_1604553948342_0003
2020-11-05 05:28:37 INFO  Job:1640 - Job job_1604553948342_0003 running in uber mode : false
2020-11-05 05:28:37 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:28:43 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:28:48 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:28:53 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:28:57 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:28:58 INFO  Job:1658 - Job job_1604553948342_0003 completed successfully
2020-11-05 05:28:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021309
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36468
		Total time spent by all reduces in occupied slots (ms)=13796
		Total time spent by all map tasks (ms)=9117
		Total time spent by all reduce tasks (ms)=3449
		Total vcore-milliseconds taken by all map tasks=9117
		Total vcore-milliseconds taken by all reduce tasks=3449
		Total megabyte-milliseconds taken by all map tasks=37343232
		Total megabyte-milliseconds taken by all reduce tasks=14127104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=560
		CPU time spent (ms)=6300
		Physical memory (bytes) snapshot=1204867072
		Virtual memory (bytes) snapshot=15789989888
		Total committed heap usage (bytes)=1073217536
		Peak Map Physical memory (bytes)=304472064
		Peak Map Virtual memory (bytes)=3943227392
		Peak Reduce Physical memory (bytes)=294109184
		Peak Reduce Virtual memory (bytes)=3964370944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.048 seconds
2020-11-05 05:28:58 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-05 05:28:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:28:59.139" starttime="20201105 05:28:59.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:28:59.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:28:59.140" starttime="20201105 05:28:59.139"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.140" starttime="20201105 05:28:23.593"></status>
</kw>
<msg timestamp="20201105 05:28:59.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:28:59.141" starttime="20201105 05:28:23.592"></status>
</kw>
<msg timestamp="20201105 05:28:59.141" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:28:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28...</msg>
<status status="PASS" endtime="20201105 05:28:59.141" starttime="20201105 05:28:23.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:59.142" starttime="20201105 05:28:59.141"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:28:59.142" critical="yes" starttime="20201105 05:28:23.572"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:28:59.147" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:28:59.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:28:59.153" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:59.153" starttime="20201105 05:28:59.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:28:59.154" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:59.154" starttime="20201105 05:28:59.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:28:59.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:28:59.154" starttime="20201105 05:28:59.154"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.155" starttime="20201105 05:28:59.145"></status>
</kw>
<msg timestamp="20201105 05:28:59.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:28:59.155" starttime="20201105 05:28:59.144"></status>
</kw>
<msg timestamp="20201105 05:28:59.155" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:59.155" starttime="20201105 05:28:59.144"></status>
</kw>
<msg timestamp="20201105 05:28:59.155" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:28:59.155" starttime="20201105 05:28:59.143"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:28:59.156" level="INFO">${random} = 57</msg>
<status status="PASS" endtime="20201105 05:28:59.156" starttime="20201105 05:28:59.155"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:28:59.159" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:28:59.159" starttime="20201105 05:28:59.159"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:59.160" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:28:59.160" starttime="20201105 05:28:59.159"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.160" starttime="20201105 05:28:59.159"></status>
</kw>
<msg timestamp="20201105 05:28:59.160" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:28:59.160" starttime="20201105 05:28:59.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:59.161" starttime="20201105 05:28:59.161"></status>
</kw>
<msg timestamp="20201105 05:28:59.161" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:28:59.161" starttime="20201105 05:28:59.160"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.162" starttime="20201105 05:28:59.157"></status>
</kw>
<msg timestamp="20201105 05:28:59.162" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:28:59.162" starttime="20201105 05:28:59.157"></status>
</kw>
<msg timestamp="20201105 05:28:59.162" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:28:59.162" starttime="20201105 05:28:59.156"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:28:59.165" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:28:59.165" starttime="20201105 05:28:59.164"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:59.165" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:28:59.165" starttime="20201105 05:28:59.165"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.166" starttime="20201105 05:28:59.164"></status>
</kw>
<msg timestamp="20201105 05:28:59.166" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:28:59.166" starttime="20201105 05:28:59.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:28:59.167" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 05:28:59.167" starttime="20201105 05:28:59.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:59.167" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 05:28:59.167" starttime="20201105 05:28:59.167"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.168" starttime="20201105 05:28:59.166"></status>
</kw>
<msg timestamp="20201105 05:28:59.168" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 05:28:59.168" starttime="20201105 05:28:59.166"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.168" starttime="20201105 05:28:59.163"></status>
</kw>
<msg timestamp="20201105 05:28:59.168" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 05:28:59.168" starttime="20201105 05:28:59.163"></status>
</kw>
<msg timestamp="20201105 05:28:59.168" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 05:28:59.168" starttime="20201105 05:28:59.162"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:28:59.174" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:28:59.174" starttime="20201105 05:28:59.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:59.174" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:28:59.174" starttime="20201105 05:28:59.174"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.175" starttime="20201105 05:28:59.171"></status>
</kw>
<msg timestamp="20201105 05:28:59.175" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:28:59.175" starttime="20201105 05:28:59.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:28:59.176" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 05:28:59.176" starttime="20201105 05:28:59.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:28:59.176" level="INFO">${result} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20201105 05:28:59.176" starttime="20201105 05:28:59.176"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.177" starttime="20201105 05:28:59.175"></status>
</kw>
<msg timestamp="20201105 05:28:59.177" level="INFO">${path_with_leading} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20201105 05:28:59.177" starttime="20201105 05:28:59.175"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:59.177" starttime="20201105 05:28:59.169"></status>
</kw>
<msg timestamp="20201105 05:28:59.177" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201105 05:28:59.177" starttime="20201105 05:28:59.169"></status>
</kw>
<msg timestamp="20201105 05:28:59.177" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201105 05:28:59.177" starttime="20201105 05:28:59.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:28:59.181" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-57.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:29:34.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:29:34.374" level="INFO">${output} = 2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:29:34.374" starttime="20201105 05:28:59.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:29:34.375" level="INFO">2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:29:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 05:29:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:29:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:29:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:29:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:29:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D89D65CEAFCA-&gt;da0e0ad6-4b85-46bd-bbd6-5184cf6a0460
2020-11-05 05:29:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:29:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:29:05 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:29:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604553948342_0004
2020-11-05 05:29:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:05 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 05:29:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 05:29:05 INFO  YarnClientImpl:324 - Submitted application application_1604553948342_0004
2020-11-05 05:29:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604553948342_0004/
2020-11-05 05:29:05 INFO  Job:1619 - Running job: job_1604553948342_0004
2020-11-05 05:29:12 INFO  Job:1640 - Job job_1604553948342_0004 running in uber mode : false
2020-11-05 05:29:12 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:29:19 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:29:23 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:29:28 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:29:33 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:29:33 INFO  Job:1658 - Job job_1604553948342_0004 completed successfully
2020-11-05 05:29:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083691
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37084
		Total time spent by all reduces in occupied slots (ms)=13128
		Total time spent by all map tasks (ms)=9271
		Total time spent by all reduce tasks (ms)=3282
		Total vcore-milliseconds taken by all map tasks=9271
		Total vcore-milliseconds taken by all reduce tasks=3282
		Total megabyte-milliseconds taken by all map tasks=37974016
		Total megabyte-milliseconds taken by all reduce tasks=13443072
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1218678784
		Virtual memory (bytes) snapshot=15813640192
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=311541760
		Peak Map Virtual memory (bytes)=3952840704
		Peak Reduce Physical memory (bytes)=294453248
		Peak Reduce Virtual memory (bytes)=3969097728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-05 05:29:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:29:34.376" starttime="20201105 05:29:34.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:29:34.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:29:34.376" starttime="20201105 05:29:34.376"></status>
</kw>
<status status="PASS" endtime="20201105 05:29:34.377" starttime="20201105 05:28:59.178"></status>
</kw>
<msg timestamp="20201105 05:29:34.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:29:34.377" starttime="20201105 05:28:59.178"></status>
</kw>
<msg timestamp="20201105 05:29:34.377" level="INFO">${output} = 2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:29:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:29:34.377" starttime="20201105 05:28:59.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 05:29:34.378" starttime="20201105 05:29:34.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:29:34.378" starttime="20201105 05:29:34.378"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:29:34.379" critical="yes" starttime="20201105 05:28:59.143"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 05:29:34.380" starttime="20201105 05:28:23.527"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:50.488" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:26:50.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:26:50.495" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:26:50.495" starttime="20201105 05:26:50.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:26:50.496" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:26:50.496" starttime="20201105 05:26:50.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:26:50.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:26:50.496" starttime="20201105 05:26:50.496"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:50.496" starttime="20201105 05:26:50.483"></status>
</kw>
<msg timestamp="20201105 05:26:50.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:26:50.497" starttime="20201105 05:26:50.483"></status>
</kw>
<msg timestamp="20201105 05:26:50.497" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:26:50.497" starttime="20201105 05:26:50.483"></status>
</kw>
<msg timestamp="20201105 05:26:50.497" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:26:50.497" starttime="20201105 05:26:50.482"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:26:50.501" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:26:50.501" starttime="20201105 05:26:50.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:26:50.502" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:26:50.502" starttime="20201105 05:26:50.501"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:50.502" starttime="20201105 05:26:50.500"></status>
</kw>
<msg timestamp="20201105 05:26:50.502" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:26:50.502" starttime="20201105 05:26:50.499"></status>
</kw>
<status status="PASS" endtime="20201105 05:26:50.502" starttime="20201105 05:26:50.499"></status>
</kw>
<msg timestamp="20201105 05:26:50.502" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:26:50.502" starttime="20201105 05:26:50.498"></status>
</kw>
<msg timestamp="20201105 05:26:50.503" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:26:50.503" starttime="20201105 05:26:50.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:26:50.507" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:27:31.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:27:31.463" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26...</msg>
<status status="PASS" endtime="20201105 05:27:31.463" starttime="20201105 05:26:50.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:27:31.464" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 05:26:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:26:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:26:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:26:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:26:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-27364A441FF5-&gt;da0e0ad6-4b85-46bd-bbd6-5184cf6a0460
2020-11-05 05:26:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 05:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 05:26:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:56 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:26:56 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:26:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604553948342_0001
2020-11-05 05:26:56 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:26:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:57 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 05:26:57 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 05:26:57 INFO  YarnClientImpl:324 - Submitted application application_1604553948342_0001
2020-11-05 05:26:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604553948342_0001/
2020-11-05 05:26:57 INFO  Job:1619 - Running job: job_1604553948342_0001
2020-11-05 05:27:06 INFO  Job:1640 - Job job_1604553948342_0001 running in uber mode : false
2020-11-05 05:27:06 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:27:13 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:27:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:27:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:27:27 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:27:30 INFO  Job:1658 - Job job_1604553948342_0001 completed successfully
2020-11-05 05:27:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1021537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36328
		Total time spent by all reduces in occupied slots (ms)=13868
		Total time spent by all map tasks (ms)=9082
		Total time spent by all reduce tasks (ms)=3467
		Total vcore-milliseconds taken by all map tasks=9082
		Total vcore-milliseconds taken by all reduce tasks=3467
		Total megabyte-milliseconds taken by all map tasks=37199872
		Total megabyte-milliseconds taken by all reduce tasks=14200832
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1213992960
		Virtual memory (bytes) snapshot=15785709568
		Total committed heap usage (bytes)=1064304640
		Peak Map Physical memory (bytes)=307081216
		Peak Map Virtual memory (bytes)=3942055936
		Peak Reduce Physical memory (bytes)=294989824
		Peak Reduce Virtual memory (bytes)=3965054976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.994 seconds
2020-11-05 05:27:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:30 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-11-05 05:27:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:27:31.465" starttime="20201105 05:27:31.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:27:31.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:27:31.465" starttime="20201105 05:27:31.465"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.465" starttime="20201105 05:26:50.504"></status>
</kw>
<msg timestamp="20201105 05:27:31.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:27:31.466" starttime="20201105 05:26:50.503"></status>
</kw>
<msg timestamp="20201105 05:27:31.466" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:26...</msg>
<status status="PASS" endtime="20201105 05:27:31.466" starttime="20201105 05:26:50.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:27:31.467" starttime="20201105 05:27:31.466"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:27:31.467" critical="yes" starttime="20201105 05:26:50.482"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:27:31.471" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:27:31.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:27:31.477" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:27:31.477" starttime="20201105 05:27:31.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:27:31.478" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:27:31.478" starttime="20201105 05:27:31.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:27:31.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:27:31.479" starttime="20201105 05:27:31.478"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.479" starttime="20201105 05:27:31.469"></status>
</kw>
<msg timestamp="20201105 05:27:31.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:27:31.479" starttime="20201105 05:27:31.469"></status>
</kw>
<msg timestamp="20201105 05:27:31.480" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:27:31.480" starttime="20201105 05:27:31.469"></status>
</kw>
<msg timestamp="20201105 05:27:31.480" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201105 05:27:31.480" starttime="20201105 05:27:31.468"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:27:31.480" level="INFO">${random} = 31</msg>
<status status="PASS" endtime="20201105 05:27:31.480" starttime="20201105 05:27:31.480"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:27:31.484" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:27:31.484" starttime="20201105 05:27:31.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:27:31.484" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:27:31.484" starttime="20201105 05:27:31.484"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.485" starttime="20201105 05:27:31.483"></status>
</kw>
<msg timestamp="20201105 05:27:31.485" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:27:31.485" starttime="20201105 05:27:31.482"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.485" starttime="20201105 05:27:31.482"></status>
</kw>
<msg timestamp="20201105 05:27:31.485" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:27:31.485" starttime="20201105 05:27:31.481"></status>
</kw>
<msg timestamp="20201105 05:27:31.485" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:27:31.485" starttime="20201105 05:27:31.480"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:27:31.488" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:27:31.488" starttime="20201105 05:27:31.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:27:31.489" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:27:31.489" starttime="20201105 05:27:31.488"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.489" starttime="20201105 05:27:31.487"></status>
</kw>
<msg timestamp="20201105 05:27:31.489" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:27:31.489" starttime="20201105 05:27:31.487"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.489" starttime="20201105 05:27:31.486"></status>
</kw>
<msg timestamp="20201105 05:27:31.489" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 05:27:31.489" starttime="20201105 05:27:31.486"></status>
</kw>
<msg timestamp="20201105 05:27:31.490" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 05:27:31.490" starttime="20201105 05:27:31.485"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:27:31.492" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:27:31.492" starttime="20201105 05:27:31.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:27:31.493" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:27:31.493" starttime="20201105 05:27:31.492"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.493" starttime="20201105 05:27:31.492"></status>
</kw>
<msg timestamp="20201105 05:27:31.493" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:27:31.493" starttime="20201105 05:27:31.491"></status>
</kw>
<status status="PASS" endtime="20201105 05:27:31.493" starttime="20201105 05:27:31.491"></status>
</kw>
<msg timestamp="20201105 05:27:31.493" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-31.txt</msg>
<status status="PASS" endtime="20201105 05:27:31.494" starttime="20201105 05:27:31.490"></status>
</kw>
<msg timestamp="20201105 05:27:31.494" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-31.txt</msg>
<status status="PASS" endtime="20201105 05:27:31.494" starttime="20201105 05:27:31.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:27:31.497" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-31.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:28:09.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:28:09.828" level="INFO">${output} = 2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:28:09.828" starttime="20201105 05:27:31.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:28:09.830" level="INFO">2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-11-05 05:27:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:27:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-11-05 05:27:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-11-05 05:27:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:27:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:27:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:27:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA9D30DB8659-&gt;da0e0ad6-4b85-46bd-bbd6-5184cf6a0460
2020-11-05 05:27:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:27:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:27:37 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:27:37 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604553948342_0002
2020-11-05 05:27:37 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:37 INFO  Configuration:2752 - resource-types.xml not found
2020-11-05 05:27:37 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-11-05 05:27:37 INFO  YarnClientImpl:324 - Submitted application application_1604553948342_0002
2020-11-05 05:27:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604553948342_0002/
2020-11-05 05:27:37 INFO  Job:1619 - Running job: job_1604553948342_0002
2020-11-05 05:27:46 INFO  Job:1640 - Job job_1604553948342_0002 running in uber mode : false
2020-11-05 05:27:46 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:27:52 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:27:57 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:28:02 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:28:06 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:28:09 INFO  Job:1658 - Job job_1604553948342_0002 completed successfully
2020-11-05 05:28:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:28:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1083775
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37148
		Total time spent by all reduces in occupied slots (ms)=13620
		Total time spent by all map tasks (ms)=9287
		Total time spent by all reduce tasks (ms)=3405
		Total vcore-milliseconds taken by all map tasks=9287
		Total vcore-milliseconds taken by all reduce tasks=3405
		Total megabyte-milliseconds taken by all map tasks=38039552
		Total megabyte-milliseconds taken by all reduce tasks=13946880
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=6080
		Physical memory (bytes) snapshot=1226084352
		Virtual memory (bytes) snapshot=15798341632
		Total committed heap usage (bytes)=1070071808
		Peak Map Physical memory (bytes)=310599680
		Peak Map Virtual memory (bytes)=3945336832
		Peak Reduce Physical memory (bytes)=297570304
		Peak Reduce Virtual memory (bytes)=3967524864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100
2020-11-05 05:28:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201105 05:28:09.830" starttime="20201105 05:28:09.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:28:09.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:28:09.831" starttime="20201105 05:28:09.830"></status>
</kw>
<status status="PASS" endtime="20201105 05:28:09.831" starttime="20201105 05:27:31.495"></status>
</kw>
<msg timestamp="20201105 05:28:09.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:28:09.831" starttime="20201105 05:27:31.494"></status>
</kw>
<msg timestamp="20201105 05:28:09.831" level="INFO">${output} = 2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-11-05 05:27:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201105 05:28:09.831" starttime="20201105 05:27:31.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:09.832" starttime="20201105 05:28:09.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:28:09.832" starttime="20201105 05:28:09.832"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:28:09.833" critical="yes" starttime="20201105 05:27:31.467"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 05:28:09.834" starttime="20201105 05:26:50.436"></status>
</suite>
<status status="PASS" elapsedtime="186358" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:30:49.797" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:30:53.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 05:30:53.625" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:30:53.625" starttime="20201105 05:30:49.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:30:53.626" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:30:53.626" starttime="20201105 05:30:53.625"></status>
</kw>
<msg timestamp="20201105 05:30:53.627" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201105 05:30:53.627" starttime="20201105 05:30:49.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:30:53.632" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:30:56.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:30:56.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:30:56.648" starttime="20201105 05:30:53.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:30:56.649" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:30:56.649" starttime="20201105 05:30:56.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:30:56.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:30:56.650" starttime="20201105 05:30:56.649"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:56.650" starttime="20201105 05:30:53.629"></status>
</kw>
<msg timestamp="20201105 05:30:56.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:30:56.650" starttime="20201105 05:30:53.628"></status>
</kw>
<msg timestamp="20201105 05:30:56.650" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201105 05:30:56.650" starttime="20201105 05:30:53.628"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201105 05:30:56.651" starttime="20201105 05:30:56.651"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:56.651" starttime="20201105 05:30:53.627"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:56.651" starttime="20201105 05:30:53.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:30:56.657" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:30:59.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:30:59.399" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:30:59.400" starttime="20201105 05:30:56.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:30:59.401" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:30:59.401" starttime="20201105 05:30:59.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:30:59.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:30:59.401" starttime="20201105 05:30:59.401"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:59.402" starttime="20201105 05:30:56.653"></status>
</kw>
<msg timestamp="20201105 05:30:59.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:30:59.402" starttime="20201105 05:30:56.652"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:59.402" starttime="20201105 05:30:56.652"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:59.402" starttime="20201105 05:30:56.652"></status>
</kw>
<status status="PASS" endtime="20201105 05:30:59.402" starttime="20201105 05:30:56.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 05:30:59.403" starttime="20201105 05:30:59.402"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:30:59.406" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:02.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:02.268" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:30:59.223Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 05:31:02.268" starttime="20201105 05:30:59.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:02.269" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:30:59.223Z",
  "modificationTime" : "2020-11-05T05:30:59.223Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 05:31:02.269" starttime="20201105 05:31:02.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:02.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:02.270" starttime="20201105 05:31:02.269"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:02.270" starttime="20201105 05:30:59.404"></status>
</kw>
<msg timestamp="20201105 05:31:02.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:02.270" starttime="20201105 05:30:59.403"></status>
</kw>
<msg timestamp="20201105 05:31:02.270" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:30:59.223Z",
  "modificat...</msg>
<status status="PASS" endtime="20201105 05:31:02.270" starttime="20201105 05:30:59.403"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 05:31:02.271" starttime="20201105 05:31:02.271"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:31:02.274" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:31:02.274" starttime="20201105 05:31:02.274"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:31:02.275" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:31:02.275" starttime="20201105 05:31:02.274"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:02.275" starttime="20201105 05:31:02.273"></status>
</kw>
<msg timestamp="20201105 05:31:02.275" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:31:02.275" starttime="20201105 05:31:02.273"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:02.275" starttime="20201105 05:31:02.272"></status>
</kw>
<msg timestamp="20201105 05:31:02.275" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 05:31:02.276" starttime="20201105 05:31:02.272"></status>
</kw>
<msg timestamp="20201105 05:31:02.276" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201105 05:31:02.276" starttime="20201105 05:31:02.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:02.279" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:05.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:05.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:31:05.095" starttime="20201105 05:31:02.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:05.096" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:31:05.096" starttime="20201105 05:31:05.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:05.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:05.097" starttime="20201105 05:31:05.096"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:05.097" starttime="20201105 05:31:02.276"></status>
</kw>
<msg timestamp="20201105 05:31:05.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:05.097" starttime="20201105 05:31:02.276"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:05.097" starttime="20201105 05:31:02.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:05.101" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:11.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:11.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:31:11.831" starttime="20201105 05:31:05.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:11.832" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:31:11.832" starttime="20201105 05:31:11.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:11.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:11.833" starttime="20201105 05:31:11.832"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:11.833" starttime="20201105 05:31:05.098"></status>
</kw>
<msg timestamp="20201105 05:31:11.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:11.833" starttime="20201105 05:31:05.098"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:11.833" starttime="20201105 05:31:05.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:11.837" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:16.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:16.491" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:31:16.491" starttime="20201105 05:31:11.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:16.492" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:31:16.493" starttime="20201105 05:31:16.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:16.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:16.493" starttime="20201105 05:31:16.493"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:16.493" starttime="20201105 05:31:11.834"></status>
</kw>
<msg timestamp="20201105 05:31:16.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:16.494" starttime="20201105 05:31:11.834"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:16.494" starttime="20201105 05:31:11.833"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:16.499" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:21.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:21.174" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:31:21.174" starttime="20201105 05:31:16.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:21.175" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:31:21.175" starttime="20201105 05:31:21.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:21.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:21.176" starttime="20201105 05:31:21.176"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:21.176" starttime="20201105 05:31:16.495"></status>
</kw>
<msg timestamp="20201105 05:31:21.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:21.177" starttime="20201105 05:31:16.495"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:21.177" starttime="20201105 05:31:16.494"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:31:21.177" critical="yes" starttime="20201105 05:30:49.792"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:31:21.181" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:31:21.181" starttime="20201105 05:31:21.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:31:21.182" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:31:21.182" starttime="20201105 05:31:21.182"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:21.182" starttime="20201105 05:31:21.180"></status>
</kw>
<msg timestamp="20201105 05:31:21.182" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:31:21.182" starttime="20201105 05:31:21.180"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:21.183" starttime="20201105 05:31:21.179"></status>
</kw>
<msg timestamp="20201105 05:31:21.183" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:31:21.183" starttime="20201105 05:31:21.179"></status>
</kw>
<msg timestamp="20201105 05:31:21.183" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:31:21.183" starttime="20201105 05:31:21.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:21.187" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:23.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:23.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:31:23.839" starttime="20201105 05:31:21.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:23.840" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:31:23.840" starttime="20201105 05:31:23.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:23.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:23.841" starttime="20201105 05:31:23.840"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:23.841" starttime="20201105 05:31:21.184"></status>
</kw>
<msg timestamp="20201105 05:31:23.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:23.841" starttime="20201105 05:31:21.183"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:23.841" starttime="20201105 05:31:21.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:23.845" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:26.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:26.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:31:26.752" starttime="20201105 05:31:23.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:26.753" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:31:26.753" starttime="20201105 05:31:26.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:26.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:26.754" starttime="20201105 05:31:26.754"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:26.754" starttime="20201105 05:31:23.842"></status>
</kw>
<msg timestamp="20201105 05:31:26.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:26.755" starttime="20201105 05:31:23.842"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:26.755" starttime="20201105 05:31:23.841"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:31:26.755" critical="yes" starttime="20201105 05:31:21.178"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201105 05:31:26.756" starttime="20201105 05:30:49.742"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:32:58.019" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:32:58.019" starttime="20201105 05:32:58.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:32:58.019" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:32:58.019" starttime="20201105 05:32:58.019"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:58.019" starttime="20201105 05:32:58.018"></status>
</kw>
<msg timestamp="20201105 05:32:58.020" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:32:58.020" starttime="20201105 05:32:58.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:32:58.020" starttime="20201105 05:32:58.020"></status>
</kw>
<msg timestamp="20201105 05:32:58.020" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:32:58.021" starttime="20201105 05:32:58.020"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:58.021" starttime="20201105 05:32:58.016"></status>
</kw>
<msg timestamp="20201105 05:32:58.021" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:32:58.021" starttime="20201105 05:32:58.016"></status>
</kw>
<msg timestamp="20201105 05:32:58.021" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:32:58.021" starttime="20201105 05:32:58.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:32:58.022" level="INFO">${random} = 61689</msg>
<status status="PASS" endtime="20201105 05:32:58.022" starttime="20201105 05:32:58.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:32:58.028" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-61689 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:33:03.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:33:03.918" level="INFO">${output} = 2020-11-05 05:32:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:32:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 05:33:03.918" starttime="20201105 05:32:58.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:33:03.919" level="INFO">2020-11-05 05:32:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:32:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:32:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:33:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:33:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6C31F67947C8-&gt;37130bc7-ab81-48f7-8ef7-5655057097b0
2020-11-05 05:33:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 05:33:03.919" starttime="20201105 05:33:03.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:33:03.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:33:03.920" starttime="20201105 05:33:03.919"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:03.920" starttime="20201105 05:32:58.022"></status>
</kw>
<msg timestamp="20201105 05:33:03.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:33:03.920" starttime="20201105 05:32:58.022"></status>
</kw>
<msg timestamp="20201105 05:33:03.920" level="INFO">${result} = 2020-11-05 05:32:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:32:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 05:33:03.920" starttime="20201105 05:32:58.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:33:03.925" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:33:05.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:33:05.748" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:33 ofs://om/volume1/bucket1/ozone-61689
-rw-...</msg>
<status status="PASS" endtime="20201105 05:33:05.748" starttime="20201105 05:33:03.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:33:05.750" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:33 ofs://om/volume1/bucket1/ozone-61689
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:31 ofs://om/volume1/bucket1/ozone-70562
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:32 ofs://om/volume1/bucket1/wordcount-82.txt</msg>
<status status="PASS" endtime="20201105 05:33:05.750" starttime="20201105 05:33:05.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:33:05.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:33:05.750" starttime="20201105 05:33:05.750"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:05.751" starttime="20201105 05:33:03.922"></status>
</kw>
<msg timestamp="20201105 05:33:05.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:33:05.751" starttime="20201105 05:33:03.922"></status>
</kw>
<msg timestamp="20201105 05:33:05.751" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:33 ofs://om/volume1/bucket1/ozone-61689
-rw-...</msg>
<status status="PASS" endtime="20201105 05:33:05.751" starttime="20201105 05:33:03.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:33:05.752" starttime="20201105 05:33:05.751"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:33:05.752" critical="yes" starttime="20201105 05:32:58.014"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 05:33:05.753" starttime="20201105 05:32:57.967"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:31:31.118" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:31:31.118" starttime="20201105 05:31:31.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:31:31.118" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:31:31.118" starttime="20201105 05:31:31.118"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:31.119" starttime="20201105 05:31:31.117"></status>
</kw>
<msg timestamp="20201105 05:31:31.119" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:31:31.119" starttime="20201105 05:31:31.116"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:31.119" starttime="20201105 05:31:31.116"></status>
</kw>
<msg timestamp="20201105 05:31:31.119" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:31:31.119" starttime="20201105 05:31:31.115"></status>
</kw>
<msg timestamp="20201105 05:31:31.119" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:31:31.119" starttime="20201105 05:31:31.115"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:31:31.120" level="INFO">${random} = 70562</msg>
<status status="PASS" endtime="20201105 05:31:31.120" starttime="20201105 05:31:31.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:31.125" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-70562 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:34.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:34.581" level="INFO">${output} = 2020-11-05 05:31:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:31:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 05:31:34.581" starttime="20201105 05:31:31.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:34.582" level="INFO">2020-11-05 05:31:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:31:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:31:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:31:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:31:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5170BC8B2C83-&gt;37130bc7-ab81-48f7-8ef7-5655057097b0
2020-11-05 05:31:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201105 05:31:34.583" starttime="20201105 05:31:34.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:34.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:34.583" starttime="20201105 05:31:34.583"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:34.583" starttime="20201105 05:31:31.121"></status>
</kw>
<msg timestamp="20201105 05:31:34.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:34.584" starttime="20201105 05:31:31.120"></status>
</kw>
<msg timestamp="20201105 05:31:34.584" level="INFO">${result} = 2020-11-05 05:31:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:31:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201105 05:31:34.584" starttime="20201105 05:31:31.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:34.588" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:36.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:36.370" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:31 o3fs://bucket1.volume1.om/ozone-70562
dr...</msg>
<status status="PASS" endtime="20201105 05:31:36.370" starttime="20201105 05:31:34.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:36.371" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:31 o3fs://bucket1.volume1.om/ozone-70562
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201105 05:31:36.371" starttime="20201105 05:31:36.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:36.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:36.372" starttime="20201105 05:31:36.371"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:36.372" starttime="20201105 05:31:34.586"></status>
</kw>
<msg timestamp="20201105 05:31:36.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:36.372" starttime="20201105 05:31:34.584"></status>
</kw>
<msg timestamp="20201105 05:31:36.372" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-11-05 05:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-11-05 05:31 o3fs://bucket1.volume1.om/ozone-70562
dr...</msg>
<status status="PASS" endtime="20201105 05:31:36.373" starttime="20201105 05:31:34.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:31:36.373" starttime="20201105 05:31:36.373"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:31:36.373" critical="yes" starttime="20201105 05:31:31.114"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201105 05:31:36.374" starttime="20201105 05:31:31.068"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:33:10.225" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:33:10.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:33:10.228" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:10.229" starttime="20201105 05:33:10.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:33:10.229" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:10.230" starttime="20201105 05:33:10.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:33:10.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:33:10.230" starttime="20201105 05:33:10.230"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:10.230" starttime="20201105 05:33:10.219"></status>
</kw>
<msg timestamp="20201105 05:33:10.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:33:10.231" starttime="20201105 05:33:10.218"></status>
</kw>
<msg timestamp="20201105 05:33:10.231" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:10.231" starttime="20201105 05:33:10.218"></status>
</kw>
<msg timestamp="20201105 05:33:10.231" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:10.231" starttime="20201105 05:33:10.218"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:33:10.235" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:33:10.235" starttime="20201105 05:33:10.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:33:10.236" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:33:10.236" starttime="20201105 05:33:10.235"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:10.236" starttime="20201105 05:33:10.233"></status>
</kw>
<msg timestamp="20201105 05:33:10.236" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:33:10.236" starttime="20201105 05:33:10.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:33:10.237" starttime="20201105 05:33:10.237"></status>
</kw>
<msg timestamp="20201105 05:33:10.237" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:33:10.237" starttime="20201105 05:33:10.236"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:10.237" starttime="20201105 05:33:10.232"></status>
</kw>
<msg timestamp="20201105 05:33:10.237" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:33:10.237" starttime="20201105 05:33:10.232"></status>
</kw>
<msg timestamp="20201105 05:33:10.238" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:33:10.238" starttime="20201105 05:33:10.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:33:10.241" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:33:52.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:33:52.560" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:33:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:33:12 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 05:33:52.561" starttime="20201105 05:33:10.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:33:52.562" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:33:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:33:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:33:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:33:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:33:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9E9ABF842DD0-&gt;37130bc7-ab81-48f7-8ef7-5655057097b0
2020-11-05 05:33:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 05:33:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:33:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:33:13 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:33:16 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:33:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604554226766_0003
2020-11-05 05:33:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:33:19 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 05:33:19 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 05:33:19 INFO  YarnClientImpl:329 - Submitted application application_1604554226766_0003
2020-11-05 05:33:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604554226766_0003/
2020-11-05 05:33:19 INFO  Job:1619 - Running job: job_1604554226766_0003
2020-11-05 05:33:26 INFO  Job:1640 - Job job_1604554226766_0003 running in uber mode : false
2020-11-05 05:33:26 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:33:32 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:33:38 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:33:43 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:33:48 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:33:51 INFO  Job:1658 - Job job_1604554226766_0003 completed successfully
2020-11-05 05:33:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39696
		Total time spent by all reduces in occupied slots (ms)=16196
		Total time spent by all map tasks (ms)=9924
		Total time spent by all reduce tasks (ms)=4049
		Total vcore-milliseconds taken by all map tasks=9924
		Total vcore-milliseconds taken by all reduce tasks=4049
		Total megabyte-milliseconds taken by all map tasks=40648704
		Total megabyte-milliseconds taken by all reduce tasks=16584704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1175048192
		Virtual memory (bytes) snapshot=15801569280
		Total committed heap usage (bytes)=1127219200
		Peak Map Physical memory (bytes)=295817216
		Peak Map Virtual memory (bytes)=3950395392
		Peak Reduce Physical memory (bytes)=307027968
		Peak Reduce Virtual memory (bytes)=3973558272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.79 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 05:33:52.562" starttime="20201105 05:33:52.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:33:52.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:33:52.562" starttime="20201105 05:33:52.562"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.563" starttime="20201105 05:33:10.239"></status>
</kw>
<msg timestamp="20201105 05:33:52.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:33:52.563" starttime="20201105 05:33:10.238"></status>
</kw>
<msg timestamp="20201105 05:33:52.563" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:33:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:33:12 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 05:33:52.563" starttime="20201105 05:33:10.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:33:52.564" starttime="20201105 05:33:52.564"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:33:52.564" critical="yes" starttime="20201105 05:33:10.217"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:33:52.570" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:33:52.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:33:52.577" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:52.577" starttime="20201105 05:33:52.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:33:52.578" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:52.578" starttime="20201105 05:33:52.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:33:52.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:33:52.579" starttime="20201105 05:33:52.578"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.579" starttime="20201105 05:33:52.568"></status>
</kw>
<msg timestamp="20201105 05:33:52.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:33:52.579" starttime="20201105 05:33:52.567"></status>
</kw>
<msg timestamp="20201105 05:33:52.579" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:52.579" starttime="20201105 05:33:52.567"></status>
</kw>
<msg timestamp="20201105 05:33:52.580" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:33:52.580" starttime="20201105 05:33:52.567"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:33:52.580" level="INFO">${random} = 36</msg>
<status status="PASS" endtime="20201105 05:33:52.580" starttime="20201105 05:33:52.580"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:33:52.584" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:33:52.584" starttime="20201105 05:33:52.583"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:33:52.584" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:33:52.584" starttime="20201105 05:33:52.584"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.584" starttime="20201105 05:33:52.583"></status>
</kw>
<msg timestamp="20201105 05:33:52.584" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:33:52.585" starttime="20201105 05:33:52.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201105 05:33:52.585" starttime="20201105 05:33:52.585"></status>
</kw>
<msg timestamp="20201105 05:33:52.585" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201105 05:33:52.585" starttime="20201105 05:33:52.585"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.586" starttime="20201105 05:33:52.582"></status>
</kw>
<msg timestamp="20201105 05:33:52.586" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:33:52.586" starttime="20201105 05:33:52.581"></status>
</kw>
<msg timestamp="20201105 05:33:52.586" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201105 05:33:52.586" starttime="20201105 05:33:52.580"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:33:52.589" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:33:52.589" starttime="20201105 05:33:52.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:33:52.589" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:33:52.589" starttime="20201105 05:33:52.589"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.590" starttime="20201105 05:33:52.588"></status>
</kw>
<msg timestamp="20201105 05:33:52.590" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:33:52.590" starttime="20201105 05:33:52.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:33:52.591" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201105 05:33:52.591" starttime="20201105 05:33:52.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:33:52.592" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201105 05:33:52.592" starttime="20201105 05:33:52.591"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.592" starttime="20201105 05:33:52.590"></status>
</kw>
<msg timestamp="20201105 05:33:52.592" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201105 05:33:52.592" starttime="20201105 05:33:52.590"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.592" starttime="20201105 05:33:52.587"></status>
</kw>
<msg timestamp="20201105 05:33:52.592" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 05:33:52.592" starttime="20201105 05:33:52.587"></status>
</kw>
<msg timestamp="20201105 05:33:52.593" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201105 05:33:52.593" starttime="20201105 05:33:52.586"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201105 05:33:52.596" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201105 05:33:52.596" starttime="20201105 05:33:52.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:33:52.596" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201105 05:33:52.596" starttime="20201105 05:33:52.596"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.596" starttime="20201105 05:33:52.595"></status>
</kw>
<msg timestamp="20201105 05:33:52.596" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201105 05:33:52.596" starttime="20201105 05:33:52.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:33:52.598" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201105 05:33:52.598" starttime="20201105 05:33:52.597"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:33:52.598" level="INFO">${result} = /wordcount-36.txt</msg>
<status status="PASS" endtime="20201105 05:33:52.598" starttime="20201105 05:33:52.598"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.598" starttime="20201105 05:33:52.597"></status>
</kw>
<msg timestamp="20201105 05:33:52.598" level="INFO">${path_with_leading} = /wordcount-36.txt</msg>
<status status="PASS" endtime="20201105 05:33:52.598" starttime="20201105 05:33:52.596"></status>
</kw>
<status status="PASS" endtime="20201105 05:33:52.599" starttime="20201105 05:33:52.594"></status>
</kw>
<msg timestamp="20201105 05:33:52.599" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-36.txt</msg>
<status status="PASS" endtime="20201105 05:33:52.599" starttime="20201105 05:33:52.593"></status>
</kw>
<msg timestamp="20201105 05:33:52.599" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-36.txt</msg>
<status status="PASS" endtime="20201105 05:33:52.599" starttime="20201105 05:33:52.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:33:52.602" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-36.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:34:28.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:34:28.206" level="INFO">${output} = 2020-11-05 05:33:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:33:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 05:34:28.206" starttime="20201105 05:33:52.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:34:28.207" level="INFO">2020-11-05 05:33:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:33:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:33:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:33:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:33:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:33:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:33:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C35E5076E0E7-&gt;37130bc7-ab81-48f7-8ef7-5655057097b0
2020-11-05 05:33:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:33:56 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:33:58 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:33:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604554226766_0004
2020-11-05 05:33:58 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:33:59 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 05:33:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 05:33:59 INFO  YarnClientImpl:329 - Submitted application application_1604554226766_0004
2020-11-05 05:33:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604554226766_0004/
2020-11-05 05:33:59 INFO  Job:1619 - Running job: job_1604554226766_0004
2020-11-05 05:34:06 INFO  Job:1640 - Job job_1604554226766_0004 running in uber mode : false
2020-11-05 05:34:06 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:34:13 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:34:17 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:34:22 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:34:27 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:34:27 INFO  Job:1658 - Job job_1604554226766_0004 completed successfully
2020-11-05 05:34:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123795
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39582
		OFS: Number of bytes written=22100
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36736
		Total time spent by all reduces in occupied slots (ms)=13532
		Total time spent by all map tasks (ms)=9184
		Total time spent by all reduce tasks (ms)=3383
		Total vcore-milliseconds taken by all map tasks=9184
		Total vcore-milliseconds taken by all reduce tasks=3383
		Total megabyte-milliseconds taken by all map tasks=37617664
		Total megabyte-milliseconds taken by all reduce tasks=13856768
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=300
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=6570
		Physical memory (bytes) snapshot=1181024256
		Virtual memory (bytes) snapshot=15801548800
		Total committed heap usage (bytes)=1052770304
		Peak Map Physical memory (bytes)=298668032
		Peak Map Virtual memory (bytes)=3945107456
		Peak Reduce Physical memory (bytes)=296976384
		Peak Reduce Virtual memory (bytes)=3969589248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 05:34:28.207" starttime="20201105 05:34:28.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:34:28.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:34:28.208" starttime="20201105 05:34:28.207"></status>
</kw>
<status status="PASS" endtime="20201105 05:34:28.208" starttime="20201105 05:33:52.600"></status>
</kw>
<msg timestamp="20201105 05:34:28.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:34:28.209" starttime="20201105 05:33:52.600"></status>
</kw>
<msg timestamp="20201105 05:34:28.209" level="INFO">${output} = 2020-11-05 05:33:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:33:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 05:34:28.209" starttime="20201105 05:33:52.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 05:34:28.210" starttime="20201105 05:34:28.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:34:28.210" starttime="20201105 05:34:28.210"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:34:28.210" critical="yes" starttime="20201105 05:33:52.566"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 05:34:28.211" starttime="20201105 05:33:10.171"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:40.837" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:31:40.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:31:40.843" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:31:40.843" starttime="20201105 05:31:40.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:31:40.844" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:31:40.844" starttime="20201105 05:31:40.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:31:40.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:31:40.845" starttime="20201105 05:31:40.844"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:40.845" starttime="20201105 05:31:40.833"></status>
</kw>
<msg timestamp="20201105 05:31:40.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:31:40.845" starttime="20201105 05:31:40.833"></status>
</kw>
<msg timestamp="20201105 05:31:40.845" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:31:40.845" starttime="20201105 05:31:40.832"></status>
</kw>
<msg timestamp="20201105 05:31:40.846" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:31:40.846" starttime="20201105 05:31:40.832"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:31:40.850" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:31:40.850" starttime="20201105 05:31:40.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:31:40.850" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:31:40.850" starttime="20201105 05:31:40.850"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:40.850" starttime="20201105 05:31:40.848"></status>
</kw>
<msg timestamp="20201105 05:31:40.850" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:31:40.850" starttime="20201105 05:31:40.847"></status>
</kw>
<status status="PASS" endtime="20201105 05:31:40.851" starttime="20201105 05:31:40.847"></status>
</kw>
<msg timestamp="20201105 05:31:40.851" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:31:40.851" starttime="20201105 05:31:40.846"></status>
</kw>
<msg timestamp="20201105 05:31:40.851" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:31:40.851" starttime="20201105 05:31:40.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:31:40.854" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:32:16.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:32:16.891" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:31:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:31:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 05:32:16.891" starttime="20201105 05:31:40.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:32:16.892" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:31:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:31:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:31:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:31:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:31:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5EACB04D2FB2-&gt;37130bc7-ab81-48f7-8ef7-5655057097b0
2020-11-05 05:31:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-11-05 05:31:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:31:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:31:44 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:31:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604554226766_0001
2020-11-05 05:31:45 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:31:45 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 05:31:45 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 05:31:45 INFO  YarnClientImpl:329 - Submitted application application_1604554226766_0001
2020-11-05 05:31:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604554226766_0001/
2020-11-05 05:31:45 INFO  Job:1619 - Running job: job_1604554226766_0001
2020-11-05 05:31:55 INFO  Job:1640 - Job job_1604554226766_0001 running in uber mode : false
2020-11-05 05:31:55 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:32:01 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:32:06 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:32:11 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:32:15 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:32:16 INFO  Job:1658 - Job job_1604554226766_0001 completed successfully
2020-11-05 05:32:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1061657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35940
		Total time spent by all reduces in occupied slots (ms)=13692
		Total time spent by all map tasks (ms)=8985
		Total time spent by all reduce tasks (ms)=3423
		Total vcore-milliseconds taken by all map tasks=8985
		Total vcore-milliseconds taken by all reduce tasks=3423
		Total megabyte-milliseconds taken by all map tasks=36802560
		Total megabyte-milliseconds taken by all reduce tasks=14020608
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=5600
		Physical memory (bytes) snapshot=1118572544
		Virtual memory (bytes) snapshot=15756038144
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=292782080
		Peak Map Virtual memory (bytes)=3947708416
		Peak Reduce Physical memory (bytes)=275107840
		Peak Reduce Virtual memory (bytes)=3952336896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.51 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201105 05:32:16.893" starttime="20201105 05:32:16.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:32:16.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:32:16.893" starttime="20201105 05:32:16.893"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.893" starttime="20201105 05:31:40.852"></status>
</kw>
<msg timestamp="20201105 05:32:16.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:32:16.894" starttime="20201105 05:31:40.852"></status>
</kw>
<msg timestamp="20201105 05:32:16.894" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-11-05 05:31:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:31:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201105 05:32:16.894" starttime="20201105 05:31:40.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:32:16.895" starttime="20201105 05:32:16.894"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:32:16.895" critical="yes" starttime="20201105 05:31:40.831"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:32:16.900" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:32:16.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:32:16.906" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:32:16.906" starttime="20201105 05:32:16.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:32:16.907" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:32:16.907" starttime="20201105 05:32:16.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:32:16.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:32:16.908" starttime="20201105 05:32:16.907"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.908" starttime="20201105 05:32:16.897"></status>
</kw>
<msg timestamp="20201105 05:32:16.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:32:16.908" starttime="20201105 05:32:16.897"></status>
</kw>
<msg timestamp="20201105 05:32:16.908" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:32:16.908" starttime="20201105 05:32:16.896"></status>
</kw>
<msg timestamp="20201105 05:32:16.909" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201105 05:32:16.909" starttime="20201105 05:32:16.896"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:32:16.909" level="INFO">${random} = 82</msg>
<status status="PASS" endtime="20201105 05:32:16.909" starttime="20201105 05:32:16.909"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:32:16.913" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:32:16.913" starttime="20201105 05:32:16.912"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:32:16.913" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:32:16.913" starttime="20201105 05:32:16.913"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.914" starttime="20201105 05:32:16.912"></status>
</kw>
<msg timestamp="20201105 05:32:16.914" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:32:16.914" starttime="20201105 05:32:16.911"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.914" starttime="20201105 05:32:16.911"></status>
</kw>
<msg timestamp="20201105 05:32:16.914" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:32:16.914" starttime="20201105 05:32:16.910"></status>
</kw>
<msg timestamp="20201105 05:32:16.914" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201105 05:32:16.914" starttime="20201105 05:32:16.910"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:32:16.917" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:32:16.917" starttime="20201105 05:32:16.917"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:32:16.918" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:32:16.918" starttime="20201105 05:32:16.917"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.918" starttime="20201105 05:32:16.916"></status>
</kw>
<msg timestamp="20201105 05:32:16.918" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:32:16.918" starttime="20201105 05:32:16.916"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.918" starttime="20201105 05:32:16.915"></status>
</kw>
<msg timestamp="20201105 05:32:16.918" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 05:32:16.918" starttime="20201105 05:32:16.915"></status>
</kw>
<msg timestamp="20201105 05:32:16.919" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201105 05:32:16.919" starttime="20201105 05:32:16.914"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201105 05:32:16.921" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201105 05:32:16.922" starttime="20201105 05:32:16.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 05:32:16.922" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201105 05:32:16.922" starttime="20201105 05:32:16.922"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.922" starttime="20201105 05:32:16.921"></status>
</kw>
<msg timestamp="20201105 05:32:16.922" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201105 05:32:16.922" starttime="20201105 05:32:16.920"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:16.923" starttime="20201105 05:32:16.920"></status>
</kw>
<msg timestamp="20201105 05:32:16.923" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201105 05:32:16.923" starttime="20201105 05:32:16.919"></status>
</kw>
<msg timestamp="20201105 05:32:16.923" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201105 05:32:16.923" starttime="20201105 05:32:16.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:32:16.927" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-82.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:32:53.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:32:53.467" level="INFO">${output} = 2020-11-05 05:32:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:32:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 05:32:53.467" starttime="20201105 05:32:16.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:32:53.468" level="INFO">2020-11-05 05:32:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:32:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-11-05 05:32:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-11-05 05:32:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:32:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-11-05 05:32:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:32:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9B798D99AA46-&gt;37130bc7-ab81-48f7-8ef7-5655057097b0
2020-11-05 05:32:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:32:20 INFO  FileInputFormat:292 - Total input files to process : 3
2020-11-05 05:32:22 INFO  JobSubmitter:202 - number of splits:3
2020-11-05 05:32:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1604554226766_0002
2020-11-05 05:32:23 INFO  JobSubmitter:299 - Executing with tokens: []
2020-11-05 05:32:23 INFO  Configuration:2795 - resource-types.xml not found
2020-11-05 05:32:23 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-11-05 05:32:23 INFO  YarnClientImpl:329 - Submitted application application_1604554226766_0002
2020-11-05 05:32:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1604554226766_0002/
2020-11-05 05:32:23 INFO  Job:1619 - Running job: job_1604554226766_0002
2020-11-05 05:32:30 INFO  Job:1640 - Job job_1604554226766_0002 running in uber mode : false
2020-11-05 05:32:30 INFO  Job:1647 -  map 0% reduce 0%
2020-11-05 05:32:37 INFO  Job:1647 -  map 33% reduce 0%
2020-11-05 05:32:42 INFO  Job:1647 -  map 67% reduce 0%
2020-11-05 05:32:46 INFO  Job:1647 -  map 100% reduce 0%
2020-11-05 05:32:51 INFO  Job:1647 -  map 100% reduce 100%
2020-11-05 05:32:52 INFO  Job:1658 - Job job_1604554226766_0002 completed successfully
2020-11-05 05:32:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=31877
		FILE: Number of bytes written=1123879
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39585
		O3FS: Number of bytes written=22100
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37536
		Total time spent by all reduces in occupied slots (ms)=14296
		Total time spent by all map tasks (ms)=9384
		Total time spent by all reduce tasks (ms)=3574
		Total vcore-milliseconds taken by all map tasks=9384
		Total vcore-milliseconds taken by all reduce tasks=3574
		Total megabyte-milliseconds taken by all map tasks=38436864
		Total megabyte-milliseconds taken by all reduce tasks=14639104
	Map-Reduce Framework
		Map input records=1051
		Map output records=4500
		Map output bytes=54892
		Map output materialized bytes=31889
		Input split bytes=303
		Combine input records=4500
		Combine output records=1795
		Reduce input groups=1532
		Reduce shuffle bytes=31889
		Reduce input records=1795
		Reduce output records=1532
		Spilled Records=3590
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1280262144
		Virtual memory (bytes) snapshot=15799185408
		Total committed heap usage (bytes)=1088946176
		Peak Map Physical memory (bytes)=298639360
		Peak Map Virtual memory (bytes)=3946926080
		Peak Reduce Physical memory (bytes)=393711616
		Peak Reduce Virtual memory (bytes)=3966676992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39282
	File Output Format Counters 
		Bytes Written=22100</msg>
<status status="PASS" endtime="20201105 05:32:53.469" starttime="20201105 05:32:53.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:32:53.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:32:53.469" starttime="20201105 05:32:53.469"></status>
</kw>
<status status="PASS" endtime="20201105 05:32:53.470" starttime="20201105 05:32:16.924"></status>
</kw>
<msg timestamp="20201105 05:32:53.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:32:53.470" starttime="20201105 05:32:16.924"></status>
</kw>
<msg timestamp="20201105 05:32:53.470" level="INFO">${output} = 2020-11-05 05:32:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2020-11-05 05:32:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201105 05:32:53.470" starttime="20201105 05:32:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201105 05:32:53.471" starttime="20201105 05:32:53.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201105 05:32:53.471" starttime="20201105 05:32:53.471"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201105 05:32:53.471" critical="yes" starttime="20201105 05:32:16.895"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201105 05:32:53.472" starttime="20201105 05:31:40.785"></status>
</suite>
<status status="PASS" elapsedtime="200833" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="559276" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
