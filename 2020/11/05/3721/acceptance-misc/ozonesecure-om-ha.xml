<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201105 06:03:03.875" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:58:57.205" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:07.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:07.962" level="INFO">${output} = 2020-11-05 05:58:58,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:58:59,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:07.962" starttime="20201105 05:58:57.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:07.963" level="INFO">2020-11-05 05:58:58,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:58:59,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:58:59,054 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 05:59:01,443 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 05:59:02,403 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-11-05 05:59:02,404 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-11-05 05:59:02,404 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-11-05 05:59:02,404 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-11-05 05:59:02,404 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-11-05 05:59:02,404 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-11-05 05:59:02,404 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-11-05 05:59:02,406 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-11-05 05:59:02,413 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:02,446 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-10611, with testuser/scm@EXAMPLE.COM as owner.
2020-11-05 05:59:02,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10611/bucket-0-64252, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:59:03,421 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:04,423 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:05,343 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 05:59:05,424 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:06,424 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,455
Average Time spent in bucket creation: 00:00:00,220
Average Time spent in key creation: 00:00:01,088
Average Time spent in key write: 00:00:01,693
Total bytes written: 10240
Total Execution time: 00:00:08,370
***************************************************</msg>
<status status="PASS" endtime="20201105 05:59:07.963" starttime="20201105 05:59:07.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:07.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:07.964" starttime="20201105 05:59:07.963"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:07.964" starttime="20201105 05:58:57.201"></status>
</kw>
<msg timestamp="20201105 05:59:07.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:07.964" starttime="20201105 05:58:57.201"></status>
</kw>
<msg timestamp="20201105 05:59:07.965" level="INFO">${result} = 2020-11-05 05:58:58,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:58:59,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:07.965" starttime="20201105 05:58:57.200"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 05:59:07.966" starttime="20201105 05:59:07.966"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:07.966" starttime="20201105 05:59:07.965"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:59:07.967" critical="yes" starttime="20201105 05:58:57.199"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:07.973" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:18.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:18.096" level="INFO">${output} = 2020-11-05 05:59:09,501 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:09,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:18.096" starttime="20201105 05:59:07.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:18.099" level="INFO">2020-11-05 05:59:09,501 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:09,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:59:09,641 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 05:59:09,823 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hzk1norp5o
2020-11-05 05:59:09,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 05:59:10,840 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:10,875 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 05:59:11,417 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-11-05 05:59:11,506 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-11-05 05:59:11,840 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:12,193 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-11-05 05:59:12,571 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-11-05 05:59:12,572 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-53FD1F8C2FD6-&gt;214f623a-fe07-4c2c-9881-c17f3b95e1de
2020-11-05 05:59:12,573 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-11-05 05:59:12,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:13,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:14,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:15,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:16,843 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 05:59:17,715 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5224.070451, max=5224.070451, mean=5224.070451, stddev=0.0, median=5224.070451, p75=5224.070451, p95=5224.070451, p98=5224.070451, p99=5224.070451, p999=5224.070451, mean_rate=0.16259522306925217, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 05:59:17,718 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2020-11-05 05:59:17,719 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 05:59:17,719 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 05:59:18.099" starttime="20201105 05:59:18.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:18.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:18.100" starttime="20201105 05:59:18.099"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:18.100" starttime="20201105 05:59:07.970"></status>
</kw>
<msg timestamp="20201105 05:59:18.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:18.100" starttime="20201105 05:59:07.969"></status>
</kw>
<msg timestamp="20201105 05:59:18.100" level="INFO">${result} = 2020-11-05 05:59:09,501 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:09,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:18.100" starttime="20201105 05:59:07.969"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 05:59:18.101" starttime="20201105 05:59:18.101"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:18.101" starttime="20201105 05:59:18.101"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:59:18.101" critical="yes" starttime="20201105 05:59:07.968"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:18.107" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:22.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:22.642" level="INFO">${output} = 2020-11-05 05:59:19,689 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:19,934 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:22.642" starttime="20201105 05:59:18.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:22.643" level="INFO">2020-11-05 05:59:19,689 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:19,934 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:59:19,934 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 05:59:20,073 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 9stna2pwzp
2020-11-05 05:59:20,085 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 05:59:21,096 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:21,108 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 05:59:21,602 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 05:59:22,097 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 05:59:22,600 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=308.460911, max=308.460911, mean=308.460911, stddev=0.0, median=308.460911, p75=308.460911, p95=308.460911, p98=308.460911, p99=308.460911, p999=308.460911, mean_rate=0.8902490113283964, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 05:59:22,603 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-05 05:59:22,604 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 05:59:22,604 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 05:59:22.644" starttime="20201105 05:59:22.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:22.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:22.644" starttime="20201105 05:59:22.644"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:22.645" starttime="20201105 05:59:18.104"></status>
</kw>
<msg timestamp="20201105 05:59:22.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:22.645" starttime="20201105 05:59:18.104"></status>
</kw>
<msg timestamp="20201105 05:59:22.645" level="INFO">${result} = 2020-11-05 05:59:19,689 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:19,934 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:22.645" starttime="20201105 05:59:18.103"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 05:59:22.646" starttime="20201105 05:59:22.646"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:22.646" starttime="20201105 05:59:22.645"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:59:22.646" critical="yes" starttime="20201105 05:59:18.102"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:22.653" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:27.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:27.280" level="INFO">${output} = 2020-11-05 05:59:24,285 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:24,485 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:27.280" starttime="20201105 05:59:22.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:27.281" level="INFO">2020-11-05 05:59:24,285 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:24,485 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-11-05 05:59:24,485 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-11-05 05:59:24,615 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wvjl1qmmml
2020-11-05 05:59:24,635 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-11-05 05:59:25,636 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-11-05 05:59:25,646 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:186)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 05:59:26,149 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Suggested leader is OM:om3.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:198)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:141)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:113)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-11-05 05:59:26,636 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-11-05 05:59:27,193 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=132.067162, max=132.067162, mean=132.067162, stddev=0.0, median=132.067162, p75=132.067162, p95=132.067162, p98=132.067162, p99=132.067162, p999=132.067162, mean_rate=0.8739756282422169, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-11-05 05:59:27,196 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-11-05 05:59:27,196 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-11-05 05:59:27,196 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201105 05:59:27.282" starttime="20201105 05:59:27.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:27.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:27.282" starttime="20201105 05:59:27.282"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:27.282" starttime="20201105 05:59:22.649"></status>
</kw>
<msg timestamp="20201105 05:59:27.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:27.283" starttime="20201105 05:59:22.648"></status>
</kw>
<msg timestamp="20201105 05:59:27.283" level="INFO">${result} = 2020-11-05 05:59:24,285 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-11-05 05:59:24,485 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201105 05:59:27.283" starttime="20201105 05:59:22.648"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201105 05:59:27.284" starttime="20201105 05:59:27.284"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:27.284" starttime="20201105 05:59:27.283"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201105 05:59:27.284" critical="yes" starttime="20201105 05:59:22.647"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201105 05:59:27.286" starttime="20201105 05:58:57.176"></status>
</suite>
<status status="PASS" endtime="20201105 05:59:27.289" starttime="20201105 05:58:57.152"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:58:49.995" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:58:49.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:58:49.999" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 05:58:49.999" starttime="20201105 05:58:49.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:58:50.000" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 05:58:50.000" starttime="20201105 05:58:50.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:58:50.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:58:50.001" starttime="20201105 05:58:50.000"></status>
</kw>
<status status="PASS" endtime="20201105 05:58:50.001" starttime="20201105 05:58:49.985"></status>
</kw>
<msg timestamp="20201105 05:58:50.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:58:50.001" starttime="20201105 05:58:49.985"></status>
</kw>
<msg timestamp="20201105 05:58:50.002" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 05:58:50.002" starttime="20201105 05:58:49.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 05:58:50.002" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 05:58:50.002" starttime="20201105 05:58:50.002"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:58:50.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:58:50.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:58:50.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 05:58:50.037" starttime="20201105 05:58:50.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:58:50.038" level="INFO"></msg>
<status status="PASS" endtime="20201105 05:58:50.038" starttime="20201105 05:58:50.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:58:50.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:58:50.039" starttime="20201105 05:58:50.039"></status>
</kw>
<status status="PASS" endtime="20201105 05:58:50.039" starttime="20201105 05:58:50.007"></status>
</kw>
<msg timestamp="20201105 05:58:50.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:58:50.039" starttime="20201105 05:58:50.003"></status>
</kw>
<status status="PASS" endtime="20201105 05:58:50.040" starttime="20201105 05:58:50.003"></status>
</kw>
<status status="PASS" endtime="20201105 05:58:50.040" starttime="20201105 05:58:50.002"></status>
</kw>
<status status="PASS" endtime="20201105 05:58:50.040" starttime="20201105 05:58:49.983"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 05:58:50.040" critical="yes" starttime="20201105 05:58:49.982"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201105 05:58:50.041" starttime="20201105 05:58:49.878"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201105 05:59:32.564" level="INFO">${random} = 12438</msg>
<status status="PASS" endtime="20201105 05:59:32.564" starttime="20201105 05:59:32.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201105 05:59:32.565" level="INFO">${source} = 12438-source</msg>
<status status="PASS" endtime="20201105 05:59:32.565" starttime="20201105 05:59:32.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201105 05:59:32.566" level="INFO">${target} = 12438-target</msg>
<status status="PASS" endtime="20201105 05:59:32.566" starttime="20201105 05:59:32.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:32.572" level="INFO">Running command 'ozone sh volume create 12438-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:35.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:35.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 05:59:35.775" starttime="20201105 05:59:32.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:35.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 05:59:35.776" starttime="20201105 05:59:35.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:35.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:35.777" starttime="20201105 05:59:35.777"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:35.777" starttime="20201105 05:59:32.567"></status>
</kw>
<msg timestamp="20201105 05:59:35.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:35.777" starttime="20201105 05:59:32.567"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:35.778" starttime="20201105 05:59:32.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:35.782" level="INFO">Running command 'ozone sh volume create 12438-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:39.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:39.099" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 05:59:39.099" starttime="20201105 05:59:35.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:39.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 05:59:39.100" starttime="20201105 05:59:39.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:39.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:39.100" starttime="20201105 05:59:39.100"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:39.101" starttime="20201105 05:59:35.778"></status>
</kw>
<msg timestamp="20201105 05:59:39.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:39.101" starttime="20201105 05:59:35.778"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:39.101" starttime="20201105 05:59:35.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:39.105" level="INFO">Running command 'ozone sh bucket create 12438-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:42.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:42.444" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 05:59:42.444" starttime="20201105 05:59:39.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:42.445" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 05:59:42.445" starttime="20201105 05:59:42.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:42.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:42.446" starttime="20201105 05:59:42.446"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:42.446" starttime="20201105 05:59:39.103"></status>
</kw>
<msg timestamp="20201105 05:59:42.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:42.446" starttime="20201105 05:59:39.102"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:42.447" starttime="20201105 05:59:39.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:42.450" level="INFO">Running command 'ozone sh key put 12438-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:51.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:51.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 05:59:51.529" starttime="20201105 05:59:42.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:51.530" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 05:59:51.530" starttime="20201105 05:59:51.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:51.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:51.531" starttime="20201105 05:59:51.530"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:51.531" starttime="20201105 05:59:42.447"></status>
</kw>
<msg timestamp="20201105 05:59:51.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:51.531" starttime="20201105 05:59:42.447"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:51.532" starttime="20201105 05:59:42.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:51.535" level="INFO">Running command 'ozone sh bucket create 12438-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:54.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:54.880" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 05:59:54.880" starttime="20201105 05:59:51.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:54.881" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 05:59:54.881" starttime="20201105 05:59:54.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:54.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:54.882" starttime="20201105 05:59:54.881"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:54.882" starttime="20201105 05:59:51.532"></status>
</kw>
<msg timestamp="20201105 05:59:54.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:54.882" starttime="20201105 05:59:51.532"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:54.882" starttime="20201105 05:59:51.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:54.887" level="INFO">Running command 'ozone sh bucket link 12438-source/readable-bucket 12438-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 05:59:58.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 05:59:58.135" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 05:59:58.135" starttime="20201105 05:59:54.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 05:59:58.136" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 05:59:58.136" starttime="20201105 05:59:58.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 05:59:58.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 05:59:58.137" starttime="20201105 05:59:58.136"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:58.137" starttime="20201105 05:59:54.883"></status>
</kw>
<msg timestamp="20201105 05:59:58.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 05:59:58.137" starttime="20201105 05:59:54.883"></status>
</kw>
<status status="PASS" endtime="20201105 05:59:58.138" starttime="20201105 05:59:54.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 05:59:58.141" level="INFO">Running command 'ozone sh bucket link 12438-source/readable-bucket 12438-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:01.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:01.392" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:01.392" starttime="20201105 05:59:58.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:01.393" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:01.393" starttime="20201105 06:00:01.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:01.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:01.394" starttime="20201105 06:00:01.393"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:01.394" starttime="20201105 05:59:58.139"></status>
</kw>
<msg timestamp="20201105 06:00:01.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:01.394" starttime="20201105 05:59:58.139"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:01.394" starttime="20201105 05:59:58.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:01.397" level="INFO">Running command 'ozone sh bucket link 12438-source/unreadable-bucket 12438-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:04.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:04.838" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:04.838" starttime="20201105 06:00:01.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:04.839" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:04.839" starttime="20201105 06:00:04.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:04.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:04.840" starttime="20201105 06:00:04.839"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:04.840" starttime="20201105 06:00:01.395"></status>
</kw>
<msg timestamp="20201105 06:00:04.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:04.840" starttime="20201105 06:00:01.395"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:04.840" starttime="20201105 06:00:01.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:04.845" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12438-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:08.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:08.249" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:08.250" starttime="20201105 06:00:04.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:08.251" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:00:08.251" starttime="20201105 06:00:08.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:08.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:08.251" starttime="20201105 06:00:08.251"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:08.252" starttime="20201105 06:00:04.841"></status>
</kw>
<msg timestamp="20201105 06:00:08.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:08.252" starttime="20201105 06:00:04.841"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:08.252" starttime="20201105 06:00:04.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:08.256" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 12438-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:11.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:11.555" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:11.555" starttime="20201105 06:00:08.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:11.556" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:00:11.556" starttime="20201105 06:00:11.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:11.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:11.556" starttime="20201105 06:00:11.556"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:11.557" starttime="20201105 06:00:08.253"></status>
</kw>
<msg timestamp="20201105 06:00:11.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:11.557" starttime="20201105 06:00:08.252"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:11.557" starttime="20201105 06:00:08.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:11.560" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 12438-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:15.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:15.262" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:15.263" starttime="20201105 06:00:11.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:15.264" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:00:15.264" starttime="20201105 06:00:15.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:15.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:15.264" starttime="20201105 06:00:15.264"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:15.264" starttime="20201105 06:00:11.558"></status>
</kw>
<msg timestamp="20201105 06:00:15.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:15.265" starttime="20201105 06:00:11.558"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:15.265" starttime="20201105 06:00:11.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:15.268" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12438-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:18.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:18.546" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:18.546" starttime="20201105 06:00:15.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:18.547" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:00:18.548" starttime="20201105 06:00:18.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:18.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:18.548" starttime="20201105 06:00:18.548"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:18.548" starttime="20201105 06:00:15.266"></status>
</kw>
<msg timestamp="20201105 06:00:18.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:18.548" starttime="20201105 06:00:15.265"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:18.549" starttime="20201105 06:00:15.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:18.552" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12438-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:21.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:21.697" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:21.697" starttime="20201105 06:00:18.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:21.698" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:00:21.698" starttime="20201105 06:00:21.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:21.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:21.699" starttime="20201105 06:00:21.699"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.699" starttime="20201105 06:00:18.550"></status>
</kw>
<msg timestamp="20201105 06:00:21.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:21.699" starttime="20201105 06:00:18.549"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.700" starttime="20201105 06:00:18.549"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.700" starttime="20201105 05:59:39.102"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.700" starttime="20201105 05:59:39.101"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.700" starttime="20201105 05:59:32.563"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:21.707" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:21.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:21.711" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:00:21.711" starttime="20201105 06:00:21.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:21.712" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:00:21.712" starttime="20201105 06:00:21.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:21.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:21.712" starttime="20201105 06:00:21.712"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.712" starttime="20201105 06:00:21.704"></status>
</kw>
<msg timestamp="20201105 06:00:21.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:21.713" starttime="20201105 06:00:21.704"></status>
</kw>
<msg timestamp="20201105 06:00:21.713" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:00:21.713" starttime="20201105 06:00:21.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:00:21.714" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:00:21.714" starttime="20201105 06:00:21.713"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:21.719" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:21.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:21.746" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:00:21.746" starttime="20201105 06:00:21.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:21.747" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:00:21.747" starttime="20201105 06:00:21.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:21.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:21.748" starttime="20201105 06:00:21.747"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.748" starttime="20201105 06:00:21.716"></status>
</kw>
<msg timestamp="20201105 06:00:21.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:21.748" starttime="20201105 06:00:21.715"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.748" starttime="20201105 06:00:21.715"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.748" starttime="20201105 06:00:21.714"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.748" starttime="20201105 06:00:21.703"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:21.749" starttime="20201105 06:00:21.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:21.753" level="INFO">Running command 'ozone sh bucket link 12438-source/no-such-bucket 12438-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:25.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:25.104" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:25.104" starttime="20201105 06:00:21.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:25.105" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:25.105" starttime="20201105 06:00:25.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:25.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:25.106" starttime="20201105 06:00:25.106"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:25.106" starttime="20201105 06:00:21.750"></status>
</kw>
<msg timestamp="20201105 06:00:25.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:25.107" starttime="20201105 06:00:21.749"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:25.107" starttime="20201105 06:00:21.749"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:25.112" level="INFO">Running command 'ozone sh key list 12438-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:28.307" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 06:00:28.307" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:28.307" starttime="20201105 06:00:25.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:28.308" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201105 06:00:28.309" starttime="20201105 06:00:28.308"></status>
</kw>
<msg timestamp="20201105 06:00:28.309" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:28.309" starttime="20201105 06:00:25.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201105 06:00:28.309" starttime="20201105 06:00:28.309"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:00:28.310" critical="yes" starttime="20201105 06:00:21.701"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:28.317" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:28.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:28.320" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:00:28.320" starttime="20201105 06:00:28.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:28.321" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:00:28.321" starttime="20201105 06:00:28.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:28.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:28.322" starttime="20201105 06:00:28.321"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:28.322" starttime="20201105 06:00:28.315"></status>
</kw>
<msg timestamp="20201105 06:00:28.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:28.322" starttime="20201105 06:00:28.314"></status>
</kw>
<msg timestamp="20201105 06:00:28.322" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:00:28.323" starttime="20201105 06:00:28.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:00:28.323" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:00:28.323" starttime="20201105 06:00:28.323"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:28.327" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:28.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:28.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:00:28.338" starttime="20201105 06:00:28.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:28.344" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:00:28.344" starttime="20201105 06:00:28.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:28.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:28.345" starttime="20201105 06:00:28.345"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:28.346" starttime="20201105 06:00:28.324"></status>
</kw>
<msg timestamp="20201105 06:00:28.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:28.346" starttime="20201105 06:00:28.324"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:28.346" starttime="20201105 06:00:28.324"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:28.346" starttime="20201105 06:00:28.323"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:28.346" starttime="20201105 06:00:28.314"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:28.346" starttime="20201105 06:00:28.313"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:28.350" level="INFO">Running command 'ozone sh bucket link 12438-source/bucket1 12438-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:31.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:31.803" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:31.803" starttime="20201105 06:00:28.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:31.804" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:31.804" starttime="20201105 06:00:31.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:31.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:31.805" starttime="20201105 06:00:31.804"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:31.805" starttime="20201105 06:00:28.347"></status>
</kw>
<msg timestamp="20201105 06:00:31.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:31.805" starttime="20201105 06:00:28.347"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:31.805" starttime="20201105 06:00:28.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:31.811" level="INFO">Running command 'ozone sh bucket create 12438-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:35.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:35.268" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:35.268" starttime="20201105 06:00:31.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:35.270" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:35.270" starttime="20201105 06:00:35.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:35.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:35.270" starttime="20201105 06:00:35.270"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:35.270" starttime="20201105 06:00:31.806"></status>
</kw>
<msg timestamp="20201105 06:00:35.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:35.271" starttime="20201105 06:00:31.806"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:35.271" starttime="20201105 06:00:31.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:35.275" level="INFO">Running command 'ozone sh key put 12438-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:43.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:43.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:43.664" starttime="20201105 06:00:35.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:43.665" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:43.665" starttime="20201105 06:00:43.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:43.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:43.666" starttime="20201105 06:00:43.665"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:43.666" starttime="20201105 06:00:35.272"></status>
</kw>
<msg timestamp="20201105 06:00:43.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:43.666" starttime="20201105 06:00:35.272"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:43.666" starttime="20201105 06:00:35.271"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 06:00:43.668" level="INFO">${postfix} = 31314</msg>
<status status="PASS" endtime="20201105 06:00:43.668" starttime="20201105 06:00:43.667"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 06:00:43.669" level="INFO">${tmpfile} = /tmp/tempkey-31314</msg>
<status status="PASS" endtime="20201105 06:00:43.669" starttime="20201105 06:00:43.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:43.672" level="INFO">Running command 'ozone sh key get -f 12438-target/link1/key1 /tmp/tempkey-31314 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:49.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:49.891" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:49.891" starttime="20201105 06:00:43.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.893" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:49.893" starttime="20201105 06:00:49.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:49.894" starttime="20201105 06:00:49.893"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.894" starttime="20201105 06:00:43.669"></status>
</kw>
<msg timestamp="20201105 06:00:49.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:49.894" starttime="20201105 06:00:43.669"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.894" starttime="20201105 06:00:43.669"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 06:00:49.897" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-31314 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:49.900" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 06:00:49.900" starttime="20201105 06:00:49.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:49.905" level="INFO">Running command 'rm -f /tmp/tempkey-31314 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:49.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:49.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:00:49.907" starttime="20201105 06:00:49.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.908" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:00:49.908" starttime="20201105 06:00:49.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:49.909" starttime="20201105 06:00:49.908"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.909" starttime="20201105 06:00:49.901"></status>
</kw>
<msg timestamp="20201105 06:00:49.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:49.909" starttime="20201105 06:00:49.901"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.909" starttime="20201105 06:00:49.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 06:00:49.910" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 06:00:49.910" starttime="20201105 06:00:49.909"></status>
</kw>
<msg timestamp="20201105 06:00:49.910" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 06:00:49.910" starttime="20201105 06:00:43.667"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:00:49.910" starttime="20201105 06:00:49.910"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.911" starttime="20201105 06:00:43.666"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:00:49.911" critical="yes" starttime="20201105 06:00:28.312"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:49.917" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:49.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:49.918" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:00:49.918" starttime="20201105 06:00:49.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.919" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:00:49.919" starttime="20201105 06:00:49.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:49.920" starttime="20201105 06:00:49.919"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.920" starttime="20201105 06:00:49.914"></status>
</kw>
<msg timestamp="20201105 06:00:49.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:49.920" starttime="20201105 06:00:49.913"></status>
</kw>
<msg timestamp="20201105 06:00:49.920" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:00:49.920" starttime="20201105 06:00:49.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:00:49.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:00:49.921" starttime="20201105 06:00:49.920"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:49.925" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:49.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:49.949" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:00:49.949" starttime="20201105 06:00:49.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.950" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:00:49.950" starttime="20201105 06:00:49.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:49.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:49.951" starttime="20201105 06:00:49.950"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.951" starttime="20201105 06:00:49.922"></status>
</kw>
<msg timestamp="20201105 06:00:49.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:49.951" starttime="20201105 06:00:49.922"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.952" starttime="20201105 06:00:49.921"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.952" starttime="20201105 06:00:49.921"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.952" starttime="20201105 06:00:49.913"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:49.952" starttime="20201105 06:00:49.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:49.957" level="INFO">Running command 'ozone sh key put 12438-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:00:57.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:00:57.994" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:00:57.994" starttime="20201105 06:00:49.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:00:57.996" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:00:57.996" starttime="20201105 06:00:57.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:00:57.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:00:57.996" starttime="20201105 06:00:57.996"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:57.997" starttime="20201105 06:00:49.953"></status>
</kw>
<msg timestamp="20201105 06:00:57.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:00:57.997" starttime="20201105 06:00:49.953"></status>
</kw>
<status status="PASS" endtime="20201105 06:00:57.997" starttime="20201105 06:00:49.952"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 06:00:57.999" level="INFO">${postfix} = 85012</msg>
<status status="PASS" endtime="20201105 06:00:57.999" starttime="20201105 06:00:57.999"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 06:00:58.000" level="INFO">${tmpfile} = /tmp/tempkey-85012</msg>
<status status="PASS" endtime="20201105 06:00:58.000" starttime="20201105 06:00:57.999"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:00:58.003" level="INFO">Running command 'ozone sh key get -f 12438-source/bucket1/key2 /tmp/tempkey-85012 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:03.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:03.134" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:03.134" starttime="20201105 06:00:58.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.135" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:01:03.136" starttime="20201105 06:01:03.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:03.136" starttime="20201105 06:01:03.136"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.136" starttime="20201105 06:00:58.001"></status>
</kw>
<msg timestamp="20201105 06:01:03.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:03.137" starttime="20201105 06:00:58.000"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.137" starttime="20201105 06:00:58.000"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 06:01:03.140" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-85012 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:03.142" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 06:01:03.142" starttime="20201105 06:01:03.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:03.147" level="INFO">Running command 'rm -f /tmp/tempkey-85012 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:03.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:03.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:03.148" starttime="20201105 06:01:03.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.149" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:03.149" starttime="20201105 06:01:03.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:03.150" starttime="20201105 06:01:03.149"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.150" starttime="20201105 06:01:03.143"></status>
</kw>
<msg timestamp="20201105 06:01:03.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:03.150" starttime="20201105 06:01:03.143"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.150" starttime="20201105 06:01:03.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 06:01:03.151" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 06:01:03.151" starttime="20201105 06:01:03.150"></status>
</kw>
<msg timestamp="20201105 06:01:03.151" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 06:01:03.151" starttime="20201105 06:00:57.998"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:03.151" starttime="20201105 06:01:03.151"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.152" starttime="20201105 06:00:57.997"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:03.152" critical="yes" starttime="20201105 06:00:49.911"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:03.159" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:03.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:03.161" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:03.161" starttime="20201105 06:01:03.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.162" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:03.162" starttime="20201105 06:01:03.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:03.162" starttime="20201105 06:01:03.162"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.162" starttime="20201105 06:01:03.156"></status>
</kw>
<msg timestamp="20201105 06:01:03.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:03.163" starttime="20201105 06:01:03.155"></status>
</kw>
<msg timestamp="20201105 06:01:03.163" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:03.163" starttime="20201105 06:01:03.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:03.163" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:03.163" starttime="20201105 06:01:03.163"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:03.168" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:03.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:03.184" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:03.184" starttime="20201105 06:01:03.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.184" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:03.185" starttime="20201105 06:01:03.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:03.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:03.185" starttime="20201105 06:01:03.185"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.186" starttime="20201105 06:01:03.165"></status>
</kw>
<msg timestamp="20201105 06:01:03.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:03.186" starttime="20201105 06:01:03.164"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.186" starttime="20201105 06:01:03.164"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.186" starttime="20201105 06:01:03.164"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.186" starttime="20201105 06:01:03.154"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:03.186" starttime="20201105 06:01:03.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:03.190" level="INFO">Running command 'ozone sh key list 12438-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:06.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:06.608" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201105 06:01:06.608" starttime="20201105 06:01:03.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:06.609" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201105 06:01:06.609" starttime="20201105 06:01:06.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:06.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:06.610" starttime="20201105 06:01:06.610"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:06.610" starttime="20201105 06:01:03.187"></status>
</kw>
<msg timestamp="20201105 06:01:06.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:06.611" starttime="20201105 06:01:03.187"></status>
</kw>
<msg timestamp="20201105 06:01:06.611" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201105 06:01:06.611" starttime="20201105 06:01:03.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:06.615" level="INFO">Running command 'ozone sh key list 12438-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:10.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:10.153" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201105 06:01:10.153" starttime="20201105 06:01:06.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:10.154" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201105 06:01:10.154" starttime="20201105 06:01:10.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:10.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:10.155" starttime="20201105 06:01:10.154"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.155" starttime="20201105 06:01:06.612"></status>
</kw>
<msg timestamp="20201105 06:01:10.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:10.155" starttime="20201105 06:01:06.611"></status>
</kw>
<msg timestamp="20201105 06:01:10.155" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201105 06:01:10.156" starttime="20201105 06:01:06.611"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:10.156" starttime="20201105 06:01:10.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:10.157" starttime="20201105 06:01:10.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:10.157" starttime="20201105 06:01:10.157"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:10.157" critical="yes" starttime="20201105 06:01:03.153"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:10.163" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:10.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:10.166" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:10.166" starttime="20201105 06:01:10.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:10.167" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:10.167" starttime="20201105 06:01:10.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:10.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:10.167" starttime="20201105 06:01:10.167"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.168" starttime="20201105 06:01:10.161"></status>
</kw>
<msg timestamp="20201105 06:01:10.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:10.168" starttime="20201105 06:01:10.160"></status>
</kw>
<msg timestamp="20201105 06:01:10.168" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:10.168" starttime="20201105 06:01:10.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:10.169" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:10.169" starttime="20201105 06:01:10.168"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:10.173" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:10.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:10.188" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:10.188" starttime="20201105 06:01:10.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:10.190" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:10.190" starttime="20201105 06:01:10.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:10.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:10.190" starttime="20201105 06:01:10.190"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.191" starttime="20201105 06:01:10.170"></status>
</kw>
<msg timestamp="20201105 06:01:10.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:10.191" starttime="20201105 06:01:10.170"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.191" starttime="20201105 06:01:10.169"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.191" starttime="20201105 06:01:10.169"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.191" starttime="20201105 06:01:10.159"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:10.191" starttime="20201105 06:01:10.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:10.197" level="INFO">Running command 'ozone sh key delete 12438-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:13.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:13.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:13.675" starttime="20201105 06:01:10.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:13.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:01:13.676" starttime="20201105 06:01:13.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:13.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:13.677" starttime="20201105 06:01:13.676"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:13.677" starttime="20201105 06:01:10.192"></status>
</kw>
<msg timestamp="20201105 06:01:13.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:13.677" starttime="20201105 06:01:10.192"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:13.678" starttime="20201105 06:01:10.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:13.682" level="INFO">Running command 'ozone sh key list 12438-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:17.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:17.422" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201105 06:01:17.422" starttime="20201105 06:01:13.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:17.423" level="INFO">key1</msg>
<status status="PASS" endtime="20201105 06:01:17.424" starttime="20201105 06:01:17.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:17.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:17.424" starttime="20201105 06:01:17.424"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.425" starttime="20201105 06:01:13.679"></status>
</kw>
<msg timestamp="20201105 06:01:17.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:17.425" starttime="20201105 06:01:13.678"></status>
</kw>
<msg timestamp="20201105 06:01:17.425" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201105 06:01:17.425" starttime="20201105 06:01:13.678"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:17.426" starttime="20201105 06:01:17.425"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:17.426" critical="yes" starttime="20201105 06:01:10.158"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:17.431" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:17.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:17.434" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:17.434" starttime="20201105 06:01:17.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:17.435" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:17.435" starttime="20201105 06:01:17.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:17.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:17.435" starttime="20201105 06:01:17.435"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.436" starttime="20201105 06:01:17.429"></status>
</kw>
<msg timestamp="20201105 06:01:17.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:17.436" starttime="20201105 06:01:17.428"></status>
</kw>
<msg timestamp="20201105 06:01:17.436" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:17.436" starttime="20201105 06:01:17.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:17.437" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:17.437" starttime="20201105 06:01:17.436"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:17.441" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:17.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:17.457" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:17.457" starttime="20201105 06:01:17.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:17.458" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:17.458" starttime="20201105 06:01:17.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:17.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.458"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.438"></status>
</kw>
<msg timestamp="20201105 06:01:17.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.438"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.437"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.437"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.428"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:17.459" starttime="20201105 06:01:17.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:17.464" level="INFO">Running command 'ozone sh bucket list 12438-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:20.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:20.827" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:20.827" starttime="20201105 06:01:17.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:20.828" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:24.931Z",
  "modificationTime" : "2020-11-05T06:00:24.931Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:04.567Z",
  "modificationTime" : "2020-11-05T06:00:21.602Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:31.625Z",
  "modificationTime" : "2020-11-05T06:00:31.625Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:59:58.061Z",
  "modificationTime" : "2020-11-05T06:00:18.328Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:01.198Z",
  "modificationTime" : "2020-11-05T06:00:01.198Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 06:01:20.828" starttime="20201105 06:01:20.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:20.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:20.829" starttime="20201105 06:01:20.828"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.829" starttime="20201105 06:01:17.460"></status>
</kw>
<msg timestamp="20201105 06:01:20.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:20.829" starttime="20201105 06:01:17.460"></status>
</kw>
<msg timestamp="20201105 06:01:20.830" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:20.830" starttime="20201105 06:01:17.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:20.830" starttime="20201105 06:01:20.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:20.830" starttime="20201105 06:01:20.830"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:20.831" critical="yes" starttime="20201105 06:01:17.426"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:20.837" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:20.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:20.839" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:20.839" starttime="20201105 06:01:20.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:20.840" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:20.841" starttime="20201105 06:01:20.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:20.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:20.841" starttime="20201105 06:01:20.841"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.841" starttime="20201105 06:01:20.834"></status>
</kw>
<msg timestamp="20201105 06:01:20.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:20.842" starttime="20201105 06:01:20.834"></status>
</kw>
<msg timestamp="20201105 06:01:20.842" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:20.842" starttime="20201105 06:01:20.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:20.843" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:20.843" starttime="20201105 06:01:20.842"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:20.848" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:20.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:20.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:20.864" starttime="20201105 06:01:20.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:20.865" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:20.866" starttime="20201105 06:01:20.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:20.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:20.866" starttime="20201105 06:01:20.866"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.866" starttime="20201105 06:01:20.844"></status>
</kw>
<msg timestamp="20201105 06:01:20.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:20.867" starttime="20201105 06:01:20.844"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.867" starttime="20201105 06:01:20.843"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.867" starttime="20201105 06:01:20.843"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.867" starttime="20201105 06:01:20.833"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:20.867" starttime="20201105 06:01:20.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:20.872" level="INFO">Running command 'ozone sh bucket info 12438-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:24.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:24.397" level="INFO">${output} = 12438-source bucket1</msg>
<status status="PASS" endtime="20201105 06:01:24.398" starttime="20201105 06:01:20.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:24.399" level="INFO">12438-source bucket1</msg>
<status status="PASS" endtime="20201105 06:01:24.399" starttime="20201105 06:01:24.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:24.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:24.399" starttime="20201105 06:01:24.399"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.400" starttime="20201105 06:01:20.868"></status>
</kw>
<msg timestamp="20201105 06:01:24.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:24.400" starttime="20201105 06:01:20.868"></status>
</kw>
<msg timestamp="20201105 06:01:24.400" level="INFO">${result} = 12438-source bucket1</msg>
<status status="PASS" endtime="20201105 06:01:24.400" starttime="20201105 06:01:20.867"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:24.400" starttime="20201105 06:01:24.400"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:24.401" critical="yes" starttime="20201105 06:01:20.831"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:24.407" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:24.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:24.412" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:24.412" starttime="20201105 06:01:24.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:24.413" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:24.413" starttime="20201105 06:01:24.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:24.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:24.414" starttime="20201105 06:01:24.413"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.414" starttime="20201105 06:01:24.404"></status>
</kw>
<msg timestamp="20201105 06:01:24.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:24.414" starttime="20201105 06:01:24.404"></status>
</kw>
<msg timestamp="20201105 06:01:24.414" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:24.414" starttime="20201105 06:01:24.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:24.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:24.415" starttime="20201105 06:01:24.415"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:24.421" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:24.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:24.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:24.432" starttime="20201105 06:01:24.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:24.434" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:24.434" starttime="20201105 06:01:24.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:24.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:24.434" starttime="20201105 06:01:24.434"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.435" starttime="20201105 06:01:24.416"></status>
</kw>
<msg timestamp="20201105 06:01:24.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:24.435" starttime="20201105 06:01:24.416"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.435" starttime="20201105 06:01:24.416"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.435" starttime="20201105 06:01:24.415"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.435" starttime="20201105 06:01:24.403"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:24.435" starttime="20201105 06:01:24.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:24.440" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 12438-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:27.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:27.780" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:27.780" starttime="20201105 06:01:24.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:27.781" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:01:27.781" starttime="20201105 06:01:27.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:27.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:27.782" starttime="20201105 06:01:27.781"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:27.782" starttime="20201105 06:01:24.436"></status>
</kw>
<msg timestamp="20201105 06:01:27.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:27.782" starttime="20201105 06:01:24.436"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:27.783" starttime="20201105 06:01:24.435"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:27.788" level="INFO">Running command 'ozone sh bucket getacl 12438-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:31.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:31.329" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 06:01:31.329" starttime="20201105 06:01:27.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:31.330" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 06:01:31.330" starttime="20201105 06:01:31.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:31.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:31.331" starttime="20201105 06:01:31.330"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:31.331" starttime="20201105 06:01:27.784"></status>
</kw>
<msg timestamp="20201105 06:01:31.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:31.331" starttime="20201105 06:01:27.784"></status>
</kw>
<msg timestamp="20201105 06:01:31.331" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201105 06:01:31.331" starttime="20201105 06:01:27.783"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:31.332" starttime="20201105 06:01:31.331"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:31.332" starttime="20201105 06:01:27.783"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:31.337" level="INFO">Running command 'ozone sh bucket getacl 12438-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:34.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:34.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:34.902" starttime="20201105 06:01:31.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:34.903" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:34.903" starttime="20201105 06:01:34.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:34.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:34.904" starttime="20201105 06:01:34.903"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:34.904" starttime="20201105 06:01:31.334"></status>
</kw>
<msg timestamp="20201105 06:01:34.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:34.904" starttime="20201105 06:01:31.334"></status>
</kw>
<msg timestamp="20201105 06:01:34.904" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201105 06:01:34.904" starttime="20201105 06:01:31.333"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:34.905" starttime="20201105 06:01:34.905"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:34.905" starttime="20201105 06:01:31.332"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:34.911" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 12438-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:38.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:38.111" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:38.111" starttime="20201105 06:01:34.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:38.112" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201105 06:01:38.112" starttime="20201105 06:01:38.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:38.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:38.113" starttime="20201105 06:01:38.112"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:38.113" starttime="20201105 06:01:34.907"></status>
</kw>
<msg timestamp="20201105 06:01:38.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:38.113" starttime="20201105 06:01:34.906"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:38.113" starttime="20201105 06:01:34.906"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:38.118" level="INFO">Running command 'ozone sh bucket getacl 12438-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:41.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:41.633" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:41.633" starttime="20201105 06:01:38.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:41.634" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:41.634" starttime="20201105 06:01:41.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:41.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:41.635" starttime="20201105 06:01:41.634"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:41.635" starttime="20201105 06:01:38.116"></status>
</kw>
<msg timestamp="20201105 06:01:41.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:41.635" starttime="20201105 06:01:38.115"></status>
</kw>
<msg timestamp="20201105 06:01:41.635" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201105 06:01:41.635" starttime="20201105 06:01:38.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:41.636" starttime="20201105 06:01:41.635"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:41.636" starttime="20201105 06:01:38.114"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:41.640" level="INFO">Running command 'ozone sh bucket getacl 12438-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:45.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:45.176" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201105 06:01:45.176" starttime="20201105 06:01:41.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:45.177" level="INFO">READ</msg>
<status status="PASS" endtime="20201105 06:01:45.177" starttime="20201105 06:01:45.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:45.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:45.186" starttime="20201105 06:01:45.186"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.187" starttime="20201105 06:01:41.638"></status>
</kw>
<msg timestamp="20201105 06:01:45.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:45.188" starttime="20201105 06:01:41.637"></status>
</kw>
<msg timestamp="20201105 06:01:45.188" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201105 06:01:45.188" starttime="20201105 06:01:41.637"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:45.189" starttime="20201105 06:01:45.188"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.189" starttime="20201105 06:01:41.636"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:45.189" critical="yes" starttime="20201105 06:01:24.402"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:45.206" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:45.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:45.208" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:45.208" starttime="20201105 06:01:45.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:45.209" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:45.209" starttime="20201105 06:01:45.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:45.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:45.210" starttime="20201105 06:01:45.209"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.213" starttime="20201105 06:01:45.199"></status>
</kw>
<msg timestamp="20201105 06:01:45.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:45.214" starttime="20201105 06:01:45.198"></status>
</kw>
<msg timestamp="20201105 06:01:45.214" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:45.214" starttime="20201105 06:01:45.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:45.214" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:45.215" starttime="20201105 06:01:45.214"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:45.221" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:45.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:45.237" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:45.237" starttime="20201105 06:01:45.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:45.238" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:45.238" starttime="20201105 06:01:45.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:45.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:45.239" starttime="20201105 06:01:45.238"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.239" starttime="20201105 06:01:45.216"></status>
</kw>
<msg timestamp="20201105 06:01:45.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:45.239" starttime="20201105 06:01:45.216"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.240" starttime="20201105 06:01:45.215"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.240" starttime="20201105 06:01:45.215"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.240" starttime="20201105 06:01:45.197"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:45.240" starttime="20201105 06:01:45.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:45.246" level="INFO">Running command 'ozone sh bucket link 12438-source/bucket2 12438-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:48.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:48.487" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:48.487" starttime="20201105 06:01:45.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:48.488" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:01:48.488" starttime="20201105 06:01:48.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:48.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:48.489" starttime="20201105 06:01:48.488"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:48.489" starttime="20201105 06:01:45.241"></status>
</kw>
<msg timestamp="20201105 06:01:48.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:48.489" starttime="20201105 06:01:45.241"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:48.490" starttime="20201105 06:01:45.240"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:48.493" level="INFO">Running command 'ozone sh bucket create 12438-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:52.240" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 06:01:52.240" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:52.240" starttime="20201105 06:01:48.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:52.241" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201105 06:01:52.241" starttime="20201105 06:01:52.241"></status>
</kw>
<msg timestamp="20201105 06:01:52.242" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:52.242" starttime="20201105 06:01:48.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:52.243" starttime="20201105 06:01:52.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:52.247" level="INFO">Running command 'ozone sh bucket create 12438-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:55.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:55.468" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:55.468" starttime="20201105 06:01:52.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:55.469" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:01:55.469" starttime="20201105 06:01:55.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:55.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:55.470" starttime="20201105 06:01:55.469"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:55.470" starttime="20201105 06:01:52.244"></status>
</kw>
<msg timestamp="20201105 06:01:55.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:55.470" starttime="20201105 06:01:52.244"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:55.470" starttime="20201105 06:01:52.243"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:55.473" level="INFO">Running command 'ozone sh bucket link 12438-source/bucket1 12438-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:58.635" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 06:01:58.635" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:58.635" starttime="20201105 06:01:55.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.636" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201105 06:01:58.636" starttime="20201105 06:01:58.636"></status>
</kw>
<msg timestamp="20201105 06:01:58.637" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:01:58.637" starttime="20201105 06:01:55.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201105 06:01:58.637" starttime="20201105 06:01:58.637"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:01:58.638" critical="yes" starttime="20201105 06:01:45.190"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:58.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:58.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:58.646" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:58.646" starttime="20201105 06:01:58.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.647" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:58.647" starttime="20201105 06:01:58.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:58.647" starttime="20201105 06:01:58.647"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.648" starttime="20201105 06:01:58.641"></status>
</kw>
<msg timestamp="20201105 06:01:58.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:58.648" starttime="20201105 06:01:58.640"></status>
</kw>
<msg timestamp="20201105 06:01:58.648" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:58.648" starttime="20201105 06:01:58.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:58.649" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:58.649" starttime="20201105 06:01:58.648"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:58.653" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:58.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:58.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:58.663" starttime="20201105 06:01:58.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.664" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:58.664" starttime="20201105 06:01:58.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:58.665" starttime="20201105 06:01:58.665"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.665" starttime="20201105 06:01:58.650"></status>
</kw>
<msg timestamp="20201105 06:01:58.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:58.666" starttime="20201105 06:01:58.650"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.666" starttime="20201105 06:01:58.650"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.666" starttime="20201105 06:01:58.649"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.666" starttime="20201105 06:01:58.640"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.666" starttime="20201105 06:01:58.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:58.672" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:58.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:58.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:58.674" starttime="20201105 06:01:58.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.675" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:58.675" starttime="20201105 06:01:58.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:58.676" starttime="20201105 06:01:58.675"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.676" starttime="20201105 06:01:58.668"></status>
</kw>
<msg timestamp="20201105 06:01:58.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:58.676" starttime="20201105 06:01:58.668"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.676" starttime="20201105 06:01:58.667"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:58.681" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:58.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:58.682" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:01:58.682" starttime="20201105 06:01:58.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.683" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:01:58.683" starttime="20201105 06:01:58.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:58.684" starttime="20201105 06:01:58.683"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.684" starttime="20201105 06:01:58.678"></status>
</kw>
<msg timestamp="20201105 06:01:58.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:58.684" starttime="20201105 06:01:58.677"></status>
</kw>
<msg timestamp="20201105 06:01:58.685" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:01:58.685" starttime="20201105 06:01:58.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:01:58.685" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:01:58.685" starttime="20201105 06:01:58.685"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:58.690" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:01:58.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:01:58.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:01:58.704" starttime="20201105 06:01:58.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.705" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:01:58.705" starttime="20201105 06:01:58.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:01:58.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:01:58.706" starttime="20201105 06:01:58.705"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.706" starttime="20201105 06:01:58.687"></status>
</kw>
<msg timestamp="20201105 06:01:58.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:01:58.706" starttime="20201105 06:01:58.686"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.706" starttime="20201105 06:01:58.686"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.706" starttime="20201105 06:01:58.686"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.707" starttime="20201105 06:01:58.677"></status>
</kw>
<status status="PASS" endtime="20201105 06:01:58.707" starttime="20201105 06:01:58.676"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:01:58.709" level="INFO">Running command 'ozone sh key list 12438-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:02.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:02.686" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:02.686" starttime="20201105 06:01:58.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.687" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "12438-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-11-05T05:59:46.881Z",
  "modificationTime" : "2020-11-05T05:59:51.018Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201105 06:02:02.687" starttime="20201105 06:02:02.686"></status>
</kw>
<msg timestamp="20201105 06:02:02.688" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:02.688" starttime="20201105 06:01:58.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:02.688" starttime="20201105 06:02:02.688"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.688" starttime="20201105 06:01:58.667"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.688" starttime="20201105 06:01:58.666"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:02:02.689" critical="yes" starttime="20201105 06:01:58.638"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:02.698" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:02.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:02.701" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:02.701" starttime="20201105 06:02:02.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.702" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:02.702" starttime="20201105 06:02:02.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:02.703" starttime="20201105 06:02:02.702"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.703" starttime="20201105 06:02:02.695"></status>
</kw>
<msg timestamp="20201105 06:02:02.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:02.703" starttime="20201105 06:02:02.695"></status>
</kw>
<msg timestamp="20201105 06:02:02.703" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:02.703" starttime="20201105 06:02:02.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:02.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:02.704" starttime="20201105 06:02:02.704"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:02.708" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:02.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:02.720" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:02.720" starttime="20201105 06:02:02.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.721" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:02.721" starttime="20201105 06:02:02.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:02.721" starttime="20201105 06:02:02.721"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.722" starttime="20201105 06:02:02.706"></status>
</kw>
<msg timestamp="20201105 06:02:02.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:02.722" starttime="20201105 06:02:02.705"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.722" starttime="20201105 06:02:02.705"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.722" starttime="20201105 06:02:02.704"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.722" starttime="20201105 06:02:02.692"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.722" starttime="20201105 06:02:02.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:02.728" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:02.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:02.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:02.731" starttime="20201105 06:02:02.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.732" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:02.732" starttime="20201105 06:02:02.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:02.732" starttime="20201105 06:02:02.732"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.732" starttime="20201105 06:02:02.724"></status>
</kw>
<msg timestamp="20201105 06:02:02.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:02.733" starttime="20201105 06:02:02.724"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.733" starttime="20201105 06:02:02.723"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:02.739" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:02.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:02.740" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:02.740" starttime="20201105 06:02:02.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.741" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:02.741" starttime="20201105 06:02:02.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:02.742" starttime="20201105 06:02:02.741"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.742" starttime="20201105 06:02:02.735"></status>
</kw>
<msg timestamp="20201105 06:02:02.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:02.742" starttime="20201105 06:02:02.734"></status>
</kw>
<msg timestamp="20201105 06:02:02.743" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:02.743" starttime="20201105 06:02:02.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:02.744" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:02.744" starttime="20201105 06:02:02.743"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:02.748" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:02.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:02.759" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:02.759" starttime="20201105 06:02:02.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.760" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:02.760" starttime="20201105 06:02:02.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:02.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:02.760" starttime="20201105 06:02:02.760"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.761" starttime="20201105 06:02:02.745"></status>
</kw>
<msg timestamp="20201105 06:02:02.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:02.761" starttime="20201105 06:02:02.745"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.761" starttime="20201105 06:02:02.744"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.761" starttime="20201105 06:02:02.744"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.761" starttime="20201105 06:02:02.733"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:02.762" starttime="20201105 06:02:02.733"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:02.765" level="INFO">Running command 'ozone sh key list 12438-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:05.823" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 06:02:05.823" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:05.823" starttime="20201105 06:02:02.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.824" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201105 06:02:05.824" starttime="20201105 06:02:05.823"></status>
</kw>
<msg timestamp="20201105 06:02:05.824" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:05.824" starttime="20201105 06:02:02.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:05.825" starttime="20201105 06:02:05.824"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.825" starttime="20201105 06:02:02.723"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.825" starttime="20201105 06:02:02.723"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:02:05.825" critical="yes" starttime="20201105 06:02:02.689"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:05.832" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:05.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:05.834" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:05.834" starttime="20201105 06:02:05.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.834" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:05.835" starttime="20201105 06:02:05.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:05.835" starttime="20201105 06:02:05.835"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.835" starttime="20201105 06:02:05.828"></status>
</kw>
<msg timestamp="20201105 06:02:05.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:05.836" starttime="20201105 06:02:05.828"></status>
</kw>
<msg timestamp="20201105 06:02:05.836" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:05.836" starttime="20201105 06:02:05.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:05.837" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:05.837" starttime="20201105 06:02:05.836"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:05.841" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:05.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:05.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:05.864" starttime="20201105 06:02:05.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.865" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:05.865" starttime="20201105 06:02:05.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:05.866" starttime="20201105 06:02:05.865"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.866" starttime="20201105 06:02:05.838"></status>
</kw>
<msg timestamp="20201105 06:02:05.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:05.866" starttime="20201105 06:02:05.838"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.866" starttime="20201105 06:02:05.837"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.866" starttime="20201105 06:02:05.837"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.866" starttime="20201105 06:02:05.827"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.867" starttime="20201105 06:02:05.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:05.872" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:05.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:05.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:05.875" starttime="20201105 06:02:05.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.876" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:05.876" starttime="20201105 06:02:05.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:05.876" starttime="20201105 06:02:05.876"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.877" starttime="20201105 06:02:05.868"></status>
</kw>
<msg timestamp="20201105 06:02:05.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:05.877" starttime="20201105 06:02:05.868"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.877" starttime="20201105 06:02:05.868"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:05.881" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:05.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:05.883" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:05.883" starttime="20201105 06:02:05.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.884" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:05.884" starttime="20201105 06:02:05.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:05.885" starttime="20201105 06:02:05.884"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.885" starttime="20201105 06:02:05.878"></status>
</kw>
<msg timestamp="20201105 06:02:05.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:05.886" starttime="20201105 06:02:05.878"></status>
</kw>
<msg timestamp="20201105 06:02:05.886" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:05.886" starttime="20201105 06:02:05.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:05.887" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:05.887" starttime="20201105 06:02:05.886"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:05.892" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:05.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:05.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:05.902" starttime="20201105 06:02:05.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.903" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:05.903" starttime="20201105 06:02:05.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:05.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:05.904" starttime="20201105 06:02:05.903"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.904" starttime="20201105 06:02:05.888"></status>
</kw>
<msg timestamp="20201105 06:02:05.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:05.904" starttime="20201105 06:02:05.888"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.905" starttime="20201105 06:02:05.887"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.905" starttime="20201105 06:02:05.887"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.905" starttime="20201105 06:02:05.877"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:05.905" starttime="20201105 06:02:05.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:05.911" level="INFO">Running command 'ozone sh bucket info 12438-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:09.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:09.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:09.339" starttime="20201105 06:02:05.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:09.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:04.567Z",
  "modificationTime" : "2020-11-05T06:00:21.602Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 06:02:09.341" starttime="20201105 06:02:09.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:09.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:09.342" starttime="20201105 06:02:09.341"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:09.342" starttime="20201105 06:02:05.906"></status>
</kw>
<msg timestamp="20201105 06:02:09.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:09.342" starttime="20201105 06:02:05.906"></status>
</kw>
<msg timestamp="20201105 06:02:09.343" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:09.343" starttime="20201105 06:02:05.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:09.343" starttime="20201105 06:02:09.343"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:09.343" starttime="20201105 06:02:09.343"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:09.346" level="INFO">Running command 'ozone sh key list 12438-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:13.273" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 06:02:13.273" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:13.273" starttime="20201105 06:02:09.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:13.274" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201105 06:02:13.274" starttime="20201105 06:02:13.273"></status>
</kw>
<msg timestamp="20201105 06:02:13.274" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:13.274" starttime="20201105 06:02:09.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:13.275" starttime="20201105 06:02:13.275"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.275" starttime="20201105 06:02:05.867"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.275" starttime="20201105 06:02:05.867"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:02:13.275" critical="yes" starttime="20201105 06:02:05.826"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:13.281" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:13.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:13.284" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:13.284" starttime="20201105 06:02:13.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:13.284" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:13.285" starttime="20201105 06:02:13.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:13.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:13.285" starttime="20201105 06:02:13.285"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.285" starttime="20201105 06:02:13.278"></status>
</kw>
<msg timestamp="20201105 06:02:13.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:13.286" starttime="20201105 06:02:13.278"></status>
</kw>
<msg timestamp="20201105 06:02:13.286" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:13.286" starttime="20201105 06:02:13.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:13.286" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:13.287" starttime="20201105 06:02:13.286"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:13.291" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:13.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:13.301" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:13.301" starttime="20201105 06:02:13.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:13.302" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:13.302" starttime="20201105 06:02:13.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:13.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.302"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.288"></status>
</kw>
<msg timestamp="20201105 06:02:13.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.288"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.287"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.287"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.277"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:13.303" starttime="20201105 06:02:13.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:13.322" level="INFO">Running command 'ozone sh bucket link 12438-target/loop1 12438-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:16.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:16.562" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:16.563" starttime="20201105 06:02:13.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:16.564" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:16.564" starttime="20201105 06:02:16.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:16.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:16.564" starttime="20201105 06:02:16.564"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:16.565" starttime="20201105 06:02:13.305"></status>
</kw>
<msg timestamp="20201105 06:02:16.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:16.565" starttime="20201105 06:02:13.304"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:16.565" starttime="20201105 06:02:13.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:16.569" level="INFO">Running command 'ozone sh bucket link 12438-target/loop2 12438-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:19.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:19.698" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:19.698" starttime="20201105 06:02:16.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:19.699" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:19.700" starttime="20201105 06:02:19.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:19.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:19.700" starttime="20201105 06:02:19.700"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:19.701" starttime="20201105 06:02:16.566"></status>
</kw>
<msg timestamp="20201105 06:02:19.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:19.701" starttime="20201105 06:02:16.566"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:19.701" starttime="20201105 06:02:16.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:19.706" level="INFO">Running command 'ozone sh bucket link 12438-target/loop3 12438-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:23.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:23.280" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:23.280" starttime="20201105 06:02:19.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:23.281" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:23.281" starttime="20201105 06:02:23.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:23.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:23.282" starttime="20201105 06:02:23.282"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:23.282" starttime="20201105 06:02:19.702"></status>
</kw>
<msg timestamp="20201105 06:02:23.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:23.282" starttime="20201105 06:02:19.702"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:23.283" starttime="20201105 06:02:19.701"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:23.287" level="INFO">Running command 'ozone sh key list 12438-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:26.395" level="INFO">${rc} = 255</msg>
<msg timestamp="20201105 06:02:26.395" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:26.395" starttime="20201105 06:02:23.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:26.396" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201105 06:02:26.397" starttime="20201105 06:02:26.396"></status>
</kw>
<msg timestamp="20201105 06:02:26.397" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:26.397" starttime="20201105 06:02:23.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:26.397" starttime="20201105 06:02:26.397"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:02:26.398" critical="yes" starttime="20201105 06:02:13.276"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:26.404" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:26.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:26.407" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:26.407" starttime="20201105 06:02:26.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:26.408" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:26.408" starttime="20201105 06:02:26.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:26.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:26.408" starttime="20201105 06:02:26.408"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:26.409" starttime="20201105 06:02:26.401"></status>
</kw>
<msg timestamp="20201105 06:02:26.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:26.409" starttime="20201105 06:02:26.400"></status>
</kw>
<msg timestamp="20201105 06:02:26.409" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:26.409" starttime="20201105 06:02:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:26.410" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:26.410" starttime="20201105 06:02:26.409"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:26.415" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:26.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:26.424" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:26.425" starttime="20201105 06:02:26.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:26.425" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:26.426" starttime="20201105 06:02:26.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:26.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:26.426" starttime="20201105 06:02:26.426"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:26.426" starttime="20201105 06:02:26.411"></status>
</kw>
<msg timestamp="20201105 06:02:26.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:26.427" starttime="20201105 06:02:26.411"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:26.427" starttime="20201105 06:02:26.411"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:26.427" starttime="20201105 06:02:26.410"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:26.427" starttime="20201105 06:02:26.400"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:26.427" starttime="20201105 06:02:26.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:26.430" level="INFO">Running command 'ozone sh bucket link 12438-source/bucket1 12438-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:29.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:29.623" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:29.623" starttime="20201105 06:02:26.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:29.624" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:29.624" starttime="20201105 06:02:29.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:29.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:29.625" starttime="20201105 06:02:29.624"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:29.625" starttime="20201105 06:02:26.428"></status>
</kw>
<msg timestamp="20201105 06:02:29.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:29.625" starttime="20201105 06:02:26.428"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:29.626" starttime="20201105 06:02:26.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:29.631" level="INFO">Running command 'ozone sh key put 12438-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:37.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:37.257" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:37.257" starttime="20201105 06:02:29.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:37.258" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:37.258" starttime="20201105 06:02:37.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:37.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:37.259" starttime="20201105 06:02:37.258"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:37.259" starttime="20201105 06:02:29.626"></status>
</kw>
<msg timestamp="20201105 06:02:37.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:37.259" starttime="20201105 06:02:29.626"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:37.259" starttime="20201105 06:02:29.626"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201105 06:02:37.261" level="INFO">${postfix} = 16161</msg>
<status status="PASS" endtime="20201105 06:02:37.261" starttime="20201105 06:02:37.261"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201105 06:02:37.262" level="INFO">${tmpfile} = /tmp/tempkey-16161</msg>
<status status="PASS" endtime="20201105 06:02:37.262" starttime="20201105 06:02:37.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:37.265" level="INFO">Running command 'ozone sh key get -f 12438-target/link1/key3 /tmp/tempkey-16161 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:42.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:42.477" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:42.477" starttime="20201105 06:02:37.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.478" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:42.478" starttime="20201105 06:02:42.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:42.479" starttime="20201105 06:02:42.478"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.479" starttime="20201105 06:02:37.263"></status>
</kw>
<msg timestamp="20201105 06:02:42.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:42.479" starttime="20201105 06:02:37.262"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.479" starttime="20201105 06:02:37.262"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201105 06:02:42.482" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-16161 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:42.484" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201105 06:02:42.484" starttime="20201105 06:02:42.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:42.488" level="INFO">Running command 'rm -f /tmp/tempkey-16161 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:42.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:42.491" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:42.491" starttime="20201105 06:02:42.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.492" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:42.492" starttime="20201105 06:02:42.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:42.493" starttime="20201105 06:02:42.492"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.493" starttime="20201105 06:02:42.486"></status>
</kw>
<msg timestamp="20201105 06:02:42.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:42.493" starttime="20201105 06:02:42.485"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.493" starttime="20201105 06:02:42.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201105 06:02:42.494" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201105 06:02:42.494" starttime="20201105 06:02:42.493"></status>
</kw>
<msg timestamp="20201105 06:02:42.494" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201105 06:02:42.494" starttime="20201105 06:02:37.260"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:42.494" starttime="20201105 06:02:42.494"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.495" starttime="20201105 06:02:37.260"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:02:42.495" critical="yes" starttime="20201105 06:02:26.398"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:42.501" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:42.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:42.503" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201105 06:02:42.503" starttime="20201105 06:02:42.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.504" level="INFO">scm</msg>
<status status="PASS" endtime="20201105 06:02:42.504" starttime="20201105 06:02:42.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:42.505" starttime="20201105 06:02:42.504"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.505" starttime="20201105 06:02:42.498"></status>
</kw>
<msg timestamp="20201105 06:02:42.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:42.505" starttime="20201105 06:02:42.498"></status>
</kw>
<msg timestamp="20201105 06:02:42.505" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201105 06:02:42.506" starttime="20201105 06:02:42.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201105 06:02:42.506" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201105 06:02:42.506" starttime="20201105 06:02:42.506"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:42.511" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:42.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:42.532" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201105 06:02:42.532" starttime="20201105 06:02:42.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.533" level="INFO"></msg>
<status status="PASS" endtime="20201105 06:02:42.533" starttime="20201105 06:02:42.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:42.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:42.534" starttime="20201105 06:02:42.534"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.534" starttime="20201105 06:02:42.507"></status>
</kw>
<msg timestamp="20201105 06:02:42.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:42.534" starttime="20201105 06:02:42.507"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.535" starttime="20201105 06:02:42.507"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.535" starttime="20201105 06:02:42.506"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.535" starttime="20201105 06:02:42.497"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:42.535" starttime="20201105 06:02:42.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:42.539" level="INFO">Running command 'ozone sh bucket delete 12438-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:46.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:46.317" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:46.317" starttime="20201105 06:02:42.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:46.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201105 06:02:46.319" starttime="20201105 06:02:46.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:46.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:46.319" starttime="20201105 06:02:46.319"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:46.320" starttime="20201105 06:02:42.536"></status>
</kw>
<msg timestamp="20201105 06:02:46.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:46.320" starttime="20201105 06:02:42.536"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:46.320" starttime="20201105 06:02:42.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:46.324" level="INFO">Running command 'ozone sh bucket list 12438-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:49.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:49.986" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:49.986" starttime="20201105 06:02:46.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:49.987" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:01:55.315Z",
  "modificationTime" : "2020-11-05T06:01:55.315Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:24.931Z",
  "modificationTime" : "2020-11-05T06:00:24.931Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:04.567Z",
  "modificationTime" : "2020-11-05T06:00:21.602Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:01:48.308Z",
  "modificationTime" : "2020-11-05T06:01:48.308Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:02:29.531Z",
  "modificationTime" : "2020-11-05T06:02:29.531Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:02:23.096Z",
  "modificationTime" : "2020-11-05T06:02:23.096Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:02:16.391Z",
  "modificationTime" : "2020-11-05T06:02:16.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:02:19.571Z",
  "modificationTime" : "2020-11-05T06:02:19.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T05:59:58.061Z",
  "modificationTime" : "2020-11-05T06:00:18.328Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "12438-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-11-05T06:00:01.198Z",
  "modificationTime" : "2020-11-05T06:00:01.198Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12438-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201105 06:02:49.987" starttime="20201105 06:02:49.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:49.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:49.988" starttime="20201105 06:02:49.988"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:49.988" starttime="20201105 06:02:46.321"></status>
</kw>
<msg timestamp="20201105 06:02:49.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:49.989" starttime="20201105 06:02:46.321"></status>
</kw>
<msg timestamp="20201105 06:02:49.989" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201105 06:02:49.989" starttime="20201105 06:02:46.320"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:49.990" starttime="20201105 06:02:49.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201105 06:02:49.994" level="INFO">Running command 'ozone sh key list 12438-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201105 06:02:53.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20201105 06:02:53.912" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201105 06:02:53.912" starttime="20201105 06:02:49.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201105 06:02:53.913" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201105 06:02:53.913" starttime="20201105 06:02:53.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201105 06:02:53.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201105 06:02:53.914" starttime="20201105 06:02:53.914"></status>
</kw>
<status status="PASS" endtime="20201105 06:02:53.914" starttime="20201105 06:02:49.991"></status>
</kw>
<msg timestamp="20201105 06:02:53.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201105 06:02:53.914" starttime="20201105 06:02:49.990"></status>
</kw>
<msg timestamp="20201105 06:02:53.915" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201105 06:02:53.915" starttime="20201105 06:02:49.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201105 06:02:53.915" starttime="20201105 06:02:53.915"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201105 06:02:53.916" critical="yes" starttime="20201105 06:02:42.496"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201105 06:02:53.919" starttime="20201105 05:59:32.515"></status>
</suite>
<status status="PASS" elapsedtime="231704" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
